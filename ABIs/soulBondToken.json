{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_soulId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_issuer",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_certification",
          "type": "string"
        }
      ],
      "name": "assign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_soulId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_issuer",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_certification",
          "type": "string"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getToken",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "issuer",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "certification",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "claimDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "validDate",
              "type": "uint256"
            }
          ],
          "internalType": "struct soulBondToken.tokenStructure",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "soulId",
          "type": "uint256"
        }
      ],
      "name": "getTokenIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_issuer",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_certification",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "validDate_",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_allows",
          "type": "address[]"
        }
      ],
      "name": "issue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "11": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/Base64.sol",
    "12": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/Context.sol",
    "13": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/Strings.sol",
    "14": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/introspection/ERC165.sol",
    "15": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/introspection/IERC165.sol",
    "20": "contracts/IDDS.sol",
    "21": "contracts/IDateTime.sol",
    "24": "contracts/Soul/ISoul.sol",
    "26": "contracts/Soul/soulBondToken.sol",
    "4": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/token/ERC721/ERC721.sol",
    "5": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/token/ERC721/IERC721.sol",
    "7": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
    "8": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
    "9": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/token/ERC721/extensions/IERC721Metadata.sol"
  },
  "ast": {
    "absolutePath": "contracts/Soul/soulBondToken.sol",
    "exportedSymbols": {
      "Address": [
        4823
      ],
      "BEE_DDS_ADDRESS": [
        2556
      ],
      "Base64": [
        1440
      ],
      "Context": [
        3327
      ],
      "ERC165": [
        4847
      ],
      "ERC721": [
        4327
      ],
      "ERC721Enumerable": [
        3035
      ],
      "IDDS": [
        2661
      ],
      "IDateTime": [
        3183
      ],
      "IERC165": [
        4859
      ],
      "IERC721": [
        4483
      ],
      "IERC721Enumerable": [
        4358
      ],
      "IERC721Metadata": [
        4528
      ],
      "IERC721Receiver": [
        4501
      ],
      "ISoul": [
        3249
      ],
      "IsoulBondToken": [
        3305
      ],
      "Strings": [
        1666
      ],
      "soulBondToken": [
        1280
      ]
    },
    "id": 1281,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 609,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:26"
      },
      {
        "absolutePath": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "id": 610,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1281,
        "sourceUnit": 3036,
        "src": "58:78:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/Base64.sol",
        "file": "@openzeppelin/contracts/utils/Base64.sol",
        "id": 611,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1281,
        "sourceUnit": 1441,
        "src": "137:50:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Soul/ISoul.sol",
        "file": "./ISoul.sol",
        "id": 612,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1281,
        "sourceUnit": 3250,
        "src": "189:21:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/IDDS.sol",
        "file": "../IDDS.sol",
        "id": 613,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1281,
        "sourceUnit": 2662,
        "src": "211:21:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Soul/IsoulBondToken.sol",
        "file": "./IsoulBondToken.sol",
        "id": 614,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1281,
        "sourceUnit": 3306,
        "src": "233:30:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/IDateTime.sol",
        "file": "../IDateTime.sol",
        "id": 615,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1281,
        "sourceUnit": 3184,
        "src": "264:26:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 616,
              "name": "ERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3035,
              "src": "318:16:26"
            },
            "id": 617,
            "nodeType": "InheritanceSpecifier",
            "src": "318:16:26"
          }
        ],
        "canonicalName": "soulBondToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1280,
        "linearizedBaseContracts": [
          1280,
          3035,
          4358,
          4327,
          4528,
          4483,
          4847,
          4859,
          3327
        ],
        "name": "soulBondToken",
        "nameLocation": "301:13:26",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "soulBondToken.tokenStructure",
            "id": 626,
            "members": [
              {
                "constant": false,
                "id": 619,
                "mutability": "mutable",
                "name": "issuer",
                "nameLocation": "380:6:26",
                "nodeType": "VariableDeclaration",
                "scope": 626,
                "src": "373:13:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 618,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "373:6:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 621,
                "mutability": "mutable",
                "name": "certification",
                "nameLocation": "403:13:26",
                "nodeType": "VariableDeclaration",
                "scope": 626,
                "src": "396:20:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 620,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "396:6:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 623,
                "mutability": "mutable",
                "name": "claimDate",
                "nameLocation": "434:9:26",
                "nodeType": "VariableDeclaration",
                "scope": 626,
                "src": "426:17:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 622,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "426:7:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 625,
                "mutability": "mutable",
                "name": "validDate",
                "nameLocation": "461:9:26",
                "nodeType": "VariableDeclaration",
                "scope": 626,
                "src": "453:17:26",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 624,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "453:7:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "tokenStructure",
            "nameLocation": "348:14:26",
            "nodeType": "StructDefinition",
            "scope": 1280,
            "src": "341:136:26",
            "visibility": "public"
          },
          {
            "global": false,
            "id": 629,
            "libraryName": {
              "id": 627,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1666,
              "src": "489:7:26"
            },
            "nodeType": "UsingForDirective",
            "src": "483:26:26",
            "typeName": {
              "id": 628,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "501:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "global": false,
            "id": 632,
            "libraryName": {
              "id": 630,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1666,
              "src": "520:7:26"
            },
            "nodeType": "UsingForDirective",
            "src": "514:26:26",
            "typeName": {
              "id": 631,
              "name": "uint160",
              "nodeType": "ElementaryTypeName",
              "src": "532:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint160",
                "typeString": "uint160"
              }
            }
          },
          {
            "constant": false,
            "id": 637,
            "mutability": "mutable",
            "name": "soul2Token",
            "nameLocation": "584:10:26",
            "nodeType": "VariableDeclaration",
            "scope": 1280,
            "src": "546:48:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
              "typeString": "mapping(uint256 => uint256[])"
            },
            "typeName": {
              "id": 636,
              "keyType": {
                "id": 633,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "554:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "546:29:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                "typeString": "mapping(uint256 => uint256[])"
              },
              "valueType": {
                "baseType": {
                  "id": 634,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "565:7:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 635,
                "nodeType": "ArrayTypeName",
                "src": "565:9:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 641,
            "mutability": "mutable",
            "name": "token2Soul",
            "nameLocation": "636:10:26",
            "nodeType": "VariableDeclaration",
            "scope": 1280,
            "src": "600:46:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 640,
              "keyType": {
                "id": 638,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "608:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "600:27:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 639,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "619:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 646,
            "mutability": "mutable",
            "name": "token2Value",
            "nameLocation": "695:11:26",
            "nodeType": "VariableDeclaration",
            "scope": 1280,
            "src": "652:54:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenStructure_$626_storage_$",
              "typeString": "mapping(uint256 => struct soulBondToken.tokenStructure)"
            },
            "typeName": {
              "id": 645,
              "keyType": {
                "id": 642,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "660:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "652:34:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenStructure_$626_storage_$",
                "typeString": "mapping(uint256 => struct soulBondToken.tokenStructure)"
              },
              "valueType": {
                "id": 644,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 643,
                  "name": "tokenStructure",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 626,
                  "src": "671:14:26"
                },
                "referencedDeclaration": 626,
                "src": "671:14:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_tokenStructure_$626_storage_ptr",
                  "typeString": "struct soulBondToken.tokenStructure"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 650,
            "mutability": "mutable",
            "name": "globalAllow",
            "nameLocation": "746:11:26",
            "nodeType": "VariableDeclaration",
            "scope": 1280,
            "src": "713:44:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 649,
              "keyType": {
                "id": 647,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "721:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "713:24:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 648,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "732:4:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 654,
            "mutability": "mutable",
            "name": "validDate",
            "nameLocation": "799:9:26",
            "nodeType": "VariableDeclaration",
            "scope": 1280,
            "src": "763:45:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 653,
              "keyType": {
                "id": 651,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "771:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "763:27:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueType": {
                "id": 652,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "782:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 660,
            "mutability": "mutable",
            "name": "allowMap",
            "nameLocation": "867:8:26",
            "nodeType": "VariableDeclaration",
            "scope": 1280,
            "src": "814:61:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(bytes32 => bool))"
            },
            "typeName": {
              "id": 659,
              "keyType": {
                "id": 655,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "822:7:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "814:44:26",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(bytes32 => bool))"
              },
              "valueType": {
                "id": 658,
                "keyType": {
                  "id": 656,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "841:7:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "833:24:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                  "typeString": "mapping(bytes32 => bool)"
                },
                "valueType": {
                  "id": 657,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "852:4:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 663,
            "mutability": "mutable",
            "name": "dds",
            "nameLocation": "887:3:26",
            "nodeType": "VariableDeclaration",
            "scope": 1280,
            "src": "882:8:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IDDS_$2661",
              "typeString": "contract IDDS"
            },
            "typeName": {
              "id": 662,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 661,
                "name": "IDDS",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2661,
                "src": "882:4:26"
              },
              "referencedDeclaration": 2661,
              "src": "882:4:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDDS_$2661",
                "typeString": "contract IDDS"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 676,
              "nodeType": "Block",
              "src": "951:44:26",
              "statements": [
                {
                  "expression": {
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 670,
                      "name": "dds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 663,
                      "src": "961:3:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDDS_$2661",
                        "typeString": "contract IDDS"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 672,
                          "name": "BEE_DDS_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2556,
                          "src": "972:15:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 671,
                        "name": "IDDS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2661,
                        "src": "967:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IDDS_$2661_$",
                          "typeString": "type(contract IDDS)"
                        }
                      },
                      "id": 673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "967:21:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDDS_$2661",
                        "typeString": "contract IDDS"
                      }
                    },
                    "src": "961:27:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDDS_$2661",
                      "typeString": "contract IDDS"
                    }
                  },
                  "id": 675,
                  "nodeType": "ExpressionStatement",
                  "src": "961:27:26"
                }
              ]
            },
            "id": 677,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "536f756c426f6e74546f6b656e205265676973747279",
                    "id": 666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "918:24:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d26858b688d9bd69e23749dedeafb32e89bf4674c0030e7c577c8290b0a2a4eb",
                      "typeString": "literal_string \"SoulBontToken Registry\""
                    },
                    "value": "SoulBontToken Registry"
                  },
                  {
                    "hexValue": "534254",
                    "id": 667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "944:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_845674d68138afa9bae1134317c863a5111678a62593e83592279826447aef8e",
                      "typeString": "literal_string \"SBT\""
                    },
                    "value": "SBT"
                  }
                ],
                "id": 668,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 665,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4327,
                  "src": "911:6:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "911:39:26"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "908:2:26"
            },
            "returnParameters": {
              "id": 669,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "951:0:26"
            },
            "scope": 1280,
            "src": "897:98:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 751,
              "nodeType": "Block",
              "src": "1166:542:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 692,
                              "name": "_issuer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 679,
                              "src": "1197:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            ],
                            "expression": {
                              "id": 690,
                              "name": "dds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 663,
                              "src": "1184:3:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IDDS_$2661",
                                "typeString": "contract IDDS"
                              }
                            },
                            "id": 691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2590,
                            "src": "1184:12:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory) view external returns (address)"
                            }
                          },
                          "id": 693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1184:21:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 694,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1209:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1209:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1184:35:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920646f6d61696e206f776e6572",
                        "id": 697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1221:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e2e20645b347755fe2c622bda3f482aae4cae419a9ae282b655e47009dfaf093",
                          "typeString": "literal_string \"Only domain owner\""
                        },
                        "value": "Only domain owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e2e20645b347755fe2c622bda3f482aae4cae419a9ae282b655e47009dfaf093",
                          "typeString": "literal_string \"Only domain owner\""
                        }
                      ],
                      "id": 689,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1176:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1176:65:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 699,
                  "nodeType": "ExpressionStatement",
                  "src": "1176:65:26"
                },
                {
                  "assignments": [
                    701
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 701,
                      "mutability": "mutable",
                      "name": "_hash",
                      "nameLocation": "1390:5:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 751,
                      "src": "1382:13:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 700,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1382:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 709,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 705,
                            "name": "_issuer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 679,
                            "src": "1425:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          {
                            "id": 706,
                            "name": "_certification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 681,
                            "src": "1434:14:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            },
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          ],
                          "expression": {
                            "id": 703,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1408:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1408:16:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1408:41:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 702,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1398:9:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1398:52:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1382:68:26"
                },
                {
                  "expression": {
                    "id": 714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 710,
                        "name": "validDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 654,
                        "src": "1461:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 712,
                      "indexExpression": {
                        "id": 711,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 701,
                        "src": "1471:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1461:16:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 713,
                      "name": "validDate_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 683,
                      "src": "1480:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1461:29:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 715,
                  "nodeType": "ExpressionStatement",
                  "src": "1461:29:26"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 716,
                        "name": "_allows",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 686,
                        "src": "1505:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1505:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1523:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1505:19:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 749,
                    "nodeType": "Block",
                    "src": "1566:136:26",
                    "statements": [
                      {
                        "body": {
                          "id": 747,
                          "nodeType": "Block",
                          "src": "1625:67:26",
                          "statements": [
                            {
                              "expression": {
                                "id": 745,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 737,
                                      "name": "allowMap",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 660,
                                      "src": "1643:8:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                                        "typeString": "mapping(address => mapping(bytes32 => bool))"
                                      }
                                    },
                                    "id": 742,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 738,
                                        "name": "_allows",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 686,
                                        "src": "1652:7:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 740,
                                      "indexExpression": {
                                        "id": 739,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 727,
                                        "src": "1660:1:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1652:10:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1643:20:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                      "typeString": "mapping(bytes32 => bool)"
                                    }
                                  },
                                  "id": 743,
                                  "indexExpression": {
                                    "id": 741,
                                    "name": "_hash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 701,
                                    "src": "1664:5:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "1643:27:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 744,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1673:4:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "1643:34:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 746,
                              "nodeType": "ExpressionStatement",
                              "src": "1643:34:26"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 730,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 727,
                            "src": "1600:1:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 731,
                              "name": "_allows",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 686,
                              "src": "1604:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 732,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1604:14:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1600:18:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 748,
                        "initializationExpression": {
                          "assignments": [
                            727
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 727,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "1593:1:26",
                              "nodeType": "VariableDeclaration",
                              "scope": 748,
                              "src": "1585:9:26",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 726,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1585:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 729,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1597:1:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1585:13:26"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "1620:3:26",
                            "subExpression": {
                              "id": 734,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 727,
                              "src": "1620:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 736,
                          "nodeType": "ExpressionStatement",
                          "src": "1620:3:26"
                        },
                        "nodeType": "ForStatement",
                        "src": "1580:112:26"
                      }
                    ]
                  },
                  "id": 750,
                  "nodeType": "IfStatement",
                  "src": "1501:201:26",
                  "trueBody": {
                    "expression": {
                      "id": 724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 720,
                          "name": "globalAllow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 650,
                          "src": "1526:11:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                            "typeString": "mapping(bytes32 => bool)"
                          }
                        },
                        "id": 722,
                        "indexExpression": {
                          "id": 721,
                          "name": "_hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 701,
                          "src": "1538:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "1526:18:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "74727565",
                        "id": 723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1547:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "1526:25:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 725,
                    "nodeType": "ExpressionStatement",
                    "src": "1526:25:26"
                  }
                }
              ]
            },
            "functionSelector": "afb6533a",
            "id": 752,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "issue",
            "nameLocation": "1010:5:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 679,
                  "mutability": "mutable",
                  "name": "_issuer",
                  "nameLocation": "1041:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "1025:23:26",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 678,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1025:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 681,
                  "mutability": "mutable",
                  "name": "_certification",
                  "nameLocation": "1074:14:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "1058:30:26",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 680,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1058:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 683,
                  "mutability": "mutable",
                  "name": "validDate_",
                  "nameLocation": "1106:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "1098:18:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 682,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1098:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 686,
                  "mutability": "mutable",
                  "name": "_allows",
                  "nameLocation": "1143:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 752,
                  "src": "1126:24:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 684,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1126:7:26",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 685,
                    "nodeType": "ArrayTypeName",
                    "src": "1126:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1015:141:26"
            },
            "returnParameters": {
              "id": 688,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1166:0:26"
            },
            "scope": 1280,
            "src": "1001:707:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 793,
              "nodeType": "Block",
              "src": "1842:246:26",
              "statements": [
                {
                  "assignments": [
                    763
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 763,
                      "mutability": "mutable",
                      "name": "soul",
                      "nameLocation": "1858:4:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 793,
                      "src": "1852:10:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISoul_$3249",
                        "typeString": "contract ISoul"
                      },
                      "typeName": {
                        "id": 762,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 761,
                          "name": "ISoul",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3249,
                          "src": "1852:5:26"
                        },
                        "referencedDeclaration": 3249,
                        "src": "1852:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISoul_$3249",
                          "typeString": "contract ISoul"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 774,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "49534f544f50",
                                "id": 769,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1906:8:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_f9d868d8b934ca274e63e1e00148ee04e62ec0cb0b21fb44b80dbf33bbf98478",
                                  "typeString": "literal_string \"ISOTOP\""
                                },
                                "value": "ISOTOP"
                              },
                              {
                                "hexValue": "4245455f534f554c5f41444452455353",
                                "id": 770,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1916:18:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_bfacea267ad56aa192201d4f2933f8bb69edd6f4779edb439ba0961dab072589",
                                  "typeString": "literal_string \"BEE_SOUL_ADDRESS\""
                                },
                                "value": "BEE_SOUL_ADDRESS"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_f9d868d8b934ca274e63e1e00148ee04e62ec0cb0b21fb44b80dbf33bbf98478",
                                  "typeString": "literal_string \"ISOTOP\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_bfacea267ad56aa192201d4f2933f8bb69edd6f4779edb439ba0961dab072589",
                                  "typeString": "literal_string \"BEE_SOUL_ADDRESS\""
                                }
                              ],
                              "expression": {
                                "id": 767,
                                "name": "dds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 663,
                                "src": "1898:3:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IDDS_$2661",
                                  "typeString": "contract IDDS"
                                }
                              },
                              "id": 768,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "get",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2599,
                              "src": "1898:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (string memory,string memory) view external returns (bytes memory)"
                              }
                            },
                            "id": 771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1898:37:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 765,
                            "name": "dds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 663,
                            "src": "1884:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDDS_$2661",
                              "typeString": "contract IDDS"
                            }
                          },
                          "id": 766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "toAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2646,
                          "src": "1884:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_address_$",
                            "typeString": "function (bytes memory) pure external returns (address)"
                          }
                        },
                        "id": 772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1884:52:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 764,
                      "name": "ISoul",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3249,
                      "src": "1865:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ISoul_$3249_$",
                        "typeString": "type(contract ISoul)"
                      }
                    },
                    "id": 773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1865:81:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISoul_$3249",
                      "typeString": "contract ISoul"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1852:94:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 778,
                            "name": "_soulId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 754,
                            "src": "1985:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 779,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1994:3:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1994:10:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 776,
                            "name": "soul",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 763,
                            "src": "1964:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISoul_$3249",
                              "typeString": "contract ISoul"
                            }
                          },
                          "id": 777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "validateAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3206,
                          "src": "1964:20:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (uint256,address) view external returns (bool)"
                          }
                        },
                        "id": 781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1964:41:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206f776e6572",
                        "id": 782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2007:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
                          "typeString": "literal_string \"not owner\""
                        },
                        "value": "not owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
                          "typeString": "literal_string \"not owner\""
                        }
                      ],
                      "id": 775,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1956:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1956:63:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 784,
                  "nodeType": "ExpressionStatement",
                  "src": "1956:63:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 786,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2036:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2036:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 788,
                        "name": "_soulId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 754,
                        "src": "2048:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 789,
                        "name": "_issuer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 756,
                        "src": "2057:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 790,
                        "name": "_certification",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 758,
                        "src": "2066:14:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 785,
                      "name": "_claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 918,
                      "src": "2029:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_string_calldata_ptr_$_t_string_calldata_ptr_$returns$__$",
                        "typeString": "function (address,uint256,string calldata,string calldata)"
                      }
                    },
                    "id": 791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2029:52:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 792,
                  "nodeType": "ExpressionStatement",
                  "src": "2029:52:26"
                }
              ]
            },
            "functionSelector": "5f2a9e87",
            "id": 794,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "1723:5:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 754,
                  "mutability": "mutable",
                  "name": "_soulId",
                  "nameLocation": "1746:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 794,
                  "src": "1738:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 753,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1738:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 756,
                  "mutability": "mutable",
                  "name": "_issuer",
                  "nameLocation": "1779:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 794,
                  "src": "1763:23:26",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 755,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1763:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 758,
                  "mutability": "mutable",
                  "name": "_certification",
                  "nameLocation": "1812:14:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 794,
                  "src": "1796:30:26",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 757,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1796:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1728:104:26"
            },
            "returnParameters": {
              "id": 760,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1842:0:26"
            },
            "scope": 1280,
            "src": "1714:374:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 837,
              "nodeType": "Block",
              "src": "2244:241:26",
              "statements": [
                {
                  "assignments": [
                    807
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 807,
                      "mutability": "mutable",
                      "name": "soul",
                      "nameLocation": "2260:4:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 837,
                      "src": "2254:10:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISoul_$3249",
                        "typeString": "contract ISoul"
                      },
                      "typeName": {
                        "id": 806,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 805,
                          "name": "ISoul",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3249,
                          "src": "2254:5:26"
                        },
                        "referencedDeclaration": 3249,
                        "src": "2254:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISoul_$3249",
                          "typeString": "contract ISoul"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 818,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "49534f544f50",
                                "id": 813,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2308:8:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_f9d868d8b934ca274e63e1e00148ee04e62ec0cb0b21fb44b80dbf33bbf98478",
                                  "typeString": "literal_string \"ISOTOP\""
                                },
                                "value": "ISOTOP"
                              },
                              {
                                "hexValue": "4245455f534f554c5f41444452455353",
                                "id": 814,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2318:18:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_bfacea267ad56aa192201d4f2933f8bb69edd6f4779edb439ba0961dab072589",
                                  "typeString": "literal_string \"BEE_SOUL_ADDRESS\""
                                },
                                "value": "BEE_SOUL_ADDRESS"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_f9d868d8b934ca274e63e1e00148ee04e62ec0cb0b21fb44b80dbf33bbf98478",
                                  "typeString": "literal_string \"ISOTOP\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_bfacea267ad56aa192201d4f2933f8bb69edd6f4779edb439ba0961dab072589",
                                  "typeString": "literal_string \"BEE_SOUL_ADDRESS\""
                                }
                              ],
                              "expression": {
                                "id": 811,
                                "name": "dds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 663,
                                "src": "2300:3:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IDDS_$2661",
                                  "typeString": "contract IDDS"
                                }
                              },
                              "id": 812,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "get",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2599,
                              "src": "2300:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (string memory,string memory) view external returns (bytes memory)"
                              }
                            },
                            "id": 815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2300:37:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 809,
                            "name": "dds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 663,
                            "src": "2286:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDDS_$2661",
                              "typeString": "contract IDDS"
                            }
                          },
                          "id": 810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "toAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2646,
                          "src": "2286:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_address_$",
                            "typeString": "function (bytes memory) pure external returns (address)"
                          }
                        },
                        "id": 816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2286:52:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 808,
                      "name": "ISoul",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3249,
                      "src": "2267:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ISoul_$3249_$",
                        "typeString": "type(contract ISoul)"
                      }
                    },
                    "id": 817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2267:81:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISoul_$3249",
                      "typeString": "contract ISoul"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2254:94:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 820,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2366:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2366:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 824,
                              "name": "_soulId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 798,
                              "src": "2397:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 822,
                              "name": "soul",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 807,
                              "src": "2380:4:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISoul_$3249",
                                "typeString": "contract ISoul"
                              }
                            },
                            "id": 823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getOperator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3241,
                            "src": "2380:16:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2380:25:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2366:39:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79206f70657261746f72",
                        "id": 827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2407:15:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        },
                        "value": "only operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cec28142e8a4f1eb9c59c99b5a38a1440e0a0d16aee3230102b37e03224cefef",
                          "typeString": "literal_string \"only operator\""
                        }
                      ],
                      "id": 819,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2358:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2358:65:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 829,
                  "nodeType": "ExpressionStatement",
                  "src": "2358:65:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 831,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 796,
                        "src": "2440:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 832,
                        "name": "_soulId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 798,
                        "src": "2445:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 833,
                        "name": "_issuer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 800,
                        "src": "2454:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 834,
                        "name": "_certification",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 802,
                        "src": "2463:14:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 830,
                      "name": "_claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 918,
                      "src": "2433:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_string_calldata_ptr_$_t_string_calldata_ptr_$returns$__$",
                        "typeString": "function (address,uint256,string calldata,string calldata)"
                      }
                    },
                    "id": 835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2433:45:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 836,
                  "nodeType": "ExpressionStatement",
                  "src": "2433:45:26"
                }
              ]
            },
            "functionSelector": "f4e99281",
            "id": 838,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assign",
            "nameLocation": "2103:6:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 796,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2127:3:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "2119:11:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2119:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 798,
                  "mutability": "mutable",
                  "name": "_soulId",
                  "nameLocation": "2148:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "2140:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2140:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 800,
                  "mutability": "mutable",
                  "name": "_issuer",
                  "nameLocation": "2181:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "2165:23:26",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 799,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2165:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 802,
                  "mutability": "mutable",
                  "name": "_certification",
                  "nameLocation": "2214:14:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "2198:30:26",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 801,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2198:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2109:125:26"
            },
            "returnParameters": {
              "id": 804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2244:0:26"
            },
            "scope": 1280,
            "src": "2094:391:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 917,
              "nodeType": "Block",
              "src": "2641:582:26",
              "statements": [
                {
                  "assignments": [
                    850
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 850,
                      "mutability": "mutable",
                      "name": "_hash",
                      "nameLocation": "2659:5:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 917,
                      "src": "2651:13:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 849,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2651:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 858,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 854,
                            "name": "_issuer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 844,
                            "src": "2694:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          {
                            "id": 855,
                            "name": "_certification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 846,
                            "src": "2703:14:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            },
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          ],
                          "expression": {
                            "id": 852,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2677:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2677:16:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2677:41:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 851,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2667:9:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2667:52:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2651:68:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 860,
                            "name": "globalAllow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 650,
                            "src": "2751:11:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 862,
                          "indexExpression": {
                            "id": 861,
                            "name": "_hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 850,
                            "src": "2763:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2751:18:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 863,
                              "name": "allowMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 660,
                              "src": "2773:8:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(bytes32 => bool))"
                              }
                            },
                            "id": 865,
                            "indexExpression": {
                              "id": 864,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 840,
                              "src": "2782:3:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2773:13:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 867,
                          "indexExpression": {
                            "id": 866,
                            "name": "_hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 850,
                            "src": "2787:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2773:20:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2751:42:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206e6f7420696e20616c6c6f77206c697374",
                        "id": 869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2807:27:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a3f15fe65325bffca848f0972b04e0f29cffbec79c93f39667de8f24077afb9d",
                          "typeString": "literal_string \"Address not in allow list\""
                        },
                        "value": "Address not in allow list"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a3f15fe65325bffca848f0972b04e0f29cffbec79c93f39667de8f24077afb9d",
                          "typeString": "literal_string \"Address not in allow list\""
                        }
                      ],
                      "id": 859,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2730:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2730:114:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 871,
                  "nodeType": "ExpressionStatement",
                  "src": "2730:114:26"
                },
                {
                  "assignments": [
                    873
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 873,
                      "mutability": "mutable",
                      "name": "_currentId",
                      "nameLocation": "2863:10:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 917,
                      "src": "2855:18:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 872,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2855:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 876,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 874,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2786,
                      "src": "2876:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2876:13:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2855:34:26"
                },
                {
                  "expression": {
                    "id": 881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 877,
                        "name": "token2Soul",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 641,
                        "src": "2899:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 879,
                      "indexExpression": {
                        "id": 878,
                        "name": "_currentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 873,
                        "src": "2910:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2899:22:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 880,
                      "name": "_soulId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 842,
                      "src": "2924:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2899:32:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 882,
                  "nodeType": "ExpressionStatement",
                  "src": "2899:32:26"
                },
                {
                  "expression": {
                    "id": 895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 883,
                        "name": "token2Value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 646,
                        "src": "2941:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenStructure_$626_storage_$",
                          "typeString": "mapping(uint256 => struct soulBondToken.tokenStructure storage ref)"
                        }
                      },
                      "id": 885,
                      "indexExpression": {
                        "id": 884,
                        "name": "_currentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 873,
                        "src": "2953:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2941:23:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_tokenStructure_$626_storage",
                        "typeString": "struct soulBondToken.tokenStructure storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 887,
                          "name": "_issuer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 844,
                          "src": "2995:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        {
                          "id": 888,
                          "name": "_certification",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 846,
                          "src": "3016:14:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        {
                          "expression": {
                            "id": 889,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3044:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3044:15:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "baseExpression": {
                            "id": 891,
                            "name": "validDate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 654,
                            "src": "3073:9:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                              "typeString": "mapping(bytes32 => uint256)"
                            }
                          },
                          "id": 893,
                          "indexExpression": {
                            "id": 892,
                            "name": "_hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 850,
                            "src": "3083:5:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3073:16:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          },
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 886,
                        "name": "tokenStructure",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "2967:14:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_tokenStructure_$626_storage_ptr_$",
                          "typeString": "type(struct soulBondToken.tokenStructure storage pointer)"
                        }
                      },
                      "id": 894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2967:132:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_tokenStructure_$626_memory_ptr",
                        "typeString": "struct soulBondToken.tokenStructure memory"
                      }
                    },
                    "src": "2941:158:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_tokenStructure_$626_storage",
                      "typeString": "struct soulBondToken.tokenStructure storage ref"
                    }
                  },
                  "id": 896,
                  "nodeType": "ExpressionStatement",
                  "src": "2941:158:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 901,
                        "name": "_currentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 873,
                        "src": "3134:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 897,
                          "name": "soul2Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 637,
                          "src": "3109:10:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(uint256 => uint256[] storage ref)"
                          }
                        },
                        "id": 899,
                        "indexExpression": {
                          "id": 898,
                          "name": "_soulId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 842,
                          "src": "3120:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3109:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3109:24:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3109:36:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 903,
                  "nodeType": "ExpressionStatement",
                  "src": "3109:36:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 905,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 840,
                        "src": "3161:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 906,
                        "name": "_currentId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 873,
                        "src": "3166:10:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 904,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4037,
                      "src": "3155:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3155:22:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 908,
                  "nodeType": "ExpressionStatement",
                  "src": "3155:22:26"
                },
                {
                  "expression": {
                    "id": 915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 909,
                          "name": "allowMap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 660,
                          "src": "3188:8:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => bool))"
                          }
                        },
                        "id": 912,
                        "indexExpression": {
                          "id": 910,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 840,
                          "src": "3197:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3188:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 913,
                      "indexExpression": {
                        "id": 911,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 850,
                        "src": "3202:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3188:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3211:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3188:28:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 916,
                  "nodeType": "ExpressionStatement",
                  "src": "3188:28:26"
                }
              ]
            },
            "id": 918,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_claim",
            "nameLocation": "2500:6:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 840,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2524:3:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 918,
                  "src": "2516:11:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 839,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2516:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 842,
                  "mutability": "mutable",
                  "name": "_soulId",
                  "nameLocation": "2545:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 918,
                  "src": "2537:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 841,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2537:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 844,
                  "mutability": "mutable",
                  "name": "_issuer",
                  "nameLocation": "2578:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 918,
                  "src": "2562:23:26",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 843,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2562:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 846,
                  "mutability": "mutable",
                  "name": "_certification",
                  "nameLocation": "2611:14:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 918,
                  "src": "2595:30:26",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 845,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2595:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2506:125:26"
            },
            "returnParameters": {
              "id": 848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2641:0:26"
            },
            "scope": 1280,
            "src": "2491:732:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 930,
              "nodeType": "Block",
              "src": "3338:175:26",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 926,
                      "name": "token2Value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 646,
                      "src": "3486:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenStructure_$626_storage_$",
                        "typeString": "mapping(uint256 => struct soulBondToken.tokenStructure storage ref)"
                      }
                    },
                    "id": 928,
                    "indexExpression": {
                      "id": 927,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 920,
                      "src": "3498:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3486:20:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_tokenStructure_$626_storage",
                      "typeString": "struct soulBondToken.tokenStructure storage ref"
                    }
                  },
                  "functionReturnParameters": 925,
                  "id": 929,
                  "nodeType": "Return",
                  "src": "3479:27:26"
                }
              ]
            },
            "functionSelector": "e4b50cb8",
            "id": 931,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken",
            "nameLocation": "3238:8:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 921,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 920,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3255:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 931,
                  "src": "3247:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 919,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3247:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3246:17:26"
            },
            "returnParameters": {
              "id": 925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 924,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 931,
                  "src": "3311:21:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_tokenStructure_$626_memory_ptr",
                    "typeString": "struct soulBondToken.tokenStructure"
                  },
                  "typeName": {
                    "id": 923,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 922,
                      "name": "tokenStructure",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 626,
                      "src": "3311:14:26"
                    },
                    "referencedDeclaration": 626,
                    "src": "3311:14:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_tokenStructure_$626_storage_ptr",
                      "typeString": "struct soulBondToken.tokenStructure"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3310:23:26"
            },
            "scope": 1280,
            "src": "3229:284:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 943,
              "nodeType": "Block",
              "src": "3625:117:26",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 939,
                      "name": "soul2Token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 637,
                      "src": "3717:10:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$",
                        "typeString": "mapping(uint256 => uint256[] storage ref)"
                      }
                    },
                    "id": 941,
                    "indexExpression": {
                      "id": 940,
                      "name": "soulId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 933,
                      "src": "3728:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3717:18:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 938,
                  "id": 942,
                  "nodeType": "Return",
                  "src": "3710:25:26"
                }
              ]
            },
            "functionSelector": "57991d30",
            "id": 944,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenIds",
            "nameLocation": "3528:11:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 933,
                  "mutability": "mutable",
                  "name": "soulId",
                  "nameLocation": "3548:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 944,
                  "src": "3540:14:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 932,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3540:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3539:16:26"
            },
            "returnParameters": {
              "id": 938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 937,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 944,
                  "src": "3603:16:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 935,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3603:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 936,
                    "nodeType": "ArrayTypeName",
                    "src": "3603:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3602:18:26"
            },
            "scope": 1280,
            "src": "3519:223:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2873
            ],
            "body": {
              "id": 1027,
              "nodeType": "Block",
              "src": "3877:688:26",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 954,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 948,
                      "src": "3891:2:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3905:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3897:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 955,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3897:7:26",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3897:10:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3891:16:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 965,
                  "nodeType": "IfStatement",
                  "src": "3887:83:26",
                  "trueBody": {
                    "id": 964,
                    "nodeType": "Block",
                    "src": "3909:61:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "53425420746f6b656e2063616e6e6f74206265206275726e6564",
                              "id": 961,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3930:28:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_01228088725817ecf45708b8673157766cb3d8166465c2084b3c7e39ecbfac89",
                                "typeString": "literal_string \"SBT token cannot be burned\""
                              },
                              "value": "SBT token cannot be burned"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_01228088725817ecf45708b8673157766cb3d8166465c2084b3c7e39ecbfac89",
                                "typeString": "literal_string \"SBT token cannot be burned\""
                              }
                            ],
                            "id": 960,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "3923:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3923:36:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 963,
                        "nodeType": "ExpressionStatement",
                        "src": "3923:36:26"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    968
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 968,
                      "mutability": "mutable",
                      "name": "soul",
                      "nameLocation": "3986:4:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 1027,
                      "src": "3980:10:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISoul_$3249",
                        "typeString": "contract ISoul"
                      },
                      "typeName": {
                        "id": 967,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 966,
                          "name": "ISoul",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3249,
                          "src": "3980:5:26"
                        },
                        "referencedDeclaration": 3249,
                        "src": "3980:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISoul_$3249",
                          "typeString": "contract ISoul"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 979,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "49534f544f50",
                                "id": 974,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4034:8:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_f9d868d8b934ca274e63e1e00148ee04e62ec0cb0b21fb44b80dbf33bbf98478",
                                  "typeString": "literal_string \"ISOTOP\""
                                },
                                "value": "ISOTOP"
                              },
                              {
                                "hexValue": "4245455f534f554c5f41444452455353",
                                "id": 975,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4044:18:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_bfacea267ad56aa192201d4f2933f8bb69edd6f4779edb439ba0961dab072589",
                                  "typeString": "literal_string \"BEE_SOUL_ADDRESS\""
                                },
                                "value": "BEE_SOUL_ADDRESS"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_f9d868d8b934ca274e63e1e00148ee04e62ec0cb0b21fb44b80dbf33bbf98478",
                                  "typeString": "literal_string \"ISOTOP\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_bfacea267ad56aa192201d4f2933f8bb69edd6f4779edb439ba0961dab072589",
                                  "typeString": "literal_string \"BEE_SOUL_ADDRESS\""
                                }
                              ],
                              "expression": {
                                "id": 972,
                                "name": "dds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 663,
                                "src": "4026:3:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IDDS_$2661",
                                  "typeString": "contract IDDS"
                                }
                              },
                              "id": 973,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "get",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2599,
                              "src": "4026:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (string memory,string memory) view external returns (bytes memory)"
                              }
                            },
                            "id": 976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4026:37:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 970,
                            "name": "dds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 663,
                            "src": "4012:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDDS_$2661",
                              "typeString": "contract IDDS"
                            }
                          },
                          "id": 971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "toAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2646,
                          "src": "4012:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_address_$",
                            "typeString": "function (bytes memory) pure external returns (address)"
                          }
                        },
                        "id": 977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4012:52:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 969,
                      "name": "ISoul",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3249,
                      "src": "3993:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ISoul_$3249_$",
                        "typeString": "type(contract ISoul)"
                      }
                    },
                    "id": 978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3993:81:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISoul_$3249",
                      "typeString": "contract ISoul"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3980:94:26"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 980,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 946,
                      "src": "4089:4:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4105:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4097:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 981,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4097:7:26",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4097:10:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4089:18:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1017,
                    "nodeType": "Block",
                    "src": "4276:227:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1013,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1001,
                                      "name": "token2Soul",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 641,
                                      "src": "4336:10:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                        "typeString": "mapping(uint256 => uint256)"
                                      }
                                    },
                                    "id": 1003,
                                    "indexExpression": {
                                      "id": 1002,
                                      "name": "tokenId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 950,
                                      "src": "4347:7:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4336:19:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1004,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 946,
                                    "src": "4357:4:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 999,
                                    "name": "soul",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 968,
                                    "src": "4315:4:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISoul_$3249",
                                      "typeString": "contract ISoul"
                                    }
                                  },
                                  "id": 1000,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "validateAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3206,
                                  "src": "4315:20:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (uint256,address) view external returns (bool)"
                                  }
                                },
                                "id": 1005,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4315:47:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1008,
                                      "name": "token2Soul",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 641,
                                      "src": "4407:10:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                        "typeString": "mapping(uint256 => uint256)"
                                      }
                                    },
                                    "id": 1010,
                                    "indexExpression": {
                                      "id": 1009,
                                      "name": "tokenId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 950,
                                      "src": "4418:7:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4407:19:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1011,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 948,
                                    "src": "4428:2:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1006,
                                    "name": "soul",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 968,
                                    "src": "4386:4:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISoul_$3249",
                                      "typeString": "contract ISoul"
                                    }
                                  },
                                  "id": 1007,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "validateAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3206,
                                  "src": "4386:20:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (uint256,address) view external returns (bool)"
                                  }
                                },
                                "id": 1012,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4386:45:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4315:116:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "53425420746f6b656e2063616e6e6f74207472616e736665726564",
                              "id": 1014,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4449:29:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_aa7c2e82e700e112e28f88cb3fc6521d09092ceaa089e5724c2ed1821534ca32",
                                "typeString": "literal_string \"SBT token cannot transfered\""
                              },
                              "value": "SBT token cannot transfered"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_aa7c2e82e700e112e28f88cb3fc6521d09092ceaa089e5724c2ed1821534ca32",
                                "typeString": "literal_string \"SBT token cannot transfered\""
                              }
                            ],
                            "id": 998,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4290:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4290:202:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1016,
                        "nodeType": "ExpressionStatement",
                        "src": "4290:202:26"
                      }
                    ]
                  },
                  "id": 1018,
                  "nodeType": "IfStatement",
                  "src": "4085:418:26",
                  "trueBody": {
                    "id": 997,
                    "nodeType": "Block",
                    "src": "4109:161:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 989,
                                    "name": "token2Soul",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 641,
                                    "src": "4169:10:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 991,
                                  "indexExpression": {
                                    "id": 990,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 950,
                                    "src": "4180:7:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4169:19:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 992,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 948,
                                  "src": "4190:2:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 987,
                                  "name": "soul",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 968,
                                  "src": "4148:4:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISoul_$3249",
                                    "typeString": "contract ISoul"
                                  }
                                },
                                "id": 988,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "validateAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3206,
                                "src": "4148:20:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (uint256,address) view external returns (bool)"
                                }
                              },
                              "id": 993,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4148:45:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "53425420746f6b656e20746f2061646472657373206e6f7420616c6c6f776564",
                              "id": 994,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4211:34:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_25bd27a6bd500f8e7724b0ff341a90cc771cba2a697e649dd860a906edb91f19",
                                "typeString": "literal_string \"SBT token to address not allowed\""
                              },
                              "value": "SBT token to address not allowed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_25bd27a6bd500f8e7724b0ff341a90cc771cba2a697e649dd860a906edb91f19",
                                "typeString": "literal_string \"SBT token to address not allowed\""
                              }
                            ],
                            "id": 986,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4123:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4123:136:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 996,
                        "nodeType": "ExpressionStatement",
                        "src": "4123:136:26"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1022,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 946,
                        "src": "4540:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1023,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 948,
                        "src": "4546:2:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1024,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 950,
                        "src": "4550:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1019,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "4513:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_soulBondToken_$1280_$",
                          "typeString": "type(contract super soulBondToken)"
                        }
                      },
                      "id": 1021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2873,
                      "src": "4513:26:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4513:45:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1026,
                  "nodeType": "ExpressionStatement",
                  "src": "4513:45:26"
                }
              ]
            },
            "id": 1028,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "3757:20:26",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 952,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3868:8:26"
            },
            "parameters": {
              "id": 951,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 946,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3795:4:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 1028,
                  "src": "3787:12:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 945,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3787:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 948,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3817:2:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 1028,
                  "src": "3809:10:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 947,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3809:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 950,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3837:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 1028,
                  "src": "3829:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 949,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3829:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3777:73:26"
            },
            "returnParameters": {
              "id": 953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3877:0:26"
            },
            "scope": 1280,
            "src": "3748:817:26",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3665
            ],
            "body": {
              "id": 1278,
              "nodeType": "Block",
              "src": "4703:2849:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1038,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1030,
                            "src": "4729:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1037,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3893,
                          "src": "4721:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4721:16:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f6e6578697374656e7420746f6b656e",
                        "id": 1040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4739:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_92f9e08ca9f4940db78443fe8b05b28dd97a65f97dd0cd6312a15bd070d61d04",
                          "typeString": "literal_string \"nonexistent token\""
                        },
                        "value": "nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_92f9e08ca9f4940db78443fe8b05b28dd97a65f97dd0cd6312a15bd070d61d04",
                          "typeString": "literal_string \"nonexistent token\""
                        }
                      ],
                      "id": 1036,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4713:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4713:46:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1042,
                  "nodeType": "ExpressionStatement",
                  "src": "4713:46:26"
                },
                {
                  "assignments": [
                    1045
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1045,
                      "mutability": "mutable",
                      "name": "date",
                      "nameLocation": "4780:4:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 1278,
                      "src": "4770:14:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDateTime_$3183",
                        "typeString": "contract IDateTime"
                      },
                      "typeName": {
                        "id": 1044,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1043,
                          "name": "IDateTime",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3183,
                          "src": "4770:9:26"
                        },
                        "referencedDeclaration": 3183,
                        "src": "4770:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDateTime_$3183",
                          "typeString": "contract IDateTime"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1056,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "49534f544f50",
                                "id": 1051,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4832:8:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_f9d868d8b934ca274e63e1e00148ee04e62ec0cb0b21fb44b80dbf33bbf98478",
                                  "typeString": "literal_string \"ISOTOP\""
                                },
                                "value": "ISOTOP"
                              },
                              {
                                "hexValue": "4245455f4441544554494d455f41444452455353",
                                "id": 1052,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4842:22:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5050e53e767c23a4bf39678447e55cfa2904b66e9b43a5abc0361c60a83dc36a",
                                  "typeString": "literal_string \"BEE_DATETIME_ADDRESS\""
                                },
                                "value": "BEE_DATETIME_ADDRESS"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_f9d868d8b934ca274e63e1e00148ee04e62ec0cb0b21fb44b80dbf33bbf98478",
                                  "typeString": "literal_string \"ISOTOP\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_5050e53e767c23a4bf39678447e55cfa2904b66e9b43a5abc0361c60a83dc36a",
                                  "typeString": "literal_string \"BEE_DATETIME_ADDRESS\""
                                }
                              ],
                              "expression": {
                                "id": 1049,
                                "name": "dds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 663,
                                "src": "4824:3:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IDDS_$2661",
                                  "typeString": "contract IDDS"
                                }
                              },
                              "id": 1050,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "get",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2599,
                              "src": "4824:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (string memory,string memory) view external returns (bytes memory)"
                              }
                            },
                            "id": 1053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4824:41:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 1047,
                            "name": "dds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 663,
                            "src": "4810:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDDS_$2661",
                              "typeString": "contract IDDS"
                            }
                          },
                          "id": 1048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "toAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2646,
                          "src": "4810:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_address_$",
                            "typeString": "function (bytes memory) pure external returns (address)"
                          }
                        },
                        "id": 1054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4810:56:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1046,
                      "name": "IDateTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3183,
                      "src": "4787:9:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IDateTime_$3183_$",
                        "typeString": "type(contract IDateTime)"
                      }
                    },
                    "id": 1055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4787:89:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDateTime_$3183",
                      "typeString": "contract IDateTime"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4770:106:26"
                },
                {
                  "assignments": [
                    1059
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1059,
                      "mutability": "mutable",
                      "name": "_value",
                      "nameLocation": "4909:6:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 1278,
                      "src": "4887:28:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_tokenStructure_$626_memory_ptr",
                        "typeString": "struct soulBondToken.tokenStructure"
                      },
                      "typeName": {
                        "id": 1058,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1057,
                          "name": "tokenStructure",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 626,
                          "src": "4887:14:26"
                        },
                        "referencedDeclaration": 626,
                        "src": "4887:14:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_tokenStructure_$626_storage_ptr",
                          "typeString": "struct soulBondToken.tokenStructure"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1063,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1060,
                      "name": "token2Value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 646,
                      "src": "4918:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_tokenStructure_$626_storage_$",
                        "typeString": "mapping(uint256 => struct soulBondToken.tokenStructure storage ref)"
                      }
                    },
                    "id": 1062,
                    "indexExpression": {
                      "id": 1061,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1030,
                      "src": "4930:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4918:20:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_tokenStructure_$626_storage",
                      "typeString": "struct soulBondToken.tokenStructure storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4887:51:26"
                },
                {
                  "assignments": [
                    1065
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1065,
                      "mutability": "mutable",
                      "name": "tokenData",
                      "nameLocation": "4961:9:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 1278,
                      "src": "4948:22:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1064,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4948:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1073,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1068,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1059,
                          "src": "4981:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_tokenStructure_$626_memory_ptr",
                            "typeString": "struct soulBondToken.tokenStructure memory"
                          }
                        },
                        "id": 1069,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "issuer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 619,
                        "src": "4981:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1070,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1059,
                          "src": "4996:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_tokenStructure_$626_memory_ptr",
                            "typeString": "struct soulBondToken.tokenStructure memory"
                          }
                        },
                        "id": 1071,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "certification",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 621,
                        "src": "4996:20:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 1066,
                        "name": "dds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 663,
                        "src": "4973:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDDS_$2661",
                          "typeString": "contract IDDS"
                        }
                      },
                      "id": 1067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "get",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2599,
                      "src": "4973:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory,string memory) view external returns (bytes memory)"
                      }
                    },
                    "id": 1072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4973:44:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4948:69:26"
                },
                {
                  "assignments": [
                    1075
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1075,
                      "mutability": "mutable",
                      "name": "image_",
                      "nameLocation": "5040:6:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 1278,
                      "src": "5027:19:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1074,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5027:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1076,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5027:19:26"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1077,
                        "name": "tokenData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1065,
                        "src": "5061:9:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5061:16:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5080:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "5061:20:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1125,
                    "nodeType": "Block",
                    "src": "5143:438:26",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          },
                          "id": 1093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1089,
                              "name": "tokenData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1065,
                              "src": "5178:9:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1091,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 1090,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5188:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5178:12:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30783638",
                            "id": 1092,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5194:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_104_by_1",
                              "typeString": "int_const 104"
                            },
                            "value": "0x68"
                          },
                          "src": "5178:20:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1106,
                        "nodeType": "IfStatement",
                        "src": "5157:234:26",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1098,
                                    "name": "tokenData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1065,
                                    "src": "5330:9:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 1099,
                                        "name": "tokenId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1030,
                                        "src": "5341:7:26",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1100,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "toString",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1528,
                                      "src": "5341:16:26",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256) pure returns (string memory)"
                                      }
                                    },
                                    "id": 1101,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5341:18:26",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "hexValue": "2e6a736f6e",
                                    "id": 1102,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5361:7:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                                      "typeString": "literal_string \".json\""
                                    },
                                    "value": ".json"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                                      "typeString": "literal_string \".json\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 1096,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "5313:3:26",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1097,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "5313:16:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5313:56:26",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5281:6:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                "typeString": "type(string storage pointer)"
                              },
                              "typeName": {
                                "id": 1094,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "5281:6:26",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5281:110:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "functionReturnParameters": 1035,
                          "id": 1105,
                          "nodeType": "Return",
                          "src": "5254:137:26"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          },
                          "id": 1111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1107,
                              "name": "tokenData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1065,
                              "src": "5427:9:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1109,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 1108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5437:1:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5427:12:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30783363",
                            "id": 1110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5443:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_60_by_1",
                              "typeString": "int_const 60"
                            },
                            "value": "0x3c"
                          },
                          "src": "5427:20:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "expression": {
                            "id": 1122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1116,
                              "name": "image_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1075,
                              "src": "5525:6:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "hexValue": "49534f544f50",
                                  "id": 1119,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5542:8:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_f9d868d8b934ca274e63e1e00148ee04e62ec0cb0b21fb44b80dbf33bbf98478",
                                    "typeString": "literal_string \"ISOTOP\""
                                  },
                                  "value": "ISOTOP"
                                },
                                {
                                  "hexValue": "4245455f5342545f44454641554c54",
                                  "id": 1120,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5552:17:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_c880e51e85207773222c58d25da776850a06ccc503567c38262adf81082b75e0",
                                    "typeString": "literal_string \"BEE_SBT_DEFAULT\""
                                  },
                                  "value": "BEE_SBT_DEFAULT"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_f9d868d8b934ca274e63e1e00148ee04e62ec0cb0b21fb44b80dbf33bbf98478",
                                    "typeString": "literal_string \"ISOTOP\""
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_c880e51e85207773222c58d25da776850a06ccc503567c38262adf81082b75e0",
                                    "typeString": "literal_string \"BEE_SBT_DEFAULT\""
                                  }
                                ],
                                "expression": {
                                  "id": 1117,
                                  "name": "dds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 663,
                                  "src": "5534:3:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IDDS_$2661",
                                    "typeString": "contract IDDS"
                                  }
                                },
                                "id": 1118,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "get",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2599,
                                "src": "5534:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (string memory,string memory) view external returns (bytes memory)"
                                }
                              },
                              "id": 1121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5534:36:26",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "src": "5525:45:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1123,
                          "nodeType": "ExpressionStatement",
                          "src": "5525:45:26"
                        },
                        "id": 1124,
                        "nodeType": "IfStatement",
                        "src": "5406:164:26",
                        "trueBody": {
                          "expression": {
                            "id": 1114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1112,
                              "name": "image_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1075,
                              "src": "5488:6:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 1113,
                              "name": "tokenData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1065,
                              "src": "5497:9:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "src": "5488:18:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1115,
                          "nodeType": "ExpressionStatement",
                          "src": "5488:18:26"
                        }
                      }
                    ]
                  },
                  "id": 1126,
                  "nodeType": "IfStatement",
                  "src": "5057:524:26",
                  "trueBody": {
                    "expression": {
                      "id": 1087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1081,
                        "name": "image_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1075,
                        "src": "5083:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "hexValue": "49534f544f50",
                            "id": 1084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5100:8:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f9d868d8b934ca274e63e1e00148ee04e62ec0cb0b21fb44b80dbf33bbf98478",
                              "typeString": "literal_string \"ISOTOP\""
                            },
                            "value": "ISOTOP"
                          },
                          {
                            "hexValue": "4245455f5342545f44454641554c54",
                            "id": 1085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5110:17:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c880e51e85207773222c58d25da776850a06ccc503567c38262adf81082b75e0",
                              "typeString": "literal_string \"BEE_SBT_DEFAULT\""
                            },
                            "value": "BEE_SBT_DEFAULT"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_f9d868d8b934ca274e63e1e00148ee04e62ec0cb0b21fb44b80dbf33bbf98478",
                              "typeString": "literal_string \"ISOTOP\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_c880e51e85207773222c58d25da776850a06ccc503567c38262adf81082b75e0",
                              "typeString": "literal_string \"BEE_SBT_DEFAULT\""
                            }
                          ],
                          "expression": {
                            "id": 1082,
                            "name": "dds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 663,
                            "src": "5092:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDDS_$2661",
                              "typeString": "contract IDDS"
                            }
                          },
                          "id": 1083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "get",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2599,
                          "src": "5092:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory,string memory) view external returns (bytes memory)"
                          }
                        },
                        "id": 1086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5092:36:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "src": "5083:45:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "id": 1088,
                    "nodeType": "ExpressionStatement",
                    "src": "5083:45:26"
                  }
                },
                {
                  "assignments": [
                    1128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1128,
                      "mutability": "mutable",
                      "name": "isValid",
                      "nameLocation": "5596:7:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 1278,
                      "src": "5591:12:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1127,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5591:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1134,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1129,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1059,
                        "src": "5606:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_tokenStructure_$626_memory_ptr",
                          "typeString": "struct soulBondToken.tokenStructure memory"
                        }
                      },
                      "id": 1130,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "validDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 625,
                      "src": "5606:16:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 1131,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "5625:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5625:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5606:34:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5591:49:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1138,
                        "name": "image_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1075,
                        "src": "5676:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "5b534f554c49442020202020202020205d",
                        "id": 1139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5696:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16ec296c68e48b926783059814cc875742d4012e7ca3229ebc794730e5446151",
                          "typeString": "literal_string \"[SOULID         ]\""
                        },
                        "value": "[SOULID         ]"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "baseExpression": {
                                  "id": 1142,
                                  "name": "token2Soul",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 641,
                                  "src": "5735:10:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                    "typeString": "mapping(uint256 => uint256)"
                                  }
                                },
                                "id": 1144,
                                "indexExpression": {
                                  "id": 1143,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1030,
                                  "src": "5746:7:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5735:19:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1528,
                              "src": "5735:28:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 1146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5735:30:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 1141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5729:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 1140,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "5729:5:26",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5729:37:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_16ec296c68e48b926783059814cc875742d4012e7ca3229ebc794730e5446151",
                          "typeString": "literal_string \"[SOULID         ]\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1135,
                        "name": "dds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 663,
                        "src": "5650:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDDS_$2661",
                          "typeString": "contract IDDS"
                        }
                      },
                      "id": 1137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2639,
                      "src": "5650:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory) pure external returns (bytes memory)"
                      }
                    },
                    "id": 1148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5650:126:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 1149,
                  "nodeType": "ExpressionStatement",
                  "src": "5650:126:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1153,
                        "name": "image_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1075,
                        "src": "5799:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "5b544f4b454e494420202020202020205d",
                        "id": 1154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5807:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee885b49b283be1d90c0b39d919fda668cc47da0e2fa452e746154500caeccc9",
                          "typeString": "literal_string \"[TOKENID        ]\""
                        },
                        "value": "[TOKENID        ]"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 1157,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1030,
                                "src": "5834:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1528,
                              "src": "5834:16:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 1159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5834:18:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 1156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5828:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 1155,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "5828:5:26",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5828:25:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee885b49b283be1d90c0b39d919fda668cc47da0e2fa452e746154500caeccc9",
                          "typeString": "literal_string \"[TOKENID        ]\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1150,
                        "name": "dds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 663,
                        "src": "5786:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDDS_$2661",
                          "typeString": "contract IDDS"
                        }
                      },
                      "id": 1152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2639,
                      "src": "5786:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory) pure external returns (bytes memory)"
                      }
                    },
                    "id": 1161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5786:68:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 1162,
                  "nodeType": "ExpressionStatement",
                  "src": "5786:68:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1166,
                        "name": "image_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1075,
                        "src": "5890:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "5b434c41494d2044415445202020202020202020205d",
                        "id": 1167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5910:24:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa76ff4085e85f8f1b6b6b0afdd24ce7b1940849d34a5966dc7776397ba4c0d3",
                          "typeString": "literal_string \"[CLAIM DATE          ]\""
                        },
                        "value": "[CLAIM DATE          ]"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1172,
                                  "name": "_value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1059,
                                  "src": "5970:6:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_tokenStructure_$626_memory_ptr",
                                    "typeString": "struct soulBondToken.tokenStructure memory"
                                  }
                                },
                                "id": 1173,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "claimDate",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 623,
                                "src": "5970:16:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1170,
                                "name": "date",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1045,
                                "src": "5954:4:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IDateTime_$3183",
                                  "typeString": "contract IDateTime"
                                }
                              },
                              "id": 1171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timeToDate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3054,
                              "src": "5954:15:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (uint256) pure external returns (string memory)"
                              }
                            },
                            "id": 1174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5954:33:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 1169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5948:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 1168,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "5948:5:26",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5948:40:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa76ff4085e85f8f1b6b6b0afdd24ce7b1940849d34a5966dc7776397ba4c0d3",
                          "typeString": "literal_string \"[CLAIM DATE          ]\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1163,
                        "name": "dds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 663,
                        "src": "5864:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDDS_$2661",
                          "typeString": "contract IDDS"
                        }
                      },
                      "id": 1165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2639,
                      "src": "5864:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory) pure external returns (bytes memory)"
                      }
                    },
                    "id": 1176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5864:134:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 1177,
                  "nodeType": "ExpressionStatement",
                  "src": "5864:134:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1181,
                        "name": "image_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1075,
                        "src": "6034:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "5b56414c49442044415445202020202020202020205d",
                        "id": 1182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6054:24:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2e0f237280cf80d04aa1792bb1c2e4fe4811bb1cbf05650aa2745876200be30d",
                          "typeString": "literal_string \"[VALID DATE          ]\""
                        },
                        "value": "[VALID DATE          ]"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1187,
                                  "name": "_value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1059,
                                  "src": "6114:6:26",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_tokenStructure_$626_memory_ptr",
                                    "typeString": "struct soulBondToken.tokenStructure memory"
                                  }
                                },
                                "id": 1188,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "validDate",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 625,
                                "src": "6114:16:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1185,
                                "name": "date",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1045,
                                "src": "6098:4:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IDateTime_$3183",
                                  "typeString": "contract IDateTime"
                                }
                              },
                              "id": 1186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timeToDate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3054,
                              "src": "6098:15:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (uint256) pure external returns (string memory)"
                              }
                            },
                            "id": 1189,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6098:33:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 1184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6092:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 1183,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "6092:5:26",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6092:40:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2e0f237280cf80d04aa1792bb1c2e4fe4811bb1cbf05650aa2745876200be30d",
                          "typeString": "literal_string \"[VALID DATE          ]\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1178,
                        "name": "dds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 663,
                        "src": "6008:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDDS_$2661",
                          "typeString": "contract IDDS"
                        }
                      },
                      "id": 1180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2639,
                      "src": "6008:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory) pure external returns (bytes memory)"
                      }
                    },
                    "id": 1191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6008:134:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 1192,
                  "nodeType": "ExpressionStatement",
                  "src": "6008:134:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1196,
                        "name": "image_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1075,
                        "src": "6178:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "5b49532056414c49443f5d",
                        "id": 1197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6198:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1eb889272bf443a6928f3b266d8dfbf1563ec118832065cc6f1428a5f4c0ddf1",
                          "typeString": "literal_string \"[IS VALID?]\""
                        },
                        "value": "[IS VALID?]"
                      },
                      {
                        "arguments": [
                          {
                            "condition": {
                              "id": 1200,
                              "name": "isValid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1128,
                              "src": "6231:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "hexValue": "4e4f542056414c4944",
                              "id": 1202,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6251:11:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8808b25fbdb6d19bbaa9cb5d3c031ce5748b3e5920324137b4aa737f77f03860",
                                "typeString": "literal_string \"NOT VALID\""
                              },
                              "value": "NOT VALID"
                            },
                            "id": 1203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "6231:31:26",
                            "trueExpression": {
                              "hexValue": "56414c4944",
                              "id": 1201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6241:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8d801a3d463673f6c985d374b34b10861b4440369fcae00632ab849a5d55c1ec",
                                "typeString": "literal_string \"VALID\""
                              },
                              "value": "VALID"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 1199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6225:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 1198,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "6225:5:26",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6225:38:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1eb889272bf443a6928f3b266d8dfbf1563ec118832065cc6f1428a5f4c0ddf1",
                          "typeString": "literal_string \"[IS VALID?]\""
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1193,
                        "name": "dds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 663,
                        "src": "6152:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDDS_$2661",
                          "typeString": "contract IDDS"
                        }
                      },
                      "id": 1195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2639,
                      "src": "6152:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory) pure external returns (bytes memory)"
                      }
                    },
                    "id": 1205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6152:121:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 1206,
                  "nodeType": "ExpressionStatement",
                  "src": "6152:121:26"
                },
                {
                  "assignments": [
                    1208
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1208,
                      "mutability": "mutable",
                      "name": "meta",
                      "nameLocation": "6297:4:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 1278,
                      "src": "6284:17:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1207,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6284:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1228,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "7b226e616d65223a202253425423",
                        "id": 1211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6334:16:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6858b43472a174cf625f4dc2ae4cb823eef01b35909bfa7eea4091917a0010ba",
                          "typeString": "literal_string \"{\"name\": \"SBT#\""
                        },
                        "value": "{\"name\": \"SBT#"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1212,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1030,
                            "src": "6364:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "toString",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1528,
                          "src": "6364:16:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256) pure returns (string memory)"
                          }
                        },
                        "id": 1214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6364:18:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "7c",
                        "id": 1215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6396:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f2736824a8d8680efd16063b669359e760b24936629c9681635556c2b7fa269f",
                          "typeString": "literal_string \"|\""
                        },
                        "value": "|"
                      },
                      {
                        "expression": {
                          "id": 1216,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1059,
                          "src": "6413:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_tokenStructure_$626_memory_ptr",
                            "typeString": "struct soulBondToken.tokenStructure memory"
                          }
                        },
                        "id": 1217,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "certification",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 621,
                        "src": "6413:20:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "222c202273796d626f6c223a2022534254222c20226465736372697074696f6e223a2022536f756c426f756e64546f6b656e2070726f7065727479222c2022696d616765223a22646174613a696d6167652f7376672b786d6c3b6261736536342c",
                        "id": 1218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6447:99:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_907192f090d9a43202aa802c42bb6e87edd50ab6c94fa4f7563bf586193e69ca",
                          "typeString": "literal_string \"\", \"symbol\": \"SBT\", \"description\": \"SoulBoundToken property\", \"image\":\"data:image/svg+xml;base64,\""
                        },
                        "value": "\", \"symbol\": \"SBT\", \"description\": \"SoulBoundToken property\", \"image\":\"data:image/svg+xml;base64,"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1221,
                            "name": "image_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1075,
                            "src": "6574:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 1219,
                            "name": "Base64",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1440,
                            "src": "6560:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Base64_$1440_$",
                              "typeString": "type(library Base64)"
                            }
                          },
                          "id": 1220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1439,
                          "src": "6560:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (bytes memory) pure returns (string memory)"
                          }
                        },
                        "id": 1222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6560:21:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "222c202264657369676e6572223a2022",
                        "id": 1223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6595:18:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_425f77156b3cf1e42345dfb7e441c5dabd7319efcbbd5451e397e54bab8fad4c",
                          "typeString": "literal_string \"\", \"designer\": \"\""
                        },
                        "value": "\", \"designer\": \""
                      },
                      {
                        "expression": {
                          "id": 1224,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1059,
                          "src": "6627:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_tokenStructure_$626_memory_ptr",
                            "typeString": "struct soulBondToken.tokenStructure memory"
                          }
                        },
                        "id": 1225,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "issuer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 619,
                        "src": "6627:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "222c202261747472696275746573223a205b7b202274726169745f74797065223a2022536f756c222c202276616c7565223a2022",
                        "id": 1226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6654:54:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31ab575bda61bedc4615ff46bf59ddbbf5cc84efd37e8efecc11c8b845b5f52b",
                          "typeString": "literal_string \"\", \"attributes\": [{ \"trait_type\": \"Soul\", \"value\": \"\""
                        },
                        "value": "\", \"attributes\": [{ \"trait_type\": \"Soul\", \"value\": \""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6858b43472a174cf625f4dc2ae4cb823eef01b35909bfa7eea4091917a0010ba",
                          "typeString": "literal_string \"{\"name\": \"SBT#\""
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f2736824a8d8680efd16063b669359e760b24936629c9681635556c2b7fa269f",
                          "typeString": "literal_string \"|\""
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_907192f090d9a43202aa802c42bb6e87edd50ab6c94fa4f7563bf586193e69ca",
                          "typeString": "literal_string \"\", \"symbol\": \"SBT\", \"description\": \"SoulBoundToken property\", \"image\":\"data:image/svg+xml;base64,\""
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_425f77156b3cf1e42345dfb7e441c5dabd7319efcbbd5451e397e54bab8fad4c",
                          "typeString": "literal_string \"\", \"designer\": \"\""
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31ab575bda61bedc4615ff46bf59ddbbf5cc84efd37e8efecc11c8b845b5f52b",
                          "typeString": "literal_string \"\", \"attributes\": [{ \"trait_type\": \"Soul\", \"value\": \"\""
                        }
                      ],
                      "expression": {
                        "id": 1209,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "6304:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "6304:16:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 1227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6304:414:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6284:434:26"
                },
                {
                  "expression": {
                    "id": 1264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1229,
                      "name": "meta",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1208,
                      "src": "6728:4:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1232,
                          "name": "meta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1208,
                          "src": "6765:4:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "baseExpression": {
                                "id": 1233,
                                "name": "token2Soul",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 641,
                                "src": "6783:10:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 1235,
                              "indexExpression": {
                                "id": 1234,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1030,
                                "src": "6794:7:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6783:19:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "toString",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1528,
                            "src": "6783:28:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256) pure returns (string memory)"
                            }
                          },
                          "id": 1237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6783:30:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "hexValue": "227d2c7b202274726169745f74797065223a2022534254204944222c202276616c7565223a2022",
                          "id": 1238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6827:41:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_4aa7bb504ee68ec1715eb786537881cd1a08e57c0ffde806bbd2175612f6af64",
                            "typeString": "literal_string \"\"},{ \"trait_type\": \"SBT ID\", \"value\": \"\""
                          },
                          "value": "\"},{ \"trait_type\": \"SBT ID\", \"value\": \""
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1239,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1030,
                              "src": "6882:7:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "toString",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1528,
                            "src": "6882:16:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256) pure returns (string memory)"
                            }
                          },
                          "id": 1241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6882:18:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "hexValue": "227d2c7b202274726169745f74797065223a2022436572746966696361746520497373756572222c202276616c7565223a2022",
                          "id": 1242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6914:53:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_3b954a04d47a823ad8780de4476e734e6a0c7e55bda5b8ce3e822901a4211ab6",
                            "typeString": "literal_string \"\"},{ \"trait_type\": \"Certificate Issuer\", \"value\": \"\""
                          },
                          "value": "\"},{ \"trait_type\": \"Certificate Issuer\", \"value\": \""
                        },
                        {
                          "expression": {
                            "id": 1243,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1059,
                            "src": "6981:6:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_tokenStructure_$626_memory_ptr",
                              "typeString": "struct soulBondToken.tokenStructure memory"
                            }
                          },
                          "id": 1244,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "issuer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 619,
                          "src": "6981:13:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "hexValue": "227d2c7b202274726169745f74797065223a2022436c61696d2044617465222c202276616c7565223a2022",
                          "id": 1245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7008:45:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_783f97cb8933ce9f6b10bf8c52ffe33ae1d97b1004f2c0aac9514d7b4e6990d4",
                            "typeString": "literal_string \"\"},{ \"trait_type\": \"Claim Date\", \"value\": \"\""
                          },
                          "value": "\"},{ \"trait_type\": \"Claim Date\", \"value\": \""
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1248,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1059,
                                "src": "7083:6:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_tokenStructure_$626_memory_ptr",
                                  "typeString": "struct soulBondToken.tokenStructure memory"
                                }
                              },
                              "id": 1249,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "claimDate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 623,
                              "src": "7083:16:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1246,
                              "name": "date",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1045,
                              "src": "7067:4:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IDateTime_$3183",
                                "typeString": "contract IDateTime"
                              }
                            },
                            "id": 1247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timeToDate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3054,
                            "src": "7067:15:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                              "typeString": "function (uint256) pure external returns (string memory)"
                            }
                          },
                          "id": 1250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7067:33:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "hexValue": "227d2c7b202274726169745f74797065223a202256616c69642044617465222c202276616c7565223a2022",
                          "id": 1251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7114:45:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_5777eea121788df575555f07dd202c13301d6a8ace7d04179e7675cd87fae532",
                            "typeString": "literal_string \"\"},{ \"trait_type\": \"Valid Date\", \"value\": \"\""
                          },
                          "value": "\"},{ \"trait_type\": \"Valid Date\", \"value\": \""
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1254,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1059,
                                "src": "7189:6:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_tokenStructure_$626_memory_ptr",
                                  "typeString": "struct soulBondToken.tokenStructure memory"
                                }
                              },
                              "id": 1255,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "validDate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 625,
                              "src": "7189:16:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1252,
                              "name": "date",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1045,
                              "src": "7173:4:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IDateTime_$3183",
                                "typeString": "contract IDateTime"
                              }
                            },
                            "id": 1253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timeToDate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3054,
                            "src": "7173:15:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                              "typeString": "function (uint256) pure external returns (string memory)"
                            }
                          },
                          "id": 1256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7173:33:26",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "hexValue": "227d2c7b202274726169745f74797065223a202243657274696669636174696f6e2056616c6964222c202276616c7565223a2022",
                          "id": 1257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7220:54:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d5fc0a667d29fd31853a77dd2c17c5d3cbc5d6b1b7ce94502cb43dd618a96384",
                            "typeString": "literal_string \"\"},{ \"trait_type\": \"Certification Valid\", \"value\": \"\""
                          },
                          "value": "\"},{ \"trait_type\": \"Certification Valid\", \"value\": \""
                        },
                        {
                          "condition": {
                            "id": 1258,
                            "name": "isValid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1128,
                            "src": "7288:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "hexValue": "4e4f542056414c4944",
                            "id": 1260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7308:11:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_8808b25fbdb6d19bbaa9cb5d3c031ce5748b3e5920324137b4aa737f77f03860",
                              "typeString": "literal_string \"NOT VALID\""
                            },
                            "value": "NOT VALID"
                          },
                          "id": 1261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "7288:31:26",
                          "trueExpression": {
                            "hexValue": "56414c4944",
                            "id": 1259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7298:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_8d801a3d463673f6c985d374b34b10861b4440369fcae00632ab849a5d55c1ec",
                              "typeString": "literal_string \"VALID\""
                            },
                            "value": "VALID"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "hexValue": "227d5d7d",
                          "id": 1262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7333:6:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_f5bba0ae94dd88587a882c16bb746e9ca4527b97407fa5d4bdac27455db72fa6",
                            "typeString": "literal_string \"\"}]}\""
                          },
                          "value": "\"}]}"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_4aa7bb504ee68ec1715eb786537881cd1a08e57c0ffde806bbd2175612f6af64",
                            "typeString": "literal_string \"\"},{ \"trait_type\": \"SBT ID\", \"value\": \"\""
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_3b954a04d47a823ad8780de4476e734e6a0c7e55bda5b8ce3e822901a4211ab6",
                            "typeString": "literal_string \"\"},{ \"trait_type\": \"Certificate Issuer\", \"value\": \"\""
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_783f97cb8933ce9f6b10bf8c52ffe33ae1d97b1004f2c0aac9514d7b4e6990d4",
                            "typeString": "literal_string \"\"},{ \"trait_type\": \"Claim Date\", \"value\": \"\""
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_5777eea121788df575555f07dd202c13301d6a8ace7d04179e7675cd87fae532",
                            "typeString": "literal_string \"\"},{ \"trait_type\": \"Valid Date\", \"value\": \"\""
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_d5fc0a667d29fd31853a77dd2c17c5d3cbc5d6b1b7ce94502cb43dd618a96384",
                            "typeString": "literal_string \"\"},{ \"trait_type\": \"Certification Valid\", \"value\": \"\""
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_f5bba0ae94dd88587a882c16bb746e9ca4527b97407fa5d4bdac27455db72fa6",
                            "typeString": "literal_string \"\"}]}\""
                          }
                        ],
                        "expression": {
                          "id": 1230,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "6735:3:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 1231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodePacked",
                        "nodeType": "MemberAccess",
                        "src": "6735:16:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 1263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6735:614:26",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "6728:621:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 1265,
                  "nodeType": "ExpressionStatement",
                  "src": "6728:621:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c",
                            "id": 1270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7441:31:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
                              "typeString": "literal_string \"data:application/json;base64,\""
                            },
                            "value": "data:application/json;base64,"
                          },
                          {
                            "arguments": [
                              {
                                "id": 1273,
                                "name": "meta",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1208,
                                "src": "7508:4:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 1271,
                                "name": "Base64",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1440,
                                "src": "7494:6:26",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Base64_$1440_$",
                                  "typeString": "type(library Base64)"
                                }
                              },
                              "id": 1272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1439,
                              "src": "7494:13:26",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (bytes memory) pure returns (string memory)"
                              }
                            },
                            "id": 1274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7494:19:26",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
                              "typeString": "literal_string \"data:application/json;base64,\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 1268,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7403:3:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "7403:16:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7403:128:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7379:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 1266,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "7379:6:26",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7379:166:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 1035,
                  "id": 1277,
                  "nodeType": "Return",
                  "src": "7360:185:26"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 1279,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "4580:8:26",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1032,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4658:8:26"
            },
            "parameters": {
              "id": 1031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1030,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4597:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 1279,
                  "src": "4589:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1029,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4589:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4588:17:26"
            },
            "returnParameters": {
              "id": 1035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1034,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1279,
                  "src": "4684:13:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1033,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4684:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4683:15:26"
            },
            "scope": 1280,
            "src": "4571:2981:26",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 1281,
        "src": "292:7262:26",
        "usedErrors": []
      }
    ],
    "src": "33:7522:26"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604080518082018252601681527f536f756c426f6e74546f6b656e2052656769737472790000000000000000000060208083019182528351808501909452600384526214d09560ea1b9084015281519192916200007291600091620000b7565b50805162000088906001906020840190620000b7565b5050601080546001600160a01b03191673222d6d17f1f6967b81e40624fe6176b7be225bee1790555062000199565b828054620000c5906200015d565b90600052602060002090601f016020900481019282620000e9576000855562000134565b82601f106200010457805160ff191683800117855562000134565b8280016001018555821562000134579182015b828111156200013457825182559160200191906001019062000117565b506200014292915062000146565b5090565b5b8082111562000142576000815560010162000147565b600181811c908216806200017257607f821691505b6020821081036200019357634e487b7160e01b600052602260045260246000fd5b50919050565b613a6080620001a96000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80635f2a9e87116100b8578063afb6533a1161007c578063afb6533a1461028b578063b88d4fde1461029e578063c87b56dd146102b1578063e4b50cb8146102c4578063e985e9c5146102e4578063f4e992811461032057600080fd5b80635f2a9e87146102375780636352211e1461024a57806370a082311461025d57806395d89b4114610270578063a22cb4651461027857600080fd5b806323b872dd116100ff57806323b872dd146101cb5780632f745c59146101de57806342842e0e146101f15780634f6ccce71461020457806357991d301461021757600080fd5b806301ffc9a71461013c57806306fdde0314610164578063081812fc14610179578063095ea7b3146101a457806318160ddd146101b9575b600080fd5b61014f61014a366004612a5c565b610333565b60405190151581526020015b60405180910390f35b61016c61035e565b60405161015b9190612ad8565b61018c610187366004612aeb565b6103f0565b6040516001600160a01b03909116815260200161015b565b6101b76101b2366004612b19565b610417565b005b6008545b60405190815260200161015b565b6101b76101d9366004612b45565b610531565b6101bd6101ec366004612b19565b610562565b6101b76101ff366004612b45565b6105f8565b6101bd610212366004612aeb565b610613565b61022a610225366004612aeb565b6106a6565b60405161015b9190612b86565b6101b7610245366004612c13565b610708565b61018c610258366004612aeb565b6108a1565b6101bd61026b366004612c8d565b610901565b61016c610987565b6101b7610286366004612cb8565b610996565b6101b7610299366004612d38565b6109a5565b6101b76102ac366004612e6d565b610b4c565b61016c6102bf366004612aeb565b610b84565b6102d76102d2366004612aeb565b6115bb565b60405161015b9190612f1c565b61014f6102f2366004612f76565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101b761032e366004612fa4565b61173d565b60006001600160e01b0319821663780e9d6360e01b14806103585750610358826118e0565b92915050565b60606000805461036d90613030565b80601f016020809104026020016040519081016040528092919081815260200182805461039990613030565b80156103e65780601f106103bb576101008083540402835291602001916103e6565b820191906000526020600020905b8154815290600101906020018083116103c957829003601f168201915b5050505050905090565b60006103fb82611930565b506000908152600460205260409020546001600160a01b031690565b6000610422826108a1565b9050806001600160a01b0316836001600160a01b0316036104945760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104b057506104b081336102f2565b6105225760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000606482015260840161048b565b61052c8383611992565b505050565b61053b3382611a00565b6105575760405162461bcd60e51b815260040161048b9061306a565b61052c838383611a7f565b600061056d83610901565b82106105cf5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b606482015260840161048b565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61052c83838360405180602001604052806000815250610b4c565b600061061e60085490565b82106106815760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b606482015260840161048b565b60088281548110610694576106946130b8565b90600052602060002001549050919050565b6000818152600a60209081526040918290208054835181840281018401909452808452606093928301828280156106fc57602002820191906000526020600020905b8154815260200190600101908083116106e8575b50505050509050919050565b601054604051633e10510b60e01b81526000916001600160a01b031690632d888869908290633e10510b9061073f906004016130ce565b600060405180830381865afa15801561075c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107849190810190613153565b6040518263ffffffff1660e01b81526004016107a09190612ad8565b602060405180830381865afa1580156107bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e1919061319c565b604051635d786a4f60e11b8152600481018890523360248201529091506001600160a01b0382169063baf0d49e90604401602060405180830381865afa15801561082f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085391906131b9565b61088b5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b604482015260640161048b565b610899338787878787611c26565b505050505050565b6000818152600260205260408120546001600160a01b0316806103585760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161048b565b60006001600160a01b03821661096b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161048b565b506001600160a01b031660009081526003602052604090205490565b60606001805461036d90613030565b6109a1338383611e4d565b5050565b601054604051632557a50960e11b815233916001600160a01b031690634aaf4a12906109d7908a908a906004016131d6565b602060405180830381865afa1580156109f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a18919061319c565b6001600160a01b031614610a625760405162461bcd60e51b815260206004820152601160248201527027b7363c903237b6b0b4b71037bbb732b960791b604482015260640161048b565b600086868686604051602001610a7b9493929190613205565b60408051601f1981840301815291815281516020928301206000818152600e90935290822085905583519092509003610acc576000818152600d60205260409020805460ff19166001179055610b43565b60005b8251811015610b41576001600f6000858481518110610af057610af06130b8565b6020908102919091018101516001600160a01b0316825281810192909252604090810160009081208682529092529020805460ff191691151591909117905580610b398161323d565b915050610acf565b505b50505050505050565b610b563383611a00565b610b725760405162461bcd60e51b815260040161048b9061306a565b610b7e84848484611f1b565b50505050565b6000818152600260205260409020546060906001600160a01b0316610bdf5760405162461bcd60e51b81526020600482015260116024820152703737b732bc34b9ba32b73a103a37b5b2b760791b604482015260640161048b565b601054604051633e10510b60e01b81526000916001600160a01b031690632d888869908290633e10510b90610c1690600401613256565b600060405180830381865afa158015610c33573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c5b9190810190613153565b6040518263ffffffff1660e01b8152600401610c779190612ad8565b602060405180830381865afa158015610c94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb8919061319c565b90506000600c6000858152602001908152602001600020604051806080016040529081600082018054610cea90613030565b80601f0160208091040260200160405190810160405280929190818152602001828054610d1690613030565b8015610d635780601f10610d3857610100808354040283529160200191610d63565b820191906000526020600020905b815481529060010190602001808311610d4657829003601f168201915b50505050508152602001600182018054610d7c90613030565b80601f0160208091040260200160405190810160405280929190818152602001828054610da890613030565b8015610df55780601f10610dca57610100808354040283529160200191610df5565b820191906000526020600020905b815481529060010190602001808311610dd857829003601f168201915b505050918352505060028201546020808301919091526003909201546040918201526010548351928401519151633e10510b60e01b81529394506000936001600160a01b0390911692633e10510b92610e50926004016132af565b600060405180830381865afa158015610e6d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e959190810190613153565b90506060600182511015610f1d57601054604051633e10510b60e01b81526001600160a01b0390911690633e10510b90610ed1906004016132dd565b600060405180830381865afa158015610eee573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f169190810190613153565b9050611027565b81600081518110610f3057610f306130b8565b01602001516001600160f81b031916600d60fb1b03610f7e5781610f5387611f4e565b604051602001610f6492919061334d565b604051602081830303815290604052945050505050919050565b81600081518110610f9157610f916130b8565b01602001516001600160f81b031916600f60fa1b03610fb1575080611027565b601054604051633e10510b60e01b81526001600160a01b0390911690633e10510b90610fdf906004016132dd565b600060405180830381865afa158015610ffc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110249190810190613153565b90505b60608301516010546000888152600b602052604090205442909211916001600160a01b0390911690637c4165f290849061106090611f4e565b6040518363ffffffff1660e01b815260040161107d92919061338c565b600060405180830381865afa15801561109a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110c29190810190613153565b506010546001600160a01b0316637c4165f2836110de8a611f4e565b6040518363ffffffff1660e01b81526004016110fb9291906133dd565b600060405180830381865afa158015611118573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111409190810190613153565b5060105460408581015190516362480fd960e01b815260048101919091526001600160a01b0391821691637c4165f29185918916906362480fd990602401600060405180830381865afa15801561119b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111c39190810190613153565b6040518363ffffffff1660e01b81526004016111e092919061342e565b600060405180830381865afa1580156111fd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112259190810190613153565b5060105460608501516040516362480fd960e01b815260048101919091526001600160a01b0391821691637c4165f29185918916906362480fd990602401600060405180830381865afa158015611280573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112a89190810190613153565b6040518363ffffffff1660e01b81526004016112c5929190613484565b600060405180830381865afa1580156112e2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261130a9190810190613153565b506010546001600160a01b0316637c4165f2838361134957604051806040016040528060098152602001681393d508159053125160ba1b815250611368565b60405180604001604052806005815260200164159053125160da1b8152505b6040518363ffffffff1660e01b81526004016113859291906134da565b600060405180830381865afa1580156113a2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113ca9190810190613153565b5060006113d688611f4e565b85602001516113e48561204f565b87516040516113f99493929190602001613525565b60408051601f1981840301815291815260008a8152600b6020522054909150819061142390611f4e565b61142c8a611f4e565b87516040808a015190516362480fd960e01b815260048101919091526001600160a01b038b16906362480fd990602401600060405180830381865afa158015611479573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114a19190810190613153565b60608a01516040516362480fd960e01b815260048101919091526001600160a01b038c16906362480fd990602401600060405180830381865afa1580156114ec573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115149190810190613153565b8761154057604051806040016040528060098152602001681393d508159053125160ba1b81525061155f565b60405180604001604052806005815260200164159053125160da1b8152505b6040516020016115759796959493929190613683565b604051602081830303815290604052905061158f8161204f565b60405160200161159f9190613857565b6040516020818303038152906040529650505050505050919050565b6115e66040518060800160405280606081526020016060815260200160008152602001600081525090565b6000828152600c60205260409081902081516080810190925280548290829061160e90613030565b80601f016020809104026020016040519081016040528092919081815260200182805461163a90613030565b80156116875780601f1061165c57610100808354040283529160200191611687565b820191906000526020600020905b81548152906001019060200180831161166a57829003601f168201915b505050505081526020016001820180546116a090613030565b80601f01602080910402602001604051908101604052809291908181526020018280546116cc90613030565b80156117195780601f106116ee57610100808354040283529160200191611719565b820191906000526020600020905b8154815290600101906020018083116116fc57829003601f168201915b50505050508152602001600282015481526020016003820154815250509050919050565b601054604051633e10510b60e01b81526000916001600160a01b031690632d888869908290633e10510b90611774906004016130ce565b600060405180830381865afa158015611791573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526117b99190810190613153565b6040518263ffffffff1660e01b81526004016117d59190612ad8565b602060405180830381865afa1580156117f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611816919061319c565b6040516302fb1e4560e11b8152600481018890529091506001600160a01b038216906305f63c8a90602401602060405180830381865afa15801561185e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611882919061319c565b6001600160a01b0316336001600160a01b0316146118d25760405162461bcd60e51b815260206004820152600d60248201526c37b7363c9037b832b930ba37b960991b604482015260640161048b565b610b43878787878787611c26565b60006001600160e01b031982166380ac58cd60e01b148061191157506001600160e01b03198216635b5e139f60e01b145b8061035857506301ffc9a760e01b6001600160e01b0319831614610358565b6000818152600260205260409020546001600160a01b031661198f5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161048b565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906119c7826108a1565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080611a0c836108a1565b9050806001600160a01b0316846001600160a01b03161480611a5357506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80611a775750836001600160a01b0316611a6c846103f0565b6001600160a01b0316145b949350505050565b826001600160a01b0316611a92826108a1565b6001600160a01b031614611af65760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161048b565b6001600160a01b038216611b585760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161048b565b611b638383836121a2565b611b6e600082611992565b6001600160a01b0383166000908152600360205260408120805460019290611b9790849061389c565b90915550506001600160a01b0382166000908152600360205260408120805460019290611bc59084906138b3565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600084848484604051602001611c3f9493929190613205565b60408051601f1981840301815291815281516020928301206000818152600d90935291205490915060ff1680611c9857506001600160a01b0387166000908152600f6020908152604080832084845290915290205460ff165b611ce45760405162461bcd60e51b815260206004820152601960248201527f41646472657373206e6f7420696e20616c6c6f77206c69737400000000000000604482015260640161048b565b6000611cef60085490565b6000818152600b60209081526040918290208a9055815160a0601f8a018390049092028101820190925260808201888152929350909182918990899081908501838280828437600092019190915250505090825250604080516020601f8801819004810282018101909252868152918101919087908790819084018382808284376000920182905250938552505042602080850191909152868352600e815260408084205494810194909452858352600c815292909120835180519193611dbb935084929101906129ad565b506020828101518051611dd492600185019201906129ad565b5060408281015160028301556060909201516003909101556000888152600a6020908152918120805460018101825590825291902001819055611e178882612516565b506001600160a01b039096166000908152600f6020908152604080832098835297905295909520805460ff191690555050505050565b816001600160a01b0316836001600160a01b031603611eae5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161048b565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611f26848484611a7f565b611f3284848484612664565b610b7e5760405162461bcd60e51b815260040161048b906138cb565b606081600003611f755750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611f9f5780611f898161323d565b9150611f989050600a83613933565b9150611f79565b60008167ffffffffffffffff811115611fba57611fba612cf1565b6040519080825280601f01601f191660200182016040528015611fe4576020820181803683370190505b5090505b8415611a7757611ff960018361389c565b9150612006600a86613947565b6120119060306138b3565b60f81b818381518110612026576120266130b8565b60200101906001600160f81b031916908160001a905350612048600a86613933565b9450611fe8565b6060815160000361206e57505060408051602081019091526000815290565b60006040518060600160405280604081526020016139eb604091399050600060038451600261209d91906138b3565b6120a79190613933565b6120b290600461395b565b67ffffffffffffffff8111156120ca576120ca612cf1565b6040519080825280601f01601f1916602001820160405280156120f4576020820181803683370190505b509050600182016020820185865187015b80821015612160576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845350600183019250612105565b505060038651066001811461217c576002811461218f57612197565b603d6001830353603d6002830353612197565b603d60018303535b509195945050505050565b6001600160a01b0382166121f85760405162461bcd60e51b815260206004820152601a60248201527f53425420746f6b656e2063616e6e6f74206265206275726e6564000000000000604482015260640161048b565b601054604051633e10510b60e01b81526000916001600160a01b031690632d888869908290633e10510b9061222f906004016130ce565b600060405180830381865afa15801561224c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526122749190810190613153565b6040518263ffffffff1660e01b81526004016122909190612ad8565b602060405180830381865afa1580156122ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122d1919061319c565b90506001600160a01b0384166123b4576000828152600b602052604090819020549051635d786a4f60e11b815260048101919091526001600160a01b03848116602483015282169063baf0d49e90604401602060405180830381865afa15801561233f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061236391906131b9565b6123af5760405162461bcd60e51b815260206004820181905260248201527f53425420746f6b656e20746f2061646472657373206e6f7420616c6c6f776564604482015260640161048b565b61250b565b6000828152600b602052604090819020549051635d786a4f60e11b815260048101919091526001600160a01b03858116602483015282169063baf0d49e90604401602060405180830381865afa158015612412573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061243691906131b9565b80156124bf57506000828152600b602052604090819020549051635d786a4f60e11b815260048101919091526001600160a01b03848116602483015282169063baf0d49e90604401602060405180830381865afa15801561249b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124bf91906131b9565b61250b5760405162461bcd60e51b815260206004820152601b60248201527f53425420746f6b656e2063616e6e6f74207472616e7366657265640000000000604482015260640161048b565b610b7e848484612765565b6001600160a01b03821661256c5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161048b565b6000818152600260205260409020546001600160a01b0316156125d15760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161048b565b6125dd600083836121a2565b6001600160a01b03821660009081526003602052604081208054600192906126069084906138b3565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b1561275a57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906126a890339089908890889060040161397a565b6020604051808303816000875af19250505080156126e3575060408051601f3d908101601f191682019092526126e0918101906139b7565b60015b612740573d808015612711576040519150601f19603f3d011682016040523d82523d6000602084013e612716565b606091505b5080516000036127385760405162461bcd60e51b815260040161048b906138cb565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611a77565b506001949350505050565b6001600160a01b0383166127c0576127bb81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6127e3565b816001600160a01b0316836001600160a01b0316146127e3576127e3838261281d565b6001600160a01b0382166127fa5761052c816128ba565b826001600160a01b0316826001600160a01b03161461052c5761052c8282612969565b6000600161282a84610901565b612834919061389c565b600083815260076020526040902054909150808214612887576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008546000906128cc9060019061389c565b600083815260096020526040812054600880549394509092849081106128f4576128f46130b8565b906000526020600020015490508060088381548110612915576129156130b8565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061294d5761294d6139d4565b6001900381819060005260206000200160009055905550505050565b600061297483610901565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b8280546129b990613030565b90600052602060002090601f0160209004810192826129db5760008555612a21565b82601f106129f457805160ff1916838001178555612a21565b82800160010185558215612a21579182015b82811115612a21578251825591602001919060010190612a06565b50612a2d929150612a31565b5090565b5b80821115612a2d5760008155600101612a32565b6001600160e01b03198116811461198f57600080fd5b600060208284031215612a6e57600080fd5b8135612a7981612a46565b9392505050565b60005b83811015612a9b578181015183820152602001612a83565b83811115610b7e5750506000910152565b60008151808452612ac4816020860160208601612a80565b601f01601f19169290920160200192915050565b602081526000612a796020830184612aac565b600060208284031215612afd57600080fd5b5035919050565b6001600160a01b038116811461198f57600080fd5b60008060408385031215612b2c57600080fd5b8235612b3781612b04565b946020939093013593505050565b600080600060608486031215612b5a57600080fd5b8335612b6581612b04565b92506020840135612b7581612b04565b929592945050506040919091013590565b6020808252825182820181905260009190848201906040850190845b81811015612bbe57835183529284019291840191600101612ba2565b50909695505050505050565b60008083601f840112612bdc57600080fd5b50813567ffffffffffffffff811115612bf457600080fd5b602083019150836020828501011115612c0c57600080fd5b9250929050565b600080600080600060608688031215612c2b57600080fd5b85359450602086013567ffffffffffffffff80821115612c4a57600080fd5b612c5689838a01612bca565b90965094506040880135915080821115612c6f57600080fd5b50612c7c88828901612bca565b969995985093965092949392505050565b600060208284031215612c9f57600080fd5b8135612a7981612b04565b801515811461198f57600080fd5b60008060408385031215612ccb57600080fd5b8235612cd681612b04565b91506020830135612ce681612caa565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612d3057612d30612cf1565b604052919050565b60008060008060008060808789031215612d5157600080fd5b863567ffffffffffffffff80821115612d6957600080fd5b612d758a838b01612bca565b9098509650602091508882013581811115612d8f57600080fd5b612d9b8b828c01612bca565b90975095505060408901359350606089013581811115612dba57600080fd5b8901601f81018b13612dcb57600080fd5b803582811115612ddd57612ddd612cf1565b8060051b9250612dee848401612d07565b818152928201840192848101908d851115612e0857600080fd5b928501925b84841015612e325783359250612e2283612b04565b8282529285019290850190612e0d565b8096505050505050509295509295509295565b600067ffffffffffffffff821115612e5f57612e5f612cf1565b50601f01601f191660200190565b60008060008060808587031215612e8357600080fd5b8435612e8e81612b04565b93506020850135612e9e81612b04565b925060408501359150606085013567ffffffffffffffff811115612ec157600080fd5b8501601f81018713612ed257600080fd5b8035612ee5612ee082612e45565b612d07565b818152886020838501011115612efa57600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b602081526000825160806020840152612f3860a0840182612aac565b90506020840151601f19848303016040850152612f558282612aac565b91505060408401516060840152606084015160808401528091505092915050565b60008060408385031215612f8957600080fd5b8235612f9481612b04565b91506020830135612ce681612b04565b60008060008060008060808789031215612fbd57600080fd5b8635612fc881612b04565b955060208701359450604087013567ffffffffffffffff80821115612fec57600080fd5b612ff88a838b01612bca565b9096509450606089013591508082111561301157600080fd5b5061301e89828a01612bca565b979a9699509497509295939492505050565b600181811c9082168061304457607f821691505b60208210810361306457634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6040815260006130f4604083016006815265049534f544f560d41b602082015260400190565b828103602093840152601081526f4245455f534f554c5f4144445245535360801b928101929092525060400190565b6000613131612ee084612e45565b905082815283838301111561314557600080fd5b612a79836020830184612a80565b60006020828403121561316557600080fd5b815167ffffffffffffffff81111561317c57600080fd5b8201601f8101841361318d57600080fd5b611a7784825160208401613123565b6000602082840312156131ae57600080fd5b8151612a7981612b04565b6000602082840312156131cb57600080fd5b8151612a7981612caa565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b8385823760008482016000815283858237600093019283525090949350505050565b634e487b7160e01b600052601160045260246000fd5b60006001820161324f5761324f613227565b5060010190565b60408152600061327c604083016006815265049534f544f560d41b602082015260400190565b82810360209384015260148152734245455f4441544554494d455f4144445245535360601b928101929092525060400190565b6040815260006132c26040830185612aac565b82810360208401526132d48185612aac565b95945050505050565b604081526000613303604083016006815265049534f544f560d41b602082015260400190565b828103602093840152600f81526e10915157d4d09517d1115190555315608a1b928101929092525060400190565b60008151613343818560208601612a80565b9290920192915050565b6000835161335f818460208801612a80565b835190830190613373818360208801612a80565b64173539b7b760d91b9101908152600501949350505050565b60608152600061339f6060830185612aac565b82810380602085015260118252705b534f554c49442020202020202020205d60781b6020830152604081016040850152506132d46040820185612aac565b6060815260006133f06060830185612aac565b82810380602085015260118252705b544f4b454e494420202020202020205d60781b6020830152604081016040850152506132d46040820185612aac565b6060815260006134416060830185612aac565b82810380602085015260168252755b434c41494d2044415445202020202020202020205d60501b6020830152604081016040850152506132d46040820185612aac565b6060815260006134976060830185612aac565b82810380602085015260168252755b56414c49442044415445202020202020202020205d60501b6020830152604081016040850152506132d46040820185612aac565b6060815260006134ed6060830185612aac565b828103806020850152600b82526a5b49532056414c49443f5d60a81b6020830152604081016040850152506132d46040820185612aac565b6d7b226e616d65223a20225342542360901b8152845160009061354f81600e850160208a01612a80565b601f60fa1b600e91840191820152855161357081600f840160208a01612a80565b7f222c202273796d626f6c223a2022534254222c20226465736372697074696f6e600f92909101918201527f223a2022536f756c426f756e64546f6b656e2070726f7065727479222c202269602f8201527f6d616765223a22646174613a696d6167652f7376672b786d6c3b626173653634604f820152600b60fa1b606f8201528451613604816070840160208901612a80565b6f111610113232b9b4b3b732b9111d101160811b607092909101918201526136786136326080830186613331565b7f222c202261747472696275746573223a205b7b202274726169745f74797065228152731d101129b7bab6111610113b30b63ab2911d101160611b602082015260340190565b979650505050505050565b60008851613695818460208d01612a80565b8851908301906136a9818360208d01612a80565b8082019150507f227d2c7b202274726169745f74797065223a2022534254204944222c20227661815266363ab2911d101160c91b602082015287516136f5816027840160208c01612a80565b7f227d2c7b202274726169745f74797065223a2022436572746966696361746520602792909101918201527224b9b9bab2b9111610113b30b63ab2911d101160691b6047820152865161374f81605a840160208b01612a80565b7f227d2c7b202274726169745f74797065223a2022436c61696d2044617465222c605a92909101918201526a10113b30b63ab2911d101160a91b607a8201526138496138396138336137ed6137e76137aa608587018c613331565b7f227d2c7b202274726169745f74797065223a202256616c69642044617465222c81526a10113b30b63ab2911d101160a91b6020820152602b0190565b89613331565b7f227d2c7b202274726169745f74797065223a202243657274696669636174696f81527337102b30b634b2111610113b30b63ab2911d101160611b602082015260340190565b86613331565b63227d5d7d60e01b815260040190565b9a9950505050505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000081526000825161388f81601d850160208701612a80565b91909101601d0192915050565b6000828210156138ae576138ae613227565b500390565b600082198211156138c6576138c6613227565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6000826139425761394261391d565b500490565b6000826139565761395661391d565b500690565b600081600019048311821515161561397557613975613227565b500290565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906139ad90830184612aac565b9695505050505050565b6000602082840312156139c957600080fd5b8151612a7981612a46565b634e487b7160e01b600052603160045260246000fdfe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220d144b5f3b41a539b16777d6d1bbdaad0e3c37af2b8cb73a1c594ee109ce9e20564736f6c634300080d0033",
  "bytecodeSha1": "54e7b877796348b51dce093df62344a9b4be0827",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "soulBondToken",
  "coverageMap": {
    "branches": {
      "11": {
        "Base64.encode": {
          "126": [
            795,
            811,
            false
          ]
        }
      },
      "12": {},
      "13": {
        "Strings.toString": {
          "146": [
            665,
            675,
            false
          ]
        }
      },
      "14": {},
      "15": {},
      "20": {},
      "21": {},
      "24": {},
      "26": {
        "soulBondToken._beforeTokenTransfer": {
          "121": [
            3891,
            3907,
            false
          ],
          "122": [
            4089,
            4107,
            false
          ],
          "123": [
            4148,
            4193,
            true
          ],
          "124": [
            4315,
            4362,
            false
          ],
          "125": [
            4386,
            4431,
            true
          ]
        },
        "soulBondToken._claim": {
          "119": [
            2751,
            2769,
            true
          ],
          "120": [
            2773,
            2793,
            true
          ]
        },
        "soulBondToken.assign": {
          "118": [
            2366,
            2405,
            true
          ]
        },
        "soulBondToken.claim": {
          "110": [
            1964,
            2005,
            true
          ]
        },
        "soulBondToken.issue": {
          "111": [
            1184,
            1219,
            true
          ],
          "112": [
            1505,
            1524,
            false
          ]
        },
        "soulBondToken.tokenURI": {
          "113": [
            5061,
            5081,
            false
          ],
          "114": [
            5178,
            5198,
            false
          ],
          "115": [
            5427,
            5447,
            false
          ],
          "116": [
            6231,
            6238,
            true
          ],
          "117": [
            7288,
            7295,
            true
          ]
        }
      },
      "4": {
        "ERC721._checkOnERC721Received": {
          "138": [
            12784,
            12802,
            false
          ]
        },
        "ERC721._mint": {
          "137": [
            8947,
            8963,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "136": [
            6622,
            6669,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "135": [
            11407,
            11424,
            true
          ]
        },
        "ERC721._transfer": {
          "133": [
            10369,
            10400,
            true
          ],
          "134": [
            10460,
            10476,
            true
          ]
        },
        "ERC721.approve": {
          "127": [
            3604,
            3615,
            true
          ],
          "128": [
            3685,
            3706,
            true
          ],
          "129": [
            3710,
            3747,
            true
          ]
        },
        "ERC721.balanceOf": {
          "131": [
            2028,
            2047,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "132": [
            5418,
            5459,
            true
          ]
        },
        "ERC721.transferFrom": {
          "130": [
            4801,
            4842,
            true
          ]
        }
      },
      "5": {},
      "7": {
        "ERC721Enumerable._beforeTokenTransfer": {
          "141": [
            2823,
            2841,
            false
          ],
          "142": [
            2918,
            2928,
            false
          ],
          "143": [
            3015,
            3031,
            false
          ],
          "144": [
            3113,
            3123,
            false
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "145": [
            5154,
            5182,
            false
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "140": [
            1900,
            1938,
            true
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "139": [
            1415,
            1446,
            true
          ]
        }
      },
      "8": {},
      "9": {}
    },
    "statements": {
      "11": {
        "Base64.encode": {
          "79": [
            813,
            822
          ],
          "80": [
            3511,
            3524
          ]
        }
      },
      "12": {
        "Context._msgSender": {
          "7": [
            712,
            729
          ]
        }
      },
      "13": {
        "Strings.toString": {
          "73": [
            691,
            701
          ],
          "74": [
            807,
            815
          ],
          "75": [
            829,
            839
          ],
          "76": [
            941,
            952
          ],
          "77": [
            966,
            1022
          ],
          "78": [
            1036,
            1047
          ]
        }
      },
      "14": {
        "ERC165.supportsInterface": {
          "49": [
            930,
            977
          ]
        }
      },
      "15": {},
      "20": {},
      "21": {},
      "24": {},
      "26": {
        "soulBondToken._beforeTokenTransfer": {
          "81": [
            3923,
            3959
          ],
          "82": [
            4123,
            4259
          ],
          "83": [
            4290,
            4492
          ],
          "84": [
            4513,
            4558
          ]
        },
        "soulBondToken._claim": {
          "62": [
            2730,
            2844
          ],
          "63": [
            2899,
            2931
          ],
          "64": [
            2941,
            3099
          ],
          "65": [
            3109,
            3145
          ],
          "66": [
            3155,
            3177
          ],
          "67": [
            3188,
            3216
          ]
        },
        "soulBondToken.assign": {
          "46": [
            2358,
            2423
          ],
          "47": [
            2433,
            2478
          ]
        },
        "soulBondToken.claim": {
          "18": [
            1956,
            2019
          ],
          "19": [
            2029,
            2081
          ]
        },
        "soulBondToken.getToken": {
          "45": [
            3479,
            3506
          ]
        },
        "soulBondToken.getTokenIds": {
          "17": [
            3710,
            3735
          ]
        },
        "soulBondToken.issue": {
          "25": [
            1176,
            1241
          ],
          "26": [
            1461,
            1490
          ],
          "27": [
            1526,
            1551
          ],
          "28": [
            1643,
            1677
          ],
          "29": [
            1620,
            1623
          ]
        },
        "soulBondToken.tokenURI": {
          "33": [
            4713,
            4759
          ],
          "34": [
            5083,
            5128
          ],
          "35": [
            5254,
            5391
          ],
          "36": [
            5488,
            5506
          ],
          "37": [
            5525,
            5570
          ],
          "38": [
            5650,
            5776
          ],
          "39": [
            5786,
            5854
          ],
          "40": [
            5864,
            5998
          ],
          "41": [
            6008,
            6142
          ],
          "42": [
            6152,
            6273
          ],
          "43": [
            6728,
            7349
          ],
          "44": [
            7360,
            7545
          ]
        }
      },
      "4": {
        "ERC721._approve": {
          "51": [
            11033,
            11062
          ],
          "52": [
            11072,
            11123
          ]
        },
        "ERC721._checkOnERC721Received": {
          "91": [
            12826,
            12886
          ],
          "92": [
            12660,
            12718
          ],
          "93": [
            13145,
            13156
          ]
        },
        "ERC721._exists": {
          "32": [
            7115,
            7152
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "53": [
            7475,
            7571
          ]
        },
        "ERC721._mint": {
          "85": [
            8939,
            9000
          ],
          "86": [
            9010,
            9068
          ],
          "87": [
            9079,
            9124
          ],
          "88": [
            9135,
            9153
          ],
          "89": [
            9163,
            9184
          ],
          "90": [
            9195,
            9233
          ]
        },
        "ERC721._requireMinted": {
          "50": [
            11730,
            11783
          ]
        },
        "ERC721._safeTransfer": {
          "71": [
            6576,
            6604
          ],
          "72": [
            6614,
            6724
          ]
        },
        "ERC721._setApprovalForAll": {
          "68": [
            11399,
            11454
          ],
          "69": [
            11464,
            11510
          ],
          "70": [
            11520,
            11566
          ]
        },
        "ERC721._transfer": {
          "54": [
            10361,
            10442
          ],
          "55": [
            10452,
            10517
          ],
          "56": [
            10528,
            10567
          ],
          "57": [
            10629,
            10658
          ],
          "58": [
            10669,
            10689
          ],
          "59": [
            10699,
            10717
          ],
          "60": [
            10727,
            10748
          ],
          "61": [
            10759,
            10791
          ]
        },
        "ERC721.approve": {
          "6": [
            3596,
            3653
          ],
          "8": [
            3664,
            3835
          ],
          "9": [
            3846,
            3867
          ]
        },
        "ERC721.balanceOf": {
          "21": [
            2020,
            2093
          ],
          "22": [
            2103,
            2126
          ]
        },
        "ERC721.getApproved": {
          "4": [
            4030,
            4053
          ],
          "5": [
            4064,
            4095
          ]
        },
        "ERC721.isApprovedForAll": {
          "1": [
            4501,
            4543
          ]
        },
        "ERC721.name": {
          "3": [
            2549,
            2561
          ]
        },
        "ERC721.ownerOf": {
          "20": [
            2323,
            2379
          ]
        },
        "ERC721.safeTransferFrom": {
          "14": [
            5138,
            5177
          ],
          "30": [
            5410,
            5510
          ],
          "31": [
            5520,
            5558
          ]
        },
        "ERC721.setApprovalForAll": {
          "24": [
            4263,
            4315
          ]
        },
        "ERC721.supportsInterface": {
          "48": [
            1688,
            1863
          ]
        },
        "ERC721.symbol": {
          "23": [
            2713,
            2727
          ]
        },
        "ERC721.transferFrom": {
          "10": [
            4793,
            4893
          ],
          "11": [
            4904,
            4932
          ]
        }
      },
      "5": {},
      "7": {
        "ERC721Enumerable._addTokenToAllTokensEnumeration": {
          "95": [
            3978,
            4022
          ],
          "96": [
            4032,
            4056
          ]
        },
        "ERC721Enumerable._addTokenToOwnerEnumeration": {
          "108": [
            3621,
            3655
          ],
          "109": [
            3665,
            3700
          ]
        },
        "ERC721Enumerable._beforeTokenTransfer": {
          "94": [
            2857,
            2897
          ],
          "97": [
            2944,
            2991
          ],
          "98": [
            3047,
            3092
          ],
          "99": [
            3139,
            3179
          ]
        },
        "ERC721Enumerable._removeTokenFromAllTokensEnumeration": {
          "104": [
            6669,
            6705
          ],
          "105": [
            6773,
            6814
          ],
          "106": [
            6935,
            6966
          ],
          "107": [
            6976,
            6992
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "100": [
            5269,
            5313
          ],
          "101": [
            5385,
            5428
          ],
          "102": [
            5559,
            5592
          ],
          "103": [
            5602,
            5643
          ]
        },
        "ERC721Enumerable.supportsInterface": {
          "2": [
            1108,
            1205
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "15": [
            1892,
            1987
          ],
          "16": [
            1997,
            2021
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "12": [
            1407,
            1494
          ],
          "13": [
            1504,
            1537
          ]
        },
        "ERC721Enumerable.totalSupply": {
          "0": [
            1695,
            1719
          ]
        }
      },
      "8": {},
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.7.3/Base64",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/Context",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/ERC721",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/ERC721Enumerable",
    "IDDS",
    "IDateTime",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/IERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/IERC721Metadata",
    "ISoul",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/Strings"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "292:7262:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;990:222:7;;;;;;:::i;:::-;;:::i;:::-;;;565:14:27;;558:22;540:41;;528:2;513:18;990:222:7;;;;;;;;2470:98:4;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:27;;;1674:51;;1662:2;1647:18;3935:167:4;1528:203:27;3467:407:4;;;;;;:::i;:::-;;:::i;:::-;;1615:111:7;1702:10;:17;1615:111;;;2338:25:27;;;2326:2;2311:18;1615:111:7;2192:177:27;4612:327:4;;;;;;:::i;:::-;;:::i;1291:253:7:-;;;;;;:::i;:::-;;:::i;5005:179:4:-;;;;;;:::i;:::-;;:::i;1798:230:7:-;;;;;;:::i;:::-;;:::i;3519:223:26:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1714:374::-;;;;;;:::i;:::-;;:::i;2190:218:4:-;;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;:::i;:::-;;:::i;2632:102::-;;;:::i;4169:153::-;;;;;;:::i;:::-;;:::i;1001:707:26:-;;;;;;:::i;:::-;;:::i;5250:315:4:-;;;;;;:::i;:::-;;:::i;4571:2981:26:-;;;;;;:::i;:::-;;:::i;3229:284::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4388:162:4:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4508:25:4;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162;2094:391:26;;;;;;:::i;:::-;;:::i;990:222:7:-;1092:4;-1:-1:-1;;;;;;1115:50:7;;-1:-1:-1;;;1115:50:7;;:90;;;1169:36;1193:11;1169:23;:36::i;:::-;1108:97;990:222;-1:-1:-1;;990:222:7:o;2470:98:4:-;2524:13;2556:5;2549:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2470:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:4;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:4;;3935:167::o;3467:407::-;3547:13;3563:23;3578:7;3563:14;:23::i;:::-;3547:39;;3610:5;-1:-1:-1;;;;;3604:11:4;:2;-1:-1:-1;;;;;3604:11:4;;3596:57;;;;-1:-1:-1;;;3596:57:4;;11284:2:27;3596:57:4;;;11266:21:27;11323:2;11303:18;;;11296:30;11362:34;11342:18;;;11335:62;-1:-1:-1;;;11413:18:27;;;11406:31;11454:19;;3596:57:4;;;;;;;;;719:10:12;-1:-1:-1;;;;;3685:21:4;;;;:62;;-1:-1:-1;3710:37:4;3727:5;719:10:12;4388:162:4;:::i;3710:37::-;3664:171;;;;-1:-1:-1;;;3664:171:4;;11686:2:27;3664:171:4;;;11668:21:27;11725:2;11705:18;;;11698:30;11764:34;11744:18;;;11737:62;11835:32;11815:18;;;11808:60;11885:19;;3664:171:4;11484:426:27;3664:171:4;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3537:337;3467:407;;:::o;4612:327::-;4801:41;719:10:12;4834:7:4;4801:18;:41::i;:::-;4793:100;;;;-1:-1:-1;;;4793:100:4;;;;;;;:::i;:::-;4904:28;4914:4;4920:2;4924:7;4904:9;:28::i;1291:253:7:-;1388:7;1423:23;1440:5;1423:16;:23::i;:::-;1415:5;:31;1407:87;;;;-1:-1:-1;;;1407:87:7;;12532:2:27;1407:87:7;;;12514:21:27;12571:2;12551:18;;;12544:30;12610:34;12590:18;;;12583:62;-1:-1:-1;;;12661:18:27;;;12654:41;12712:19;;1407:87:7;12330:407:27;1407:87:7;-1:-1:-1;;;;;;1511:19:7;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1291:253::o;5005:179:4:-;5138:39;5155:4;5161:2;5165:7;5138:39;;;;;;;;;;;;:16;:39::i;1798:230:7:-;1873:7;1908:30;1702:10;:17;;1615:111;1908:30;1900:5;:38;1892:95;;;;-1:-1:-1;;;1892:95:7;;12944:2:27;1892:95:7;;;12926:21:27;12983:2;12963:18;;;12956:30;13022:34;13002:18;;;12995:62;-1:-1:-1;;;13073:18:27;;;13066:42;13125:19;;1892:95:7;12742:408:27;1892:95:7;2004:10;2015:5;2004:17;;;;;;;;:::i;:::-;;;;;;;;;1997:24;;1798:230;;;:::o;3519:223:26:-;3717:18;;;;:10;:18;;;;;;;;;3710:25;;;;;;;;;;;;;;;;;3603:16;;3710:25;;;3717:18;3710:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3519:223;;;:::o;1714:374::-;1884:3;;1898:37;;-1:-1:-1;;;1898:37:26;;1852:10;;-1:-1:-1;;;;;1884:3:26;;:13;;:3;;1898:7;;:37;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1898:37:26;;;;;;;;;;;;:::i;:::-;1884:52;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1964:41;;-1:-1:-1;;;1964:41:26;;;;;15432:25:27;;;1994:10:26;15473:18:27;;;15466:60;1852:94:26;;-1:-1:-1;;;;;;1964:20:26;;;;;15405:18:27;;1964:41:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1956:63;;;;-1:-1:-1;;;1956:63:26;;15989:2:27;1956:63:26;;;15971:21:27;16028:1;16008:18;;;16001:29;-1:-1:-1;;;16046:18:27;;;16039:39;16095:18;;1956:63:26;15787:332:27;1956:63:26;2029:52;2036:10;2048:7;2057;;2066:14;;2029:6;:52::i;:::-;1842:246;1714:374;;;;;:::o;2190:218:4:-;2262:7;2297:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2297:16:4;;2323:56;;;;-1:-1:-1;;;2323:56:4;;16326:2:27;2323:56:4;;;16308:21:27;16365:2;16345:18;;;16338:30;-1:-1:-1;;;16384:18:27;;;16377:54;16448:18;;2323:56:4;16124:348:27;1929:204:4;2001:7;-1:-1:-1;;;;;2028:19:4;;2020:73;;;;-1:-1:-1;;;2020:73:4;;16679:2:27;2020:73:4;;;16661:21:27;16718:2;16698:18;;;16691:30;16757:34;16737:18;;;16730:62;-1:-1:-1;;;16808:18:27;;;16801:39;16857:19;;2020:73:4;16477:405:27;2020:73:4;-1:-1:-1;;;;;;2110:16:4;;;;;:9;:16;;;;;;;1929:204::o;2632:102::-;2688:13;2720:7;2713:14;;;;;:::i;4169:153::-;4263:52;719:10:12;4296:8:4;4306;4263:18;:52::i;:::-;4169:153;;:::o;1001:707:26:-;1184:3;;:21;;-1:-1:-1;;;1184:21:26;;1209:10;;-1:-1:-1;;;;;1184:3:26;;:12;;:21;;1197:7;;;;1184:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1184:35:26;;1176:65;;;;-1:-1:-1;;;1176:65:26;;17484:2:27;1176:65:26;;;17466:21:27;17523:2;17503:18;;;17496:30;-1:-1:-1;;;17542:18:27;;;17535:47;17599:18;;1176:65:26;17282:341:27;1176:65:26;1382:13;1425:7;;1434:14;;1408:41;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1408:41:26;;;;;;;;;1398:52;;1408:41;1398:52;;;;1461:16;;;;:9;:16;;;;;;:29;;;1505:14;;1398:52;;-1:-1:-1;1505:19:26;;1501:201;;1526:18;;;;:11;:18;;;;;:25;;-1:-1:-1;;1526:25:26;1547:4;1526:25;;;1501:201;;;1585:9;1580:112;1604:7;:14;1600:1;:18;1580:112;;;1673:4;1643:8;:20;1652:7;1660:1;1652:10;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1643:20:26;;;;;;;;;;;;;;-1:-1:-1;1643:20:26;;;:27;;;;;;;;:34;;-1:-1:-1;;1643:34:26;;;;;;;;;;1620:3;;;;:::i;:::-;;;;1580:112;;;;1501:201;1166:542;1001:707;;;;;;:::o;5250:315:4:-;5418:41;719:10:12;5451:7:4;5418:18;:41::i;:::-;5410:100;;;;-1:-1:-1;;;5410:100:4;;;;;;;:::i;:::-;5520:38;5534:4;5540:2;5544:7;5553:4;5520:13;:38::i;:::-;5250:315;;;;:::o;4571:2981:26:-;7099:4:4;7122:16;;;:7;:16;;;;;;4684:13:26;;-1:-1:-1;;;;;7122:16:4;4713:46:26;;;;-1:-1:-1;;;4713:46:26;;18535:2:27;4713:46:26;;;18517:21:27;18574:2;18554:18;;;18547:30;-1:-1:-1;;;18593:18:27;;;18586:47;18650:18;;4713:46:26;18333:341:27;4713:46:26;4810:3;;4824:41;;-1:-1:-1;;;4824:41:26;;4770:14;;-1:-1:-1;;;;;4810:3:26;;:13;;:3;;4824:7;;:41;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4824:41:26;;;;;;;;;;;;:::i;:::-;4810:56;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4770:106;;4887:28;4918:11;:20;4930:7;4918:20;;;;;;;;;;;4887:51;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4887:51:26;;;-1:-1:-1;;4887:51:26;;;;;;;;;;;;;;;;;;;;;;4973:3;;4981:13;;4996:20;;;;4973:44;;-1:-1:-1;;;4973:44:26;;4887:51;;-1:-1:-1;;;;;;;;4973:3:26;;;;:7;;:44;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4973:44:26;;;;;;;;;;;;:::i;:::-;4948:69;;5027:19;5080:1;5061:9;:16;:20;5057:524;;;5092:3;;:36;;-1:-1:-1;;;5092:36:26;;-1:-1:-1;;;;;5092:3:26;;;;:7;;:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5092:36:26;;;;;;;;;;;;:::i;:::-;5083:45;;5057:524;;;5178:9;5188:1;5178:12;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;5178:12:26;-1:-1:-1;;;5178:20:26;5157:234;;5330:9;5341:18;:7;:16;:18::i;:::-;5313:56;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5254:137;;;;;;4571:2981;;;:::o;5157:234::-;5427:9;5437:1;5427:12;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;5427:12:26;-1:-1:-1;;;5427:20:26;5406:164;;-1:-1:-1;5497:9:26;5406:164;;;5534:3;;:36;;-1:-1:-1;;;5534:36:26;;-1:-1:-1;;;;;5534:3:26;;;;:7;;:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5534:36:26;;;;;;;;;;;;:::i;:::-;5525:45;;5406:164;5606:16;;;;5650:3;;5591:12;5735:19;;;:10;:19;;;;;;5625:15;5606:34;;;;-1:-1:-1;;;;;5650:3:26;;;;:12;;5676:6;;5735:30;;:28;:30::i;:::-;5650:126;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5650:126:26;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5786:3:26;;-1:-1:-1;;;;;5786:3:26;:12;5799:6;5834:18;:7;:16;:18::i;:::-;5786:68;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5786:68:26;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5864:3:26;;5970:16;;;;;5954:33;;-1:-1:-1;;;5954:33:26;;;;;2338:25:27;;;;-1:-1:-1;;;;;5864:3:26;;;;:12;;5890:6;;5954:15;;;;;2311:18:27;;5954:33:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5954:33:26;;;;;;;;;;;;:::i;:::-;5864:134;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5864:134:26;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6008:3:26;;6114:16;;;;6098:33;;-1:-1:-1;;;6098:33:26;;;;;2338:25:27;;;;-1:-1:-1;;;;;6008:3:26;;;;:12;;6034:6;;6098:15;;;;;2311:18:27;;6098:33:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6098:33:26;;;;;;;;;;;;:::i;:::-;6008:134;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6008:134:26;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6152:3:26;;-1:-1:-1;;;;;6152:3:26;:12;6178:6;6231:7;:31;;;;;;;;;;;;;;;-1:-1:-1;;;6231:31:26;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6231:31:26;;;;6152:121;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6152:121:26;;;;;;;;;;;;:::i;:::-;;6284:17;6364:18;:7;:16;:18::i;:::-;6413:6;:20;;;6560:21;6574:6;6560:13;:21::i;:::-;6627:13;;6304:414;;;;;;;6627:13;6304:414;;;:::i;:::-;;;;-1:-1:-1;;6304:414:26;;;;;;;;;6783:19;;;;:10;6304:414;6783:19;;;6304:414;;-1:-1:-1;6304:414:26;;6783:30;;:28;:30::i;:::-;6882:18;:7;:16;:18::i;:::-;6981:13;;7083:16;;;;;7067:33;;-1:-1:-1;;;7067:33:26;;;;;2338:25:27;;;;-1:-1:-1;;;;;7067:15:26;;;;;2311:18:27;;7067:33:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7067:33:26;;;;;;;;;;;;:::i;:::-;7189:16;;;;7173:33;;-1:-1:-1;;;7173:33:26;;;;;2338:25:27;;;;-1:-1:-1;;;;;7173:15:26;;;;;2311:18:27;;7173:33:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7173:33:26;;;;;;;;;;;;:::i;:::-;7288:7;:31;;;;;;;;;;;;;;;-1:-1:-1;;;7288:31:26;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7288:31:26;;;;6735:614;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6728:621;;7494:19;7508:4;7494:13;:19::i;:::-;7403:128;;;;;;;;:::i;:::-;;;;;;;;;;;;;7360:185;;;;;;;;4571:2981;;;:::o;3229:284::-;3311:21;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3311:21:26;3486:20;;;;:11;:20;;;;;;;3479:27;;;;;;;;;;;;3486:20;;3479:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3229:284;;;:::o;2094:391::-;2286:3;;2300:37;;-1:-1:-1;;;2300:37:26;;2254:10;;-1:-1:-1;;;;;2286:3:26;;:13;;:3;;2300:7;;:37;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2300:37:26;;;;;;;;;;;;:::i;:::-;2286:52;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2380:25;;-1:-1:-1;;;2380:25:26;;;;;2338::27;;;2254:94:26;;-1:-1:-1;;;;;;2380:16:26;;;;;2311:18:27;;2380:25:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2366:39:26;:10;-1:-1:-1;;;;;2366:39:26;;2358:65;;;;-1:-1:-1;;;2358:65:26;;30375:2:27;2358:65:26;;;30357:21:27;30414:2;30394:18;;;30387:30;-1:-1:-1;;;30433:18:27;;;30426:43;30486:18;;2358:65:26;30173:337:27;2358:65:26;2433:45;2440:3;2445:7;2454;;2463:14;;2433:6;:45::i;1570:300:4:-;1672:4;-1:-1:-1;;;;;;1707:40:4;;-1:-1:-1;;;1707:40:4;;:104;;-1:-1:-1;;;;;;;1763:48:4;;-1:-1:-1;;;1763:48:4;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:14;;;1827:36:4;829:155:14;11657:133:4;7099:4;7122:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7122:16:4;11730:53;;;;-1:-1:-1;;;11730:53:4;;16326:2:27;11730:53:4;;;16308:21:27;16365:2;16345:18;;;16338:30;-1:-1:-1;;;16384:18:27;;;16377:54;16448:18;;11730:53:4;16124:348:27;11730:53:4;11657:133;:::o;10959:171::-;11033:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11033:29:4;-1:-1:-1;;;;;11033:29:4;;;;;;;;:24;;11086:23;11033:24;11086:14;:23::i;:::-;-1:-1:-1;;;;;11077:46:4;;;;;;;;;;;10959:171;;:::o;7317:261::-;7410:4;7426:13;7442:23;7457:7;7442:14;:23::i;:::-;7426:39;;7494:5;-1:-1:-1;;;;;7483:16:4;:7;-1:-1:-1;;;;;7483:16:4;;:52;;;-1:-1:-1;;;;;;4508:25:4;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7503:32;7483:87;;;;7563:7;-1:-1:-1;;;;;7539:31:4;:20;7551:7;7539:11;:20::i;:::-;-1:-1:-1;;;;;7539:31:4;;7483:87;7475:96;7317:261;-1:-1:-1;;;;7317:261:4:o;10242:605::-;10396:4;-1:-1:-1;;;;;10369:31:4;:23;10384:7;10369:14;:23::i;:::-;-1:-1:-1;;;;;10369:31:4;;10361:81;;;;-1:-1:-1;;;10361:81:4;;30717:2:27;10361:81:4;;;30699:21:27;30756:2;30736:18;;;30729:30;30795:34;30775:18;;;30768:62;-1:-1:-1;;;30846:18:27;;;30839:35;30891:19;;10361:81:4;30515:401:27;10361:81:4;-1:-1:-1;;;;;10460:16:4;;10452:65;;;;-1:-1:-1;;;10452:65:4;;31123:2:27;10452:65:4;;;31105:21:27;31162:2;31142:18;;;31135:30;31201:34;31181:18;;;31174:62;-1:-1:-1;;;31252:18:27;;;31245:34;31296:19;;10452:65:4;30921:400:27;10452:65:4;10528:39;10549:4;10555:2;10559:7;10528:20;:39::i;:::-;10629:29;10646:1;10650:7;10629:8;:29::i;:::-;-1:-1:-1;;;;;10669:15:4;;;;;;:9;:15;;;;;:20;;10688:1;;10669:15;:20;;10688:1;;10669:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10699:13:4;;;;;;:9;:13;;;;;:18;;10716:1;;10699:13;:18;;10716:1;;10699:18;:::i;:::-;;;;-1:-1:-1;;10727:16:4;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10727:21:4;-1:-1:-1;;;;;10727:21:4;;;;;;;;;10764:27;;10727:16;;10764:27;;;;;;;3537:337;3467:407;;:::o;2491:732:26:-;2651:13;2694:7;;2703:14;;2677:41;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2677:41:26;;;;;;;;;2667:52;;2677:41;2667:52;;;;2751:18;;;;:11;:18;;;;;;2667:52;;-1:-1:-1;2751:18:26;;;:42;;-1:-1:-1;;;;;;2773:13:26;;;;;;:8;:13;;;;;;;;:20;;;;;;;;;;;2751:42;2730:114;;;;-1:-1:-1;;;2730:114:26;;31791:2:27;2730:114:26;;;31773:21:27;31830:2;31810:18;;;31803:30;31869:27;31849:18;;;31842:55;31914:18;;2730:114:26;31589:349:27;2730:114:26;2855:18;2876:13;1702:10:7;:17;;1615:111;2876:13:26;2899:22;;;;:10;:22;;;;;;;;;:32;;;2967:132;;;;;;;;;;;;;;;;;;;;;;;;;2855:34;;-1:-1:-1;2967:132:26;;;;2995:7;;;;;;2967:132;;2995:7;;;;2967:132;;;;;;;;;-1:-1:-1;;;2967:132:26;;;-1:-1:-1;2967:132:26;;;;;;;;;;;;;;;;;;;;;;;;;;;3016:14;;;;;;2967:132;;3016:14;;;;2967:132;;;;;;;;-1:-1:-1;2967:132:26;;;-1:-1:-1;;3044:15:26;2967:132;;;;;;;;3073:16;;;:9;:16;;2967:132;3073:16;;;;2967:132;;;;;;;2941:23;;;:11;:23;;;;;;:158;;;;:23;;:158;;-1:-1:-1;2941:23:26;;:158;;;;:::i;:::-;-1:-1:-1;2941:158:26;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2941:158:26;;;;;;;;;;;;;;;;;;;-1:-1:-1;3109:19:26;;;:10;:19;;;;;;;:36;;;;;;;;;;;;;;;;;3155:22;3161:3;3134:10;3155:5;:22::i;:::-;-1:-1:-1;;;;;;3188:13:26;;;3211:5;3188:13;;;:8;:13;;;;;;;;:20;;;;;;;;;;:28;;-1:-1:-1;;3188:28:26;;;-1:-1:-1;;;;;2491:732:26:o;11266:307:4:-;11416:8;-1:-1:-1;;;;;11407:17:4;:5;-1:-1:-1;;;;;11407:17:4;;11399:55;;;;-1:-1:-1;;;11399:55:4;;32145:2:27;11399:55:4;;;32127:21:27;32184:2;32164:18;;;32157:30;32223:27;32203:18;;;32196:55;32268:18;;11399:55:4;31943:349:27;11399:55:4;-1:-1:-1;;;;;11464:25:4;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11464:46:4;;;;;;;;;;11525:41;;540::27;;;11525::4;;513:18:27;11525:41:4;;;;;;;11266:307;;;:::o;6426:305::-;6576:28;6586:4;6592:2;6596:7;6576:9;:28::i;:::-;6622:47;6645:4;6651:2;6655:7;6664:4;6622:22;:47::i;:::-;6614:110;;;;-1:-1:-1;;;6614:110:4;;;;;;;:::i;392:703:13:-;448:13;665:5;674:1;665:10;661:51;;-1:-1:-1;;691:10:13;;;;;;;;;;;;-1:-1:-1;;;691:10:13;;;;;392:703::o;661:51::-;736:5;721:12;775:75;782:9;;775:75;;807:8;;;;:::i;:::-;;-1:-1:-1;829:10:13;;-1:-1:-1;837:2:13;829:10;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;881:17:13;;859:39;;908:150;915:10;;908:150;;941:11;951:1;941:11;;:::i;:::-;;-1:-1:-1;1009:10:13;1017:2;1009:5;:10;:::i;:::-;996:24;;:2;:24;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;966:56:13;;;;;;;;-1:-1:-1;1036:11:13;1045:2;1036:11;;:::i;:::-;;;908:150;;505:3026:11;563:13;795:4;:11;810:1;795:16;791:31;;-1:-1:-1;;813:9:11;;;;;;;;;-1:-1:-1;813:9:11;;;505:3026::o;791:31::-;872:19;894:6;;;;;;;;;;;;;;;;;872:28;;1303:20;1362:1;1343:4;:11;1357:1;1343:15;;;;:::i;:::-;1342:21;;;;:::i;:::-;1337:27;;:1;:27;:::i;:::-;1326:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1326:39:11;;1303:62;;1540:1;1533:5;1529:13;1641:2;1633:6;1629:15;1748:4;1799;1793:11;1787:4;1783:22;1711:1403;1832:6;1823:7;1820:19;1711:1403;;;1934:1;1925:7;1921:15;1910:26;;1972:7;1966:14;2615:4;2607:5;2603:2;2599:14;2595:25;2585:8;2581:40;2575:47;2564:9;2556:67;2668:1;2657:9;2653:17;2640:30;;2758:4;2750:5;2746:2;2742:14;2738:25;2728:8;2724:40;2718:47;2707:9;2699:67;2811:1;2800:9;2796:17;2783:30;;2900:4;2892:5;2889:1;2885:13;2881:24;2871:8;2867:39;2861:46;2850:9;2842:66;2953:1;2942:9;2938:17;2925:30;;3034:4;3027:5;3023:16;3013:8;3009:31;3003:38;2992:9;2984:58;;3087:1;3076:9;3072:17;3059:30;;1711:1403;;;1715:104;;3272:1;3265:4;3259:11;3255:19;3292:1;3287:120;;;;3425:1;3420:71;;;;3248:243;;3287:120;3339:4;3335:1;3324:9;3320:17;3312:32;3388:4;3384:1;3373:9;3369:17;3361:32;3287:120;;3420:71;3472:4;3468:1;3457:9;3453:17;3445:32;3248:243;-1:-1:-1;3518:6:11;;505:3026;-1:-1:-1;;;;;505:3026:11:o;3748:817:26:-;-1:-1:-1;;;;;3891:16:26;;3887:83;;3923:36;;-1:-1:-1;;;3923:36:26;;33465:2:27;3923:36:26;;;33447:21:27;33504:2;33484:18;;;33477:30;33543:28;33523:18;;;33516:56;33589:18;;3923:36:26;33263:350:27;3887:83:26;4012:3;;4026:37;;-1:-1:-1;;;4026:37:26;;3980:10;;-1:-1:-1;;;;;4012:3:26;;:13;;:3;;4026:7;;:37;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4026:37:26;;;;;;;;;;;;:::i;:::-;4012:52;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3980:94;-1:-1:-1;;;;;;4089:18:26;;4085:418;;4169:19;;;;:10;:19;;;;;;;;4148:45;;-1:-1:-1;;;4148:45:26;;;;;15432:25:27;;;;-1:-1:-1;;;;;15493:32:27;;;15473:18;;;15466:60;4148:20:26;;;;;15405:18:27;;4148:45:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4123:136;;;;-1:-1:-1;;;4123:136:26;;33820:2:27;4123:136:26;;;33802:21:27;;;33839:18;;;33832:30;33898:34;33878:18;;;33871:62;33950:18;;4123:136:26;33618:356:27;4123:136:26;4085:418;;;4336:19;;;;:10;:19;;;;;;;;4315:47;;-1:-1:-1;;;4315:47:26;;;;;15432:25:27;;;;-1:-1:-1;;;;;15493:32:27;;;15473:18;;;15466:60;4315:20:26;;;;;15405:18:27;;4315:47:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:116;;;;-1:-1:-1;4407:19:26;;;;:10;:19;;;;;;;;4386:45;;-1:-1:-1;;;4386:45:26;;;;;15432:25:27;;;;-1:-1:-1;;;;;15493:32:27;;;15473:18;;;15466:60;4386:20:26;;;;;15405:18:27;;4386:45:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4290:202;;;;-1:-1:-1;;;4290:202:26;;34181:2:27;4290:202:26;;;34163:21:27;34220:2;34200:18;;;34193:30;34259:29;34239:18;;;34232:57;34306:18;;4290:202:26;33979:351:27;4290:202:26;4513:45;4540:4;4546:2;4550:7;4513:26;:45::i;8868:427:4:-;-1:-1:-1;;;;;8947:16:4;;8939:61;;;;-1:-1:-1;;;8939:61:4;;34537:2:27;8939:61:4;;;34519:21:27;;;34556:18;;;34549:30;34615:34;34595:18;;;34588:62;34667:18;;8939:61:4;34335:356:27;8939:61:4;7099:4;7122:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7122:16:4;:30;9010:58;;;;-1:-1:-1;;;9010:58:4;;34898:2:27;9010:58:4;;;34880:21:27;34937:2;34917:18;;;34910:30;34976;34956:18;;;34949:58;35024:18;;9010:58:4;34696:352:27;9010:58:4;9079:45;9108:1;9112:2;9116:7;9079:20;:45::i;:::-;-1:-1:-1;;;;;9135:13:4;;;;;;:9;:13;;;;;:18;;9152:1;;9135:13;:18;;9152:1;;9135:18;:::i;:::-;;;;-1:-1:-1;;9163:16:4;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9163:21:4;-1:-1:-1;;;;;9163:21:4;;;;;;;;9200:33;;9163:16;;;9200:33;;9163:16;;9200:33;4169:153;;:::o;12342:831::-;12491:4;-1:-1:-1;;;;;12511:13:4;;1465:19:10;:23;12507:660:4;;12546:71;;-1:-1:-1;;;12546:71:4;;-1:-1:-1;;;;;12546:36:4;;;;;:71;;719:10:12;;12597:4:4;;12603:7;;12612:4;;12546:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12546:71:4;;;;;;;;-1:-1:-1;;12546:71:4;;;;;;;;;;;;:::i;:::-;;;12542:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12784:6;:13;12801:1;12784:18;12780:321;;12826:60;;-1:-1:-1;;;12826:60:4;;;;;;;:::i;12780:321::-;13053:6;13047:13;13038:6;13034:2;13030:15;13023:38;12542:573;-1:-1:-1;;;;;;12667:51:4;-1:-1:-1;;;12667:51:4;;-1:-1:-1;12660:58:4;;12507:660;-1:-1:-1;13152:4:4;12342:831;;;;;;:::o;2624:572:7:-;-1:-1:-1;;;;;2823:18:7;;2819:183;;2857:40;2889:7;4005:10;:17;;3978:24;;;;:15;:24;;;;;:44;;;4032:24;;;;;;;;;;;;3902:161;2857:40;2819:183;;;2926:2;-1:-1:-1;;;;;2918:10:7;:4;-1:-1:-1;;;;;2918:10:7;;2914:88;;2944:47;2977:4;2983:7;2944:32;:47::i;:::-;-1:-1:-1;;;;;3015:16:7;;3011:179;;3047:45;3084:7;3047:36;:45::i;3011:179::-;3119:4;-1:-1:-1;;;;;3113:10:7;:2;-1:-1:-1;;;;;3113:10:7;;3109:81;;3139:40;3167:2;3171:7;3139:27;:40::i;4680:970::-;4942:22;4992:1;4967:22;4984:4;4967:16;:22::i;:::-;:26;;;;:::i;:::-;5003:18;5024:26;;;:17;:26;;;;;;4942:51;;-1:-1:-1;5154:28:7;;;5150:323;;-1:-1:-1;;;;;5220:18:7;;5198:19;5220:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5269:30;;;;;;:44;;;5385:30;;:17;:30;;;;;:43;;;5150:323;-1:-1:-1;5566:26:7;;;;:17;:26;;;;;;;;5559:33;;;-1:-1:-1;;;;;5609:18:7;;;;;:12;:18;;;;;:34;;;;;;;5602:41;4680:970::o;5938:1061::-;6212:10;:17;6187:22;;6212:21;;6232:1;;6212:21;:::i;:::-;6243:18;6264:24;;;:15;:24;;;;;;6632:10;:26;;6187:46;;-1:-1:-1;6264:24:7;;6187:46;;6632:26;;;;;;:::i;:::-;;;;;;;;;6610:48;;6694:11;6669:10;6680;6669:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6773:28;;;:15;:28;;;;;;;:41;;;6942:24;;;;;6935:31;6976:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6009:990;;;5938:1061;:::o;3490:217::-;3574:14;3591:20;3608:2;3591:16;:20::i;:::-;-1:-1:-1;;;;;3621:16:7;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3665:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3490:217:7:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:27;-1:-1:-1;;;;;;88:32:27;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;:::-;384:5;150:245;-1:-1:-1;;;150:245:27:o;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:27;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:27;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:27:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:27;;1343:180;-1:-1:-1;1343:180:27:o;1736:131::-;-1:-1:-1;;;;;1811:31:27;;1801:42;;1791:70;;1857:1;1854;1847:12;1872:315;1940:6;1948;2001:2;1989:9;1980:7;1976:23;1972:32;1969:52;;;2017:1;2014;2007:12;1969:52;2056:9;2043:23;2075:31;2100:5;2075:31;:::i;:::-;2125:5;2177:2;2162:18;;;;2149:32;;-1:-1:-1;;;1872:315:27:o;2374:456::-;2451:6;2459;2467;2520:2;2508:9;2499:7;2495:23;2491:32;2488:52;;;2536:1;2533;2526:12;2488:52;2575:9;2562:23;2594:31;2619:5;2594:31;:::i;:::-;2644:5;-1:-1:-1;2701:2:27;2686:18;;2673:32;2714:33;2673:32;2714:33;:::i;:::-;2374:456;;2766:7;;-1:-1:-1;;;2820:2:27;2805:18;;;;2792:32;;2374:456::o;2835:632::-;3006:2;3058:21;;;3128:13;;3031:18;;;3150:22;;;2977:4;;3006:2;3229:15;;;;3203:2;3188:18;;;2977:4;3272:169;3286:6;3283:1;3280:13;3272:169;;;3347:13;;3335:26;;3416:15;;;;3381:12;;;;3308:1;3301:9;3272:169;;;-1:-1:-1;3458:3:27;;2835:632;-1:-1:-1;;;;;;2835:632:27:o;3472:348::-;3524:8;3534:6;3588:3;3581:4;3573:6;3569:17;3565:27;3555:55;;3606:1;3603;3596:12;3555:55;-1:-1:-1;3629:20:27;;3672:18;3661:30;;3658:50;;;3704:1;3701;3694:12;3658:50;3741:4;3733:6;3729:17;3717:29;;3793:3;3786:4;3777:6;3769;3765:19;3761:30;3758:39;3755:59;;;3810:1;3807;3800:12;3755:59;3472:348;;;;;:::o;3825:789::-;3926:6;3934;3942;3950;3958;4011:2;3999:9;3990:7;3986:23;3982:32;3979:52;;;4027:1;4024;4017:12;3979:52;4063:9;4050:23;4040:33;;4124:2;4113:9;4109:18;4096:32;4147:18;4188:2;4180:6;4177:14;4174:34;;;4204:1;4201;4194:12;4174:34;4243:59;4294:7;4285:6;4274:9;4270:22;4243:59;:::i;:::-;4321:8;;-1:-1:-1;4217:85:27;-1:-1:-1;4409:2:27;4394:18;;4381:32;;-1:-1:-1;4425:16:27;;;4422:36;;;4454:1;4451;4444:12;4422:36;;4493:61;4546:7;4535:8;4524:9;4520:24;4493:61;:::i;:::-;3825:789;;;;-1:-1:-1;3825:789:27;;-1:-1:-1;4573:8:27;;4467:87;3825:789;-1:-1:-1;;;3825:789:27:o;4619:247::-;4678:6;4731:2;4719:9;4710:7;4706:23;4702:32;4699:52;;;4747:1;4744;4737:12;4699:52;4786:9;4773:23;4805:31;4830:5;4805:31;:::i;4871:118::-;4957:5;4950:13;4943:21;4936:5;4933:32;4923:60;;4979:1;4976;4969:12;4994:382;5059:6;5067;5120:2;5108:9;5099:7;5095:23;5091:32;5088:52;;;5136:1;5133;5126:12;5088:52;5175:9;5162:23;5194:31;5219:5;5194:31;:::i;:::-;5244:5;-1:-1:-1;5301:2:27;5286:18;;5273:32;5314:30;5273:32;5314:30;:::i;:::-;5363:7;5353:17;;;4994:382;;;;;:::o;5381:127::-;5442:10;5437:3;5433:20;5430:1;5423:31;5473:4;5470:1;5463:15;5497:4;5494:1;5487:15;5513:275;5584:2;5578:9;5649:2;5630:13;;-1:-1:-1;;5626:27:27;5614:40;;5684:18;5669:34;;5705:22;;;5666:62;5663:88;;;5731:18;;:::i;:::-;5767:2;5760:22;5513:275;;-1:-1:-1;5513:275:27:o;5793:1668::-;5928:6;5936;5944;5952;5960;5968;6021:3;6009:9;6000:7;5996:23;5992:33;5989:53;;;6038:1;6035;6028:12;5989:53;6078:9;6065:23;6107:18;6148:2;6140:6;6137:14;6134:34;;;6164:1;6161;6154:12;6134:34;6203:59;6254:7;6245:6;6234:9;6230:22;6203:59;:::i;:::-;6281:8;;-1:-1:-1;6177:85:27;-1:-1:-1;6335:2:27;;-1:-1:-1;6375:18:27;;;6362:32;6406:16;;;6403:36;;;6435:1;6432;6425:12;6403:36;6474:61;6527:7;6516:8;6505:9;6501:24;6474:61;:::i;:::-;6554:8;;-1:-1:-1;6448:87:27;-1:-1:-1;;6636:2:27;6621:18;;6608:32;;-1:-1:-1;6693:2:27;6678:18;;6665:32;6709:16;;;6706:36;;;6738:1;6735;6728:12;6706:36;6761:24;;6816:4;6808:13;;6804:27;-1:-1:-1;6794:55:27;;6845:1;6842;6835:12;6794:55;6881:2;6868:16;6903:2;6899;6896:10;6893:36;;;6909:18;;:::i;:::-;6955:2;6952:1;6948:10;6938:20;;6978:28;7002:2;6998;6994:11;6978:28;:::i;:::-;7040:15;;;7110:11;;;7106:20;;;7071:12;;;;7138:19;;;7135:39;;;7170:1;7167;7160:12;7135:39;7194:11;;;;7214:217;7230:6;7225:3;7222:15;7214:217;;;7310:3;7297:17;7284:30;;7327:31;7352:5;7327:31;:::i;:::-;7371:18;;;7247:12;;;;7409;;;;7214:217;;;7450:5;7440:15;;;;;;;;5793:1668;;;;;;;;:::o;7466:186::-;7514:4;7547:18;7539:6;7536:30;7533:56;;;7569:18;;:::i;:::-;-1:-1:-1;7635:2:27;7614:15;-1:-1:-1;;7610:29:27;7641:4;7606:40;;7466:186::o;7657:1016::-;7752:6;7760;7768;7776;7829:3;7817:9;7808:7;7804:23;7800:33;7797:53;;;7846:1;7843;7836:12;7797:53;7885:9;7872:23;7904:31;7929:5;7904:31;:::i;:::-;7954:5;-1:-1:-1;8011:2:27;7996:18;;7983:32;8024:33;7983:32;8024:33;:::i;:::-;8076:7;-1:-1:-1;8130:2:27;8115:18;;8102:32;;-1:-1:-1;8185:2:27;8170:18;;8157:32;8212:18;8201:30;;8198:50;;;8244:1;8241;8234:12;8198:50;8267:22;;8320:4;8312:13;;8308:27;-1:-1:-1;8298:55:27;;8349:1;8346;8339:12;8298:55;8385:2;8372:16;8410:48;8426:31;8454:2;8426:31;:::i;:::-;8410:48;:::i;:::-;8481:2;8474:5;8467:17;8521:7;8516:2;8511;8507;8503:11;8499:20;8496:33;8493:53;;;8542:1;8539;8532:12;8493:53;8597:2;8592;8588;8584:11;8579:2;8572:5;8568:14;8555:45;8641:1;8636:2;8631;8624:5;8620:14;8616:23;8609:34;8662:5;8652:15;;;;;7657:1016;;;;;;;:::o;8678:691::-;8869:2;8858:9;8851:21;8832:4;8907:6;8901:13;8950:4;8945:2;8934:9;8930:18;8923:32;8978:52;9025:3;9014:9;9010:19;8996:12;8978:52;:::i;:::-;8964:66;;9079:2;9071:6;9067:15;9061:22;9151:2;9147:7;9135:9;9127:6;9123:22;9119:36;9114:2;9103:9;9099:18;9092:64;9179:41;9213:6;9197:14;9179:41;:::i;:::-;9165:55;;;9274:2;9266:6;9262:15;9256:22;9251:2;9240:9;9236:18;9229:50;9335:2;9327:6;9323:15;9317:22;9310:4;9299:9;9295:20;9288:52;9357:6;9349:14;;;8678:691;;;;:::o;9374:388::-;9442:6;9450;9503:2;9491:9;9482:7;9478:23;9474:32;9471:52;;;9519:1;9516;9509:12;9471:52;9558:9;9545:23;9577:31;9602:5;9577:31;:::i;:::-;9627:5;-1:-1:-1;9684:2:27;9669:18;;9656:32;9697:33;9656:32;9697:33;:::i;9767:925::-;9877:6;9885;9893;9901;9909;9917;9970:3;9958:9;9949:7;9945:23;9941:33;9938:53;;;9987:1;9984;9977:12;9938:53;10026:9;10013:23;10045:31;10070:5;10045:31;:::i;:::-;10095:5;-1:-1:-1;10147:2:27;10132:18;;10119:32;;-1:-1:-1;10202:2:27;10187:18;;10174:32;10225:18;10255:14;;;10252:34;;;10282:1;10279;10272:12;10252:34;10321:59;10372:7;10363:6;10352:9;10348:22;10321:59;:::i;:::-;10399:8;;-1:-1:-1;10295:85:27;-1:-1:-1;10487:2:27;10472:18;;10459:32;;-1:-1:-1;10503:16:27;;;10500:36;;;10532:1;10529;10522:12;10500:36;;10571:61;10624:7;10613:8;10602:9;10598:24;10571:61;:::i;:::-;9767:925;;;;-1:-1:-1;9767:925:27;;-1:-1:-1;9767:925:27;;10651:8;;9767:925;-1:-1:-1;;;9767:925:27:o;10697:380::-;10776:1;10772:12;;;;10819;;;10840:61;;10894:4;10886:6;10882:17;10872:27;;10840:61;10947:2;10939:6;10936:14;10916:18;10913:38;10910:161;;10993:10;10988:3;10984:20;10981:1;10974:31;11028:4;11025:1;11018:15;11056:4;11053:1;11046:15;10910:161;;10697:380;;;:::o;11915:410::-;12117:2;12099:21;;;12156:2;12136:18;;;12129:30;12195:34;12190:2;12175:18;;12168:62;-1:-1:-1;;;12261:2:27;12246:18;;12239:44;12315:3;12300:19;;11915:410::o;13155:127::-;13216:10;13211:3;13207:20;13204:1;13197:31;13247:4;13244:1;13237:15;13271:4;13268:1;13261:15;13446:554;13749:2;13738:9;13731:21;13712:4;13775:49;13820:2;13809:9;13805:18;13364:1;13352:14;;-1:-1:-1;;;13391:4:27;13382:14;;13375:32;13432:2;13423:12;;13287:154;13775:49;13860:22;;;13855:2;13840:18;;;13833:50;13907:2;13892:18;;-1:-1:-1;;;13926:15:27;;;13919:43;;;;-1:-1:-1;13991:2:27;13979:15;;13446:554::o;14005:307::-;14080:5;14109:52;14125:35;14153:6;14125:35;:::i;14109:52::-;14100:61;;14184:6;14177:5;14170:21;14224:3;14215:6;14210:3;14206:16;14203:25;14200:45;;;14241:1;14238;14231:12;14200:45;14254:52;14299:6;14292:4;14285:5;14281:16;14276:3;14254:52;:::i;14317:457::-;14396:6;14449:2;14437:9;14428:7;14424:23;14420:32;14417:52;;;14465:1;14462;14455:12;14417:52;14498:9;14492:16;14531:18;14523:6;14520:30;14517:50;;;14563:1;14560;14553:12;14517:50;14586:22;;14639:4;14631:13;;14627:27;-1:-1:-1;14617:55:27;;14668:1;14665;14658:12;14617:55;14691:77;14760:7;14755:2;14749:9;14744:2;14740;14736:11;14691:77;:::i;15002:251::-;15072:6;15125:2;15113:9;15104:7;15100:23;15096:32;15093:52;;;15141:1;15138;15131:12;15093:52;15173:9;15167:16;15192:31;15217:5;15192:31;:::i;15537:245::-;15604:6;15657:2;15645:9;15636:7;15632:23;15628:32;15625:52;;;15673:1;15670;15663:12;15625:52;15705:9;15699:16;15724:28;15746:5;15724:28;:::i;16887:390::-;17046:2;17035:9;17028:21;17085:6;17080:2;17069:9;17065:18;17058:34;17142:6;17134;17129:2;17118:9;17114:18;17101:48;17198:1;17169:22;;;17193:2;17165:31;;;17158:42;;;;17261:2;17240:15;;;-1:-1:-1;;17236:29:27;17221:45;17217:54;;16887:390;-1:-1:-1;16887:390:27:o;17628:428::-;17871:6;17863;17858:3;17845:33;17827:3;17906:6;17901:3;17897:16;17933:1;17929:2;17922:13;17969:6;17961;17957:2;17944:32;18030:1;17995:15;;18019:13;;;-1:-1:-1;17995:15:27;;17628:428;-1:-1:-1;;;;17628:428:27:o;18061:127::-;18122:10;18117:3;18113:20;18110:1;18103:31;18153:4;18150:1;18143:15;18177:4;18174:1;18167:15;18193:135;18232:3;18253:17;;;18250:43;;18273:18;;:::i;:::-;-1:-1:-1;18320:1:27;18309:13;;18193:135::o;18679:558::-;18982:2;18971:9;18964:21;18945:4;19008:49;19053:2;19042:9;19038:18;13364:1;13352:14;;-1:-1:-1;;;13391:4:27;13382:14;;13375:32;13432:2;13423:12;;13287:154;19008:49;19093:22;;;19088:2;19073:18;;;19066:50;19140:2;19125:18;;-1:-1:-1;;;19159:15:27;;;19152:47;;;;-1:-1:-1;19228:2:27;19216:15;;18679:558::o;19242:383::-;19439:2;19428:9;19421:21;19402:4;19465:45;19506:2;19495:9;19491:18;19483:6;19465:45;:::i;:::-;19558:9;19550:6;19546:22;19541:2;19530:9;19526:18;19519:50;19586:33;19612:6;19604;19586:33;:::i;:::-;19578:41;19242:383;-1:-1:-1;;;;;19242:383:27:o;19630:553::-;19933:2;19922:9;19915:21;19896:4;19959:49;20004:2;19993:9;19989:18;13364:1;13352:14;;-1:-1:-1;;;13391:4:27;13382:14;;13375:32;13432:2;13423:12;;13287:154;19959:49;20044:22;;;20039:2;20024:18;;;20017:50;20091:2;20076:18;;-1:-1:-1;;;20110:15:27;;;20103:42;;;;-1:-1:-1;20174:2:27;20162:15;;19630:553::o;20188:184::-;20229:3;20267:5;20261:12;20282:52;20327:6;20322:3;20315:4;20308:5;20304:16;20282:52;:::i;:::-;20350:16;;;;;20188:184;-1:-1:-1;;20188:184:27:o;20377:635::-;20655:3;20693:6;20687:13;20709:53;20755:6;20750:3;20743:4;20735:6;20731:17;20709:53;:::i;:::-;20825:13;;20784:16;;;;20847:57;20825:13;20784:16;20881:4;20869:17;;20847:57;:::i;:::-;-1:-1:-1;;;20926:20:27;;20955:22;;;21004:1;20993:13;;20377:635;-1:-1:-1;;;;20377:635:27:o;21017:637::-;21310:2;21299:9;21292:21;21273:4;21336:45;21377:2;21366:9;21362:18;21354:6;21336:45;:::i;:::-;21412:9;21404:6;21400:22;21458:2;21453;21442:9;21438:18;21431:30;21485:2;21477:6;21470:18;-1:-1:-1;;;21516:2:27;21508:6;21504:15;21497:44;21585:2;21581;21577:11;21572:2;21561:9;21557:18;21550:39;;21606:42;21644:2;21636:6;21632:15;21624:6;21606:42;:::i;21659:637::-;21952:2;21941:9;21934:21;21915:4;21978:45;22019:2;22008:9;22004:18;21996:6;21978:45;:::i;:::-;22054:9;22046:6;22042:22;22100:2;22095;22084:9;22080:18;22073:30;22127:2;22119:6;22112:18;-1:-1:-1;;;22158:2:27;22150:6;22146:15;22139:44;22227:2;22223;22219:11;22214:2;22203:9;22199:18;22192:39;;22248:42;22286:2;22278:6;22274:15;22266:6;22248:42;:::i;22764:642::-;23057:2;23046:9;23039:21;23020:4;23083:45;23124:2;23113:9;23109:18;23101:6;23083:45;:::i;:::-;23159:9;23151:6;23147:22;23205:2;23200;23189:9;23185:18;23178:30;23232:2;23224:6;23217:18;-1:-1:-1;;;23263:2:27;23255:6;23251:15;23244:49;23337:2;23333;23329:11;23324:2;23313:9;23309:18;23302:39;;23358:42;23396:2;23388:6;23384:15;23376:6;23358:42;:::i;23411:642::-;23704:2;23693:9;23686:21;23667:4;23730:45;23771:2;23760:9;23756:18;23748:6;23730:45;:::i;:::-;23806:9;23798:6;23794:22;23852:2;23847;23836:9;23832:18;23825:30;23879:2;23871:6;23864:18;-1:-1:-1;;;23910:2:27;23902:6;23898:15;23891:49;23984:2;23980;23976:11;23971:2;23960:9;23956:18;23949:39;;24005:42;24043:2;24035:6;24031:15;24023:6;24005:42;:::i;24058:631::-;24351:2;24340:9;24333:21;24314:4;24377:45;24418:2;24407:9;24403:18;24395:6;24377:45;:::i;:::-;24453:9;24445:6;24441:22;24499:2;24494;24483:9;24479:18;24472:30;24526:2;24518:6;24511:18;-1:-1:-1;;;24557:2:27;24549:6;24545:15;24538:38;24620:2;24616;24612:11;24607:2;24596:9;24592:18;24585:39;;24641:42;24679:2;24671:6;24667:15;24659:6;24641:42;:::i;24959:1807::-;-1:-1:-1;;;25757:53:27;;25833:13;;25739:3;;25855:62;25833:13;25905:2;25896:12;;25889:4;25877:17;;25855:62;:::i;:::-;-1:-1:-1;;;25976:2:27;25936:16;;;25968:11;;;25961:24;26010:13;;26032:63;26010:13;26081:2;26073:11;;26066:4;26054:17;;26032:63;:::i;:::-;26160:66;26155:2;26114:17;;;;26147:11;;;26140:87;26256:66;26251:2;26243:11;;26236:87;26352:66;26347:2;26339:11;;26332:87;-1:-1:-1;;;26443:3:27;26435:12;;26428:25;26478:13;;26500:64;26478:13;26549:3;26541:12;;26534:4;26522:17;;26500:64;:::i;:::-;-1:-1:-1;;;26624:3:27;26583:17;;;;26616:12;;;26609:66;26691:69;26721:38;26754:3;26746:12;;26738:6;26721:38;:::i;:::-;24771:66;24759:79;;-1:-1:-1;;;24863:2:27;24854:12;;24847:73;24945:2;24936:12;;24694:260;26691:69;26684:76;24959:1807;-1:-1:-1;;;;;;;24959:1807:27:o;27415:2300::-;28438:3;28476:6;28470:13;28492:53;28538:6;28533:3;28526:4;28518:6;28514:17;28492:53;:::i;:::-;28608:13;;28567:16;;;;28630:57;28608:13;28567:16;28664:4;28652:17;;28630:57;:::i;:::-;28720:8;28713:5;28709:20;28696:33;;;28752:66;28745:5;28738:81;28862:16;28857:3;28853:26;28846:4;28839:5;28835:16;28828:52;28911:6;28905:13;28927:66;28984:8;28979:2;28972:5;28968:14;28961:4;28953:6;28949:17;28927:66;:::i;:::-;29061;29056:2;29012:20;;;;29048:11;;;29041:87;-1:-1:-1;;;29152:2:27;29144:11;;29137:71;29233:13;;29255:63;29233:13;29304:2;29296:11;;29289:4;29277:17;;29255:63;:::i;:::-;29383:66;29378:2;29337:17;;;;29370:11;;;29363:87;-1:-1:-1;;;29474:3:27;29466:12;;29459:56;29531:178;29561:147;29586:121;29616:90;29641:64;29666:38;29699:3;29691:12;;29683:6;29666:38;:::i;:::-;26843:66;26831:79;;-1:-1:-1;;;26935:2:27;26926:12;;26919:56;27000:2;26991:12;;26771:238;29641:64;29633:6;29616:90;:::i;:::-;27091:66;27079:79;;-1:-1:-1;;;27183:2:27;27174:12;;27167:73;27265:2;27256:12;;27014:260;29586:121;29578:6;29561:147;:::i;:::-;-1:-1:-1;;;27344:33:27;;27402:1;27393:11;;27279:131;29531:178;29524:185;27415:2300;-1:-1:-1;;;;;;;;;;27415:2300:27:o;29720:448::-;29982:31;29977:3;29970:44;29952:3;30043:6;30037:13;30059:62;30114:6;30109:2;30104:3;30100:12;30093:4;30085:6;30081:17;30059:62;:::i;:::-;30141:16;;;;30159:2;30137:25;;29720:448;-1:-1:-1;;29720:448:27:o;31326:125::-;31366:4;31394:1;31391;31388:8;31385:34;;;31399:18;;:::i;:::-;-1:-1:-1;31436:9:27;;31326:125::o;31456:128::-;31496:3;31527:1;31523:6;31520:1;31517:13;31514:39;;;31533:18;;:::i;:::-;-1:-1:-1;31569:9:27;;31456:128::o;32297:414::-;32499:2;32481:21;;;32538:2;32518:18;;;32511:30;32577:34;32572:2;32557:18;;32550:62;-1:-1:-1;;;32643:2:27;32628:18;;32621:48;32701:3;32686:19;;32297:414::o;32716:127::-;32777:10;32772:3;32768:20;32765:1;32758:31;32808:4;32805:1;32798:15;32832:4;32829:1;32822:15;32848:120;32888:1;32914;32904:35;;32919:18;;:::i;:::-;-1:-1:-1;32953:9:27;;32848:120::o;32973:112::-;33005:1;33031;33021:35;;33036:18;;:::i;:::-;-1:-1:-1;33070:9:27;;32973:112::o;33090:168::-;33130:7;33196:1;33192;33188:6;33184:14;33181:1;33178:21;33173:1;33166:9;33159:17;33155:45;33152:71;;;33203:18;;:::i;:::-;-1:-1:-1;33243:9:27;;33090:168::o;35053:489::-;-1:-1:-1;;;;;35322:15:27;;;35304:34;;35374:15;;35369:2;35354:18;;35347:43;35421:2;35406:18;;35399:34;;;35469:3;35464:2;35449:18;;35442:31;;;35247:4;;35490:46;;35516:19;;35508:6;35490:46;:::i;:::-;35482:54;35053:489;-1:-1:-1;;;;;;35053:489:27:o;35547:249::-;35616:6;35669:2;35657:9;35648:7;35644:23;35640:32;35637:52;;;35685:1;35682;35675:12;35637:52;35717:9;35711:16;35736:30;35760:5;35736:30;:::i;35801:127::-;35862:10;35857:3;35853:20;35850:1;35843:31;35893:4;35890:1;35883:15;35917:4;35914:1;35907:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [
    292,
    7554
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F2A9E87 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xAFB6533A GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xAFB6533A EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xE4B50CB8 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xF4E99281 EQ PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5F2A9E87 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x57991D30 EQ PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x2A5C JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH2 0x35E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x2AD8 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AEB JUMP JUMPDEST PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15B JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B19 JUMP JUMPDEST PUSH2 0x417 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15B JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B45 JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x1EC CALLDATASIZE PUSH1 0x4 PUSH2 0x2B19 JUMP JUMPDEST PUSH2 0x562 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0x2B45 JUMP JUMPDEST PUSH2 0x5F8 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AEB JUMP JUMPDEST PUSH2 0x613 JUMP JUMPDEST PUSH2 0x22A PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AEB JUMP JUMPDEST PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x2B86 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C13 JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x258 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AEB JUMP JUMPDEST PUSH2 0x8A1 JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x26B CALLDATASIZE PUSH1 0x4 PUSH2 0x2C8D JUMP JUMPDEST PUSH2 0x901 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x987 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CB8 JUMP JUMPDEST PUSH2 0x996 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D38 JUMP JUMPDEST PUSH2 0x9A5 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0x2E6D JUMP JUMPDEST PUSH2 0xB4C JUMP JUMPDEST PUSH2 0x16C PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0x2AEB JUMP JUMPDEST PUSH2 0xB84 JUMP JUMPDEST PUSH2 0x2D7 PUSH2 0x2D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AEB JUMP JUMPDEST PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x2F1C JUMP JUMPDEST PUSH2 0x14F PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F76 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1B7 PUSH2 0x32E CALLDATASIZE PUSH1 0x4 PUSH2 0x2FA4 JUMP JUMPDEST PUSH2 0x173D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x358 JUMPI POP PUSH2 0x358 DUP3 PUSH2 0x18E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x36D SWAP1 PUSH2 0x3030 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x399 SWAP1 PUSH2 0x3030 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3BB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FB DUP3 PUSH2 0x1930 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x422 DUP3 PUSH2 0x8A1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x494 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x4B0 JUMPI POP PUSH2 0x4B0 DUP2 CALLER PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0x522 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48B JUMP JUMPDEST PUSH2 0x52C DUP4 DUP4 PUSH2 0x1992 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x53B CALLER DUP3 PUSH2 0x1A00 JUMP JUMPDEST PUSH2 0x557 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48B SWAP1 PUSH2 0x306A JUMP JUMPDEST PUSH2 0x52C DUP4 DUP4 DUP4 PUSH2 0x1A7F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56D DUP4 PUSH2 0x901 JUMP JUMPDEST DUP3 LT PUSH2 0x5CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x52C DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB4C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61E PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x681 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48B JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x694 JUMPI PUSH2 0x694 PUSH2 0x30B8 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x6FC JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x6E8 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3E10510B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2D888869 SWAP1 DUP3 SWAP1 PUSH4 0x3E10510B SWAP1 PUSH2 0x73F SWAP1 PUSH1 0x4 ADD PUSH2 0x30CE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x784 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A0 SWAP2 SWAP1 PUSH2 0x2AD8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7E1 SWAP2 SWAP1 PUSH2 0x319C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5D786A4F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xBAF0D49E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x82F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x853 SWAP2 SWAP1 PUSH2 0x31B9 JUMP JUMPDEST PUSH2 0x88B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x3737BA1037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48B JUMP JUMPDEST PUSH2 0x899 CALLER DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1C26 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x358 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x36D SWAP1 PUSH2 0x3030 JUMP JUMPDEST PUSH2 0x9A1 CALLER DUP4 DUP4 PUSH2 0x1E4D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2557A509 PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x4AAF4A12 SWAP1 PUSH2 0x9D7 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x31D6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA18 SWAP2 SWAP1 PUSH2 0x319C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xA62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x27B7363C903237B6B0B4B71037BBB732B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48B JUMP JUMPDEST PUSH1 0x0 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA7B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3205 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE SWAP1 SWAP4 MSTORE SWAP1 DUP3 KECCAK256 DUP6 SWAP1 SSTORE DUP4 MLOAD SWAP1 SWAP3 POP SWAP1 SUB PUSH2 0xACC JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xB43 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xB41 JUMPI PUSH1 0x1 PUSH1 0xF PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xAF0 JUMPI PUSH2 0xAF0 PUSH2 0x30B8 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP7 DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0xB39 DUP2 PUSH2 0x323D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xACF JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB56 CALLER DUP4 PUSH2 0x1A00 JUMP JUMPDEST PUSH2 0xB72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48B SWAP1 PUSH2 0x306A JUMP JUMPDEST PUSH2 0xB7E DUP5 DUP5 DUP5 DUP5 PUSH2 0x1F1B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x3737B732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48B JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3E10510B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2D888869 SWAP1 DUP3 SWAP1 PUSH4 0x3E10510B SWAP1 PUSH2 0xC16 SWAP1 PUSH1 0x4 ADD PUSH2 0x3256 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC33 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xC5B SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC77 SWAP2 SWAP1 PUSH2 0x2AD8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC94 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCB8 SWAP2 SWAP1 PUSH2 0x319C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0xCEA SWAP1 PUSH2 0x3030 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD16 SWAP1 PUSH2 0x3030 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD63 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD38 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD63 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD46 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0xD7C SWAP1 PUSH2 0x3030 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDA8 SWAP1 PUSH2 0x3030 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDF5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDCA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDF5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDD8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x40 SWAP2 DUP3 ADD MSTORE PUSH1 0x10 SLOAD DUP4 MLOAD SWAP3 DUP5 ADD MLOAD SWAP2 MLOAD PUSH4 0x3E10510B PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 SWAP5 POP PUSH1 0x0 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0x3E10510B SWAP3 PUSH2 0xE50 SWAP3 PUSH1 0x4 ADD PUSH2 0x32AF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xE95 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3153 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH1 0x1 DUP3 MLOAD LT ISZERO PUSH2 0xF1D JUMPI PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3E10510B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x3E10510B SWAP1 PUSH2 0xED1 SWAP1 PUSH1 0x4 ADD PUSH2 0x32DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEEE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xF16 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3153 JUMP JUMPDEST SWAP1 POP PUSH2 0x1027 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xF30 JUMPI PUSH2 0xF30 PUSH2 0x30B8 JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0xD PUSH1 0xFB SHL SUB PUSH2 0xF7E JUMPI DUP2 PUSH2 0xF53 DUP8 PUSH2 0x1F4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF64 SWAP3 SWAP2 SWAP1 PUSH2 0x334D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xF91 JUMPI PUSH2 0xF91 PUSH2 0x30B8 JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0xF PUSH1 0xFA SHL SUB PUSH2 0xFB1 JUMPI POP DUP1 PUSH2 0x1027 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3E10510B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x3E10510B SWAP1 PUSH2 0xFDF SWAP1 PUSH1 0x4 ADD PUSH2 0x32DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFFC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1024 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3153 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x10 SLOAD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP SWAP1 SWAP3 GT SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x7C4165F2 SWAP1 DUP5 SWAP1 PUSH2 0x1060 SWAP1 PUSH2 0x1F4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x107D SWAP3 SWAP2 SWAP1 PUSH2 0x338C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x109A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x10C2 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3153 JUMP JUMPDEST POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7C4165F2 DUP4 PUSH2 0x10DE DUP11 PUSH2 0x1F4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10FB SWAP3 SWAP2 SWAP1 PUSH2 0x33DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1118 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1140 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3153 JUMP JUMPDEST POP PUSH1 0x10 SLOAD PUSH1 0x40 DUP6 DUP2 ADD MLOAD SWAP1 MLOAD PUSH4 0x62480FD9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 PUSH4 0x7C4165F2 SWAP2 DUP6 SWAP2 DUP10 AND SWAP1 PUSH4 0x62480FD9 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x119B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x11C3 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E0 SWAP3 SWAP2 SWAP1 PUSH2 0x342E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1225 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3153 JUMP JUMPDEST POP PUSH1 0x10 SLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x62480FD9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 PUSH4 0x7C4165F2 SWAP2 DUP6 SWAP2 DUP10 AND SWAP1 PUSH4 0x62480FD9 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1280 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x12A8 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C5 SWAP3 SWAP2 SWAP1 PUSH2 0x3484 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x130A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3153 JUMP JUMPDEST POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7C4165F2 DUP4 DUP4 PUSH2 0x1349 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x1393D5081590531251 PUSH1 0xBA SHL DUP2 MSTORE POP PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x1590531251 PUSH1 0xDA SHL DUP2 MSTORE POP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1385 SWAP3 SWAP2 SWAP1 PUSH2 0x34DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x13CA SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3153 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x13D6 DUP9 PUSH2 0x1F4E JUMP JUMPDEST DUP6 PUSH1 0x20 ADD MLOAD PUSH2 0x13E4 DUP6 PUSH2 0x204F JUMP JUMPDEST DUP8 MLOAD PUSH1 0x40 MLOAD PUSH2 0x13F9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x20 ADD PUSH2 0x3525 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1423 SWAP1 PUSH2 0x1F4E JUMP JUMPDEST PUSH2 0x142C DUP11 PUSH2 0x1F4E JUMP JUMPDEST DUP8 MLOAD PUSH1 0x40 DUP1 DUP11 ADD MLOAD SWAP1 MLOAD PUSH4 0x62480FD9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND SWAP1 PUSH4 0x62480FD9 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1479 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x14A1 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3153 JUMP JUMPDEST PUSH1 0x60 DUP11 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x62480FD9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP1 PUSH4 0x62480FD9 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1514 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3153 JUMP JUMPDEST DUP8 PUSH2 0x1540 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x1393D5081590531251 PUSH1 0xBA SHL DUP2 MSTORE POP PUSH2 0x155F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x1590531251 PUSH1 0xDA SHL DUP2 MSTORE POP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1575 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3683 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x158F DUP2 PUSH2 0x204F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x159F SWAP2 SWAP1 PUSH2 0x3857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP7 POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15E6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x160E SWAP1 PUSH2 0x3030 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x163A SWAP1 PUSH2 0x3030 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1687 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x165C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1687 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x166A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x16A0 SWAP1 PUSH2 0x3030 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x16CC SWAP1 PUSH2 0x3030 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1719 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16EE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1719 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16FC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3E10510B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2D888869 SWAP1 DUP3 SWAP1 PUSH4 0x3E10510B SWAP1 PUSH2 0x1774 SWAP1 PUSH1 0x4 ADD PUSH2 0x30CE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1791 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x17B9 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D5 SWAP2 SWAP1 PUSH2 0x2AD8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1816 SWAP2 SWAP1 PUSH2 0x319C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2FB1E45 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x5F63C8A SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x185E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1882 SWAP2 SWAP1 PUSH2 0x319C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x18D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x37B7363C9037B832B930BA37B9 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48B JUMP JUMPDEST PUSH2 0xB43 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x1911 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x358 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x198F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x19C7 DUP3 PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A0C DUP4 PUSH2 0x8A1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1A53 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x1A77 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A6C DUP5 PUSH2 0x3F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A92 DUP3 PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1AF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1B58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48B JUMP JUMPDEST PUSH2 0x1B63 DUP4 DUP4 DUP4 PUSH2 0x21A2 JUMP JUMPDEST PUSH2 0x1B6E PUSH1 0x0 DUP3 PUSH2 0x1992 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1B97 SWAP1 DUP5 SWAP1 PUSH2 0x389C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1BC5 SWAP1 DUP5 SWAP1 PUSH2 0x38B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C3F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3205 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND DUP1 PUSH2 0x1C98 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1CE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646472657373206E6F7420696E20616C6C6F77206C69737400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CEF PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP11 SWAP1 SSTORE DUP2 MLOAD PUSH1 0xA0 PUSH1 0x1F DUP11 ADD DUP4 SWAP1 DIV SWAP1 SWAP3 MUL DUP2 ADD DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP3 ADD DUP9 DUP2 MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 DUP3 SWAP2 DUP10 SWAP1 DUP10 SWAP1 DUP2 SWAP1 DUP6 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP9 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP7 DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP TIMESTAMP PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 DUP4 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP6 DUP4 MSTORE PUSH1 0xC DUP2 MSTORE SWAP3 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD DUP1 MLOAD SWAP2 SWAP4 PUSH2 0x1DBB SWAP4 POP DUP5 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x29AD JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP1 MLOAD PUSH2 0x1DD4 SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x29AD JUMP JUMPDEST POP PUSH1 0x40 DUP3 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP2 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 ADD DUP2 SWAP1 SSTORE PUSH2 0x1E17 DUP9 DUP3 PUSH2 0x2516 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP9 DUP4 MSTORE SWAP8 SWAP1 MSTORE SWAP6 SWAP1 SWAP6 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1EAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1F26 DUP5 DUP5 DUP5 PUSH2 0x1A7F JUMP JUMPDEST PUSH2 0x1F32 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2664 JUMP JUMPDEST PUSH2 0xB7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48B SWAP1 PUSH2 0x38CB JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x1F75 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x1F9F JUMPI DUP1 PUSH2 0x1F89 DUP2 PUSH2 0x323D JUMP JUMPDEST SWAP2 POP PUSH2 0x1F98 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x3933 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F79 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FBA JUMPI PUSH2 0x1FBA PUSH2 0x2CF1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1FE4 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x1A77 JUMPI PUSH2 0x1FF9 PUSH1 0x1 DUP4 PUSH2 0x389C JUMP JUMPDEST SWAP2 POP PUSH2 0x2006 PUSH1 0xA DUP7 PUSH2 0x3947 JUMP JUMPDEST PUSH2 0x2011 SWAP1 PUSH1 0x30 PUSH2 0x38B3 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2026 JUMPI PUSH2 0x2026 PUSH2 0x30B8 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x2048 PUSH1 0xA DUP7 PUSH2 0x3933 JUMP JUMPDEST SWAP5 POP PUSH2 0x1FE8 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH1 0x0 SUB PUSH2 0x206E JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x39EB PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP5 MLOAD PUSH1 0x2 PUSH2 0x209D SWAP2 SWAP1 PUSH2 0x38B3 JUMP JUMPDEST PUSH2 0x20A7 SWAP2 SWAP1 PUSH2 0x3933 JUMP JUMPDEST PUSH2 0x20B2 SWAP1 PUSH1 0x4 PUSH2 0x395B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20CA JUMPI PUSH2 0x20CA PUSH2 0x2CF1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x20F4 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP3 ADD PUSH1 0x20 DUP3 ADD DUP6 DUP7 MLOAD DUP8 ADD JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x2160 JUMPI PUSH1 0x3 DUP3 ADD SWAP2 POP DUP2 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD DUP5 MSTORE8 POP PUSH1 0x1 DUP4 ADD SWAP3 POP PUSH2 0x2105 JUMP JUMPDEST POP POP PUSH1 0x3 DUP7 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0x217C JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x218F JUMPI PUSH2 0x2197 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 PUSH1 0x3D PUSH1 0x2 DUP4 SUB MSTORE8 PUSH2 0x2197 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x21F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53425420746F6B656E2063616E6E6F74206265206275726E6564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48B JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3E10510B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2D888869 SWAP1 DUP3 SWAP1 PUSH4 0x3E10510B SWAP1 PUSH2 0x222F SWAP1 PUSH1 0x4 ADD PUSH2 0x30CE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x224C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2274 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x3153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2290 SWAP2 SWAP1 PUSH2 0x2AD8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22D1 SWAP2 SWAP1 PUSH2 0x319C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x23B4 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x5D786A4F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0xBAF0D49E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x233F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2363 SWAP2 SWAP1 PUSH2 0x31B9 JUMP JUMPDEST PUSH2 0x23AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53425420746F6B656E20746F2061646472657373206E6F7420616C6C6F776564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48B JUMP JUMPDEST PUSH2 0x250B JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x5D786A4F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0xBAF0D49E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2412 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2436 SWAP2 SWAP1 PUSH2 0x31B9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24BF JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x5D786A4F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0xBAF0D49E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x249B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24BF SWAP2 SWAP1 PUSH2 0x31B9 JUMP JUMPDEST PUSH2 0x250B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53425420746F6B656E2063616E6E6F74207472616E7366657265640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48B JUMP JUMPDEST PUSH2 0xB7E DUP5 DUP5 DUP5 PUSH2 0x2765 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x256C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x25D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48B JUMP JUMPDEST PUSH2 0x25DD PUSH1 0x0 DUP4 DUP4 PUSH2 0x21A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2606 SWAP1 DUP5 SWAP1 PUSH2 0x38B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x275A JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x26A8 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x397A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x26E3 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x26E0 SWAP2 DUP2 ADD SWAP1 PUSH2 0x39B7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2740 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x2711 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2716 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x2738 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48B SWAP1 PUSH2 0x38CB JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x1A77 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x27C0 JUMPI PUSH2 0x27BB DUP2 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x27E3 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x27E3 JUMPI PUSH2 0x27E3 DUP4 DUP3 PUSH2 0x281D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x27FA JUMPI PUSH2 0x52C DUP2 PUSH2 0x28BA JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x52C JUMPI PUSH2 0x52C DUP3 DUP3 PUSH2 0x2969 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x282A DUP5 PUSH2 0x901 JUMP JUMPDEST PUSH2 0x2834 SWAP2 SWAP1 PUSH2 0x389C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x2887 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x28CC SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x389C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x28F4 JUMPI PUSH2 0x28F4 PUSH2 0x30B8 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2915 JUMPI PUSH2 0x2915 PUSH2 0x30B8 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x294D JUMPI PUSH2 0x294D PUSH2 0x39D4 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2974 DUP4 PUSH2 0x901 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x29B9 SWAP1 PUSH2 0x3030 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x29DB JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2A21 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x29F4 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2A21 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2A21 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2A21 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2A06 JUMP JUMPDEST POP PUSH2 0x2A2D SWAP3 SWAP2 POP PUSH2 0x2A31 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2A2D JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2A32 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x198F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2A79 DUP2 PUSH2 0x2A46 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A9B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2A83 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xB7E JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2AC4 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2A80 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2A79 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2AAC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x198F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2B37 DUP2 PUSH2 0x2B04 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2B5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2B65 DUP2 PUSH2 0x2B04 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2B75 DUP2 PUSH2 0x2B04 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2BBE JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2BA2 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2BDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2C0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2C2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2C4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C56 DUP10 DUP4 DUP11 ADD PUSH2 0x2BCA JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2C6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C7C DUP9 DUP3 DUP10 ADD PUSH2 0x2BCA JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2A79 DUP2 PUSH2 0x2B04 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x198F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2CD6 DUP2 PUSH2 0x2B04 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2CE6 DUP2 PUSH2 0x2CAA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2D30 JUMPI PUSH2 0x2D30 PUSH2 0x2CF1 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2D51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2D69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D75 DUP11 DUP4 DUP12 ADD PUSH2 0x2BCA JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x20 SWAP2 POP DUP9 DUP3 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2D8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D9B DUP12 DUP3 DUP13 ADD PUSH2 0x2BCA JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2DBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 ADD PUSH1 0x1F DUP2 ADD DUP12 SGT PUSH2 0x2DCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD DUP3 DUP2 GT ISZERO PUSH2 0x2DDD JUMPI PUSH2 0x2DDD PUSH2 0x2CF1 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP3 POP PUSH2 0x2DEE DUP5 DUP5 ADD PUSH2 0x2D07 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP3 DUP3 ADD DUP5 ADD SWAP3 DUP5 DUP2 ADD SWAP1 DUP14 DUP6 GT ISZERO PUSH2 0x2E08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP6 ADD SWAP3 JUMPDEST DUP5 DUP5 LT ISZERO PUSH2 0x2E32 JUMPI DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x2E22 DUP4 PUSH2 0x2B04 JUMP JUMPDEST DUP3 DUP3 MSTORE SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH2 0x2E0D JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2E5F JUMPI PUSH2 0x2E5F PUSH2 0x2CF1 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2E83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x2E8E DUP2 PUSH2 0x2B04 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x2E9E DUP2 PUSH2 0x2B04 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2EC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x2ED2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x2EE5 PUSH2 0x2EE0 DUP3 PUSH2 0x2E45 JUMP JUMPDEST PUSH2 0x2D07 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP9 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x2EFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH1 0x80 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2F38 PUSH1 0xA0 DUP5 ADD DUP3 PUSH2 0x2AAC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP5 DUP4 SUB ADD PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x2F55 DUP3 DUP3 PUSH2 0x2AAC JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2F94 DUP2 PUSH2 0x2B04 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2CE6 DUP2 PUSH2 0x2B04 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2FBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x2FC8 DUP2 PUSH2 0x2B04 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2FEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FF8 DUP11 DUP4 DUP12 ADD PUSH2 0x2BCA JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3011 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301E DUP10 DUP3 DUP11 ADD PUSH2 0x2BCA JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3044 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3064 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x1C881B9BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x30F4 PUSH1 0x40 DUP4 ADD PUSH1 0x6 DUP2 MSTORE PUSH6 0x49534F544F5 PUSH1 0xD4 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 SWAP4 DUP5 ADD MSTORE PUSH1 0x10 DUP2 MSTORE PUSH16 0x4245455F534F554C5F41444452455353 PUSH1 0x80 SHL SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3131 PUSH2 0x2EE0 DUP5 PUSH2 0x2E45 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x3145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A79 DUP4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2A80 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x317C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x318D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A77 DUP5 DUP3 MLOAD PUSH1 0x20 DUP5 ADD PUSH2 0x3123 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2A79 DUP2 PUSH2 0x2B04 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2A79 DUP2 PUSH2 0x2CAA JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE DUP2 DUP4 PUSH1 0x40 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP2 DUP4 ADD PUSH1 0x40 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP2 SWAP1 POP JUMP JUMPDEST DUP4 DUP6 DUP3 CALLDATACOPY PUSH1 0x0 DUP5 DUP3 ADD PUSH1 0x0 DUP2 MSTORE DUP4 DUP6 DUP3 CALLDATACOPY PUSH1 0x0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x324F JUMPI PUSH2 0x324F PUSH2 0x3227 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x327C PUSH1 0x40 DUP4 ADD PUSH1 0x6 DUP2 MSTORE PUSH6 0x49534F544F5 PUSH1 0xD4 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 SWAP4 DUP5 ADD MSTORE PUSH1 0x14 DUP2 MSTORE PUSH20 0x4245455F4441544554494D455F41444452455353 PUSH1 0x60 SHL SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x32C2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2AAC JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x32D4 DUP2 DUP6 PUSH2 0x2AAC JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3303 PUSH1 0x40 DUP4 ADD PUSH1 0x6 DUP2 MSTORE PUSH6 0x49534F544F5 PUSH1 0xD4 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 SWAP4 DUP5 ADD MSTORE PUSH1 0xF DUP2 MSTORE PUSH15 0x10915157D4D09517D1115190555315 PUSH1 0x8A SHL SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH2 0x3343 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2A80 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x335F DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x2A80 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x3373 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x2A80 JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x5 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x339F PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2AAC JUMP JUMPDEST DUP3 DUP2 SUB DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x11 DUP3 MSTORE PUSH17 0x5B534F554C49442020202020202020205D PUSH1 0x78 SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 DUP6 ADD MSTORE POP PUSH2 0x32D4 PUSH1 0x40 DUP3 ADD DUP6 PUSH2 0x2AAC JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x33F0 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2AAC JUMP JUMPDEST DUP3 DUP2 SUB DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x11 DUP3 MSTORE PUSH17 0x5B544F4B454E494420202020202020205D PUSH1 0x78 SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 DUP6 ADD MSTORE POP PUSH2 0x32D4 PUSH1 0x40 DUP3 ADD DUP6 PUSH2 0x2AAC JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3441 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2AAC JUMP JUMPDEST DUP3 DUP2 SUB DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x16 DUP3 MSTORE PUSH22 0x5B434C41494D2044415445202020202020202020205D PUSH1 0x50 SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 DUP6 ADD MSTORE POP PUSH2 0x32D4 PUSH1 0x40 DUP3 ADD DUP6 PUSH2 0x2AAC JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3497 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2AAC JUMP JUMPDEST DUP3 DUP2 SUB DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x16 DUP3 MSTORE PUSH22 0x5B56414C49442044415445202020202020202020205D PUSH1 0x50 SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 DUP6 ADD MSTORE POP PUSH2 0x32D4 PUSH1 0x40 DUP3 ADD DUP6 PUSH2 0x2AAC JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x34ED PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2AAC JUMP JUMPDEST DUP3 DUP2 SUB DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0xB DUP3 MSTORE PUSH11 0x5B49532056414C49443F5D PUSH1 0xA8 SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 DUP6 ADD MSTORE POP PUSH2 0x32D4 PUSH1 0x40 DUP3 ADD DUP6 PUSH2 0x2AAC JUMP JUMPDEST PUSH14 0x7B226E616D65223A202253425423 PUSH1 0x90 SHL DUP2 MSTORE DUP5 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x354F DUP2 PUSH1 0xE DUP6 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x2A80 JUMP JUMPDEST PUSH1 0x1F PUSH1 0xFA SHL PUSH1 0xE SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP6 MLOAD PUSH2 0x3570 DUP2 PUSH1 0xF DUP5 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x2A80 JUMP JUMPDEST PUSH32 0x222C202273796D626F6C223A2022534254222C20226465736372697074696F6E PUSH1 0xF SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH32 0x223A2022536F756C426F756E64546F6B656E2070726F7065727479222C202269 PUSH1 0x2F DUP3 ADD MSTORE PUSH32 0x6D616765223A22646174613A696D6167652F7376672B786D6C3B626173653634 PUSH1 0x4F DUP3 ADD MSTORE PUSH1 0xB PUSH1 0xFA SHL PUSH1 0x6F DUP3 ADD MSTORE DUP5 MLOAD PUSH2 0x3604 DUP2 PUSH1 0x70 DUP5 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x2A80 JUMP JUMPDEST PUSH16 0x111610113232B9B4B3B732B9111D1011 PUSH1 0x81 SHL PUSH1 0x70 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH2 0x3678 PUSH2 0x3632 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x3331 JUMP JUMPDEST PUSH32 0x222C202261747472696275746573223A205B7B202274726169745F7479706522 DUP2 MSTORE PUSH20 0x1D101129B7BAB6111610113B30B63AB2911D1011 PUSH1 0x61 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD SWAP1 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP9 MLOAD PUSH2 0x3695 DUP2 DUP5 PUSH1 0x20 DUP14 ADD PUSH2 0x2A80 JUMP JUMPDEST DUP9 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x36A9 DUP2 DUP4 PUSH1 0x20 DUP14 ADD PUSH2 0x2A80 JUMP JUMPDEST DUP1 DUP3 ADD SWAP2 POP POP PUSH32 0x227D2C7B202274726169745F74797065223A2022534254204944222C20227661 DUP2 MSTORE PUSH7 0x363AB2911D1011 PUSH1 0xC9 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP8 MLOAD PUSH2 0x36F5 DUP2 PUSH1 0x27 DUP5 ADD PUSH1 0x20 DUP13 ADD PUSH2 0x2A80 JUMP JUMPDEST PUSH32 0x227D2C7B202274726169745F74797065223A2022436572746966696361746520 PUSH1 0x27 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH19 0x24B9B9BAB2B9111610113B30B63AB2911D1011 PUSH1 0x69 SHL PUSH1 0x47 DUP3 ADD MSTORE DUP7 MLOAD PUSH2 0x374F DUP2 PUSH1 0x5A DUP5 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x2A80 JUMP JUMPDEST PUSH32 0x227D2C7B202274726169745F74797065223A2022436C61696D2044617465222C PUSH1 0x5A SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH11 0x10113B30B63AB2911D1011 PUSH1 0xA9 SHL PUSH1 0x7A DUP3 ADD MSTORE PUSH2 0x3849 PUSH2 0x3839 PUSH2 0x3833 PUSH2 0x37ED PUSH2 0x37E7 PUSH2 0x37AA PUSH1 0x85 DUP8 ADD DUP13 PUSH2 0x3331 JUMP JUMPDEST PUSH32 0x227D2C7B202274726169745F74797065223A202256616C69642044617465222C DUP2 MSTORE PUSH11 0x10113B30B63AB2911D1011 PUSH1 0xA9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2B ADD SWAP1 JUMP JUMPDEST DUP10 PUSH2 0x3331 JUMP JUMPDEST PUSH32 0x227D2C7B202274726169745F74797065223A202243657274696669636174696F DUP2 MSTORE PUSH20 0x37102B30B634B2111610113B30B63AB2911D1011 PUSH1 0x61 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 ADD SWAP1 JUMP JUMPDEST DUP7 PUSH2 0x3331 JUMP JUMPDEST PUSH4 0x227D5D7D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD SWAP1 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x388F DUP2 PUSH1 0x1D DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2A80 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1D ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x38AE JUMPI PUSH2 0x38AE PUSH2 0x3227 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x38C6 JUMPI PUSH2 0x38C6 PUSH2 0x3227 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3942 JUMPI PUSH2 0x3942 PUSH2 0x391D JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3956 JUMPI PUSH2 0x3956 PUSH2 0x391D JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3975 JUMPI PUSH2 0x3975 PUSH2 0x3227 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x39AD SWAP1 DUP4 ADD DUP5 PUSH2 0x2AAC JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2A79 DUP2 PUSH2 0x2A46 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID COINBASE TIMESTAMP NUMBER DIFFICULTY GASLIMIT CHAINID SELFBALANCE BASEFEE 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2FA2646970667358 0x22 SLT KECCAK256 0xD1 DIFFICULTY 0xB5 RETURN 0xB4 BYTE MSTORE8 SWAP12 AND PUSH24 0x7D6D1BBDAAD0E3C37AF2B8CB73A1C594EE109CE9E2056473 PUSH16 0x6C634300080D00330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        292,
        7554
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "CALLVALUE",
      "path": "26"
    },
    "6": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "7": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "8": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "12": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "REVERT",
      "path": "26"
    },
    "16": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "17": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "POP",
      "path": "26"
    },
    "18": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "21": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "LT",
      "path": "26"
    },
    "22": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x137"
    },
    "25": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "26": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "CALLDATALOAD",
      "path": "26"
    },
    "29": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "SHR",
      "path": "26"
    },
    "32": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "33": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x5F2A9E87"
    },
    "38": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "GT",
      "path": "26"
    },
    "39": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xB8"
    },
    "42": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "43": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "44": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xAFB6533A"
    },
    "49": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "GT",
      "path": "26"
    },
    "50": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x7C"
    },
    "53": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "54": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "55": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xAFB6533A"
    },
    "60": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "EQ",
      "path": "26"
    },
    "61": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x28B"
    },
    "64": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "65": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "66": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xB88D4FDE"
    },
    "71": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "EQ",
      "path": "26"
    },
    "72": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x29E"
    },
    "75": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "76": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "77": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xC87B56DD"
    },
    "82": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "EQ",
      "path": "26"
    },
    "83": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2B1"
    },
    "86": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "87": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "88": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xE4B50CB8"
    },
    "93": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "EQ",
      "path": "26"
    },
    "94": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2C4"
    },
    "97": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "98": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "99": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xE985E9C5"
    },
    "104": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "EQ",
      "path": "26"
    },
    "105": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2E4"
    },
    "108": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "109": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "110": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xF4E99281"
    },
    "115": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "EQ",
      "path": "26"
    },
    "116": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x320"
    },
    "119": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "120": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "123": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "REVERT",
      "path": "26"
    },
    "124": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "125": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "126": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x5F2A9E87"
    },
    "131": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "EQ",
      "path": "26"
    },
    "132": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x237"
    },
    "135": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "136": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "137": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x6352211E"
    },
    "142": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "EQ",
      "path": "26"
    },
    "143": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x24A"
    },
    "146": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "147": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "148": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x70A08231"
    },
    "153": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "EQ",
      "path": "26"
    },
    "154": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x25D"
    },
    "157": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "158": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "159": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x95D89B41"
    },
    "164": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "EQ",
      "path": "26"
    },
    "165": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x270"
    },
    "168": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "169": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "170": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xA22CB465"
    },
    "175": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "EQ",
      "path": "26"
    },
    "176": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x278"
    },
    "179": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "180": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "182": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "183": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "REVERT",
      "path": "26"
    },
    "184": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "185": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "186": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "GT",
      "path": "26"
    },
    "192": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xFF"
    },
    "195": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "196": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "197": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x23B872DD"
    },
    "202": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "EQ",
      "path": "26"
    },
    "203": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1CB"
    },
    "206": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "207": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "208": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x2F745C59"
    },
    "213": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "EQ",
      "path": "26"
    },
    "214": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1DE"
    },
    "217": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "218": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "219": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x42842E0E"
    },
    "224": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "EQ",
      "path": "26"
    },
    "225": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1F1"
    },
    "228": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "229": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "230": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x4F6CCCE7"
    },
    "235": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "EQ",
      "path": "26"
    },
    "236": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x204"
    },
    "239": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "240": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "241": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x57991D30"
    },
    "246": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "EQ",
      "path": "26"
    },
    "247": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x217"
    },
    "250": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "251": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "253": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "254": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "REVERT",
      "path": "26"
    },
    "255": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "256": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "257": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x1FFC9A7"
    },
    "262": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "EQ",
      "path": "26"
    },
    "263": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x13C"
    },
    "266": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "267": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "268": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x6FDDE03"
    },
    "273": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "EQ",
      "path": "26"
    },
    "274": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x164"
    },
    "277": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "278": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "279": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x81812FC"
    },
    "284": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "EQ",
      "path": "26"
    },
    "285": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x179"
    },
    "288": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "289": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "290": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x95EA7B3"
    },
    "295": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "EQ",
      "path": "26"
    },
    "296": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1A4"
    },
    "299": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "300": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "301": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x18160DDD"
    },
    "306": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "EQ",
      "path": "26"
    },
    "307": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1B9"
    },
    "310": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "311": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "312": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "314": {
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "DUP1",
      "path": "26"
    },
    "315": {
      "first_revert": true,
      "fn": null,
      "offset": [
        292,
        7554
      ],
      "op": "REVERT",
      "path": "26"
    },
    "316": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "317": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14F"
    },
    "320": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14A"
    },
    "323": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "324": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "326": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2A5C"
    },
    "329": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        990,
        1212
      ],
      "op": "JUMP",
      "path": "7"
    },
    "330": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "331": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x333"
    },
    "334": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        990,
        1212
      ],
      "op": "JUMP",
      "path": "7"
    },
    "335": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "336": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "338": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "339": {
      "op": "SWAP1"
    },
    "340": {
      "op": "ISZERO"
    },
    "341": {
      "op": "ISZERO"
    },
    "342": {
      "op": "DUP2"
    },
    "343": {
      "op": "MSTORE"
    },
    "344": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "346": {
      "op": "ADD"
    },
    "347": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "348": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "350": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "351": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "DUP1",
      "path": "7"
    },
    "352": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "353": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "SUB",
      "path": "7"
    },
    "354": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "355": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "RETURN",
      "path": "7"
    },
    "356": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "357": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16C"
    },
    "360": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x35E"
    },
    "363": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2470,
        2568
      ],
      "op": "JUMP",
      "path": "4"
    },
    "364": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "365": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "367": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "368": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15B"
    },
    "371": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "372": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "373": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2AD8"
    },
    "376": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2470,
        2568
      ],
      "op": "JUMP",
      "path": "4"
    },
    "377": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "378": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18C"
    },
    "381": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x187"
    },
    "384": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "385": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "387": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2AEB"
    },
    "390": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMP",
      "path": "4"
    },
    "391": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "392": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3F0"
    },
    "395": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMP",
      "path": "4"
    },
    "396": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "397": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "399": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "406": {
      "op": "SHL"
    },
    "407": {
      "op": "SUB"
    },
    "408": {
      "op": "SWAP1"
    },
    "409": {
      "op": "SWAP2"
    },
    "410": {
      "op": "AND"
    },
    "411": {
      "op": "DUP2"
    },
    "412": {
      "op": "MSTORE"
    },
    "413": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "415": {
      "op": "ADD"
    },
    "416": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15B"
    },
    "419": {
      "op": "JUMP"
    },
    "420": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "421": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B7"
    },
    "424": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B2"
    },
    "427": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "428": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "430": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2B19"
    },
    "433": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3467,
        3874
      ],
      "op": "JUMP",
      "path": "4"
    },
    "434": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "435": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x417"
    },
    "438": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3467,
        3874
      ],
      "op": "JUMP",
      "path": "4"
    },
    "439": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "440": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "STOP",
      "path": "4"
    },
    "441": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "442": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 0,
      "value": "0x8"
    },
    "444": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "445": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "446": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "448": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "449": {
      "op": "SWAP1"
    },
    "450": {
      "op": "DUP2"
    },
    "451": {
      "op": "MSTORE"
    },
    "452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "454": {
      "op": "ADD"
    },
    "455": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15B"
    },
    "458": {
      "op": "JUMP"
    },
    "459": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4939
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "460": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4939
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B7"
    },
    "463": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4939
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D9"
    },
    "466": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4939
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "467": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4939
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "469": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4939
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2B45"
    },
    "472": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4612,
        4939
      ],
      "op": "JUMP",
      "path": "4"
    },
    "473": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4939
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "474": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4939
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x531"
    },
    "477": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4612,
        4939
      ],
      "op": "JUMP",
      "path": "4"
    },
    "478": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "479": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BD"
    },
    "482": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1EC"
    },
    "485": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "486": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "488": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2B19"
    },
    "491": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMP",
      "path": "7"
    },
    "492": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "493": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x562"
    },
    "496": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMP",
      "path": "7"
    },
    "497": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5005,
        5184
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "498": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5005,
        5184
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B7"
    },
    "501": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5005,
        5184
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1FF"
    },
    "504": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5005,
        5184
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "505": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5005,
        5184
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "507": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5005,
        5184
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2B45"
    },
    "510": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5005,
        5184
      ],
      "op": "JUMP",
      "path": "4"
    },
    "511": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5005,
        5184
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "512": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5005,
        5184
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5F8"
    },
    "515": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5005,
        5184
      ],
      "op": "JUMP",
      "path": "4"
    },
    "516": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "517": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1BD"
    },
    "520": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x212"
    },
    "523": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "524": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "526": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2AEB"
    },
    "529": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMP",
      "path": "7"
    },
    "530": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "531": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x613"
    },
    "534": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMP",
      "path": "7"
    },
    "535": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3519,
        3742
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "536": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3519,
        3742
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x22A"
    },
    "539": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3519,
        3742
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x225"
    },
    "542": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3519,
        3742
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "543": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3519,
        3742
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "545": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3519,
        3742
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2AEB"
    },
    "548": {
      "fn": "soulBondToken.getTokenIds",
      "jump": "i",
      "offset": [
        3519,
        3742
      ],
      "op": "JUMP",
      "path": "26"
    },
    "549": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3519,
        3742
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "550": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3519,
        3742
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x6A6"
    },
    "553": {
      "fn": "soulBondToken.getTokenIds",
      "jump": "i",
      "offset": [
        3519,
        3742
      ],
      "op": "JUMP",
      "path": "26"
    },
    "554": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3519,
        3742
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "555": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3519,
        3742
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "557": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3519,
        3742
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "558": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3519,
        3742
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x15B"
    },
    "561": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3519,
        3742
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "562": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3519,
        3742
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "563": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3519,
        3742
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2B86"
    },
    "566": {
      "fn": "soulBondToken.getTokenIds",
      "jump": "i",
      "offset": [
        3519,
        3742
      ],
      "op": "JUMP",
      "path": "26"
    },
    "567": {
      "fn": "soulBondToken.claim",
      "offset": [
        1714,
        2088
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "568": {
      "fn": "soulBondToken.claim",
      "offset": [
        1714,
        2088
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1B7"
    },
    "571": {
      "fn": "soulBondToken.claim",
      "offset": [
        1714,
        2088
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x245"
    },
    "574": {
      "fn": "soulBondToken.claim",
      "offset": [
        1714,
        2088
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "575": {
      "fn": "soulBondToken.claim",
      "offset": [
        1714,
        2088
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "577": {
      "fn": "soulBondToken.claim",
      "offset": [
        1714,
        2088
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2C13"
    },
    "580": {
      "fn": "soulBondToken.claim",
      "jump": "i",
      "offset": [
        1714,
        2088
      ],
      "op": "JUMP",
      "path": "26"
    },
    "581": {
      "fn": "soulBondToken.claim",
      "offset": [
        1714,
        2088
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "582": {
      "fn": "soulBondToken.claim",
      "offset": [
        1714,
        2088
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x708"
    },
    "585": {
      "fn": "soulBondToken.claim",
      "jump": "i",
      "offset": [
        1714,
        2088
      ],
      "op": "JUMP",
      "path": "26"
    },
    "586": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2408
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "587": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2408
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18C"
    },
    "590": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2408
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x258"
    },
    "593": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2408
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "594": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2408
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "596": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2408
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2AEB"
    },
    "599": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2190,
        2408
      ],
      "op": "JUMP",
      "path": "4"
    },
    "600": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2408
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "601": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2408
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8A1"
    },
    "604": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2190,
        2408
      ],
      "op": "JUMP",
      "path": "4"
    },
    "605": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "606": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1BD"
    },
    "609": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x26B"
    },
    "612": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "613": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "615": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2C8D"
    },
    "618": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMP",
      "path": "4"
    },
    "619": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "620": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x901"
    },
    "623": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMP",
      "path": "4"
    },
    "624": {
      "fn": "ERC721.symbol",
      "offset": [
        2632,
        2734
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "625": {
      "fn": "ERC721.symbol",
      "offset": [
        2632,
        2734
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16C"
    },
    "628": {
      "fn": "ERC721.symbol",
      "offset": [
        2632,
        2734
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x987"
    },
    "631": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2632,
        2734
      ],
      "op": "JUMP",
      "path": "4"
    },
    "632": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "633": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B7"
    },
    "636": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x286"
    },
    "639": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "640": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "642": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2CB8"
    },
    "645": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMP",
      "path": "4"
    },
    "646": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "647": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x996"
    },
    "650": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMP",
      "path": "4"
    },
    "651": {
      "fn": "soulBondToken.issue",
      "offset": [
        1001,
        1708
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "652": {
      "fn": "soulBondToken.issue",
      "offset": [
        1001,
        1708
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1B7"
    },
    "655": {
      "fn": "soulBondToken.issue",
      "offset": [
        1001,
        1708
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x299"
    },
    "658": {
      "fn": "soulBondToken.issue",
      "offset": [
        1001,
        1708
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "659": {
      "fn": "soulBondToken.issue",
      "offset": [
        1001,
        1708
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "661": {
      "fn": "soulBondToken.issue",
      "offset": [
        1001,
        1708
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2D38"
    },
    "664": {
      "fn": "soulBondToken.issue",
      "jump": "i",
      "offset": [
        1001,
        1708
      ],
      "op": "JUMP",
      "path": "26"
    },
    "665": {
      "fn": "soulBondToken.issue",
      "offset": [
        1001,
        1708
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "666": {
      "fn": "soulBondToken.issue",
      "offset": [
        1001,
        1708
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x9A5"
    },
    "669": {
      "fn": "soulBondToken.issue",
      "jump": "i",
      "offset": [
        1001,
        1708
      ],
      "op": "JUMP",
      "path": "26"
    },
    "670": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "671": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B7"
    },
    "674": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2AC"
    },
    "677": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "678": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "680": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2E6D"
    },
    "683": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5250,
        5565
      ],
      "op": "JUMP",
      "path": "4"
    },
    "684": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "685": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB4C"
    },
    "688": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5250,
        5565
      ],
      "op": "JUMP",
      "path": "4"
    },
    "689": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4571,
        7552
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "690": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4571,
        7552
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x16C"
    },
    "693": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4571,
        7552
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2BF"
    },
    "696": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4571,
        7552
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "697": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4571,
        7552
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "699": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4571,
        7552
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2AEB"
    },
    "702": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        4571,
        7552
      ],
      "op": "JUMP",
      "path": "26"
    },
    "703": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4571,
        7552
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "704": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4571,
        7552
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xB84"
    },
    "707": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        4571,
        7552
      ],
      "op": "JUMP",
      "path": "26"
    },
    "708": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3229,
        3513
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "709": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3229,
        3513
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2D7"
    },
    "712": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3229,
        3513
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2D2"
    },
    "715": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3229,
        3513
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "716": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3229,
        3513
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "718": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3229,
        3513
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2AEB"
    },
    "721": {
      "fn": "soulBondToken.getToken",
      "jump": "i",
      "offset": [
        3229,
        3513
      ],
      "op": "JUMP",
      "path": "26"
    },
    "722": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3229,
        3513
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "723": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3229,
        3513
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x15BB"
    },
    "726": {
      "fn": "soulBondToken.getToken",
      "jump": "i",
      "offset": [
        3229,
        3513
      ],
      "op": "JUMP",
      "path": "26"
    },
    "727": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3229,
        3513
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "728": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3229,
        3513
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "730": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3229,
        3513
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "731": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3229,
        3513
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x15B"
    },
    "734": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3229,
        3513
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "735": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3229,
        3513
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "736": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3229,
        3513
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2F1C"
    },
    "739": {
      "fn": "soulBondToken.getToken",
      "jump": "i",
      "offset": [
        3229,
        3513
      ],
      "op": "JUMP",
      "path": "26"
    },
    "740": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "741": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14F"
    },
    "744": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2F2"
    },
    "747": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "748": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "750": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2F76"
    },
    "753": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMP",
      "path": "4"
    },
    "754": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "761": {
      "op": "SHL"
    },
    "762": {
      "op": "SUB"
    },
    "763": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 1
    },
    "764": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP3",
      "path": "4"
    },
    "765": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "AND",
      "path": "4"
    },
    "766": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4485,
        4489
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "768": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "769": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP2",
      "path": "4"
    },
    "770": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "771": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4526
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "773": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "775": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "776": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP2",
      "path": "4"
    },
    "777": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "778": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "780": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP1",
      "path": "4"
    },
    "781": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP4",
      "path": "4"
    },
    "782": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "783": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "784": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "785": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "786": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "AND",
      "path": "4"
    },
    "787": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "DUP3",
      "path": "4"
    },
    "788": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "789": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "790": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "791": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "792": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "793": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "794": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "795": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "797": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "AND",
      "path": "4"
    },
    "798": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "799": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMP",
      "path": "4"
    },
    "800": {
      "fn": "soulBondToken.assign",
      "offset": [
        2094,
        2485
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "801": {
      "fn": "soulBondToken.assign",
      "offset": [
        2094,
        2485
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1B7"
    },
    "804": {
      "fn": "soulBondToken.assign",
      "offset": [
        2094,
        2485
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x32E"
    },
    "807": {
      "fn": "soulBondToken.assign",
      "offset": [
        2094,
        2485
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "808": {
      "fn": "soulBondToken.assign",
      "offset": [
        2094,
        2485
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "810": {
      "fn": "soulBondToken.assign",
      "offset": [
        2094,
        2485
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2FA4"
    },
    "813": {
      "fn": "soulBondToken.assign",
      "jump": "i",
      "offset": [
        2094,
        2485
      ],
      "op": "JUMP",
      "path": "26"
    },
    "814": {
      "fn": "soulBondToken.assign",
      "offset": [
        2094,
        2485
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "815": {
      "fn": "soulBondToken.assign",
      "offset": [
        2094,
        2485
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x173D"
    },
    "818": {
      "fn": "soulBondToken.assign",
      "jump": "i",
      "offset": [
        2094,
        2485
      ],
      "op": "JUMP",
      "path": "26"
    },
    "819": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "820": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1092,
        1096
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "826": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "828": {
      "op": "SHL"
    },
    "829": {
      "op": "SUB"
    },
    "830": {
      "op": "NOT"
    },
    "831": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 2
    },
    "832": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "AND",
      "path": "7"
    },
    "833": {
      "op": "PUSH4",
      "value": "0x780E9D63"
    },
    "838": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "840": {
      "op": "SHL"
    },
    "841": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "EQ",
      "path": "7"
    },
    "842": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "DUP1",
      "path": "7"
    },
    "843": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1205
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x358"
    },
    "846": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1205
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "847": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1205
      ],
      "op": "POP",
      "path": "7"
    },
    "848": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1169,
        1205
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x358"
    },
    "851": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1193,
        1204
      ],
      "op": "DUP3",
      "path": "7"
    },
    "852": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1169,
        1192
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18E0"
    },
    "855": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        1169,
        1205
      ],
      "op": "JUMP",
      "path": "7"
    },
    "856": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1169,
        1205
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "857": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1108,
        1205
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "858": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "859": {
      "op": "POP"
    },
    "860": {
      "op": "POP"
    },
    "861": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "o",
      "offset": [
        990,
        1212
      ],
      "op": "JUMP",
      "path": "7"
    },
    "862": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "863": {
      "fn": "ERC721.name",
      "offset": [
        2524,
        2537
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "865": {
      "fn": "ERC721.name",
      "offset": [
        2556,
        2561
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 3,
      "value": "0x0"
    },
    "867": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP1",
      "path": "4"
    },
    "868": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "869": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x36D"
    },
    "872": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "873": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3030"
    },
    "876": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMP",
      "path": "4"
    },
    "877": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "878": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP1",
      "path": "4"
    },
    "879": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "881": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "ADD",
      "path": "4"
    },
    "882": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "884": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP1",
      "path": "4"
    },
    "885": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "886": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DIV",
      "path": "4"
    },
    "887": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "MUL",
      "path": "4"
    },
    "888": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "890": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "ADD",
      "path": "4"
    },
    "891": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "893": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "894": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "895": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP2",
      "path": "4"
    },
    "896": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "ADD",
      "path": "4"
    },
    "897": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "899": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "900": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP1",
      "path": "4"
    },
    "901": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "902": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "903": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "904": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP2",
      "path": "4"
    },
    "905": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP2",
      "path": "4"
    },
    "906": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "907": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "909": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "ADD",
      "path": "4"
    },
    "910": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP3",
      "path": "4"
    },
    "911": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP1",
      "path": "4"
    },
    "912": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "913": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x399"
    },
    "916": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "917": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3030"
    },
    "920": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMP",
      "path": "4"
    },
    "921": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "922": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP1",
      "path": "4"
    },
    "923": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "924": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3E6"
    },
    "927": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "928": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP1",
      "path": "4"
    },
    "929": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "931": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "LT",
      "path": "4"
    },
    "932": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3BB"
    },
    "935": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "936": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "939": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP1",
      "path": "4"
    },
    "940": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP4",
      "path": "4"
    },
    "941": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "942": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DIV",
      "path": "4"
    },
    "943": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "MUL",
      "path": "4"
    },
    "944": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP4",
      "path": "4"
    },
    "945": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "946": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "947": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "949": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "ADD",
      "path": "4"
    },
    "950": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "951": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3E6"
    },
    "954": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMP",
      "path": "4"
    },
    "955": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "956": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP3",
      "path": "4"
    },
    "957": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "ADD",
      "path": "4"
    },
    "958": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "959": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "960": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "962": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "963": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "965": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "967": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "968": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "969": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "970": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP2",
      "path": "4"
    },
    "971": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "972": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP2",
      "path": "4"
    },
    "973": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "974": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "975": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "977": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "ADD",
      "path": "4"
    },
    "978": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "979": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "981": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "ADD",
      "path": "4"
    },
    "982": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP1",
      "path": "4"
    },
    "983": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP4",
      "path": "4"
    },
    "984": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "GT",
      "path": "4"
    },
    "985": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3C9"
    },
    "988": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "989": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP3",
      "path": "4"
    },
    "990": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "991": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SUB",
      "path": "4"
    },
    "992": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "994": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "AND",
      "path": "4"
    },
    "995": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP3",
      "path": "4"
    },
    "996": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "ADD",
      "path": "4"
    },
    "997": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "998": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "999": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "POP",
      "path": "4"
    },
    "1000": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "POP",
      "path": "4"
    },
    "1001": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "POP",
      "path": "4"
    },
    "1002": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "POP",
      "path": "4"
    },
    "1003": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "POP",
      "path": "4"
    },
    "1004": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1005": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "POP",
      "path": "4"
    },
    "1006": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1007": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2470,
        2568
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1008": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1009": {
      "fn": "ERC721.getApproved",
      "offset": [
        4011,
        4018
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1011": {
      "fn": "ERC721.getApproved",
      "offset": [
        4030,
        4053
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 4,
      "value": "0x3FB"
    },
    "1014": {
      "fn": "ERC721.getApproved",
      "offset": [
        4045,
        4052
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1015": {
      "fn": "ERC721.getApproved",
      "offset": [
        4030,
        4044
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1930"
    },
    "1018": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4030,
        4053
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1019": {
      "fn": "ERC721.getApproved",
      "offset": [
        4030,
        4053
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1020": {
      "op": "POP"
    },
    "1021": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 5,
      "value": "0x0"
    },
    "1023": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1024": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1025": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1026": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4086
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1028": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1030": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1031": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1033": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1034": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1035": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1042": {
      "op": "SHL"
    },
    "1043": {
      "op": "SUB"
    },
    "1044": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "AND",
      "path": "4"
    },
    "1045": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1046": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1047": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1048": {
      "fn": "ERC721.approve",
      "offset": [
        3547,
        3560
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1050": {
      "fn": "ERC721.approve",
      "offset": [
        3563,
        3586
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x422"
    },
    "1053": {
      "fn": "ERC721.approve",
      "offset": [
        3578,
        3585
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1054": {
      "fn": "ERC721.approve",
      "offset": [
        3563,
        3577
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8A1"
    },
    "1057": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3563,
        3586
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1058": {
      "fn": "ERC721.approve",
      "offset": [
        3563,
        3586
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1059": {
      "fn": "ERC721.approve",
      "offset": [
        3547,
        3586
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1060": {
      "fn": "ERC721.approve",
      "offset": [
        3547,
        3586
      ],
      "op": "POP",
      "path": "4"
    },
    "1061": {
      "fn": "ERC721.approve",
      "offset": [
        3610,
        3615
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 6
    },
    "1062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1068": {
      "op": "SHL"
    },
    "1069": {
      "op": "SUB"
    },
    "1070": {
      "fn": "ERC721.approve",
      "offset": [
        3604,
        3615
      ],
      "op": "AND",
      "path": "4"
    },
    "1071": {
      "fn": "ERC721.approve",
      "offset": [
        3604,
        3606
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1076": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1078": {
      "op": "SHL"
    },
    "1079": {
      "op": "SUB"
    },
    "1080": {
      "fn": "ERC721.approve",
      "offset": [
        3604,
        3615
      ],
      "op": "AND",
      "path": "4"
    },
    "1081": {
      "branch": 127,
      "fn": "ERC721.approve",
      "offset": [
        3604,
        3615
      ],
      "op": "SUB",
      "path": "4"
    },
    "1082": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x494"
    },
    "1085": {
      "branch": 127,
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1086": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1088": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1089": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1093": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1095": {
      "op": "SHL"
    },
    "1096": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1097": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1100": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1102": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1103": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "ADD",
      "path": "4"
    },
    "1104": {
      "op": "MSTORE"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1109": {
      "op": "DUP3"
    },
    "1110": {
      "op": "ADD"
    },
    "1111": {
      "op": "MSTORE"
    },
    "1112": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1147": {
      "op": "DUP3"
    },
    "1148": {
      "op": "ADD"
    },
    "1149": {
      "op": "MSTORE"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "1154": {
      "op": "SHL"
    },
    "1155": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1157": {
      "op": "DUP3"
    },
    "1158": {
      "op": "ADD"
    },
    "1159": {
      "op": "MSTORE"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1162": {
      "op": "ADD"
    },
    "1163": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1164": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1166": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1167": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1168": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1169": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "SUB",
      "path": "4"
    },
    "1170": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1171": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "4"
    },
    "1172": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1173": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12",
      "statement": 7
    },
    "1174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1180": {
      "op": "SHL"
    },
    "1181": {
      "op": "SUB"
    },
    "1182": {
      "fn": "ERC721.approve",
      "offset": [
        3685,
        3706
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 8
    },
    "1183": {
      "fn": "ERC721.approve",
      "offset": [
        3685,
        3706
      ],
      "op": "AND",
      "path": "4"
    },
    "1184": {
      "fn": "ERC721.approve",
      "offset": [
        3685,
        3706
      ],
      "op": "EQ",
      "path": "4"
    },
    "1185": {
      "branch": 128,
      "fn": "ERC721.approve",
      "offset": [
        3685,
        3706
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1186": {
      "fn": "ERC721.approve",
      "offset": [
        3685,
        3747
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4B0"
    },
    "1189": {
      "branch": 128,
      "fn": "ERC721.approve",
      "offset": [
        3685,
        3747
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1190": {
      "op": "POP"
    },
    "1191": {
      "fn": "ERC721.approve",
      "offset": [
        3710,
        3747
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4B0"
    },
    "1194": {
      "fn": "ERC721.approve",
      "offset": [
        3727,
        3732
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1195": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1196": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2F2"
    },
    "1199": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1200": {
      "branch": 129,
      "fn": "ERC721.approve",
      "offset": [
        3710,
        3747
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1201": {
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x522"
    },
    "1204": {
      "branch": 129,
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1205": {
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1207": {
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1208": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1212": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1214": {
      "op": "SHL"
    },
    "1215": {
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1216": {
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1219": {
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1221": {
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1222": {
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "ADD",
      "path": "4"
    },
    "1223": {
      "op": "MSTORE"
    },
    "1224": {
      "op": "PUSH1",
      "value": "0x3E"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1228": {
      "op": "DUP3"
    },
    "1229": {
      "op": "ADD"
    },
    "1230": {
      "op": "MSTORE"
    },
    "1231": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1266": {
      "op": "DUP3"
    },
    "1267": {
      "op": "ADD"
    },
    "1268": {
      "op": "MSTORE"
    },
    "1269": {
      "op": "PUSH32",
      "value": "0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000"
    },
    "1302": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1304": {
      "op": "DUP3"
    },
    "1305": {
      "op": "ADD"
    },
    "1306": {
      "op": "MSTORE"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1309": {
      "op": "ADD"
    },
    "1310": {
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x48B"
    },
    "1313": {
      "op": "JUMP"
    },
    "1314": {
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1315": {
      "fn": "ERC721.approve",
      "offset": [
        3846,
        3867
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 9,
      "value": "0x52C"
    },
    "1318": {
      "fn": "ERC721.approve",
      "offset": [
        3855,
        3857
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1319": {
      "fn": "ERC721.approve",
      "offset": [
        3859,
        3866
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1320": {
      "fn": "ERC721.approve",
      "offset": [
        3846,
        3854
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1992"
    },
    "1323": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3846,
        3867
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1324": {
      "fn": "ERC721.approve",
      "offset": [
        3846,
        3867
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1325": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3874
      ],
      "op": "POP",
      "path": "4"
    },
    "1326": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "POP",
      "path": "4"
    },
    "1327": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "POP",
      "path": "4"
    },
    "1328": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3467,
        3874
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1329": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4939
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1330": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4801,
        4842
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 10,
      "value": "0x53B"
    },
    "1333": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "1334": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4834,
        4841
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1335": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4801,
        4819
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A00"
    },
    "1338": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4801,
        4842
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1339": {
      "branch": 130,
      "fn": "ERC721.transferFrom",
      "offset": [
        4801,
        4842
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1340": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x557"
    },
    "1343": {
      "branch": 130,
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1344": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1346": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1347": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1353": {
      "op": "SHL"
    },
    "1354": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1355": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1356": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1358": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "ADD",
      "path": "4"
    },
    "1359": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x48B"
    },
    "1362": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1363": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x306A"
    },
    "1366": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4793,
        4893
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1367": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1368": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4904,
        4932
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 11,
      "value": "0x52C"
    },
    "1371": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4914,
        4918
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1372": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4920,
        4922
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1373": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4924,
        4931
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1374": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4904,
        4913
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A7F"
    },
    "1377": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4904,
        4932
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1378": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1379": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1388,
        1395
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1381": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1423,
        1446
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 12,
      "value": "0x56D"
    },
    "1384": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1440,
        1445
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1385": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1423,
        1439
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x901"
    },
    "1388": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1423,
        1446
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1389": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1423,
        1446
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1390": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1415,
        1420
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1391": {
      "branch": 139,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1415,
        1446
      ],
      "op": "LT",
      "path": "7"
    },
    "1392": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5CF"
    },
    "1395": {
      "branch": 139,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1396": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1398": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1399": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1405": {
      "op": "SHL"
    },
    "1406": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1407": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1410": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1412": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1413": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "ADD",
      "path": "7"
    },
    "1414": {
      "op": "MSTORE"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1419": {
      "op": "DUP3"
    },
    "1420": {
      "op": "ADD"
    },
    "1421": {
      "op": "MSTORE"
    },
    "1422": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A206F776E657220696E646578206F75"
    },
    "1455": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1457": {
      "op": "DUP3"
    },
    "1458": {
      "op": "ADD"
    },
    "1459": {
      "op": "MSTORE"
    },
    "1460": {
      "op": "PUSH11",
      "value": "0x74206F6620626F756E6473"
    },
    "1472": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1474": {
      "op": "SHL"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1477": {
      "op": "DUP3"
    },
    "1478": {
      "op": "ADD"
    },
    "1479": {
      "op": "MSTORE"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1482": {
      "op": "ADD"
    },
    "1483": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x48B"
    },
    "1486": {
      "op": "JUMP"
    },
    "1487": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1488": {
      "op": "POP"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1495": {
      "op": "SHL"
    },
    "1496": {
      "op": "SUB"
    },
    "1497": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 13
    },
    "1498": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1499": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1500": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "AND",
      "path": "7"
    },
    "1501": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1503": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1504": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1505": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1506": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1523
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "1508": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1510": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1511": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1512": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1513": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1515": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1516": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1517": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1518": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1519": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1520": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1521": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1522": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1523": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1524": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1525": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1526": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1527": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "o",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1528": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5005,
        5184
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1529": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 14,
      "value": "0x52C"
    },
    "1532": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5155,
        5159
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1533": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5161,
        5163
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1534": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5165,
        5172
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1535": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1537": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1538": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1539": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1541": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "ADD",
      "path": "4"
    },
    "1542": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1544": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1545": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1546": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1548": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1549": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1550": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "POP",
      "path": "4"
    },
    "1551": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5154
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB4C"
    },
    "1554": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5138,
        5177
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1555": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1556": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1873,
        1880
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1558": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1908,
        1938
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 15,
      "value": "0x61E"
    },
    "1561": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "1563": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1564": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1565": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1566": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1908,
        1938
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1567": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1900,
        1905
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1568": {
      "branch": 140,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1900,
        1938
      ],
      "op": "LT",
      "path": "7"
    },
    "1569": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x681"
    },
    "1572": {
      "branch": 140,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1573": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1575": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1576": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1582": {
      "op": "SHL"
    },
    "1583": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1584": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1587": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1589": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1590": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "ADD",
      "path": "7"
    },
    "1591": {
      "op": "MSTORE"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1596": {
      "op": "DUP3"
    },
    "1597": {
      "op": "ADD"
    },
    "1598": {
      "op": "MSTORE"
    },
    "1599": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1634": {
      "op": "DUP3"
    },
    "1635": {
      "op": "ADD"
    },
    "1636": {
      "op": "MSTORE"
    },
    "1637": {
      "op": "PUSH12",
      "value": "0x7574206F6620626F756E6473"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1652": {
      "op": "SHL"
    },
    "1653": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1655": {
      "op": "DUP3"
    },
    "1656": {
      "op": "ADD"
    },
    "1657": {
      "op": "MSTORE"
    },
    "1658": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1660": {
      "op": "ADD"
    },
    "1661": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x48B"
    },
    "1664": {
      "op": "JUMP"
    },
    "1665": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1666": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2014
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 16,
      "value": "0x8"
    },
    "1668": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2015,
        2020
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1669": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1670": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1671": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1672": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "LT",
      "path": "7"
    },
    "1673": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x694"
    },
    "1676": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1677": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x694"
    },
    "1680": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x30B8"
    },
    "1683": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        2004,
        2021
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1684": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1685": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1686": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1688": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1689": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1691": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1693": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1694": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "ADD",
      "path": "7"
    },
    "1695": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1696": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1997,
        2021
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1697": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1997,
        2021
      ],
      "op": "POP",
      "path": "7"
    },
    "1698": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1699": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1700": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "POP",
      "path": "7"
    },
    "1701": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "o",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1702": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3519,
        3742
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1703": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3717,
        3735
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 17,
      "value": "0x0"
    },
    "1705": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3717,
        3735
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1706": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3717,
        3735
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1707": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3717,
        3735
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1708": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3717,
        3727
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xA"
    },
    "1710": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3717,
        3735
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "1712": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3717,
        3735
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1713": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3717,
        3735
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1714": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3717,
        3735
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1715": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3717,
        3735
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1717": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3717,
        3735
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "1718": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3717,
        3735
      ],
      "op": "DUP3",
      "path": "26"
    },
    "1719": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3717,
        3735
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1720": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3717,
        3735
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "1721": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1722": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1723": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "DUP4",
      "path": "26"
    },
    "1724": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1725": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1726": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "DUP5",
      "path": "26"
    },
    "1727": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "MUL",
      "path": "26"
    },
    "1728": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1729": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "ADD",
      "path": "26"
    },
    "1730": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "DUP5",
      "path": "26"
    },
    "1731": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "ADD",
      "path": "26"
    },
    "1732": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1733": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "1734": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1735": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1736": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "DUP5",
      "path": "26"
    },
    "1737": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1738": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3603,
        3619
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "1740": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3603,
        3619
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "1741": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "1742": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "DUP4",
      "path": "26"
    },
    "1743": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "ADD",
      "path": "26"
    },
    "1744": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3717,
        3735
      ],
      "op": "DUP3",
      "path": "26"
    },
    "1745": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "DUP3",
      "path": "26"
    },
    "1746": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1747": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "1748": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x6FC"
    },
    "1751": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "1752": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "1754": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "MUL",
      "path": "26"
    },
    "1755": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "DUP3",
      "path": "26"
    },
    "1756": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "ADD",
      "path": "26"
    },
    "1757": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "1758": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1759": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "1761": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1762": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "1764": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "1766": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "1767": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1768": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1769": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1770": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1771": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1772": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1773": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "1775": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "ADD",
      "path": "26"
    },
    "1776": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1777": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "1779": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "ADD",
      "path": "26"
    },
    "1780": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1781": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1782": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "DUP4",
      "path": "26"
    },
    "1783": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "GT",
      "path": "26"
    },
    "1784": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x6E8"
    },
    "1787": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "1788": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1789": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "POP",
      "path": "26"
    },
    "1790": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "POP",
      "path": "26"
    },
    "1791": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "POP",
      "path": "26"
    },
    "1792": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "POP",
      "path": "26"
    },
    "1793": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "POP",
      "path": "26"
    },
    "1794": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1795": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3710,
        3735
      ],
      "op": "POP",
      "path": "26"
    },
    "1796": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3519,
        3742
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "1797": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3519,
        3742
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1798": {
      "fn": "soulBondToken.getTokenIds",
      "offset": [
        3519,
        3742
      ],
      "op": "POP",
      "path": "26"
    },
    "1799": {
      "fn": "soulBondToken.getTokenIds",
      "jump": "o",
      "offset": [
        3519,
        3742
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1800": {
      "fn": "soulBondToken.claim",
      "offset": [
        1714,
        2088
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1801": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1887
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x10"
    },
    "1803": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1887
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "1804": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1806": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1807": {
      "op": "PUSH4",
      "value": "0x3E10510B"
    },
    "1812": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1814": {
      "op": "SHL"
    },
    "1815": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1816": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1817": {
      "fn": "soulBondToken.claim",
      "offset": [
        1852,
        1862
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "1819": {
      "fn": "soulBondToken.claim",
      "offset": [
        1852,
        1862
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1826": {
      "op": "SHL"
    },
    "1827": {
      "op": "SUB"
    },
    "1828": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1887
      ],
      "op": "AND",
      "path": "26"
    },
    "1829": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1887
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1830": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1897
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x2D888869"
    },
    "1835": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1897
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1836": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1887
      ],
      "op": "DUP3",
      "path": "26"
    },
    "1837": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1887
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1838": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1905
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x3E10510B"
    },
    "1843": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1905
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1844": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x73F"
    },
    "1847": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1848": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1850": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "ADD",
      "path": "26"
    },
    "1851": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x30CE"
    },
    "1854": {
      "fn": "soulBondToken.claim",
      "jump": "i",
      "offset": [
        1898,
        1935
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1855": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1856": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "1858": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1860": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1861": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1862": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "DUP4",
      "path": "26"
    },
    "1863": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "SUB",
      "path": "26"
    },
    "1864": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1865": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "DUP7",
      "path": "26"
    },
    "1866": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "GAS",
      "path": "26"
    },
    "1867": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "1868": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "1869": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1870": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "1871": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x75C"
    },
    "1874": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "1875": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "1876": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "1878": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1879": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "1880": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "1881": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "1883": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "REVERT",
      "path": "26"
    },
    "1884": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1885": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "POP",
      "path": "26"
    },
    "1886": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "POP",
      "path": "26"
    },
    "1887": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "POP",
      "path": "26"
    },
    "1888": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "POP",
      "path": "26"
    },
    "1889": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1891": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1892": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "1893": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "1895": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "DUP3",
      "path": "26"
    },
    "1896": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "1897": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "1899": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "1900": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1901": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1902": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "ADD",
      "path": "26"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1905": {
      "op": "NOT"
    },
    "1906": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "AND",
      "path": "26"
    },
    "1907": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "DUP3",
      "path": "26"
    },
    "1908": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "ADD",
      "path": "26"
    },
    "1909": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1911": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1912": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x784"
    },
    "1915": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "1916": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1917": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1918": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "ADD",
      "path": "26"
    },
    "1919": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1920": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3153"
    },
    "1923": {
      "fn": "soulBondToken.claim",
      "jump": "i",
      "offset": [
        1898,
        1935
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1924": {
      "fn": "soulBondToken.claim",
      "offset": [
        1898,
        1935
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1925": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1927": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1928": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "DUP3",
      "path": "26"
    },
    "1929": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xFFFFFFFF"
    },
    "1934": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "AND",
      "path": "26"
    },
    "1935": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xE0"
    },
    "1937": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "SHL",
      "path": "26"
    },
    "1938": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1939": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "1940": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "1942": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "ADD",
      "path": "26"
    },
    "1943": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x7A0"
    },
    "1946": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "1947": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1948": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2AD8"
    },
    "1951": {
      "fn": "soulBondToken.claim",
      "jump": "i",
      "offset": [
        1884,
        1936
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1952": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1953": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "1955": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1957": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1958": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1959": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "DUP4",
      "path": "26"
    },
    "1960": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "SUB",
      "path": "26"
    },
    "1961": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "DUP2",
      "path": "26"
    },
    "1962": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "DUP7",
      "path": "26"
    },
    "1963": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "GAS",
      "path": "26"
    },
    "1964": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "1965": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "1966": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1967": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "1968": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x7BD"
    },
    "1971": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "1972": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "1973": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "1975": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "DUP1",
      "path": "26"
    },
    "1976": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "1977": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "1978": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "1980": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "REVERT",
      "path": "26"
    },
    "1981": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1982": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "POP",
      "path": "26"
    },
    "1983": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "POP",
      "path": "26"
    },
    "1984": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "POP",
      "path": "26"
    },
    "1985": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "POP",
      "path": "26"
    },
    "1986": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "1988": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "1989": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "1990": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "1992": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "NOT",
      "path": "26"
    },
    "1993": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "1995": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "DUP3",
      "path": "26"
    },
    "1996": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "ADD",
      "path": "26"
    },
    "1997": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "AND",
      "path": "26"
    },
    "1998": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "DUP3",
      "path": "26"
    },
    "1999": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "ADD",
      "path": "26"
    },
    "2000": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2001": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2003": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2004": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "POP",
      "path": "26"
    },
    "2005": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2006": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "ADD",
      "path": "26"
    },
    "2007": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2008": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x7E1"
    },
    "2011": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2012": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2013": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x319C"
    },
    "2016": {
      "fn": "soulBondToken.claim",
      "jump": "i",
      "offset": [
        1884,
        1936
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2017": {
      "fn": "soulBondToken.claim",
      "offset": [
        1884,
        1936
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2018": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 18,
      "value": "0x40"
    },
    "2020": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2021": {
      "op": "PUSH4",
      "value": "0x5D786A4F"
    },
    "2026": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2028": {
      "op": "SHL"
    },
    "2029": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2030": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2031": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2033": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2034": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "ADD",
      "path": "26"
    },
    "2035": {
      "op": "DUP9"
    },
    "2036": {
      "op": "SWAP1"
    },
    "2037": {
      "op": "MSTORE"
    },
    "2038": {
      "fn": "soulBondToken.claim",
      "offset": [
        1994,
        2004
      ],
      "op": "CALLER",
      "path": "26"
    },
    "2039": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2041": {
      "op": "DUP3"
    },
    "2042": {
      "op": "ADD"
    },
    "2043": {
      "op": "MSTORE"
    },
    "2044": {
      "fn": "soulBondToken.claim",
      "offset": [
        1852,
        1946
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2045": {
      "fn": "soulBondToken.claim",
      "offset": [
        1852,
        1946
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2046": {
      "op": "POP"
    },
    "2047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2051": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2053": {
      "op": "SHL"
    },
    "2054": {
      "op": "SUB"
    },
    "2055": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        1984
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2056": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        1984
      ],
      "op": "AND",
      "path": "26"
    },
    "2057": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        1984
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2058": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        1984
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xBAF0D49E"
    },
    "2063": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        1984
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2064": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2066": {
      "op": "ADD"
    },
    "2067": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2069": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2071": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2072": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2073": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "DUP4",
      "path": "26"
    },
    "2074": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "SUB",
      "path": "26"
    },
    "2075": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2076": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "DUP7",
      "path": "26"
    },
    "2077": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "GAS",
      "path": "26"
    },
    "2078": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "2079": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2080": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2081": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2082": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x82F"
    },
    "2085": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2086": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "2087": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2089": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2090": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "2091": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "2092": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2094": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "REVERT",
      "path": "26"
    },
    "2095": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2096": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "POP",
      "path": "26"
    },
    "2097": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "POP",
      "path": "26"
    },
    "2098": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "POP",
      "path": "26"
    },
    "2099": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "POP",
      "path": "26"
    },
    "2100": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2102": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2103": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "2104": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "2106": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "NOT",
      "path": "26"
    },
    "2107": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "2109": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2110": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "ADD",
      "path": "26"
    },
    "2111": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "AND",
      "path": "26"
    },
    "2112": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2113": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "ADD",
      "path": "26"
    },
    "2114": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2115": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2117": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2118": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "POP",
      "path": "26"
    },
    "2119": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2120": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "ADD",
      "path": "26"
    },
    "2121": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2122": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x853"
    },
    "2125": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2126": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2127": {
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x31B9"
    },
    "2130": {
      "fn": "soulBondToken.claim",
      "jump": "i",
      "offset": [
        1964,
        2005
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2131": {
      "branch": 110,
      "fn": "soulBondToken.claim",
      "offset": [
        1964,
        2005
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2132": {
      "fn": "soulBondToken.claim",
      "offset": [
        1956,
        2019
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x88B"
    },
    "2135": {
      "branch": 110,
      "fn": "soulBondToken.claim",
      "offset": [
        1956,
        2019
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2136": {
      "fn": "soulBondToken.claim",
      "offset": [
        1956,
        2019
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2138": {
      "fn": "soulBondToken.claim",
      "offset": [
        1956,
        2019
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2139": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2143": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2145": {
      "op": "SHL"
    },
    "2146": {
      "fn": "soulBondToken.claim",
      "offset": [
        1956,
        2019
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2147": {
      "fn": "soulBondToken.claim",
      "offset": [
        1956,
        2019
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2148": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2150": {
      "fn": "soulBondToken.claim",
      "offset": [
        1956,
        2019
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2152": {
      "fn": "soulBondToken.claim",
      "offset": [
        1956,
        2019
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2153": {
      "fn": "soulBondToken.claim",
      "offset": [
        1956,
        2019
      ],
      "op": "ADD",
      "path": "26"
    },
    "2154": {
      "op": "MSTORE"
    },
    "2155": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "2157": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2159": {
      "op": "DUP3"
    },
    "2160": {
      "op": "ADD"
    },
    "2161": {
      "op": "MSTORE"
    },
    "2162": {
      "op": "PUSH9",
      "value": "0x3737BA1037BBB732B9"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "2174": {
      "op": "SHL"
    },
    "2175": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2177": {
      "op": "DUP3"
    },
    "2178": {
      "op": "ADD"
    },
    "2179": {
      "op": "MSTORE"
    },
    "2180": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2182": {
      "op": "ADD"
    },
    "2183": {
      "fn": "soulBondToken.claim",
      "offset": [
        1956,
        2019
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x48B"
    },
    "2186": {
      "op": "JUMP"
    },
    "2187": {
      "fn": "soulBondToken.claim",
      "offset": [
        1956,
        2019
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2188": {
      "fn": "soulBondToken.claim",
      "offset": [
        2029,
        2081
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 19,
      "value": "0x899"
    },
    "2191": {
      "fn": "soulBondToken.claim",
      "offset": [
        2036,
        2046
      ],
      "op": "CALLER",
      "path": "26"
    },
    "2192": {
      "fn": "soulBondToken.claim",
      "offset": [
        2048,
        2055
      ],
      "op": "DUP8",
      "path": "26"
    },
    "2193": {
      "fn": "soulBondToken.claim",
      "offset": [
        2057,
        2064
      ],
      "op": "DUP8",
      "path": "26"
    },
    "2194": {
      "fn": "soulBondToken.claim",
      "offset": [
        2057,
        2064
      ],
      "op": "DUP8",
      "path": "26"
    },
    "2195": {
      "fn": "soulBondToken.claim",
      "offset": [
        2066,
        2080
      ],
      "op": "DUP8",
      "path": "26"
    },
    "2196": {
      "fn": "soulBondToken.claim",
      "offset": [
        2066,
        2080
      ],
      "op": "DUP8",
      "path": "26"
    },
    "2197": {
      "fn": "soulBondToken.claim",
      "offset": [
        2029,
        2035
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1C26"
    },
    "2200": {
      "fn": "soulBondToken.claim",
      "jump": "i",
      "offset": [
        2029,
        2081
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2201": {
      "fn": "soulBondToken.claim",
      "offset": [
        2029,
        2081
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2202": {
      "fn": "soulBondToken.claim",
      "offset": [
        1842,
        2088
      ],
      "op": "POP",
      "path": "26"
    },
    "2203": {
      "fn": "soulBondToken.claim",
      "offset": [
        1714,
        2088
      ],
      "op": "POP",
      "path": "26"
    },
    "2204": {
      "fn": "soulBondToken.claim",
      "offset": [
        1714,
        2088
      ],
      "op": "POP",
      "path": "26"
    },
    "2205": {
      "fn": "soulBondToken.claim",
      "offset": [
        1714,
        2088
      ],
      "op": "POP",
      "path": "26"
    },
    "2206": {
      "fn": "soulBondToken.claim",
      "offset": [
        1714,
        2088
      ],
      "op": "POP",
      "path": "26"
    },
    "2207": {
      "fn": "soulBondToken.claim",
      "offset": [
        1714,
        2088
      ],
      "op": "POP",
      "path": "26"
    },
    "2208": {
      "fn": "soulBondToken.claim",
      "jump": "o",
      "offset": [
        1714,
        2088
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2209": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2408
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2210": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2262,
        2269
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2212": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2213": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2214": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2215": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2304
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "2217": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2219": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2220": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2222": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2223": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2224": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2231": {
      "op": "SHL"
    },
    "2232": {
      "op": "SUB"
    },
    "2233": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "AND",
      "path": "4"
    },
    "2234": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2235": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2323,
        2379
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 20,
      "value": "0x358"
    },
    "2238": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2323,
        2379
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2239": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2323,
        2379
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2241": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2323,
        2379
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2242": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2246": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2248": {
      "op": "SHL"
    },
    "2249": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2323,
        2379
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2250": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2323,
        2379
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2251": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2253": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2323,
        2379
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2255": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2323,
        2379
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2256": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2323,
        2379
      ],
      "op": "ADD",
      "path": "4"
    },
    "2257": {
      "op": "MSTORE"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2262": {
      "op": "DUP3"
    },
    "2263": {
      "op": "ADD"
    },
    "2264": {
      "op": "MSTORE"
    },
    "2265": {
      "op": "PUSH24",
      "value": "0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "2292": {
      "op": "SHL"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2295": {
      "op": "DUP3"
    },
    "2296": {
      "op": "ADD"
    },
    "2297": {
      "op": "MSTORE"
    },
    "2298": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2300": {
      "op": "ADD"
    },
    "2301": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2323,
        2379
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x48B"
    },
    "2304": {
      "op": "JUMP"
    },
    "2305": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2306": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2001,
        2008
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2314": {
      "op": "SHL"
    },
    "2315": {
      "op": "SUB"
    },
    "2316": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 21
    },
    "2317": {
      "branch": 131,
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "AND",
      "path": "4"
    },
    "2318": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x96B"
    },
    "2321": {
      "branch": 131,
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2322": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2324": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2325": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2329": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2331": {
      "op": "SHL"
    },
    "2332": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2333": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2334": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2336": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2338": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2339": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "ADD",
      "path": "4"
    },
    "2340": {
      "op": "MSTORE"
    },
    "2341": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2345": {
      "op": "DUP3"
    },
    "2346": {
      "op": "ADD"
    },
    "2347": {
      "op": "MSTORE"
    },
    "2348": {
      "op": "PUSH32",
      "value": "0x4552433732313A2061646472657373207A65726F206973206E6F742061207661"
    },
    "2381": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2383": {
      "op": "DUP3"
    },
    "2384": {
      "op": "ADD"
    },
    "2385": {
      "op": "MSTORE"
    },
    "2386": {
      "op": "PUSH9",
      "value": "0x3634B21037BBB732B9"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "2398": {
      "op": "SHL"
    },
    "2399": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2401": {
      "op": "DUP3"
    },
    "2402": {
      "op": "ADD"
    },
    "2403": {
      "op": "MSTORE"
    },
    "2404": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2406": {
      "op": "ADD"
    },
    "2407": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x48B"
    },
    "2410": {
      "op": "JUMP"
    },
    "2411": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2412": {
      "op": "POP"
    },
    "2413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2419": {
      "op": "SHL"
    },
    "2420": {
      "op": "SUB"
    },
    "2421": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "AND",
      "path": "4",
      "statement": 22
    },
    "2422": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2424": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2425": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2426": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2427": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2119
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "2429": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2431": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2432": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2434": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2435": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2436": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2437": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2438": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2439": {
      "fn": "ERC721.symbol",
      "offset": [
        2632,
        2734
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2440": {
      "fn": "ERC721.symbol",
      "offset": [
        2688,
        2701
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "2442": {
      "fn": "ERC721.symbol",
      "offset": [
        2720,
        2727
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 23,
      "value": "0x1"
    },
    "2444": {
      "fn": "ERC721.symbol",
      "offset": [
        2713,
        2727
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2445": {
      "fn": "ERC721.symbol",
      "offset": [
        2713,
        2727
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2446": {
      "fn": "ERC721.symbol",
      "offset": [
        2713,
        2727
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x36D"
    },
    "2449": {
      "fn": "ERC721.symbol",
      "offset": [
        2713,
        2727
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2450": {
      "fn": "ERC721.symbol",
      "offset": [
        2713,
        2727
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3030"
    },
    "2453": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2713,
        2727
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2454": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2455": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4263,
        4315
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 24,
      "value": "0x9A1"
    },
    "2458": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "2459": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4296,
        4304
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2460": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4306,
        4314
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2461": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4263,
        4281
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E4D"
    },
    "2464": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4263,
        4315
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2465": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4263,
        4315
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2466": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "POP",
      "path": "4"
    },
    "2467": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "POP",
      "path": "4"
    },
    "2468": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2469": {
      "fn": "soulBondToken.issue",
      "offset": [
        1001,
        1708
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2470": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1187
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 25,
      "value": "0x10"
    },
    "2472": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1187
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2473": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2475": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2476": {
      "op": "PUSH4",
      "value": "0x2557A509"
    },
    "2481": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2483": {
      "op": "SHL"
    },
    "2484": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2485": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2486": {
      "fn": "soulBondToken.issue",
      "offset": [
        1209,
        1219
      ],
      "op": "CALLER",
      "path": "26"
    },
    "2487": {
      "fn": "soulBondToken.issue",
      "offset": [
        1209,
        1219
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2492": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2494": {
      "op": "SHL"
    },
    "2495": {
      "op": "SUB"
    },
    "2496": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1187
      ],
      "op": "AND",
      "path": "26"
    },
    "2497": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1187
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2498": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1196
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x4AAF4A12"
    },
    "2503": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1196
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2504": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x9D7"
    },
    "2507": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2508": {
      "fn": "soulBondToken.issue",
      "offset": [
        1197,
        1204
      ],
      "op": "DUP11",
      "path": "26"
    },
    "2509": {
      "fn": "soulBondToken.issue",
      "offset": [
        1197,
        1204
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2510": {
      "fn": "soulBondToken.issue",
      "offset": [
        1197,
        1204
      ],
      "op": "DUP11",
      "path": "26"
    },
    "2511": {
      "fn": "soulBondToken.issue",
      "offset": [
        1197,
        1204
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2512": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2514": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "ADD",
      "path": "26"
    },
    "2515": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x31D6"
    },
    "2518": {
      "fn": "soulBondToken.issue",
      "jump": "i",
      "offset": [
        1184,
        1205
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2519": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2520": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2522": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2524": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2525": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2526": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "DUP4",
      "path": "26"
    },
    "2527": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "SUB",
      "path": "26"
    },
    "2528": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2529": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "DUP7",
      "path": "26"
    },
    "2530": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "GAS",
      "path": "26"
    },
    "2531": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "2532": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2533": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2534": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2535": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x9F4"
    },
    "2538": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2539": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "2540": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2542": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2543": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "2544": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "2545": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2547": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "REVERT",
      "path": "26"
    },
    "2548": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2549": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "POP",
      "path": "26"
    },
    "2550": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "POP",
      "path": "26"
    },
    "2551": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "POP",
      "path": "26"
    },
    "2552": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "POP",
      "path": "26"
    },
    "2553": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2555": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2556": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "2557": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "2559": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "NOT",
      "path": "26"
    },
    "2560": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "2562": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2563": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "ADD",
      "path": "26"
    },
    "2564": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "AND",
      "path": "26"
    },
    "2565": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2566": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "ADD",
      "path": "26"
    },
    "2567": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2568": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2570": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2571": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "POP",
      "path": "26"
    },
    "2572": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2573": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "ADD",
      "path": "26"
    },
    "2574": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2575": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA18"
    },
    "2578": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2579": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2580": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x319C"
    },
    "2583": {
      "fn": "soulBondToken.issue",
      "jump": "i",
      "offset": [
        1184,
        1205
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2584": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1205
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2589": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2591": {
      "op": "SHL"
    },
    "2592": {
      "op": "SUB"
    },
    "2593": {
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1219
      ],
      "op": "AND",
      "path": "26"
    },
    "2594": {
      "branch": 111,
      "fn": "soulBondToken.issue",
      "offset": [
        1184,
        1219
      ],
      "op": "EQ",
      "path": "26"
    },
    "2595": {
      "fn": "soulBondToken.issue",
      "offset": [
        1176,
        1241
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA62"
    },
    "2598": {
      "branch": 111,
      "fn": "soulBondToken.issue",
      "offset": [
        1176,
        1241
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2599": {
      "fn": "soulBondToken.issue",
      "offset": [
        1176,
        1241
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2601": {
      "fn": "soulBondToken.issue",
      "offset": [
        1176,
        1241
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2602": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2606": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2608": {
      "op": "SHL"
    },
    "2609": {
      "fn": "soulBondToken.issue",
      "offset": [
        1176,
        1241
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2610": {
      "fn": "soulBondToken.issue",
      "offset": [
        1176,
        1241
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2611": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2613": {
      "fn": "soulBondToken.issue",
      "offset": [
        1176,
        1241
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2615": {
      "fn": "soulBondToken.issue",
      "offset": [
        1176,
        1241
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2616": {
      "fn": "soulBondToken.issue",
      "offset": [
        1176,
        1241
      ],
      "op": "ADD",
      "path": "26"
    },
    "2617": {
      "op": "MSTORE"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2620": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2622": {
      "op": "DUP3"
    },
    "2623": {
      "op": "ADD"
    },
    "2624": {
      "op": "MSTORE"
    },
    "2625": {
      "op": "PUSH17",
      "value": "0x27B7363C903237B6B0B4B71037BBB732B9"
    },
    "2643": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "2645": {
      "op": "SHL"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2648": {
      "op": "DUP3"
    },
    "2649": {
      "op": "ADD"
    },
    "2650": {
      "op": "MSTORE"
    },
    "2651": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2653": {
      "op": "ADD"
    },
    "2654": {
      "fn": "soulBondToken.issue",
      "offset": [
        1176,
        1241
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x48B"
    },
    "2657": {
      "op": "JUMP"
    },
    "2658": {
      "fn": "soulBondToken.issue",
      "offset": [
        1176,
        1241
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2659": {
      "fn": "soulBondToken.issue",
      "offset": [
        1382,
        1395
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2661": {
      "fn": "soulBondToken.issue",
      "offset": [
        1425,
        1432
      ],
      "op": "DUP7",
      "path": "26"
    },
    "2662": {
      "fn": "soulBondToken.issue",
      "offset": [
        1425,
        1432
      ],
      "op": "DUP7",
      "path": "26"
    },
    "2663": {
      "fn": "soulBondToken.issue",
      "offset": [
        1434,
        1448
      ],
      "op": "DUP7",
      "path": "26"
    },
    "2664": {
      "fn": "soulBondToken.issue",
      "offset": [
        1434,
        1448
      ],
      "op": "DUP7",
      "path": "26"
    },
    "2665": {
      "fn": "soulBondToken.issue",
      "offset": [
        1408,
        1449
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2667": {
      "fn": "soulBondToken.issue",
      "offset": [
        1408,
        1449
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2668": {
      "fn": "soulBondToken.issue",
      "offset": [
        1408,
        1449
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2670": {
      "fn": "soulBondToken.issue",
      "offset": [
        1408,
        1449
      ],
      "op": "ADD",
      "path": "26"
    },
    "2671": {
      "fn": "soulBondToken.issue",
      "offset": [
        1408,
        1449
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA7B"
    },
    "2674": {
      "fn": "soulBondToken.issue",
      "offset": [
        1408,
        1449
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "2675": {
      "fn": "soulBondToken.issue",
      "offset": [
        1408,
        1449
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "2676": {
      "fn": "soulBondToken.issue",
      "offset": [
        1408,
        1449
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "2677": {
      "fn": "soulBondToken.issue",
      "offset": [
        1408,
        1449
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2678": {
      "fn": "soulBondToken.issue",
      "offset": [
        1408,
        1449
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2679": {
      "fn": "soulBondToken.issue",
      "offset": [
        1408,
        1449
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3205"
    },
    "2682": {
      "fn": "soulBondToken.issue",
      "jump": "i",
      "offset": [
        1408,
        1449
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2683": {
      "fn": "soulBondToken.issue",
      "offset": [
        1408,
        1449
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2684": {
      "fn": "soulBondToken.issue",
      "offset": [
        1408,
        1449
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2686": {
      "fn": "soulBondToken.issue",
      "offset": [
        1408,
        1449
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2687": {
      "fn": "soulBondToken.issue",
      "offset": [
        1408,
        1449
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2688": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2690": {
      "op": "NOT"
    },
    "2691": {
      "fn": "soulBondToken.issue",
      "offset": [
        1408,
        1449
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2692": {
      "fn": "soulBondToken.issue",
      "offset": [
        1408,
        1449
      ],
      "op": "DUP5",
      "path": "26"
    },
    "2693": {
      "fn": "soulBondToken.issue",
      "offset": [
        1408,
        1449
      ],
      "op": "SUB",
      "path": "26"
    },
    "2694": {
      "fn": "soulBondToken.issue",
      "offset": [
        1408,
        1449
      ],
      "op": "ADD",
      "path": "26"
    },
    "2695": {
      "fn": "soulBondToken.issue",
      "offset": [
        1408,
        1449
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2696": {
      "fn": "soulBondToken.issue",
      "offset": [
        1408,
        1449
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2697": {
      "fn": "soulBondToken.issue",
      "offset": [
        1408,
        1449
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2698": {
      "fn": "soulBondToken.issue",
      "offset": [
        1408,
        1449
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2699": {
      "fn": "soulBondToken.issue",
      "offset": [
        1408,
        1449
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2700": {
      "fn": "soulBondToken.issue",
      "offset": [
        1398,
        1450
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2701": {
      "fn": "soulBondToken.issue",
      "offset": [
        1398,
        1450
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2702": {
      "fn": "soulBondToken.issue",
      "offset": [
        1408,
        1449
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2704": {
      "fn": "soulBondToken.issue",
      "offset": [
        1398,
        1450
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "2705": {
      "fn": "soulBondToken.issue",
      "offset": [
        1398,
        1450
      ],
      "op": "DUP4",
      "path": "26"
    },
    "2706": {
      "fn": "soulBondToken.issue",
      "offset": [
        1398,
        1450
      ],
      "op": "ADD",
      "path": "26"
    },
    "2707": {
      "fn": "soulBondToken.issue",
      "offset": [
        1398,
        1450
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "2708": {
      "fn": "soulBondToken.issue",
      "offset": [
        1461,
        1477
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 26,
      "value": "0x0"
    },
    "2710": {
      "fn": "soulBondToken.issue",
      "offset": [
        1461,
        1477
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2711": {
      "fn": "soulBondToken.issue",
      "offset": [
        1461,
        1477
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2712": {
      "fn": "soulBondToken.issue",
      "offset": [
        1461,
        1477
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2713": {
      "fn": "soulBondToken.issue",
      "offset": [
        1461,
        1470
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xE"
    },
    "2715": {
      "fn": "soulBondToken.issue",
      "offset": [
        1461,
        1477
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2716": {
      "fn": "soulBondToken.issue",
      "offset": [
        1461,
        1477
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "2717": {
      "fn": "soulBondToken.issue",
      "offset": [
        1461,
        1477
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2718": {
      "fn": "soulBondToken.issue",
      "offset": [
        1461,
        1477
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2719": {
      "fn": "soulBondToken.issue",
      "offset": [
        1461,
        1477
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2720": {
      "fn": "soulBondToken.issue",
      "offset": [
        1461,
        1477
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "2721": {
      "fn": "soulBondToken.issue",
      "offset": [
        1461,
        1490
      ],
      "op": "DUP6",
      "path": "26"
    },
    "2722": {
      "fn": "soulBondToken.issue",
      "offset": [
        1461,
        1490
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2723": {
      "fn": "soulBondToken.issue",
      "offset": [
        1461,
        1490
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "2724": {
      "fn": "soulBondToken.issue",
      "offset": [
        1505,
        1519
      ],
      "op": "DUP4",
      "path": "26"
    },
    "2725": {
      "fn": "soulBondToken.issue",
      "offset": [
        1505,
        1519
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2726": {
      "fn": "soulBondToken.issue",
      "offset": [
        1398,
        1450
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2727": {
      "fn": "soulBondToken.issue",
      "offset": [
        1398,
        1450
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "2728": {
      "op": "POP"
    },
    "2729": {
      "fn": "soulBondToken.issue",
      "offset": [
        1505,
        1524
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2730": {
      "branch": 112,
      "fn": "soulBondToken.issue",
      "offset": [
        1505,
        1524
      ],
      "op": "SUB",
      "path": "26"
    },
    "2731": {
      "fn": "soulBondToken.issue",
      "offset": [
        1501,
        1702
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xACC"
    },
    "2734": {
      "branch": 112,
      "fn": "soulBondToken.issue",
      "offset": [
        1501,
        1702
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2735": {
      "fn": "soulBondToken.issue",
      "offset": [
        1526,
        1544
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 27,
      "value": "0x0"
    },
    "2737": {
      "fn": "soulBondToken.issue",
      "offset": [
        1526,
        1544
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2738": {
      "fn": "soulBondToken.issue",
      "offset": [
        1526,
        1544
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2739": {
      "fn": "soulBondToken.issue",
      "offset": [
        1526,
        1544
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2740": {
      "fn": "soulBondToken.issue",
      "offset": [
        1526,
        1537
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xD"
    },
    "2742": {
      "fn": "soulBondToken.issue",
      "offset": [
        1526,
        1544
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2744": {
      "fn": "soulBondToken.issue",
      "offset": [
        1526,
        1544
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2745": {
      "fn": "soulBondToken.issue",
      "offset": [
        1526,
        1544
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2747": {
      "fn": "soulBondToken.issue",
      "offset": [
        1526,
        1544
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2748": {
      "fn": "soulBondToken.issue",
      "offset": [
        1526,
        1544
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "2749": {
      "fn": "soulBondToken.issue",
      "offset": [
        1526,
        1551
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2750": {
      "fn": "soulBondToken.issue",
      "offset": [
        1526,
        1551
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2751": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2753": {
      "op": "NOT"
    },
    "2754": {
      "fn": "soulBondToken.issue",
      "offset": [
        1526,
        1551
      ],
      "op": "AND",
      "path": "26"
    },
    "2755": {
      "fn": "soulBondToken.issue",
      "offset": [
        1547,
        1551
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "2757": {
      "fn": "soulBondToken.issue",
      "offset": [
        1526,
        1551
      ],
      "op": "OR",
      "path": "26"
    },
    "2758": {
      "fn": "soulBondToken.issue",
      "offset": [
        1526,
        1551
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2759": {
      "fn": "soulBondToken.issue",
      "offset": [
        1526,
        1551
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "2760": {
      "fn": "soulBondToken.issue",
      "offset": [
        1501,
        1702
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xB43"
    },
    "2763": {
      "fn": "soulBondToken.issue",
      "offset": [
        1501,
        1702
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2764": {
      "fn": "soulBondToken.issue",
      "offset": [
        1501,
        1702
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2765": {
      "fn": "soulBondToken.issue",
      "offset": [
        1585,
        1594
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2767": {
      "fn": "soulBondToken.issue",
      "offset": [
        1580,
        1692
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2768": {
      "fn": "soulBondToken.issue",
      "offset": [
        1604,
        1611
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2769": {
      "fn": "soulBondToken.issue",
      "offset": [
        1604,
        1618
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2770": {
      "fn": "soulBondToken.issue",
      "offset": [
        1600,
        1601
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2771": {
      "fn": "soulBondToken.issue",
      "offset": [
        1600,
        1618
      ],
      "op": "LT",
      "path": "26"
    },
    "2772": {
      "fn": "soulBondToken.issue",
      "offset": [
        1580,
        1692
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2773": {
      "fn": "soulBondToken.issue",
      "offset": [
        1580,
        1692
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xB41"
    },
    "2776": {
      "fn": "soulBondToken.issue",
      "offset": [
        1580,
        1692
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2777": {
      "fn": "soulBondToken.issue",
      "offset": [
        1673,
        1677
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 28,
      "value": "0x1"
    },
    "2779": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1651
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xF"
    },
    "2781": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1663
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "2783": {
      "fn": "soulBondToken.issue",
      "offset": [
        1652,
        1659
      ],
      "op": "DUP6",
      "path": "26"
    },
    "2784": {
      "fn": "soulBondToken.issue",
      "offset": [
        1660,
        1661
      ],
      "op": "DUP5",
      "path": "26"
    },
    "2785": {
      "fn": "soulBondToken.issue",
      "offset": [
        1652,
        1662
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2786": {
      "fn": "soulBondToken.issue",
      "offset": [
        1652,
        1662
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2787": {
      "fn": "soulBondToken.issue",
      "offset": [
        1652,
        1662
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2788": {
      "fn": "soulBondToken.issue",
      "offset": [
        1652,
        1662
      ],
      "op": "LT",
      "path": "26"
    },
    "2789": {
      "fn": "soulBondToken.issue",
      "offset": [
        1652,
        1662
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xAF0"
    },
    "2792": {
      "fn": "soulBondToken.issue",
      "offset": [
        1652,
        1662
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2793": {
      "fn": "soulBondToken.issue",
      "offset": [
        1652,
        1662
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xAF0"
    },
    "2796": {
      "fn": "soulBondToken.issue",
      "offset": [
        1652,
        1662
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x30B8"
    },
    "2799": {
      "fn": "soulBondToken.issue",
      "jump": "i",
      "offset": [
        1652,
        1662
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2800": {
      "fn": "soulBondToken.issue",
      "offset": [
        1652,
        1662
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2801": {
      "fn": "soulBondToken.issue",
      "offset": [
        1652,
        1662
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "2803": {
      "fn": "soulBondToken.issue",
      "offset": [
        1652,
        1662
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2804": {
      "fn": "soulBondToken.issue",
      "offset": [
        1652,
        1662
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2805": {
      "fn": "soulBondToken.issue",
      "offset": [
        1652,
        1662
      ],
      "op": "MUL",
      "path": "26"
    },
    "2806": {
      "fn": "soulBondToken.issue",
      "offset": [
        1652,
        1662
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2807": {
      "fn": "soulBondToken.issue",
      "offset": [
        1652,
        1662
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2808": {
      "fn": "soulBondToken.issue",
      "offset": [
        1652,
        1662
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2809": {
      "fn": "soulBondToken.issue",
      "offset": [
        1652,
        1662
      ],
      "op": "ADD",
      "path": "26"
    },
    "2810": {
      "fn": "soulBondToken.issue",
      "offset": [
        1652,
        1662
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2811": {
      "fn": "soulBondToken.issue",
      "offset": [
        1652,
        1662
      ],
      "op": "ADD",
      "path": "26"
    },
    "2812": {
      "fn": "soulBondToken.issue",
      "offset": [
        1652,
        1662
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2819": {
      "op": "SHL"
    },
    "2820": {
      "op": "SUB"
    },
    "2821": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1663
      ],
      "op": "AND",
      "path": "26"
    },
    "2822": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1663
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2823": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1663
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2824": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1663
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2825": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1663
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2826": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1663
      ],
      "op": "ADD",
      "path": "26"
    },
    "2827": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1663
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "2828": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1663
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2829": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1663
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "2830": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1663
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2831": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1663
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2833": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1663
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2834": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1663
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2835": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1663
      ],
      "op": "ADD",
      "path": "26"
    },
    "2836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2838": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1663
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2839": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1663
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2840": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1663
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "2841": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1670
      ],
      "op": "DUP7",
      "path": "26"
    },
    "2842": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1670
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2843": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1670
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2844": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1670
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2845": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1670
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "2846": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1670
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2847": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1670
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2848": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1670
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "2849": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1677
      ],
      "op": "DUP1",
      "path": "26"
    },
    "2850": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1677
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "2851": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2853": {
      "op": "NOT"
    },
    "2854": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1677
      ],
      "op": "AND",
      "path": "26"
    },
    "2855": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1677
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2856": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1677
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2857": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1677
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "2858": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1677
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2859": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1677
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2860": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1677
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2861": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1677
      ],
      "op": "OR",
      "path": "26"
    },
    "2862": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1677
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2863": {
      "fn": "soulBondToken.issue",
      "offset": [
        1643,
        1677
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "2864": {
      "fn": "soulBondToken.issue",
      "offset": [
        1620,
        1623
      ],
      "op": "DUP1",
      "path": "26",
      "statement": 29
    },
    "2865": {
      "fn": "soulBondToken.issue",
      "offset": [
        1620,
        1623
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xB39"
    },
    "2868": {
      "fn": "soulBondToken.issue",
      "offset": [
        1620,
        1623
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2869": {
      "fn": "soulBondToken.issue",
      "offset": [
        1620,
        1623
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x323D"
    },
    "2872": {
      "fn": "soulBondToken.issue",
      "jump": "i",
      "offset": [
        1620,
        1623
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2873": {
      "fn": "soulBondToken.issue",
      "offset": [
        1620,
        1623
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2874": {
      "fn": "soulBondToken.issue",
      "offset": [
        1620,
        1623
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "2875": {
      "fn": "soulBondToken.issue",
      "offset": [
        1620,
        1623
      ],
      "op": "POP",
      "path": "26"
    },
    "2876": {
      "fn": "soulBondToken.issue",
      "offset": [
        1620,
        1623
      ],
      "op": "POP",
      "path": "26"
    },
    "2877": {
      "fn": "soulBondToken.issue",
      "offset": [
        1580,
        1692
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xACF"
    },
    "2880": {
      "fn": "soulBondToken.issue",
      "offset": [
        1580,
        1692
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2881": {
      "fn": "soulBondToken.issue",
      "offset": [
        1580,
        1692
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2882": {
      "fn": "soulBondToken.issue",
      "offset": [
        1580,
        1692
      ],
      "op": "POP",
      "path": "26"
    },
    "2883": {
      "fn": "soulBondToken.issue",
      "offset": [
        1501,
        1702
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2884": {
      "fn": "soulBondToken.issue",
      "offset": [
        1166,
        1708
      ],
      "op": "POP",
      "path": "26"
    },
    "2885": {
      "fn": "soulBondToken.issue",
      "offset": [
        1001,
        1708
      ],
      "op": "POP",
      "path": "26"
    },
    "2886": {
      "fn": "soulBondToken.issue",
      "offset": [
        1001,
        1708
      ],
      "op": "POP",
      "path": "26"
    },
    "2887": {
      "fn": "soulBondToken.issue",
      "offset": [
        1001,
        1708
      ],
      "op": "POP",
      "path": "26"
    },
    "2888": {
      "fn": "soulBondToken.issue",
      "offset": [
        1001,
        1708
      ],
      "op": "POP",
      "path": "26"
    },
    "2889": {
      "fn": "soulBondToken.issue",
      "offset": [
        1001,
        1708
      ],
      "op": "POP",
      "path": "26"
    },
    "2890": {
      "fn": "soulBondToken.issue",
      "offset": [
        1001,
        1708
      ],
      "op": "POP",
      "path": "26"
    },
    "2891": {
      "fn": "soulBondToken.issue",
      "jump": "o",
      "offset": [
        1001,
        1708
      ],
      "op": "JUMP",
      "path": "26"
    },
    "2892": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2893": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5418,
        5459
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 30,
      "value": "0xB56"
    },
    "2896": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "2897": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5451,
        5458
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2898": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5418,
        5436
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A00"
    },
    "2901": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5418,
        5459
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2902": {
      "branch": 132,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5418,
        5459
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2903": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB72"
    },
    "2906": {
      "branch": 132,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2907": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2909": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2910": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2916": {
      "op": "SHL"
    },
    "2917": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2918": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2919": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2921": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "ADD",
      "path": "4"
    },
    "2922": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x48B"
    },
    "2925": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2926": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x306A"
    },
    "2929": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5410,
        5510
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2930": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2931": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5520,
        5558
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 31,
      "value": "0xB7E"
    },
    "2934": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5534,
        5538
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2935": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5540,
        5542
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2936": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5544,
        5551
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2937": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5553,
        5557
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2938": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5520,
        5533
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F1B"
    },
    "2941": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5520,
        5558
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2942": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5520,
        5558
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2943": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "POP",
      "path": "4"
    },
    "2944": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "POP",
      "path": "4"
    },
    "2945": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "POP",
      "path": "4"
    },
    "2946": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "POP",
      "path": "4"
    },
    "2947": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5250,
        5565
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2948": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4571,
        7552
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "2949": {
      "fn": "ERC721._exists",
      "offset": [
        7099,
        7103
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2951": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 32
    },
    "2952": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2953": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2954": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7129
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "2956": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2958": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2959": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2961": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2962": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2963": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2964": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4684,
        4697
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "2966": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4684,
        4697
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "2967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2971": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2973": {
      "op": "SHL"
    },
    "2974": {
      "op": "SUB"
    },
    "2975": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "AND",
      "path": "4"
    },
    "2976": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4713,
        4759
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 33,
      "value": "0xBDF"
    },
    "2979": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4713,
        4759
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "2980": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4713,
        4759
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "2982": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4713,
        4759
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "2983": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2987": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2989": {
      "op": "SHL"
    },
    "2990": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4713,
        4759
      ],
      "op": "DUP2",
      "path": "26"
    },
    "2991": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4713,
        4759
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "2992": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2994": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4713,
        4759
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "2996": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4713,
        4759
      ],
      "op": "DUP3",
      "path": "26"
    },
    "2997": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4713,
        4759
      ],
      "op": "ADD",
      "path": "26"
    },
    "2998": {
      "op": "MSTORE"
    },
    "2999": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3001": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3003": {
      "op": "DUP3"
    },
    "3004": {
      "op": "ADD"
    },
    "3005": {
      "op": "MSTORE"
    },
    "3006": {
      "op": "PUSH17",
      "value": "0x3737B732BC34B9BA32B73A103A37B5B2B7"
    },
    "3024": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "3026": {
      "op": "SHL"
    },
    "3027": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3029": {
      "op": "DUP3"
    },
    "3030": {
      "op": "ADD"
    },
    "3031": {
      "op": "MSTORE"
    },
    "3032": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3034": {
      "op": "ADD"
    },
    "3035": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4713,
        4759
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x48B"
    },
    "3038": {
      "op": "JUMP"
    },
    "3039": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4713,
        4759
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3040": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4813
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x10"
    },
    "3042": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4813
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3043": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3045": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3046": {
      "op": "PUSH4",
      "value": "0x3E10510B"
    },
    "3051": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3053": {
      "op": "SHL"
    },
    "3054": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3055": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3056": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4770,
        4784
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3058": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4770,
        4784
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3065": {
      "op": "SHL"
    },
    "3066": {
      "op": "SUB"
    },
    "3067": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4813
      ],
      "op": "AND",
      "path": "26"
    },
    "3068": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4813
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3069": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4823
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x2D888869"
    },
    "3074": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4823
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3075": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4813
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3076": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4813
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3077": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4831
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x3E10510B"
    },
    "3082": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4831
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3083": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xC16"
    },
    "3086": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3087": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "3089": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "ADD",
      "path": "26"
    },
    "3090": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3256"
    },
    "3093": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        4824,
        4865
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3094": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3095": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3097": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3099": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3100": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3101": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3102": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "SUB",
      "path": "26"
    },
    "3103": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3104": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "DUP7",
      "path": "26"
    },
    "3105": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "GAS",
      "path": "26"
    },
    "3106": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "3107": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3108": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3109": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3110": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xC33"
    },
    "3113": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3114": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3115": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3117": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3118": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "3119": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3120": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3122": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "REVERT",
      "path": "26"
    },
    "3123": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3124": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "POP",
      "path": "26"
    },
    "3125": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "POP",
      "path": "26"
    },
    "3126": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "POP",
      "path": "26"
    },
    "3127": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "POP",
      "path": "26"
    },
    "3128": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3130": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3131": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3132": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3134": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3135": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "3136": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "3138": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3139": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3140": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3141": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "ADD",
      "path": "26"
    },
    "3142": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3144": {
      "op": "NOT"
    },
    "3145": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "AND",
      "path": "26"
    },
    "3146": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3147": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "ADD",
      "path": "26"
    },
    "3148": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3150": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3151": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xC5B"
    },
    "3154": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3155": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3156": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3157": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "ADD",
      "path": "26"
    },
    "3158": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3159": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3153"
    },
    "3162": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        4824,
        4865
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3163": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4824,
        4865
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3164": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3166": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3167": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3168": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xFFFFFFFF"
    },
    "3173": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "AND",
      "path": "26"
    },
    "3174": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xE0"
    },
    "3176": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "SHL",
      "path": "26"
    },
    "3177": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3178": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3179": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "3181": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "ADD",
      "path": "26"
    },
    "3182": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xC77"
    },
    "3185": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3186": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3187": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2AD8"
    },
    "3190": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        4810,
        4866
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3191": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3192": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3194": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3196": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3197": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3198": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3199": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "SUB",
      "path": "26"
    },
    "3200": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3201": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "DUP7",
      "path": "26"
    },
    "3202": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "GAS",
      "path": "26"
    },
    "3203": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "3204": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3205": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3206": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3207": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xC94"
    },
    "3210": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3211": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3212": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3214": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3215": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "3216": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3217": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3219": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "REVERT",
      "path": "26"
    },
    "3220": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3221": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "POP",
      "path": "26"
    },
    "3222": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "POP",
      "path": "26"
    },
    "3223": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "POP",
      "path": "26"
    },
    "3224": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "POP",
      "path": "26"
    },
    "3225": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3227": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3228": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3229": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "3231": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "NOT",
      "path": "26"
    },
    "3232": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "3234": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3235": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "ADD",
      "path": "26"
    },
    "3236": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "AND",
      "path": "26"
    },
    "3237": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3238": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "ADD",
      "path": "26"
    },
    "3239": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3240": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3242": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3243": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "POP",
      "path": "26"
    },
    "3244": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3245": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "ADD",
      "path": "26"
    },
    "3246": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3247": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xCB8"
    },
    "3250": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3251": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3252": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x319C"
    },
    "3255": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        4810,
        4866
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3256": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4810,
        4866
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3257": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4770,
        4876
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3258": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4770,
        4876
      ],
      "op": "POP",
      "path": "26"
    },
    "3259": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4915
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3261": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4918,
        4929
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xC"
    },
    "3263": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4918,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3265": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4930,
        4937
      ],
      "op": "DUP6",
      "path": "26"
    },
    "3266": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4918,
        4938
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3267": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4918,
        4938
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3268": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4918,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3270": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4918,
        4938
      ],
      "op": "ADD",
      "path": "26"
    },
    "3271": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4918,
        4938
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3272": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4918,
        4938
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3273": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4918,
        4938
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3274": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4918,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3276": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4918,
        4938
      ],
      "op": "ADD",
      "path": "26"
    },
    "3277": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4918,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3279": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4918,
        4938
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "3280": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3282": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3283": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3284": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x80"
    },
    "3286": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "ADD",
      "path": "26"
    },
    "3287": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3289": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3290": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3291": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3292": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3294": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3295": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "ADD",
      "path": "26"
    },
    "3296": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3297": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3298": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xCEA"
    },
    "3301": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3302": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3030"
    },
    "3305": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        4887,
        4938
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3306": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3307": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3308": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "3310": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "ADD",
      "path": "26"
    },
    "3311": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3313": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3314": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3315": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DIV",
      "path": "26"
    },
    "3316": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "MUL",
      "path": "26"
    },
    "3317": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3319": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "ADD",
      "path": "26"
    },
    "3320": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3322": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3323": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3324": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3325": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "ADD",
      "path": "26"
    },
    "3326": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3328": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3329": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3330": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "3331": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3332": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3333": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3334": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3335": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3336": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3338": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "ADD",
      "path": "26"
    },
    "3339": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3340": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3341": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3342": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xD16"
    },
    "3345": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3346": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3030"
    },
    "3349": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        4887,
        4938
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3350": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3351": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3352": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3353": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xD63"
    },
    "3356": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3357": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3358": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "3360": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "LT",
      "path": "26"
    },
    "3361": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xD38"
    },
    "3364": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3365": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x100"
    },
    "3368": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3369": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3370": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3371": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DIV",
      "path": "26"
    },
    "3372": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "MUL",
      "path": "26"
    },
    "3373": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3374": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3375": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3376": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3378": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "ADD",
      "path": "26"
    },
    "3379": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3380": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xD63"
    },
    "3383": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3384": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3385": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3386": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "ADD",
      "path": "26"
    },
    "3387": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3388": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3389": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3391": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3392": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3394": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3396": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "3397": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3398": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3399": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3400": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3401": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3402": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3403": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3404": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "3406": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "ADD",
      "path": "26"
    },
    "3407": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3408": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3410": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "ADD",
      "path": "26"
    },
    "3411": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3412": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3413": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "GT",
      "path": "26"
    },
    "3414": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xD46"
    },
    "3417": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3418": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3419": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3420": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SUB",
      "path": "26"
    },
    "3421": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "3423": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "AND",
      "path": "26"
    },
    "3424": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3425": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "ADD",
      "path": "26"
    },
    "3426": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3427": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3428": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "POP",
      "path": "26"
    },
    "3429": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "POP",
      "path": "26"
    },
    "3430": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "POP",
      "path": "26"
    },
    "3431": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "POP",
      "path": "26"
    },
    "3432": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "POP",
      "path": "26"
    },
    "3433": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3434": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3435": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3437": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "ADD",
      "path": "26"
    },
    "3438": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "3440": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3441": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "ADD",
      "path": "26"
    },
    "3442": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3443": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3444": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xD7C"
    },
    "3447": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3448": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3030"
    },
    "3451": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        4887,
        4938
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3452": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3453": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3454": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "3456": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "ADD",
      "path": "26"
    },
    "3457": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3459": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3460": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3461": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DIV",
      "path": "26"
    },
    "3462": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "MUL",
      "path": "26"
    },
    "3463": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3465": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "ADD",
      "path": "26"
    },
    "3466": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3468": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3469": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3470": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3471": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "ADD",
      "path": "26"
    },
    "3472": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3474": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3475": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3476": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "3477": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3478": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3479": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3480": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3481": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3482": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3484": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "ADD",
      "path": "26"
    },
    "3485": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3486": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3487": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3488": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xDA8"
    },
    "3491": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3492": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3030"
    },
    "3495": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        4887,
        4938
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3496": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3497": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3498": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3499": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xDF5"
    },
    "3502": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3503": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3504": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "3506": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "LT",
      "path": "26"
    },
    "3507": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xDCA"
    },
    "3510": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3511": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x100"
    },
    "3514": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3515": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3516": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3517": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DIV",
      "path": "26"
    },
    "3518": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "MUL",
      "path": "26"
    },
    "3519": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3520": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3521": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3522": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3524": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "ADD",
      "path": "26"
    },
    "3525": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3526": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xDF5"
    },
    "3529": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3530": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3531": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3532": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "ADD",
      "path": "26"
    },
    "3533": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3534": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3535": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3537": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3538": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3540": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3542": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "3543": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3544": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3545": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3546": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3547": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3548": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3549": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3550": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "3552": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "ADD",
      "path": "26"
    },
    "3553": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3554": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3556": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "ADD",
      "path": "26"
    },
    "3557": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3558": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3559": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "GT",
      "path": "26"
    },
    "3560": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xDD8"
    },
    "3563": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3564": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3565": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3566": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SUB",
      "path": "26"
    },
    "3567": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "3569": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "AND",
      "path": "26"
    },
    "3570": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3571": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "ADD",
      "path": "26"
    },
    "3572": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3573": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3574": {
      "op": "POP"
    },
    "3575": {
      "op": "POP"
    },
    "3576": {
      "op": "POP"
    },
    "3577": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3578": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3579": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3580": {
      "op": "POP"
    },
    "3581": {
      "op": "POP"
    },
    "3582": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "3584": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3585": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "ADD",
      "path": "26"
    },
    "3586": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3587": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3589": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3590": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3591": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "ADD",
      "path": "26"
    },
    "3592": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3593": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3594": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3595": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3596": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x3"
    },
    "3598": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3599": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "3600": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "ADD",
      "path": "26"
    },
    "3601": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3602": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3604": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3605": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3606": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "ADD",
      "path": "26"
    },
    "3607": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3608": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        4976
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x10"
    },
    "3610": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        4976
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3611": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4981,
        4994
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3612": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4981,
        4994
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3613": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4996,
        5016
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "3614": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4996,
        5016
      ],
      "op": "DUP5",
      "path": "26"
    },
    "3615": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4996,
        5016
      ],
      "op": "ADD",
      "path": "26"
    },
    "3616": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4996,
        5016
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3617": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3618": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3619": {
      "op": "PUSH4",
      "value": "0x3E10510B"
    },
    "3624": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3626": {
      "op": "SHL"
    },
    "3627": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3628": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3629": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "3630": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4887,
        4938
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "3631": {
      "op": "POP"
    },
    "3632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3634": {
      "op": "SWAP4"
    },
    "3635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3639": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3641": {
      "op": "SHL"
    },
    "3642": {
      "op": "SUB"
    },
    "3643": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        4976
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3644": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        4976
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3645": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        4976
      ],
      "op": "AND",
      "path": "26"
    },
    "3646": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        4976
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "3647": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        4980
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x3E10510B"
    },
    "3652": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        4980
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "3653": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xE50"
    },
    "3656": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "3657": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "3659": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "ADD",
      "path": "26"
    },
    "3660": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x32AF"
    },
    "3663": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        4973,
        5017
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3664": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3665": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3667": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3669": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3670": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3671": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3672": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "SUB",
      "path": "26"
    },
    "3673": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3674": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "DUP7",
      "path": "26"
    },
    "3675": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "GAS",
      "path": "26"
    },
    "3676": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "3677": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3678": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3679": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3680": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xE6D"
    },
    "3683": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3684": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3685": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3687": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3688": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "3689": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3690": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3692": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "REVERT",
      "path": "26"
    },
    "3693": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3694": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "POP",
      "path": "26"
    },
    "3695": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "POP",
      "path": "26"
    },
    "3696": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "POP",
      "path": "26"
    },
    "3697": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "POP",
      "path": "26"
    },
    "3698": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3700": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3701": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3702": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3704": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3705": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "3706": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "3708": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3709": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3710": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3711": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "ADD",
      "path": "26"
    },
    "3712": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3714": {
      "op": "NOT"
    },
    "3715": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "AND",
      "path": "26"
    },
    "3716": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3717": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "ADD",
      "path": "26"
    },
    "3718": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3720": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3721": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xE95"
    },
    "3724": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3725": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3726": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3727": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "ADD",
      "path": "26"
    },
    "3728": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3729": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3153"
    },
    "3732": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        4973,
        5017
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3733": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4973,
        5017
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3734": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4948,
        5017
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3735": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4948,
        5017
      ],
      "op": "POP",
      "path": "26"
    },
    "3736": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5027,
        5046
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "3738": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5080,
        5081
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "3740": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5061,
        5070
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3741": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5061,
        5077
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3742": {
      "branch": 113,
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5061,
        5081
      ],
      "op": "LT",
      "path": "26"
    },
    "3743": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5057,
        5581
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3744": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5057,
        5581
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xF1D"
    },
    "3747": {
      "branch": 113,
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5057,
        5581
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3748": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5095
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 34,
      "value": "0x10"
    },
    "3750": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5095
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "3751": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3753": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3754": {
      "op": "PUSH4",
      "value": "0x3E10510B"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3761": {
      "op": "SHL"
    },
    "3762": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3763": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3770": {
      "op": "SHL"
    },
    "3771": {
      "op": "SUB"
    },
    "3772": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5095
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3773": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5095
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3774": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5095
      ],
      "op": "AND",
      "path": "26"
    },
    "3775": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5095
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3776": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5099
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x3E10510B"
    },
    "3781": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5099
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3782": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xED1"
    },
    "3785": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3786": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "3788": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "ADD",
      "path": "26"
    },
    "3789": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x32DD"
    },
    "3792": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        5092,
        5128
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3793": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3794": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3796": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3798": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3799": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3800": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3801": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "SUB",
      "path": "26"
    },
    "3802": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3803": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "DUP7",
      "path": "26"
    },
    "3804": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "GAS",
      "path": "26"
    },
    "3805": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "3806": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3807": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3808": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "3809": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xEEE"
    },
    "3812": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3813": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3814": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3816": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "DUP1",
      "path": "26"
    },
    "3817": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "3818": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3819": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3821": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "REVERT",
      "path": "26"
    },
    "3822": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3823": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "POP",
      "path": "26"
    },
    "3824": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "POP",
      "path": "26"
    },
    "3825": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "POP",
      "path": "26"
    },
    "3826": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "POP",
      "path": "26"
    },
    "3827": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3829": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3830": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3831": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3833": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3834": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "3835": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "3837": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "3838": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3839": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3840": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "ADD",
      "path": "26"
    },
    "3841": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3843": {
      "op": "NOT"
    },
    "3844": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "AND",
      "path": "26"
    },
    "3845": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "DUP3",
      "path": "26"
    },
    "3846": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "ADD",
      "path": "26"
    },
    "3847": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3849": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3850": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xF16"
    },
    "3853": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3854": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3855": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3856": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "ADD",
      "path": "26"
    },
    "3857": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3858": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3153"
    },
    "3861": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        5092,
        5128
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3862": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5092,
        5128
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3863": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5083,
        5128
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3864": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5083,
        5128
      ],
      "op": "POP",
      "path": "26"
    },
    "3865": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5057,
        5581
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1027"
    },
    "3868": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5057,
        5581
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3869": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5057,
        5581
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3870": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5178,
        5187
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3871": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5188,
        5189
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3873": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5178,
        5190
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3874": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5178,
        5190
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3875": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5178,
        5190
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3876": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5178,
        5190
      ],
      "op": "LT",
      "path": "26"
    },
    "3877": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5178,
        5190
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xF30"
    },
    "3880": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5178,
        5190
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3881": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5178,
        5190
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xF30"
    },
    "3884": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5178,
        5190
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x30B8"
    },
    "3887": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        5178,
        5190
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3888": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5178,
        5190
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3889": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5178,
        5190
      ],
      "op": "ADD",
      "path": "26"
    },
    "3890": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5178,
        5190
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3892": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5178,
        5190
      ],
      "op": "ADD",
      "path": "26"
    },
    "3893": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5178,
        5190
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3898": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3900": {
      "op": "SHL"
    },
    "3901": {
      "op": "SUB"
    },
    "3902": {
      "op": "NOT"
    },
    "3903": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5178,
        5190
      ],
      "op": "AND",
      "path": "26"
    },
    "3904": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "3906": {
      "op": "PUSH1",
      "value": "0xFB"
    },
    "3908": {
      "op": "SHL"
    },
    "3909": {
      "branch": 114,
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5178,
        5198
      ],
      "op": "SUB",
      "path": "26"
    },
    "3910": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5157,
        5391
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xF7E"
    },
    "3913": {
      "branch": 114,
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5157,
        5391
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3914": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5330,
        5339
      ],
      "op": "DUP2",
      "path": "26",
      "statement": 35
    },
    "3915": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5341,
        5359
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xF53"
    },
    "3918": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5341,
        5348
      ],
      "op": "DUP8",
      "path": "26"
    },
    "3919": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5341,
        5357
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1F4E"
    },
    "3922": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        5341,
        5359
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3923": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5341,
        5359
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3924": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5313,
        5369
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3926": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5313,
        5369
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3927": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5313,
        5369
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3929": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5313,
        5369
      ],
      "op": "ADD",
      "path": "26"
    },
    "3930": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5313,
        5369
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xF64"
    },
    "3933": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5313,
        5369
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "3934": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5313,
        5369
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3935": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5313,
        5369
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3936": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5313,
        5369
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x334D"
    },
    "3939": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        5313,
        5369
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3940": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5313,
        5369
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3941": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5313,
        5369
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3943": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5313,
        5369
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3944": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5313,
        5369
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3946": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5313,
        5369
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3947": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5313,
        5369
      ],
      "op": "DUP4",
      "path": "26"
    },
    "3948": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5313,
        5369
      ],
      "op": "SUB",
      "path": "26"
    },
    "3949": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5313,
        5369
      ],
      "op": "SUB",
      "path": "26"
    },
    "3950": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5313,
        5369
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3951": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5313,
        5369
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3952": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5313,
        5369
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3953": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5313,
        5369
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "3955": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5313,
        5369
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "3956": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5254,
        5391
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "3957": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5254,
        5391
      ],
      "op": "POP",
      "path": "26"
    },
    "3958": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5254,
        5391
      ],
      "op": "POP",
      "path": "26"
    },
    "3959": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5254,
        5391
      ],
      "op": "POP",
      "path": "26"
    },
    "3960": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5254,
        5391
      ],
      "op": "POP",
      "path": "26"
    },
    "3961": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5254,
        5391
      ],
      "op": "POP",
      "path": "26"
    },
    "3962": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4571,
        7552
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "3963": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4571,
        7552
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "3964": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4571,
        7552
      ],
      "op": "POP",
      "path": "26"
    },
    "3965": {
      "fn": "soulBondToken.tokenURI",
      "jump": "o",
      "offset": [
        4571,
        7552
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3966": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5157,
        5391
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3967": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5427,
        5436
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3968": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5437,
        5438
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "3970": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5427,
        5439
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3971": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5427,
        5439
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3972": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5427,
        5439
      ],
      "op": "DUP2",
      "path": "26"
    },
    "3973": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5427,
        5439
      ],
      "op": "LT",
      "path": "26"
    },
    "3974": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5427,
        5439
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xF91"
    },
    "3977": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5427,
        5439
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "3978": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5427,
        5439
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xF91"
    },
    "3981": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5427,
        5439
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x30B8"
    },
    "3984": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        5427,
        5439
      ],
      "op": "JUMP",
      "path": "26"
    },
    "3985": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5427,
        5439
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "3986": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5427,
        5439
      ],
      "op": "ADD",
      "path": "26"
    },
    "3987": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5427,
        5439
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "3989": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5427,
        5439
      ],
      "op": "ADD",
      "path": "26"
    },
    "3990": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5427,
        5439
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "3991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3995": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3997": {
      "op": "SHL"
    },
    "3998": {
      "op": "SUB"
    },
    "3999": {
      "op": "NOT"
    },
    "4000": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5427,
        5439
      ],
      "op": "AND",
      "path": "26"
    },
    "4001": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "4003": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "4005": {
      "op": "SHL"
    },
    "4006": {
      "branch": 115,
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5427,
        5447
      ],
      "op": "SUB",
      "path": "26"
    },
    "4007": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5406,
        5570
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xFB1"
    },
    "4010": {
      "branch": 115,
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5406,
        5570
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4011": {
      "op": "POP"
    },
    "4012": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5497,
        5506
      ],
      "op": "DUP1",
      "path": "26",
      "statement": 36
    },
    "4013": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5406,
        5570
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1027"
    },
    "4016": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5406,
        5570
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4017": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5406,
        5570
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4018": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5537
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 37,
      "value": "0x10"
    },
    "4020": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5537
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4021": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4023": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4024": {
      "op": "PUSH4",
      "value": "0x3E10510B"
    },
    "4029": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4031": {
      "op": "SHL"
    },
    "4032": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4033": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4038": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4040": {
      "op": "SHL"
    },
    "4041": {
      "op": "SUB"
    },
    "4042": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5537
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4043": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5537
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4044": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5537
      ],
      "op": "AND",
      "path": "26"
    },
    "4045": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5537
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4046": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5541
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x3E10510B"
    },
    "4051": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5541
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4052": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xFDF"
    },
    "4055": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4056": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "4058": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "ADD",
      "path": "26"
    },
    "4059": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x32DD"
    },
    "4062": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        5534,
        5570
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4063": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4064": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4066": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4068": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4069": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4070": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4071": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "SUB",
      "path": "26"
    },
    "4072": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4073": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "DUP7",
      "path": "26"
    },
    "4074": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "GAS",
      "path": "26"
    },
    "4075": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "4076": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "4077": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4078": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "4079": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xFFC"
    },
    "4082": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4083": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4084": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4086": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4087": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "4088": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4089": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4091": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "REVERT",
      "path": "26"
    },
    "4092": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4093": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "POP",
      "path": "26"
    },
    "4094": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "POP",
      "path": "26"
    },
    "4095": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "POP",
      "path": "26"
    },
    "4096": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "POP",
      "path": "26"
    },
    "4097": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4099": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4100": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4101": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4103": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4104": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "4105": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "4107": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4108": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4109": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4110": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "ADD",
      "path": "26"
    },
    "4111": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4113": {
      "op": "NOT"
    },
    "4114": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "AND",
      "path": "26"
    },
    "4115": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4116": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "ADD",
      "path": "26"
    },
    "4117": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4119": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4120": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1024"
    },
    "4123": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4124": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4125": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4126": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "ADD",
      "path": "26"
    },
    "4127": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4128": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3153"
    },
    "4131": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        5534,
        5570
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4132": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5534,
        5570
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4133": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5525,
        5570
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4134": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5525,
        5570
      ],
      "op": "POP",
      "path": "26"
    },
    "4135": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5406,
        5570
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4136": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5606,
        5622
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "4138": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5606,
        5622
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4139": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5606,
        5622
      ],
      "op": "ADD",
      "path": "26"
    },
    "4140": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5606,
        5622
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4141": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5653
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 38,
      "value": "0x10"
    },
    "4143": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5653
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4144": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5591,
        5603
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4146": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5735,
        5754
      ],
      "op": "DUP9",
      "path": "26"
    },
    "4147": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5735,
        5754
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4148": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5735,
        5754
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4149": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5735,
        5745
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xB"
    },
    "4151": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5735,
        5754
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "4153": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5735,
        5754
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4154": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5735,
        5754
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4156": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5735,
        5754
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4157": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5735,
        5754
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "4158": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5735,
        5754
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4159": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5625,
        5640
      ],
      "op": "TIMESTAMP",
      "path": "26"
    },
    "4160": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5606,
        5640
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4161": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5606,
        5640
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "4162": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5606,
        5640
      ],
      "op": "GT",
      "path": "26"
    },
    "4163": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5606,
        5640
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4168": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4170": {
      "op": "SHL"
    },
    "4171": {
      "op": "SUB"
    },
    "4172": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5653
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4173": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5653
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4174": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5653
      ],
      "op": "AND",
      "path": "26"
    },
    "4175": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5653
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4176": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5662
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x7C4165F2"
    },
    "4181": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5662
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4182": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5676,
        5682
      ],
      "op": "DUP5",
      "path": "26"
    },
    "4183": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5676,
        5682
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4184": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5735,
        5765
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1060"
    },
    "4187": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5735,
        5765
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4188": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5735,
        5763
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1F4E"
    },
    "4191": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        5735,
        5765
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4192": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5735,
        5765
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4193": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4195": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4196": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4197": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xFFFFFFFF"
    },
    "4202": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "AND",
      "path": "26"
    },
    "4203": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xE0"
    },
    "4205": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "SHL",
      "path": "26"
    },
    "4206": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4207": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4208": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "4210": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "ADD",
      "path": "26"
    },
    "4211": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x107D"
    },
    "4214": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "4215": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4216": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4217": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x338C"
    },
    "4220": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        5650,
        5776
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4221": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4222": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4224": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4226": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4227": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4228": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4229": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "SUB",
      "path": "26"
    },
    "4230": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4231": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "DUP7",
      "path": "26"
    },
    "4232": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "GAS",
      "path": "26"
    },
    "4233": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "4234": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "4235": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4236": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "4237": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x109A"
    },
    "4240": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4241": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4242": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4244": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4245": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "4246": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4247": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4249": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "REVERT",
      "path": "26"
    },
    "4250": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4251": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "POP",
      "path": "26"
    },
    "4252": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "POP",
      "path": "26"
    },
    "4253": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "POP",
      "path": "26"
    },
    "4254": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "POP",
      "path": "26"
    },
    "4255": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4257": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4258": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4259": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4261": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4262": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "4263": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "4265": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4266": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4267": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4268": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "ADD",
      "path": "26"
    },
    "4269": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4271": {
      "op": "NOT"
    },
    "4272": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "AND",
      "path": "26"
    },
    "4273": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4274": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "ADD",
      "path": "26"
    },
    "4275": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4277": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4278": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x10C2"
    },
    "4281": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4282": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4283": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4284": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "ADD",
      "path": "26"
    },
    "4285": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4286": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3153"
    },
    "4289": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        5650,
        5776
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4290": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5650,
        5776
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4291": {
      "op": "POP"
    },
    "4292": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5789
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 39,
      "value": "0x10"
    },
    "4294": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5789
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4301": {
      "op": "SHL"
    },
    "4302": {
      "op": "SUB"
    },
    "4303": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5789
      ],
      "op": "AND",
      "path": "26"
    },
    "4304": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5798
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x7C4165F2"
    },
    "4309": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5799,
        5805
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4310": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5834,
        5852
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x10DE"
    },
    "4313": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5834,
        5841
      ],
      "op": "DUP11",
      "path": "26"
    },
    "4314": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5834,
        5850
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1F4E"
    },
    "4317": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        5834,
        5852
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4318": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5834,
        5852
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4319": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4321": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4322": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4323": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xFFFFFFFF"
    },
    "4328": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "AND",
      "path": "26"
    },
    "4329": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xE0"
    },
    "4331": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "SHL",
      "path": "26"
    },
    "4332": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4333": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4334": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "4336": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "ADD",
      "path": "26"
    },
    "4337": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x10FB"
    },
    "4340": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "4341": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4342": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4343": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x33DD"
    },
    "4346": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        5786,
        5854
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4347": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4348": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4350": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4352": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4353": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4354": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4355": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "SUB",
      "path": "26"
    },
    "4356": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4357": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "DUP7",
      "path": "26"
    },
    "4358": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "GAS",
      "path": "26"
    },
    "4359": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "4360": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "4361": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4362": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "4363": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1118"
    },
    "4366": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4367": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4368": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4370": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4371": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "4372": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4373": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4375": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "REVERT",
      "path": "26"
    },
    "4376": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4377": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "POP",
      "path": "26"
    },
    "4378": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "POP",
      "path": "26"
    },
    "4379": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "POP",
      "path": "26"
    },
    "4380": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "POP",
      "path": "26"
    },
    "4381": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4383": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4384": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4385": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4387": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4388": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "4389": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "4391": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4392": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4393": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4394": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "ADD",
      "path": "26"
    },
    "4395": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4397": {
      "op": "NOT"
    },
    "4398": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "AND",
      "path": "26"
    },
    "4399": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4400": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "ADD",
      "path": "26"
    },
    "4401": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4403": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4404": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1140"
    },
    "4407": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4408": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4409": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4410": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "ADD",
      "path": "26"
    },
    "4411": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4412": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3153"
    },
    "4415": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        5786,
        5854
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4416": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5786,
        5854
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4417": {
      "op": "POP"
    },
    "4418": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5867
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 40,
      "value": "0x10"
    },
    "4420": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5867
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4421": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5970,
        5986
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4423": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5970,
        5986
      ],
      "op": "DUP6",
      "path": "26"
    },
    "4424": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5970,
        5986
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4425": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5970,
        5986
      ],
      "op": "ADD",
      "path": "26"
    },
    "4426": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5970,
        5986
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4427": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4428": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4429": {
      "op": "PUSH4",
      "value": "0x62480FD9"
    },
    "4434": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4436": {
      "op": "SHL"
    },
    "4437": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4438": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4439": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "4441": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4442": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "ADD",
      "path": "26"
    },
    "4443": {
      "op": "SWAP2"
    },
    "4444": {
      "op": "SWAP1"
    },
    "4445": {
      "op": "SWAP2"
    },
    "4446": {
      "op": "MSTORE"
    },
    "4447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4451": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4453": {
      "op": "SHL"
    },
    "4454": {
      "op": "SUB"
    },
    "4455": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5867
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4456": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5867
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4457": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5867
      ],
      "op": "AND",
      "path": "26"
    },
    "4458": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5867
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4459": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5876
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x7C4165F2"
    },
    "4464": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5876
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4465": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5890,
        5896
      ],
      "op": "DUP6",
      "path": "26"
    },
    "4466": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5890,
        5896
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4467": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5969
      ],
      "op": "DUP10",
      "path": "26"
    },
    "4468": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5969
      ],
      "op": "AND",
      "path": "26"
    },
    "4469": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5969
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4470": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5969
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x62480FD9"
    },
    "4475": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5969
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4476": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4478": {
      "op": "ADD"
    },
    "4479": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4481": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4483": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4484": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4485": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4486": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "SUB",
      "path": "26"
    },
    "4487": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4488": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "DUP7",
      "path": "26"
    },
    "4489": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "GAS",
      "path": "26"
    },
    "4490": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "4491": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "4492": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4493": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "4494": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x119B"
    },
    "4497": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4498": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4499": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4501": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4502": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "4503": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4504": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4506": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "REVERT",
      "path": "26"
    },
    "4507": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4508": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "POP",
      "path": "26"
    },
    "4509": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "POP",
      "path": "26"
    },
    "4510": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "POP",
      "path": "26"
    },
    "4511": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "POP",
      "path": "26"
    },
    "4512": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4514": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4515": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4516": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4518": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4519": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "4520": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "4522": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4523": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4524": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4525": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "ADD",
      "path": "26"
    },
    "4526": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4528": {
      "op": "NOT"
    },
    "4529": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "AND",
      "path": "26"
    },
    "4530": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4531": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "ADD",
      "path": "26"
    },
    "4532": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4534": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4535": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x11C3"
    },
    "4538": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4539": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4540": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4541": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "ADD",
      "path": "26"
    },
    "4542": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4543": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3153"
    },
    "4546": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        5954,
        5987
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4547": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5954,
        5987
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4548": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4550": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4551": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4552": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xFFFFFFFF"
    },
    "4557": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "AND",
      "path": "26"
    },
    "4558": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xE0"
    },
    "4560": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "SHL",
      "path": "26"
    },
    "4561": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4562": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4563": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "4565": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "ADD",
      "path": "26"
    },
    "4566": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x11E0"
    },
    "4569": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "4570": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4571": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4572": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x342E"
    },
    "4575": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        5864,
        5998
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4576": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4577": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4579": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4581": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4582": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4583": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4584": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "SUB",
      "path": "26"
    },
    "4585": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4586": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "DUP7",
      "path": "26"
    },
    "4587": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "GAS",
      "path": "26"
    },
    "4588": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "4589": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "4590": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4591": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "4592": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x11FD"
    },
    "4595": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4596": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4597": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4599": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4600": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "4601": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4602": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4604": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "REVERT",
      "path": "26"
    },
    "4605": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4606": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "POP",
      "path": "26"
    },
    "4607": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "POP",
      "path": "26"
    },
    "4608": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "POP",
      "path": "26"
    },
    "4609": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "POP",
      "path": "26"
    },
    "4610": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4612": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4613": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4614": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4616": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4617": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "4618": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "4620": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4621": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4622": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4623": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "ADD",
      "path": "26"
    },
    "4624": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4626": {
      "op": "NOT"
    },
    "4627": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "AND",
      "path": "26"
    },
    "4628": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4629": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "ADD",
      "path": "26"
    },
    "4630": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4632": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4633": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1225"
    },
    "4636": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4637": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4638": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4639": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "ADD",
      "path": "26"
    },
    "4640": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4641": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3153"
    },
    "4644": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        5864,
        5998
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4645": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        5864,
        5998
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4646": {
      "op": "POP"
    },
    "4647": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6011
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 41,
      "value": "0x10"
    },
    "4649": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6011
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4650": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6114,
        6130
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "4652": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6114,
        6130
      ],
      "op": "DUP6",
      "path": "26"
    },
    "4653": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6114,
        6130
      ],
      "op": "ADD",
      "path": "26"
    },
    "4654": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6114,
        6130
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4655": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4657": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4658": {
      "op": "PUSH4",
      "value": "0x62480FD9"
    },
    "4663": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4665": {
      "op": "SHL"
    },
    "4666": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4667": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4668": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "4670": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4671": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "ADD",
      "path": "26"
    },
    "4672": {
      "op": "SWAP2"
    },
    "4673": {
      "op": "SWAP1"
    },
    "4674": {
      "op": "SWAP2"
    },
    "4675": {
      "op": "MSTORE"
    },
    "4676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4680": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4682": {
      "op": "SHL"
    },
    "4683": {
      "op": "SUB"
    },
    "4684": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6011
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4685": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6011
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4686": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6011
      ],
      "op": "AND",
      "path": "26"
    },
    "4687": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6011
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4688": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6020
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x7C4165F2"
    },
    "4693": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6020
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4694": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6034,
        6040
      ],
      "op": "DUP6",
      "path": "26"
    },
    "4695": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6034,
        6040
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4696": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6113
      ],
      "op": "DUP10",
      "path": "26"
    },
    "4697": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6113
      ],
      "op": "AND",
      "path": "26"
    },
    "4698": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6113
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4699": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6113
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x62480FD9"
    },
    "4704": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6113
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4705": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4707": {
      "op": "ADD"
    },
    "4708": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4710": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4712": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4713": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4714": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4715": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "SUB",
      "path": "26"
    },
    "4716": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4717": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "DUP7",
      "path": "26"
    },
    "4718": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "GAS",
      "path": "26"
    },
    "4719": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "4720": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "4721": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4722": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "4723": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1280"
    },
    "4726": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4727": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4728": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4730": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4731": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "4732": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4733": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4735": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "REVERT",
      "path": "26"
    },
    "4736": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4737": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "POP",
      "path": "26"
    },
    "4738": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "POP",
      "path": "26"
    },
    "4739": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "POP",
      "path": "26"
    },
    "4740": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "POP",
      "path": "26"
    },
    "4741": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4743": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4744": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4745": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4747": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4748": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "4749": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "4751": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4752": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4753": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4754": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "ADD",
      "path": "26"
    },
    "4755": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4757": {
      "op": "NOT"
    },
    "4758": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "AND",
      "path": "26"
    },
    "4759": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4760": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "ADD",
      "path": "26"
    },
    "4761": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4763": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4764": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x12A8"
    },
    "4767": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4768": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4769": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4770": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "ADD",
      "path": "26"
    },
    "4771": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4772": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3153"
    },
    "4775": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        6098,
        6131
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4776": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6098,
        6131
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4777": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4779": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4780": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4781": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xFFFFFFFF"
    },
    "4786": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "AND",
      "path": "26"
    },
    "4787": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xE0"
    },
    "4789": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "SHL",
      "path": "26"
    },
    "4790": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4791": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4792": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "4794": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "ADD",
      "path": "26"
    },
    "4795": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x12C5"
    },
    "4798": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "4799": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4800": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4801": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3484"
    },
    "4804": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        6008,
        6142
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4805": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4806": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4808": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4810": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4811": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4812": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4813": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "SUB",
      "path": "26"
    },
    "4814": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4815": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "DUP7",
      "path": "26"
    },
    "4816": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "GAS",
      "path": "26"
    },
    "4817": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "4818": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "4819": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4820": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "4821": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x12E2"
    },
    "4824": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4825": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4826": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4828": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4829": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "4830": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4831": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4833": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "REVERT",
      "path": "26"
    },
    "4834": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4835": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "POP",
      "path": "26"
    },
    "4836": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "POP",
      "path": "26"
    },
    "4837": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "POP",
      "path": "26"
    },
    "4838": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "POP",
      "path": "26"
    },
    "4839": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4841": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4842": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4843": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "4845": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4846": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "4847": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "4849": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "4850": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4851": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4852": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "ADD",
      "path": "26"
    },
    "4853": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4855": {
      "op": "NOT"
    },
    "4856": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "AND",
      "path": "26"
    },
    "4857": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "DUP3",
      "path": "26"
    },
    "4858": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "ADD",
      "path": "26"
    },
    "4859": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4861": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4862": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x130A"
    },
    "4865": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4866": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4867": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4868": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "ADD",
      "path": "26"
    },
    "4869": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4870": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3153"
    },
    "4873": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        6008,
        6142
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4874": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6008,
        6142
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4875": {
      "op": "POP"
    },
    "4876": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6155
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 42,
      "value": "0x10"
    },
    "4878": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6155
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "4879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4883": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4885": {
      "op": "SHL"
    },
    "4886": {
      "op": "SUB"
    },
    "4887": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6155
      ],
      "op": "AND",
      "path": "26"
    },
    "4888": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6164
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x7C4165F2"
    },
    "4893": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6178,
        6184
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4894": {
      "branch": 116,
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6238
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4895": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1349"
    },
    "4898": {
      "branch": 116,
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "4899": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4901": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4902": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4903": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4905": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "ADD",
      "path": "26"
    },
    "4906": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4908": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4909": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4910": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x9"
    },
    "4912": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4913": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4914": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "4916": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "ADD",
      "path": "26"
    },
    "4917": {
      "op": "PUSH9",
      "value": "0x1393D5081590531251"
    },
    "4927": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "4929": {
      "op": "SHL"
    },
    "4930": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4931": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4932": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "POP",
      "path": "26"
    },
    "4933": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1368"
    },
    "4936": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4937": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4938": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4940": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4941": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4942": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4944": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "ADD",
      "path": "26"
    },
    "4945": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4947": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4948": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "DUP1",
      "path": "26"
    },
    "4949": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x5"
    },
    "4951": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4952": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4953": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "4955": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "ADD",
      "path": "26"
    },
    "4956": {
      "op": "PUSH5",
      "value": "0x1590531251"
    },
    "4962": {
      "op": "PUSH1",
      "value": "0xDA"
    },
    "4964": {
      "op": "SHL"
    },
    "4965": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4966": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4967": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "POP",
      "path": "26"
    },
    "4968": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6231,
        6262
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4969": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4971": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "4972": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "DUP4",
      "path": "26"
    },
    "4973": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xFFFFFFFF"
    },
    "4978": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "AND",
      "path": "26"
    },
    "4979": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xE0"
    },
    "4981": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "SHL",
      "path": "26"
    },
    "4982": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "DUP2",
      "path": "26"
    },
    "4983": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "4984": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "4986": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "ADD",
      "path": "26"
    },
    "4987": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1385"
    },
    "4990": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "4991": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "4992": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "4993": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x34DA"
    },
    "4996": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        6152,
        6273
      ],
      "op": "JUMP",
      "path": "26"
    },
    "4997": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "4998": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5000": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5002": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5003": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5004": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "DUP4",
      "path": "26"
    },
    "5005": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "SUB",
      "path": "26"
    },
    "5006": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5007": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "DUP7",
      "path": "26"
    },
    "5008": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "GAS",
      "path": "26"
    },
    "5009": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "5010": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "5011": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5012": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "5013": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x13A2"
    },
    "5016": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5017": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "5018": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5020": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5021": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "5022": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "5023": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5025": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "REVERT",
      "path": "26"
    },
    "5026": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5027": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "POP",
      "path": "26"
    },
    "5028": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "POP",
      "path": "26"
    },
    "5029": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "POP",
      "path": "26"
    },
    "5030": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "POP",
      "path": "26"
    },
    "5031": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5033": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5034": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "5035": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5037": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5038": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "5039": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "5041": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "5042": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5043": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5044": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "ADD",
      "path": "26"
    },
    "5045": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5047": {
      "op": "NOT"
    },
    "5048": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "AND",
      "path": "26"
    },
    "5049": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5050": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "ADD",
      "path": "26"
    },
    "5051": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5053": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5054": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x13CA"
    },
    "5057": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5058": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5059": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5060": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "ADD",
      "path": "26"
    },
    "5061": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5062": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3153"
    },
    "5065": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        6152,
        6273
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5066": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5067": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6152,
        6273
      ],
      "op": "POP",
      "path": "26"
    },
    "5068": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6284,
        6301
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5070": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6364,
        6382
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x13D6"
    },
    "5073": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6364,
        6371
      ],
      "op": "DUP9",
      "path": "26"
    },
    "5074": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6364,
        6380
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1F4E"
    },
    "5077": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        6364,
        6382
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5078": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6364,
        6382
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5079": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6413,
        6419
      ],
      "op": "DUP6",
      "path": "26"
    },
    "5080": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6413,
        6433
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5082": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6413,
        6433
      ],
      "op": "ADD",
      "path": "26"
    },
    "5083": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6413,
        6433
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5084": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6560,
        6581
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x13E4"
    },
    "5087": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6574,
        6580
      ],
      "op": "DUP6",
      "path": "26"
    },
    "5088": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6560,
        6573
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x204F"
    },
    "5091": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        6560,
        6581
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5092": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6560,
        6581
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5093": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6627,
        6640
      ],
      "op": "DUP8",
      "path": "26"
    },
    "5094": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6627,
        6640
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5095": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6304,
        6718
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5097": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6304,
        6718
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5098": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6304,
        6718
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x13F9"
    },
    "5101": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6304,
        6718
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "5102": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6304,
        6718
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "5103": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6304,
        6718
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "5104": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6304,
        6718
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5105": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6627,
        6640
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5106": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6304,
        6718
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5108": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6304,
        6718
      ],
      "op": "ADD",
      "path": "26"
    },
    "5109": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6304,
        6718
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3525"
    },
    "5112": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        6304,
        6718
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5113": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6304,
        6718
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5114": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6304,
        6718
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5116": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6304,
        6718
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5117": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6304,
        6718
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5118": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5120": {
      "op": "NOT"
    },
    "5121": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6304,
        6718
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5122": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6304,
        6718
      ],
      "op": "DUP5",
      "path": "26"
    },
    "5123": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6304,
        6718
      ],
      "op": "SUB",
      "path": "26"
    },
    "5124": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6304,
        6718
      ],
      "op": "ADD",
      "path": "26"
    },
    "5125": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6304,
        6718
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5126": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6304,
        6718
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5127": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6304,
        6718
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5128": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6304,
        6718
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5129": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6304,
        6718
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5130": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6783,
        6802
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 43,
      "value": "0x0"
    },
    "5132": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6783,
        6802
      ],
      "op": "DUP11",
      "path": "26"
    },
    "5133": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6783,
        6802
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5134": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6783,
        6802
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5135": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6783,
        6793
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xB"
    },
    "5137": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6304,
        6718
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5139": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6783,
        6802
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5140": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6783,
        6802
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "5141": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6783,
        6802
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5142": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6304,
        6718
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5143": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6304,
        6718
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5144": {
      "op": "POP"
    },
    "5145": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6304,
        6718
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5146": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6304,
        6718
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5147": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6783,
        6813
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1423"
    },
    "5150": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6783,
        6813
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5151": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6783,
        6811
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1F4E"
    },
    "5154": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        6783,
        6813
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5155": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6783,
        6813
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5156": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6882,
        6900
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x142C"
    },
    "5159": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6882,
        6889
      ],
      "op": "DUP11",
      "path": "26"
    },
    "5160": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6882,
        6898
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1F4E"
    },
    "5163": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        6882,
        6900
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5164": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6882,
        6900
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5165": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6981,
        6994
      ],
      "op": "DUP8",
      "path": "26"
    },
    "5166": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6981,
        6994
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5167": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7083,
        7099
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5169": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7083,
        7099
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5170": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7083,
        7099
      ],
      "op": "DUP11",
      "path": "26"
    },
    "5171": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7083,
        7099
      ],
      "op": "ADD",
      "path": "26"
    },
    "5172": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7083,
        7099
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5173": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5174": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5175": {
      "op": "PUSH4",
      "value": "0x62480FD9"
    },
    "5180": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5182": {
      "op": "SHL"
    },
    "5183": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5184": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5185": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "5187": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5188": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "ADD",
      "path": "26"
    },
    "5189": {
      "op": "SWAP2"
    },
    "5190": {
      "op": "SWAP1"
    },
    "5191": {
      "op": "SWAP2"
    },
    "5192": {
      "op": "MSTORE"
    },
    "5193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5197": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5199": {
      "op": "SHL"
    },
    "5200": {
      "op": "SUB"
    },
    "5201": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7082
      ],
      "op": "DUP12",
      "path": "26"
    },
    "5202": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7082
      ],
      "op": "AND",
      "path": "26"
    },
    "5203": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7082
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5204": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7082
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x62480FD9"
    },
    "5209": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7082
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5210": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5212": {
      "op": "ADD"
    },
    "5213": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5215": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5217": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5218": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5219": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "DUP4",
      "path": "26"
    },
    "5220": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "SUB",
      "path": "26"
    },
    "5221": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5222": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "DUP7",
      "path": "26"
    },
    "5223": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "GAS",
      "path": "26"
    },
    "5224": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "5225": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "5226": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5227": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "5228": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1479"
    },
    "5231": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5232": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "5233": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5235": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5236": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "5237": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "5238": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5240": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "REVERT",
      "path": "26"
    },
    "5241": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5242": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "POP",
      "path": "26"
    },
    "5243": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "POP",
      "path": "26"
    },
    "5244": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "POP",
      "path": "26"
    },
    "5245": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "POP",
      "path": "26"
    },
    "5246": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5248": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5249": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "5250": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5252": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5253": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "5254": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "5256": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "5257": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5258": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5259": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "ADD",
      "path": "26"
    },
    "5260": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5262": {
      "op": "NOT"
    },
    "5263": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "AND",
      "path": "26"
    },
    "5264": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5265": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "ADD",
      "path": "26"
    },
    "5266": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5268": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5269": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x14A1"
    },
    "5272": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5273": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5274": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5275": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "ADD",
      "path": "26"
    },
    "5276": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5277": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3153"
    },
    "5280": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        7067,
        7100
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5281": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7067,
        7100
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5282": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7189,
        7205
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "5284": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7189,
        7205
      ],
      "op": "DUP11",
      "path": "26"
    },
    "5285": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7189,
        7205
      ],
      "op": "ADD",
      "path": "26"
    },
    "5286": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7189,
        7205
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5287": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5289": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5290": {
      "op": "PUSH4",
      "value": "0x62480FD9"
    },
    "5295": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5297": {
      "op": "SHL"
    },
    "5298": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5299": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5300": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "5302": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5303": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "ADD",
      "path": "26"
    },
    "5304": {
      "op": "SWAP2"
    },
    "5305": {
      "op": "SWAP1"
    },
    "5306": {
      "op": "SWAP2"
    },
    "5307": {
      "op": "MSTORE"
    },
    "5308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5314": {
      "op": "SHL"
    },
    "5315": {
      "op": "SUB"
    },
    "5316": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7188
      ],
      "op": "DUP13",
      "path": "26"
    },
    "5317": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7188
      ],
      "op": "AND",
      "path": "26"
    },
    "5318": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7188
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5319": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7188
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x62480FD9"
    },
    "5324": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7188
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5325": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5327": {
      "op": "ADD"
    },
    "5328": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5330": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5332": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5333": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5334": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "DUP4",
      "path": "26"
    },
    "5335": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "SUB",
      "path": "26"
    },
    "5336": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5337": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "DUP7",
      "path": "26"
    },
    "5338": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "GAS",
      "path": "26"
    },
    "5339": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "5340": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "5341": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5342": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "5343": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x14EC"
    },
    "5346": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5347": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "5348": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5350": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5351": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "5352": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "5353": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5355": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "REVERT",
      "path": "26"
    },
    "5356": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5357": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "POP",
      "path": "26"
    },
    "5358": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "POP",
      "path": "26"
    },
    "5359": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "POP",
      "path": "26"
    },
    "5360": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "POP",
      "path": "26"
    },
    "5361": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5363": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5364": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "5365": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5367": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5368": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "5369": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "5371": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "5372": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5373": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5374": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "ADD",
      "path": "26"
    },
    "5375": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5377": {
      "op": "NOT"
    },
    "5378": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "AND",
      "path": "26"
    },
    "5379": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5380": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "ADD",
      "path": "26"
    },
    "5381": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5383": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5384": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1514"
    },
    "5387": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5388": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5389": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5390": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "ADD",
      "path": "26"
    },
    "5391": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5392": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3153"
    },
    "5395": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        7173,
        7206
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5396": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7173,
        7206
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5397": {
      "branch": 117,
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7295
      ],
      "op": "DUP8",
      "path": "26"
    },
    "5398": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1540"
    },
    "5401": {
      "branch": 117,
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5402": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5404": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5405": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5406": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5408": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "ADD",
      "path": "26"
    },
    "5409": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5411": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5412": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5413": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x9"
    },
    "5415": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5416": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5417": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5419": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "ADD",
      "path": "26"
    },
    "5420": {
      "op": "PUSH9",
      "value": "0x1393D5081590531251"
    },
    "5430": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "5432": {
      "op": "SHL"
    },
    "5433": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5434": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5435": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "POP",
      "path": "26"
    },
    "5436": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x155F"
    },
    "5439": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5440": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5441": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5443": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5444": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5445": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5447": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "ADD",
      "path": "26"
    },
    "5448": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5450": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5451": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5452": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x5"
    },
    "5454": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5455": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5456": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5458": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "ADD",
      "path": "26"
    },
    "5459": {
      "op": "PUSH5",
      "value": "0x1590531251"
    },
    "5465": {
      "op": "PUSH1",
      "value": "0xDA"
    },
    "5467": {
      "op": "SHL"
    },
    "5468": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5469": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5470": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "POP",
      "path": "26"
    },
    "5471": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7288,
        7319
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5472": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6735,
        7349
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5474": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6735,
        7349
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5475": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6735,
        7349
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5477": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6735,
        7349
      ],
      "op": "ADD",
      "path": "26"
    },
    "5478": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6735,
        7349
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1575"
    },
    "5481": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6735,
        7349
      ],
      "op": "SWAP8",
      "path": "26"
    },
    "5482": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6735,
        7349
      ],
      "op": "SWAP7",
      "path": "26"
    },
    "5483": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6735,
        7349
      ],
      "op": "SWAP6",
      "path": "26"
    },
    "5484": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6735,
        7349
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "5485": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6735,
        7349
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "5486": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6735,
        7349
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "5487": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6735,
        7349
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5488": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6735,
        7349
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5489": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6735,
        7349
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3683"
    },
    "5492": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        6735,
        7349
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5493": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6735,
        7349
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5494": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6735,
        7349
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5496": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6735,
        7349
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5497": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6735,
        7349
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5499": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6735,
        7349
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5500": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6735,
        7349
      ],
      "op": "DUP4",
      "path": "26"
    },
    "5501": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6735,
        7349
      ],
      "op": "SUB",
      "path": "26"
    },
    "5502": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6735,
        7349
      ],
      "op": "SUB",
      "path": "26"
    },
    "5503": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6735,
        7349
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5504": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6735,
        7349
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5505": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6735,
        7349
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5506": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6735,
        7349
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5508": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6735,
        7349
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5509": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6728,
        7349
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5510": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        6728,
        7349
      ],
      "op": "POP",
      "path": "26"
    },
    "5511": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7494,
        7513
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 44,
      "value": "0x158F"
    },
    "5514": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7508,
        7512
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5515": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7494,
        7507
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x204F"
    },
    "5518": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        7494,
        7513
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5519": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7494,
        7513
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5520": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7403,
        7531
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5522": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7403,
        7531
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5523": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7403,
        7531
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5525": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7403,
        7531
      ],
      "op": "ADD",
      "path": "26"
    },
    "5526": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7403,
        7531
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x159F"
    },
    "5529": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7403,
        7531
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5530": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7403,
        7531
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5531": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7403,
        7531
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3857"
    },
    "5534": {
      "fn": "soulBondToken.tokenURI",
      "jump": "i",
      "offset": [
        7403,
        7531
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5535": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7403,
        7531
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5536": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7403,
        7531
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5538": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7403,
        7531
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5539": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7403,
        7531
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5541": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7403,
        7531
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5542": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7403,
        7531
      ],
      "op": "DUP4",
      "path": "26"
    },
    "5543": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7403,
        7531
      ],
      "op": "SUB",
      "path": "26"
    },
    "5544": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7403,
        7531
      ],
      "op": "SUB",
      "path": "26"
    },
    "5545": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7403,
        7531
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5546": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7403,
        7531
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5547": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7403,
        7531
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5548": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7403,
        7531
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5550": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7403,
        7531
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5551": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7360,
        7545
      ],
      "op": "SWAP7",
      "path": "26"
    },
    "5552": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7360,
        7545
      ],
      "op": "POP",
      "path": "26"
    },
    "5553": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7360,
        7545
      ],
      "op": "POP",
      "path": "26"
    },
    "5554": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7360,
        7545
      ],
      "op": "POP",
      "path": "26"
    },
    "5555": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7360,
        7545
      ],
      "op": "POP",
      "path": "26"
    },
    "5556": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7360,
        7545
      ],
      "op": "POP",
      "path": "26"
    },
    "5557": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7360,
        7545
      ],
      "op": "POP",
      "path": "26"
    },
    "5558": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        7360,
        7545
      ],
      "op": "POP",
      "path": "26"
    },
    "5559": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4571,
        7552
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5560": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4571,
        7552
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5561": {
      "fn": "soulBondToken.tokenURI",
      "offset": [
        4571,
        7552
      ],
      "op": "POP",
      "path": "26"
    },
    "5562": {
      "fn": "soulBondToken.tokenURI",
      "jump": "o",
      "offset": [
        4571,
        7552
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5563": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3229,
        3513
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5564": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3311,
        3332
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x15E6"
    },
    "5567": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5569": {
      "op": "MLOAD"
    },
    "5570": {
      "op": "DUP1"
    },
    "5571": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5573": {
      "op": "ADD"
    },
    "5574": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5576": {
      "op": "MSTORE"
    },
    "5577": {
      "op": "DUP1"
    },
    "5578": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5580": {
      "op": "DUP2"
    },
    "5581": {
      "op": "MSTORE"
    },
    "5582": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5584": {
      "op": "ADD"
    },
    "5585": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5587": {
      "op": "DUP2"
    },
    "5588": {
      "op": "MSTORE"
    },
    "5589": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5591": {
      "op": "ADD"
    },
    "5592": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5594": {
      "op": "DUP2"
    },
    "5595": {
      "op": "MSTORE"
    },
    "5596": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5598": {
      "op": "ADD"
    },
    "5599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5601": {
      "op": "DUP2"
    },
    "5602": {
      "op": "MSTORE"
    },
    "5603": {
      "op": "POP"
    },
    "5604": {
      "op": "SWAP1"
    },
    "5605": {
      "op": "JUMP"
    },
    "5606": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3311,
        3332
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5607": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3486,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 45,
      "value": "0x0"
    },
    "5609": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3486,
        3506
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5610": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3486,
        3506
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5611": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3486,
        3506
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5612": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3486,
        3497
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xC"
    },
    "5614": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3486,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5616": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3486,
        3506
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5617": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3486,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5619": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3486,
        3506
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5620": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3486,
        3506
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5621": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3486,
        3506
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5622": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3486,
        3506
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "5623": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5624": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5625": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x80"
    },
    "5627": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5628": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "ADD",
      "path": "26"
    },
    "5629": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5630": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "5631": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5632": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5633": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5634": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5635": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5636": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3486,
        3506
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5637": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3486,
        3506
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5638": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x160E"
    },
    "5641": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5642": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3030"
    },
    "5645": {
      "fn": "soulBondToken.getToken",
      "jump": "i",
      "offset": [
        3479,
        3506
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5646": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5647": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5648": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "5650": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "ADD",
      "path": "26"
    },
    "5651": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5653": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5654": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5655": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DIV",
      "path": "26"
    },
    "5656": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "MUL",
      "path": "26"
    },
    "5657": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5659": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "ADD",
      "path": "26"
    },
    "5660": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5662": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5663": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5664": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5665": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "ADD",
      "path": "26"
    },
    "5666": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5668": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5669": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5670": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "5671": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5672": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5673": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5674": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5675": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5676": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5678": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "ADD",
      "path": "26"
    },
    "5679": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5680": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5681": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5682": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x163A"
    },
    "5685": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5686": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3030"
    },
    "5689": {
      "fn": "soulBondToken.getToken",
      "jump": "i",
      "offset": [
        3479,
        3506
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5690": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5691": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5692": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "5693": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1687"
    },
    "5696": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5697": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5698": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "5700": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "LT",
      "path": "26"
    },
    "5701": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x165C"
    },
    "5704": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5705": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x100"
    },
    "5708": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5709": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP4",
      "path": "26"
    },
    "5710": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5711": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DIV",
      "path": "26"
    },
    "5712": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "MUL",
      "path": "26"
    },
    "5713": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP4",
      "path": "26"
    },
    "5714": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5715": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5716": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5718": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "ADD",
      "path": "26"
    },
    "5719": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5720": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1687"
    },
    "5723": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5724": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5725": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5726": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "ADD",
      "path": "26"
    },
    "5727": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5728": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5729": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5731": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5732": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5734": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5736": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "5737": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5738": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5739": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5740": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5741": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5742": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5743": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5744": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "5746": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "ADD",
      "path": "26"
    },
    "5747": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5748": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5750": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "ADD",
      "path": "26"
    },
    "5751": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5752": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP4",
      "path": "26"
    },
    "5753": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "GT",
      "path": "26"
    },
    "5754": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x166A"
    },
    "5757": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5758": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5759": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5760": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SUB",
      "path": "26"
    },
    "5761": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "5763": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "AND",
      "path": "26"
    },
    "5764": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5765": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "ADD",
      "path": "26"
    },
    "5766": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5767": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5768": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "POP",
      "path": "26"
    },
    "5769": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "POP",
      "path": "26"
    },
    "5770": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "POP",
      "path": "26"
    },
    "5771": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "POP",
      "path": "26"
    },
    "5772": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "POP",
      "path": "26"
    },
    "5773": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5774": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5775": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5777": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "ADD",
      "path": "26"
    },
    "5778": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "5780": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5781": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "ADD",
      "path": "26"
    },
    "5782": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5783": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5784": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x16A0"
    },
    "5787": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5788": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3030"
    },
    "5791": {
      "fn": "soulBondToken.getToken",
      "jump": "i",
      "offset": [
        3479,
        3506
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5792": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5793": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5794": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "5796": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "ADD",
      "path": "26"
    },
    "5797": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5799": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5800": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5801": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DIV",
      "path": "26"
    },
    "5802": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "MUL",
      "path": "26"
    },
    "5803": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5805": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "ADD",
      "path": "26"
    },
    "5806": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5808": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5809": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5810": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5811": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "ADD",
      "path": "26"
    },
    "5812": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5814": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5815": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5816": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "5817": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5818": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5819": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5820": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5821": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5822": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5824": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "ADD",
      "path": "26"
    },
    "5825": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5826": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5827": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5828": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x16CC"
    },
    "5831": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5832": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3030"
    },
    "5835": {
      "fn": "soulBondToken.getToken",
      "jump": "i",
      "offset": [
        3479,
        3506
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5836": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5837": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5838": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "5839": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1719"
    },
    "5842": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5843": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5844": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "5846": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "LT",
      "path": "26"
    },
    "5847": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x16EE"
    },
    "5850": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5851": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x100"
    },
    "5854": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5855": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP4",
      "path": "26"
    },
    "5856": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5857": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DIV",
      "path": "26"
    },
    "5858": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "MUL",
      "path": "26"
    },
    "5859": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP4",
      "path": "26"
    },
    "5860": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5861": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5862": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5864": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "ADD",
      "path": "26"
    },
    "5865": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5866": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1719"
    },
    "5869": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5870": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5871": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5872": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "ADD",
      "path": "26"
    },
    "5873": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5874": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5875": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5877": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5878": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5880": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5882": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "5883": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5884": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5885": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5886": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5887": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5888": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5889": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5890": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "5892": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "ADD",
      "path": "26"
    },
    "5893": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5894": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5896": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "ADD",
      "path": "26"
    },
    "5897": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP1",
      "path": "26"
    },
    "5898": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP4",
      "path": "26"
    },
    "5899": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "GT",
      "path": "26"
    },
    "5900": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x16FC"
    },
    "5903": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "5904": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5905": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5906": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SUB",
      "path": "26"
    },
    "5907": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "5909": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "AND",
      "path": "26"
    },
    "5910": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5911": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "ADD",
      "path": "26"
    },
    "5912": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5913": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5914": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "POP",
      "path": "26"
    },
    "5915": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "POP",
      "path": "26"
    },
    "5916": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "POP",
      "path": "26"
    },
    "5917": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "POP",
      "path": "26"
    },
    "5918": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "POP",
      "path": "26"
    },
    "5919": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5920": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5921": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5923": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "ADD",
      "path": "26"
    },
    "5924": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "5926": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5927": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "ADD",
      "path": "26"
    },
    "5928": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5929": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5930": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5931": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "5933": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "ADD",
      "path": "26"
    },
    "5934": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x3"
    },
    "5936": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5937": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "ADD",
      "path": "26"
    },
    "5938": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5939": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5940": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5941": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "POP",
      "path": "26"
    },
    "5942": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "POP",
      "path": "26"
    },
    "5943": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5944": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3479,
        3506
      ],
      "op": "POP",
      "path": "26"
    },
    "5945": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3229,
        3513
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5946": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3229,
        3513
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5947": {
      "fn": "soulBondToken.getToken",
      "offset": [
        3229,
        3513
      ],
      "op": "POP",
      "path": "26"
    },
    "5948": {
      "fn": "soulBondToken.getToken",
      "jump": "o",
      "offset": [
        3229,
        3513
      ],
      "op": "JUMP",
      "path": "26"
    },
    "5949": {
      "fn": "soulBondToken.assign",
      "offset": [
        2094,
        2485
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "5950": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2289
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x10"
    },
    "5952": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2289
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "5953": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "5955": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "5956": {
      "op": "PUSH4",
      "value": "0x3E10510B"
    },
    "5961": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5963": {
      "op": "SHL"
    },
    "5964": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "DUP2",
      "path": "26"
    },
    "5965": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5966": {
      "fn": "soulBondToken.assign",
      "offset": [
        2254,
        2264
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "5968": {
      "fn": "soulBondToken.assign",
      "offset": [
        2254,
        2264
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "5969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5973": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5975": {
      "op": "SHL"
    },
    "5976": {
      "op": "SUB"
    },
    "5977": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2289
      ],
      "op": "AND",
      "path": "26"
    },
    "5978": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2289
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5979": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2299
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x2D888869"
    },
    "5984": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2299
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5985": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2289
      ],
      "op": "DUP3",
      "path": "26"
    },
    "5986": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2289
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5987": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2307
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x3E10510B"
    },
    "5992": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2307
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5993": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1774"
    },
    "5996": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "5997": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "5999": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "ADD",
      "path": "26"
    },
    "6000": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x30CE"
    },
    "6003": {
      "fn": "soulBondToken.assign",
      "jump": "i",
      "offset": [
        2300,
        2337
      ],
      "op": "JUMP",
      "path": "26"
    },
    "6004": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6005": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "6007": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6009": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6010": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6011": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6012": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "SUB",
      "path": "26"
    },
    "6013": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6014": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "DUP7",
      "path": "26"
    },
    "6015": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "GAS",
      "path": "26"
    },
    "6016": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "6017": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "6018": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6019": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "6020": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1791"
    },
    "6023": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "6024": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "6025": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "6027": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6028": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "6029": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "6030": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "6032": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "REVERT",
      "path": "26"
    },
    "6033": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6034": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "POP",
      "path": "26"
    },
    "6035": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "POP",
      "path": "26"
    },
    "6036": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "POP",
      "path": "26"
    },
    "6037": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "POP",
      "path": "26"
    },
    "6038": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6040": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6041": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "6042": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "6044": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6045": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "6046": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "6048": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "6049": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6050": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6051": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "ADD",
      "path": "26"
    },
    "6052": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6054": {
      "op": "NOT"
    },
    "6055": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "AND",
      "path": "26"
    },
    "6056": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6057": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "ADD",
      "path": "26"
    },
    "6058": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6060": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6061": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x17B9"
    },
    "6064": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6065": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6066": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6067": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "ADD",
      "path": "26"
    },
    "6068": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6069": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3153"
    },
    "6072": {
      "fn": "soulBondToken.assign",
      "jump": "i",
      "offset": [
        2300,
        2337
      ],
      "op": "JUMP",
      "path": "26"
    },
    "6073": {
      "fn": "soulBondToken.assign",
      "offset": [
        2300,
        2337
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6074": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6076": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6077": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6078": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xFFFFFFFF"
    },
    "6083": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "AND",
      "path": "26"
    },
    "6084": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xE0"
    },
    "6086": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "SHL",
      "path": "26"
    },
    "6087": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6088": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6089": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "6091": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "ADD",
      "path": "26"
    },
    "6092": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x17D5"
    },
    "6095": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6096": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6097": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2AD8"
    },
    "6100": {
      "fn": "soulBondToken.assign",
      "jump": "i",
      "offset": [
        2286,
        2338
      ],
      "op": "JUMP",
      "path": "26"
    },
    "6101": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6102": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "6104": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6106": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6107": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6108": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6109": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "SUB",
      "path": "26"
    },
    "6110": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6111": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "DUP7",
      "path": "26"
    },
    "6112": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "GAS",
      "path": "26"
    },
    "6113": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "6114": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "6115": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6116": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "6117": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x17F2"
    },
    "6120": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "6121": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "6122": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "6124": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6125": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "6126": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "6127": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "6129": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "REVERT",
      "path": "26"
    },
    "6130": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6131": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "POP",
      "path": "26"
    },
    "6132": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "POP",
      "path": "26"
    },
    "6133": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "POP",
      "path": "26"
    },
    "6134": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "POP",
      "path": "26"
    },
    "6135": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6137": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6138": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "6139": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "6141": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "NOT",
      "path": "26"
    },
    "6142": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "6144": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6145": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "ADD",
      "path": "26"
    },
    "6146": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "AND",
      "path": "26"
    },
    "6147": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6148": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "ADD",
      "path": "26"
    },
    "6149": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6150": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6152": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6153": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "POP",
      "path": "26"
    },
    "6154": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6155": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "ADD",
      "path": "26"
    },
    "6156": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6157": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1816"
    },
    "6160": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6161": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6162": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x319C"
    },
    "6165": {
      "fn": "soulBondToken.assign",
      "jump": "i",
      "offset": [
        2286,
        2338
      ],
      "op": "JUMP",
      "path": "26"
    },
    "6166": {
      "fn": "soulBondToken.assign",
      "offset": [
        2286,
        2338
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6167": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 46,
      "value": "0x40"
    },
    "6169": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6170": {
      "op": "PUSH4",
      "value": "0x2FB1E45"
    },
    "6175": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6177": {
      "op": "SHL"
    },
    "6178": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6179": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6180": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "6182": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6183": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "ADD",
      "path": "26"
    },
    "6184": {
      "op": "DUP9"
    },
    "6185": {
      "op": "SWAP1"
    },
    "6186": {
      "op": "MSTORE"
    },
    "6187": {
      "fn": "soulBondToken.assign",
      "offset": [
        2254,
        2348
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6188": {
      "fn": "soulBondToken.assign",
      "offset": [
        2254,
        2348
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6189": {
      "op": "POP"
    },
    "6190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6194": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6196": {
      "op": "SHL"
    },
    "6197": {
      "op": "SUB"
    },
    "6198": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2396
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6199": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2396
      ],
      "op": "AND",
      "path": "26"
    },
    "6200": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2396
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6201": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2396
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x5F63C8A"
    },
    "6206": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2396
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6207": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6209": {
      "op": "ADD"
    },
    "6210": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "6212": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6214": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6215": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6216": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "DUP4",
      "path": "26"
    },
    "6217": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "SUB",
      "path": "26"
    },
    "6218": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6219": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "DUP7",
      "path": "26"
    },
    "6220": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "GAS",
      "path": "26"
    },
    "6221": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "6222": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "6223": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6224": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "6225": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x185E"
    },
    "6228": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "6229": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "6230": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "6232": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6233": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "6234": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "6235": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "6237": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "REVERT",
      "path": "26"
    },
    "6238": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6239": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "POP",
      "path": "26"
    },
    "6240": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "POP",
      "path": "26"
    },
    "6241": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "POP",
      "path": "26"
    },
    "6242": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "POP",
      "path": "26"
    },
    "6243": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6245": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6246": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "6247": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "6249": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "NOT",
      "path": "26"
    },
    "6250": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "6252": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6253": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "ADD",
      "path": "26"
    },
    "6254": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "AND",
      "path": "26"
    },
    "6255": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6256": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "ADD",
      "path": "26"
    },
    "6257": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "DUP1",
      "path": "26"
    },
    "6258": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6260": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6261": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "POP",
      "path": "26"
    },
    "6262": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6263": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "ADD",
      "path": "26"
    },
    "6264": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6265": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1882"
    },
    "6268": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "6269": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "6270": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x319C"
    },
    "6273": {
      "fn": "soulBondToken.assign",
      "jump": "i",
      "offset": [
        2380,
        2405
      ],
      "op": "JUMP",
      "path": "26"
    },
    "6274": {
      "fn": "soulBondToken.assign",
      "offset": [
        2380,
        2405
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6279": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6281": {
      "op": "SHL"
    },
    "6282": {
      "op": "SUB"
    },
    "6283": {
      "fn": "soulBondToken.assign",
      "offset": [
        2366,
        2405
      ],
      "op": "AND",
      "path": "26"
    },
    "6284": {
      "fn": "soulBondToken.assign",
      "offset": [
        2366,
        2376
      ],
      "op": "CALLER",
      "path": "26"
    },
    "6285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6291": {
      "op": "SHL"
    },
    "6292": {
      "op": "SUB"
    },
    "6293": {
      "fn": "soulBondToken.assign",
      "offset": [
        2366,
        2405
      ],
      "op": "AND",
      "path": "26"
    },
    "6294": {
      "branch": 118,
      "fn": "soulBondToken.assign",
      "offset": [
        2366,
        2405
      ],
      "op": "EQ",
      "path": "26"
    },
    "6295": {
      "fn": "soulBondToken.assign",
      "offset": [
        2358,
        2423
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x18D2"
    },
    "6298": {
      "branch": 118,
      "fn": "soulBondToken.assign",
      "offset": [
        2358,
        2423
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "6299": {
      "fn": "soulBondToken.assign",
      "offset": [
        2358,
        2423
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "6301": {
      "fn": "soulBondToken.assign",
      "offset": [
        2358,
        2423
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "6302": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6306": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6308": {
      "op": "SHL"
    },
    "6309": {
      "fn": "soulBondToken.assign",
      "offset": [
        2358,
        2423
      ],
      "op": "DUP2",
      "path": "26"
    },
    "6310": {
      "fn": "soulBondToken.assign",
      "offset": [
        2358,
        2423
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "6311": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6313": {
      "fn": "soulBondToken.assign",
      "offset": [
        2358,
        2423
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "6315": {
      "fn": "soulBondToken.assign",
      "offset": [
        2358,
        2423
      ],
      "op": "DUP3",
      "path": "26"
    },
    "6316": {
      "fn": "soulBondToken.assign",
      "offset": [
        2358,
        2423
      ],
      "op": "ADD",
      "path": "26"
    },
    "6317": {
      "op": "MSTORE"
    },
    "6318": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "6320": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6322": {
      "op": "DUP3"
    },
    "6323": {
      "op": "ADD"
    },
    "6324": {
      "op": "MSTORE"
    },
    "6325": {
      "op": "PUSH13",
      "value": "0x37B7363C9037B832B930BA37B9"
    },
    "6339": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "6341": {
      "op": "SHL"
    },
    "6342": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6344": {
      "op": "DUP3"
    },
    "6345": {
      "op": "ADD"
    },
    "6346": {
      "op": "MSTORE"
    },
    "6347": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6349": {
      "op": "ADD"
    },
    "6350": {
      "fn": "soulBondToken.assign",
      "offset": [
        2358,
        2423
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x48B"
    },
    "6353": {
      "op": "JUMP"
    },
    "6354": {
      "fn": "soulBondToken.assign",
      "offset": [
        2358,
        2423
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "6355": {
      "fn": "soulBondToken.assign",
      "offset": [
        2433,
        2478
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 47,
      "value": "0xB43"
    },
    "6358": {
      "fn": "soulBondToken.assign",
      "offset": [
        2440,
        2443
      ],
      "op": "DUP8",
      "path": "26"
    },
    "6359": {
      "fn": "soulBondToken.assign",
      "offset": [
        2445,
        2452
      ],
      "op": "DUP8",
      "path": "26"
    },
    "6360": {
      "fn": "soulBondToken.assign",
      "offset": [
        2454,
        2461
      ],
      "op": "DUP8",
      "path": "26"
    },
    "6361": {
      "fn": "soulBondToken.assign",
      "offset": [
        2454,
        2461
      ],
      "op": "DUP8",
      "path": "26"
    },
    "6362": {
      "fn": "soulBondToken.assign",
      "offset": [
        2463,
        2477
      ],
      "op": "DUP8",
      "path": "26"
    },
    "6363": {
      "fn": "soulBondToken.assign",
      "offset": [
        2463,
        2477
      ],
      "op": "DUP8",
      "path": "26"
    },
    "6364": {
      "fn": "soulBondToken.assign",
      "offset": [
        2433,
        2439
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1C26"
    },
    "6367": {
      "fn": "soulBondToken.assign",
      "jump": "i",
      "offset": [
        2433,
        2478
      ],
      "op": "JUMP",
      "path": "26"
    },
    "6368": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6369": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1672,
        1676
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6375": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6377": {
      "op": "SHL"
    },
    "6378": {
      "op": "SUB"
    },
    "6379": {
      "op": "NOT"
    },
    "6380": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 48
    },
    "6381": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "AND",
      "path": "4"
    },
    "6382": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "6387": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6389": {
      "op": "SHL"
    },
    "6390": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "EQ",
      "path": "4"
    },
    "6391": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6392": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1911"
    },
    "6395": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "6396": {
      "op": "POP"
    },
    "6397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6401": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6403": {
      "op": "SHL"
    },
    "6404": {
      "op": "SUB"
    },
    "6405": {
      "op": "NOT"
    },
    "6406": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6407": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "AND",
      "path": "4"
    },
    "6408": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "6413": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6415": {
      "op": "SHL"
    },
    "6416": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "EQ",
      "path": "4"
    },
    "6417": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6418": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6419": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x358"
    },
    "6422": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "6423": {
      "op": "POP"
    },
    "6424": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "6429": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6431": {
      "op": "SHL"
    },
    "6432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6436": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6438": {
      "op": "SHL"
    },
    "6439": {
      "op": "SUB"
    },
    "6440": {
      "op": "NOT"
    },
    "6441": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "14",
      "statement": 49
    },
    "6442": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "14"
    },
    "6443": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "14"
    },
    "6444": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1827,
        1863
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x358"
    },
    "6447": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6448": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11657,
        11790
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6449": {
      "fn": "ERC721._exists",
      "offset": [
        7099,
        7103
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6451": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6452": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6453": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6454": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7129
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "6456": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "6458": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6459": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6461": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6462": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "6463": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "6464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6470": {
      "op": "SHL"
    },
    "6471": {
      "op": "SUB"
    },
    "6472": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "AND",
      "path": "4"
    },
    "6473": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 50,
      "value": "0x198F"
    },
    "6476": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "6477": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6479": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6480": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6484": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6486": {
      "op": "SHL"
    },
    "6487": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6488": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6489": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6491": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "6493": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6494": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "ADD",
      "path": "4"
    },
    "6495": {
      "op": "MSTORE"
    },
    "6496": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "6498": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6500": {
      "op": "DUP3"
    },
    "6501": {
      "op": "ADD"
    },
    "6502": {
      "op": "MSTORE"
    },
    "6503": {
      "op": "PUSH24",
      "value": "0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
    },
    "6528": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "6530": {
      "op": "SHL"
    },
    "6531": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6533": {
      "op": "DUP3"
    },
    "6534": {
      "op": "ADD"
    },
    "6535": {
      "op": "MSTORE"
    },
    "6536": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6538": {
      "op": "ADD"
    },
    "6539": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x48B"
    },
    "6542": {
      "op": "JUMP"
    },
    "6543": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6544": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11657,
        11790
      ],
      "op": "POP",
      "path": "4"
    },
    "6545": {
      "fn": "ERC721._requireMinted",
      "jump": "o",
      "offset": [
        11657,
        11790
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6546": {
      "fn": "ERC721._approve",
      "offset": [
        10959,
        11130
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6547": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 51,
      "value": "0x0"
    },
    "6549": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6550": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6551": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6552": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11048
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "6554": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "6556": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6557": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6559": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6560": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "6561": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6562": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "6563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6567": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6569": {
      "op": "SHL"
    },
    "6570": {
      "op": "SUB"
    },
    "6571": {
      "op": "NOT"
    },
    "6572": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "AND",
      "path": "4"
    },
    "6573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6577": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6579": {
      "op": "SHL"
    },
    "6580": {
      "op": "SUB"
    },
    "6581": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "DUP5",
      "path": "4"
    },
    "6582": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "AND",
      "path": "4"
    },
    "6583": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6584": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6585": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "OR",
      "path": "4"
    },
    "6586": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6587": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6588": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "6589": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6590": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6591": {
      "fn": "ERC721._approve",
      "offset": [
        11086,
        11109
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 52,
      "value": "0x19C7"
    },
    "6594": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6595": {
      "fn": "ERC721._approve",
      "offset": [
        11086,
        11100
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8A1"
    },
    "6598": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11086,
        11109
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6599": {
      "fn": "ERC721._approve",
      "offset": [
        11086,
        11109
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6604": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6606": {
      "op": "SHL"
    },
    "6607": {
      "op": "SUB"
    },
    "6608": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "AND",
      "path": "4"
    },
    "6609": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "6642": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6644": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6645": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6647": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6648": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6649": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "6650": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "SUB",
      "path": "4"
    },
    "6651": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6652": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "LOG4",
      "path": "4"
    },
    "6653": {
      "fn": "ERC721._approve",
      "offset": [
        10959,
        11130
      ],
      "op": "POP",
      "path": "4"
    },
    "6654": {
      "fn": "ERC721._approve",
      "offset": [
        10959,
        11130
      ],
      "op": "POP",
      "path": "4"
    },
    "6655": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        10959,
        11130
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6656": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7317,
        7578
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6657": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7410,
        7414
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6659": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7426,
        7439
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6660": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7442,
        7465
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A0C"
    },
    "6663": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7457,
        7464
      ],
      "op": "DUP4",
      "path": "4"
    },
    "6664": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7442,
        7456
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8A1"
    },
    "6667": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7442,
        7465
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6668": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7442,
        7465
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6669": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7426,
        7465
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6670": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7426,
        7465
      ],
      "op": "POP",
      "path": "4"
    },
    "6671": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7494,
        7499
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 53
    },
    "6672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6676": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6678": {
      "op": "SHL"
    },
    "6679": {
      "op": "SUB"
    },
    "6680": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7499
      ],
      "op": "AND",
      "path": "4"
    },
    "6681": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7490
      ],
      "op": "DUP5",
      "path": "4"
    },
    "6682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6686": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6688": {
      "op": "SHL"
    },
    "6689": {
      "op": "SUB"
    },
    "6690": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7499
      ],
      "op": "AND",
      "path": "4"
    },
    "6691": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7499
      ],
      "op": "EQ",
      "path": "4"
    },
    "6692": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7535
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6693": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7535
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A53"
    },
    "6696": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7535
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "6697": {
      "op": "POP"
    },
    "6698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6702": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6704": {
      "op": "SHL"
    },
    "6705": {
      "op": "SUB"
    },
    "6706": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6707": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6708": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "AND",
      "path": "4"
    },
    "6709": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4485,
        4489
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6711": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6712": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6713": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6714": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4526
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "6716": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "6718": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6719": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6720": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6721": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6723": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6724": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP4",
      "path": "4"
    },
    "6725": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "6726": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "6727": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "DUP9",
      "path": "4"
    },
    "6728": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "AND",
      "path": "4"
    },
    "6729": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "DUP4",
      "path": "4"
    },
    "6730": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6731": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "6732": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6733": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6734": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "6735": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "6736": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "6738": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "AND",
      "path": "4"
    },
    "6739": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7503,
        7535
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6740": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7570
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6741": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7570
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A77"
    },
    "6744": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7570
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "6745": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7570
      ],
      "op": "POP",
      "path": "4"
    },
    "6746": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7563,
        7570
      ],
      "op": "DUP4",
      "path": "4"
    },
    "6747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6751": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6753": {
      "op": "SHL"
    },
    "6754": {
      "op": "SUB"
    },
    "6755": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7539,
        7570
      ],
      "op": "AND",
      "path": "4"
    },
    "6756": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7539,
        7559
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A6C"
    },
    "6759": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7558
      ],
      "op": "DUP5",
      "path": "4"
    },
    "6760": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7539,
        7550
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3F0"
    },
    "6763": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7539,
        7559
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6764": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7539,
        7559
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6769": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6771": {
      "op": "SHL"
    },
    "6772": {
      "op": "SUB"
    },
    "6773": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7539,
        7570
      ],
      "op": "AND",
      "path": "4"
    },
    "6774": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7539,
        7570
      ],
      "op": "EQ",
      "path": "4"
    },
    "6775": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7570
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6776": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7475,
        7571
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "6777": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7317,
        7578
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "6778": {
      "op": "POP"
    },
    "6779": {
      "op": "POP"
    },
    "6780": {
      "op": "POP"
    },
    "6781": {
      "op": "POP"
    },
    "6782": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7317,
        7578
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6783": {
      "fn": "ERC721._transfer",
      "offset": [
        10242,
        10847
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6784": {
      "fn": "ERC721._transfer",
      "offset": [
        10396,
        10400
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 54
    },
    "6785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6789": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6791": {
      "op": "SHL"
    },
    "6792": {
      "op": "SUB"
    },
    "6793": {
      "fn": "ERC721._transfer",
      "offset": [
        10369,
        10400
      ],
      "op": "AND",
      "path": "4"
    },
    "6794": {
      "fn": "ERC721._transfer",
      "offset": [
        10369,
        10392
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A92"
    },
    "6797": {
      "fn": "ERC721._transfer",
      "offset": [
        10384,
        10391
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6798": {
      "fn": "ERC721._transfer",
      "offset": [
        10369,
        10383
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8A1"
    },
    "6801": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10369,
        10392
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6802": {
      "fn": "ERC721._transfer",
      "offset": [
        10369,
        10392
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6807": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6809": {
      "op": "SHL"
    },
    "6810": {
      "op": "SUB"
    },
    "6811": {
      "fn": "ERC721._transfer",
      "offset": [
        10369,
        10400
      ],
      "op": "AND",
      "path": "4"
    },
    "6812": {
      "branch": 133,
      "fn": "ERC721._transfer",
      "offset": [
        10369,
        10400
      ],
      "op": "EQ",
      "path": "4"
    },
    "6813": {
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1AF6"
    },
    "6816": {
      "branch": 133,
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "6817": {
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6819": {
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6820": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6824": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6826": {
      "op": "SHL"
    },
    "6827": {
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6828": {
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6829": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6831": {
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "6833": {
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6834": {
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "ADD",
      "path": "4"
    },
    "6835": {
      "op": "MSTORE"
    },
    "6836": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "6838": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6840": {
      "op": "DUP3"
    },
    "6841": {
      "op": "ADD"
    },
    "6842": {
      "op": "MSTORE"
    },
    "6843": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722066726F6D20696E636F727265637420"
    },
    "6876": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6878": {
      "op": "DUP3"
    },
    "6879": {
      "op": "ADD"
    },
    "6880": {
      "op": "MSTORE"
    },
    "6881": {
      "op": "PUSH5",
      "value": "0x37BBB732B9"
    },
    "6887": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "6889": {
      "op": "SHL"
    },
    "6890": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6892": {
      "op": "DUP3"
    },
    "6893": {
      "op": "ADD"
    },
    "6894": {
      "op": "MSTORE"
    },
    "6895": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6897": {
      "op": "ADD"
    },
    "6898": {
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x48B"
    },
    "6901": {
      "op": "JUMP"
    },
    "6902": {
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6907": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6909": {
      "op": "SHL"
    },
    "6910": {
      "op": "SUB"
    },
    "6911": {
      "fn": "ERC721._transfer",
      "offset": [
        10460,
        10476
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 55
    },
    "6912": {
      "branch": 134,
      "fn": "ERC721._transfer",
      "offset": [
        10460,
        10476
      ],
      "op": "AND",
      "path": "4"
    },
    "6913": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B58"
    },
    "6916": {
      "branch": 134,
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "6917": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6919": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6920": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6924": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6926": {
      "op": "SHL"
    },
    "6927": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6928": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6929": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6931": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "6933": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6934": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "ADD",
      "path": "4"
    },
    "6935": {
      "op": "MSTORE"
    },
    "6936": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6938": {
      "op": "DUP1"
    },
    "6939": {
      "op": "DUP3"
    },
    "6940": {
      "op": "ADD"
    },
    "6941": {
      "op": "MSTORE"
    },
    "6942": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "6975": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6977": {
      "op": "DUP3"
    },
    "6978": {
      "op": "ADD"
    },
    "6979": {
      "op": "MSTORE"
    },
    "6980": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "6985": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6987": {
      "op": "SHL"
    },
    "6988": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6990": {
      "op": "DUP3"
    },
    "6991": {
      "op": "ADD"
    },
    "6992": {
      "op": "MSTORE"
    },
    "6993": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6995": {
      "op": "ADD"
    },
    "6996": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x48B"
    },
    "6999": {
      "op": "JUMP"
    },
    "7000": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7001": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10567
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 56,
      "value": "0x1B63"
    },
    "7004": {
      "fn": "ERC721._transfer",
      "offset": [
        10549,
        10553
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7005": {
      "fn": "ERC721._transfer",
      "offset": [
        10555,
        10557
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7006": {
      "fn": "ERC721._transfer",
      "offset": [
        10559,
        10566
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7007": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10548
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21A2"
    },
    "7010": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10528,
        10567
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7011": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10567
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7012": {
      "fn": "ERC721._transfer",
      "offset": [
        10629,
        10658
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 57,
      "value": "0x1B6E"
    },
    "7015": {
      "fn": "ERC721._transfer",
      "offset": [
        10646,
        10647
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7017": {
      "fn": "ERC721._transfer",
      "offset": [
        10650,
        10657
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7018": {
      "fn": "ERC721._transfer",
      "offset": [
        10629,
        10637
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1992"
    },
    "7021": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10629,
        10658
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7022": {
      "fn": "ERC721._transfer",
      "offset": [
        10629,
        10658
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7027": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7029": {
      "op": "SHL"
    },
    "7030": {
      "op": "SUB"
    },
    "7031": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 58
    },
    "7032": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "AND",
      "path": "4"
    },
    "7033": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7035": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7036": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7037": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7038": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10678
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "7040": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "7042": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7043": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7045": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7046": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "7047": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10689
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7048": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10689
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "7049": {
      "fn": "ERC721._transfer",
      "offset": [
        10688,
        10689
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "7051": {
      "fn": "ERC721._transfer",
      "offset": [
        10688,
        10689
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "7052": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7053": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10689
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B97"
    },
    "7056": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10689
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7057": {
      "fn": "ERC721._transfer",
      "offset": [
        10688,
        10689
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7058": {
      "fn": "ERC721._transfer",
      "offset": [
        10688,
        10689
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7059": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10689
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x389C"
    },
    "7062": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10669,
        10689
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7063": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10689
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7064": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10689
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7065": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10689
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7066": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10689
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "7067": {
      "op": "POP"
    },
    "7068": {
      "op": "POP"
    },
    "7069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7073": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7075": {
      "op": "SHL"
    },
    "7076": {
      "op": "SUB"
    },
    "7077": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 59
    },
    "7078": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "AND",
      "path": "4"
    },
    "7079": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7081": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7082": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7083": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7084": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10708
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "7086": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "7088": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7089": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7091": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7092": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "7093": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10717
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7094": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10717
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "7095": {
      "fn": "ERC721._transfer",
      "offset": [
        10716,
        10717
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "7097": {
      "fn": "ERC721._transfer",
      "offset": [
        10716,
        10717
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "7098": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7099": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10717
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1BC5"
    },
    "7102": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10717
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7103": {
      "fn": "ERC721._transfer",
      "offset": [
        10716,
        10717
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7104": {
      "fn": "ERC721._transfer",
      "offset": [
        10716,
        10717
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7105": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10717
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x38B3"
    },
    "7108": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10699,
        10717
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7109": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10717
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7110": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10717
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7111": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10717
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7112": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10717
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "7113": {
      "op": "POP"
    },
    "7114": {
      "op": "POP"
    },
    "7115": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 60,
      "value": "0x0"
    },
    "7117": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7118": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7119": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7120": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10734
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "7122": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "7124": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7125": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7127": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7128": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7129": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "7130": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7131": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "7132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7136": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7138": {
      "op": "SHL"
    },
    "7139": {
      "op": "SUB"
    },
    "7140": {
      "op": "NOT"
    },
    "7141": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "AND",
      "path": "4"
    },
    "7142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7148": {
      "op": "SHL"
    },
    "7149": {
      "op": "SUB"
    },
    "7150": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "DUP7",
      "path": "4"
    },
    "7151": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7152": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "AND",
      "path": "4"
    },
    "7153": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7154": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7155": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "OR",
      "path": "4"
    },
    "7156": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7157": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "7158": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "7159": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        10791
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 61
    },
    "7160": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        10791
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "7161": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7162": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "7163": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        10791
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7164": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        10791
      ],
      "op": "DUP8",
      "path": "4"
    },
    "7165": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        10791
      ],
      "op": "AND",
      "path": "4"
    },
    "7166": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        10791
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7167": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        10791
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "7200": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        10791
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7201": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        10791
      ],
      "op": "LOG4",
      "path": "4"
    },
    "7202": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3874
      ],
      "op": "POP",
      "path": "4"
    },
    "7203": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "POP",
      "path": "4"
    },
    "7204": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "POP",
      "path": "4"
    },
    "7205": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3467,
        3874
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7206": {
      "fn": "soulBondToken._claim",
      "offset": [
        2491,
        3223
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "7207": {
      "fn": "soulBondToken._claim",
      "offset": [
        2651,
        2664
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "7209": {
      "fn": "soulBondToken._claim",
      "offset": [
        2694,
        2701
      ],
      "op": "DUP5",
      "path": "26"
    },
    "7210": {
      "fn": "soulBondToken._claim",
      "offset": [
        2694,
        2701
      ],
      "op": "DUP5",
      "path": "26"
    },
    "7211": {
      "fn": "soulBondToken._claim",
      "offset": [
        2703,
        2717
      ],
      "op": "DUP5",
      "path": "26"
    },
    "7212": {
      "fn": "soulBondToken._claim",
      "offset": [
        2703,
        2717
      ],
      "op": "DUP5",
      "path": "26"
    },
    "7213": {
      "fn": "soulBondToken._claim",
      "offset": [
        2677,
        2718
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "7215": {
      "fn": "soulBondToken._claim",
      "offset": [
        2677,
        2718
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "7216": {
      "fn": "soulBondToken._claim",
      "offset": [
        2677,
        2718
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "7218": {
      "fn": "soulBondToken._claim",
      "offset": [
        2677,
        2718
      ],
      "op": "ADD",
      "path": "26"
    },
    "7219": {
      "fn": "soulBondToken._claim",
      "offset": [
        2677,
        2718
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1C3F"
    },
    "7222": {
      "fn": "soulBondToken._claim",
      "offset": [
        2677,
        2718
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "7223": {
      "fn": "soulBondToken._claim",
      "offset": [
        2677,
        2718
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "7224": {
      "fn": "soulBondToken._claim",
      "offset": [
        2677,
        2718
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "7225": {
      "fn": "soulBondToken._claim",
      "offset": [
        2677,
        2718
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "7226": {
      "fn": "soulBondToken._claim",
      "offset": [
        2677,
        2718
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7227": {
      "fn": "soulBondToken._claim",
      "offset": [
        2677,
        2718
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3205"
    },
    "7230": {
      "fn": "soulBondToken._claim",
      "jump": "i",
      "offset": [
        2677,
        2718
      ],
      "op": "JUMP",
      "path": "26"
    },
    "7231": {
      "fn": "soulBondToken._claim",
      "offset": [
        2677,
        2718
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "7232": {
      "fn": "soulBondToken._claim",
      "offset": [
        2677,
        2718
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "7234": {
      "fn": "soulBondToken._claim",
      "offset": [
        2677,
        2718
      ],
      "op": "DUP1",
      "path": "26"
    },
    "7235": {
      "fn": "soulBondToken._claim",
      "offset": [
        2677,
        2718
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "7236": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7238": {
      "op": "NOT"
    },
    "7239": {
      "fn": "soulBondToken._claim",
      "offset": [
        2677,
        2718
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7240": {
      "fn": "soulBondToken._claim",
      "offset": [
        2677,
        2718
      ],
      "op": "DUP5",
      "path": "26"
    },
    "7241": {
      "fn": "soulBondToken._claim",
      "offset": [
        2677,
        2718
      ],
      "op": "SUB",
      "path": "26"
    },
    "7242": {
      "fn": "soulBondToken._claim",
      "offset": [
        2677,
        2718
      ],
      "op": "ADD",
      "path": "26"
    },
    "7243": {
      "fn": "soulBondToken._claim",
      "offset": [
        2677,
        2718
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7244": {
      "fn": "soulBondToken._claim",
      "offset": [
        2677,
        2718
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7245": {
      "fn": "soulBondToken._claim",
      "offset": [
        2677,
        2718
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "7246": {
      "fn": "soulBondToken._claim",
      "offset": [
        2677,
        2718
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7247": {
      "fn": "soulBondToken._claim",
      "offset": [
        2677,
        2718
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7248": {
      "fn": "soulBondToken._claim",
      "offset": [
        2667,
        2719
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7249": {
      "fn": "soulBondToken._claim",
      "offset": [
        2667,
        2719
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "7250": {
      "fn": "soulBondToken._claim",
      "offset": [
        2677,
        2718
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "7252": {
      "fn": "soulBondToken._claim",
      "offset": [
        2667,
        2719
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "7253": {
      "fn": "soulBondToken._claim",
      "offset": [
        2667,
        2719
      ],
      "op": "DUP4",
      "path": "26"
    },
    "7254": {
      "fn": "soulBondToken._claim",
      "offset": [
        2667,
        2719
      ],
      "op": "ADD",
      "path": "26"
    },
    "7255": {
      "fn": "soulBondToken._claim",
      "offset": [
        2667,
        2719
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "7256": {
      "fn": "soulBondToken._claim",
      "offset": [
        2751,
        2769
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 62,
      "value": "0x0"
    },
    "7258": {
      "fn": "soulBondToken._claim",
      "offset": [
        2751,
        2769
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7259": {
      "fn": "soulBondToken._claim",
      "offset": [
        2751,
        2769
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7260": {
      "fn": "soulBondToken._claim",
      "offset": [
        2751,
        2769
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7261": {
      "fn": "soulBondToken._claim",
      "offset": [
        2751,
        2762
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xD"
    },
    "7263": {
      "fn": "soulBondToken._claim",
      "offset": [
        2751,
        2769
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7264": {
      "fn": "soulBondToken._claim",
      "offset": [
        2751,
        2769
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "7265": {
      "fn": "soulBondToken._claim",
      "offset": [
        2751,
        2769
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7266": {
      "fn": "soulBondToken._claim",
      "offset": [
        2751,
        2769
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "7267": {
      "fn": "soulBondToken._claim",
      "offset": [
        2751,
        2769
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "7268": {
      "fn": "soulBondToken._claim",
      "offset": [
        2751,
        2769
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "7269": {
      "fn": "soulBondToken._claim",
      "offset": [
        2667,
        2719
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7270": {
      "fn": "soulBondToken._claim",
      "offset": [
        2667,
        2719
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "7271": {
      "op": "POP"
    },
    "7272": {
      "fn": "soulBondToken._claim",
      "offset": [
        2751,
        2769
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xFF"
    },
    "7274": {
      "fn": "soulBondToken._claim",
      "offset": [
        2751,
        2769
      ],
      "op": "AND",
      "path": "26"
    },
    "7275": {
      "branch": 119,
      "fn": "soulBondToken._claim",
      "offset": [
        2751,
        2769
      ],
      "op": "DUP1",
      "path": "26"
    },
    "7276": {
      "fn": "soulBondToken._claim",
      "offset": [
        2751,
        2793
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1C98"
    },
    "7279": {
      "branch": 119,
      "fn": "soulBondToken._claim",
      "offset": [
        2751,
        2793
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "7280": {
      "op": "POP"
    },
    "7281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7285": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7287": {
      "op": "SHL"
    },
    "7288": {
      "op": "SUB"
    },
    "7289": {
      "fn": "soulBondToken._claim",
      "offset": [
        2773,
        2786
      ],
      "op": "DUP8",
      "path": "26"
    },
    "7290": {
      "fn": "soulBondToken._claim",
      "offset": [
        2773,
        2786
      ],
      "op": "AND",
      "path": "26"
    },
    "7291": {
      "fn": "soulBondToken._claim",
      "offset": [
        2773,
        2786
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "7293": {
      "fn": "soulBondToken._claim",
      "offset": [
        2773,
        2786
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7294": {
      "fn": "soulBondToken._claim",
      "offset": [
        2773,
        2786
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7295": {
      "fn": "soulBondToken._claim",
      "offset": [
        2773,
        2786
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7296": {
      "fn": "soulBondToken._claim",
      "offset": [
        2773,
        2781
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xF"
    },
    "7298": {
      "fn": "soulBondToken._claim",
      "offset": [
        2773,
        2786
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "7300": {
      "fn": "soulBondToken._claim",
      "offset": [
        2773,
        2786
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7301": {
      "fn": "soulBondToken._claim",
      "offset": [
        2773,
        2786
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7302": {
      "fn": "soulBondToken._claim",
      "offset": [
        2773,
        2786
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7303": {
      "fn": "soulBondToken._claim",
      "offset": [
        2773,
        2786
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "7305": {
      "fn": "soulBondToken._claim",
      "offset": [
        2773,
        2786
      ],
      "op": "DUP1",
      "path": "26"
    },
    "7306": {
      "fn": "soulBondToken._claim",
      "offset": [
        2773,
        2786
      ],
      "op": "DUP4",
      "path": "26"
    },
    "7307": {
      "fn": "soulBondToken._claim",
      "offset": [
        2773,
        2786
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "7308": {
      "fn": "soulBondToken._claim",
      "offset": [
        2773,
        2793
      ],
      "op": "DUP5",
      "path": "26"
    },
    "7309": {
      "fn": "soulBondToken._claim",
      "offset": [
        2773,
        2793
      ],
      "op": "DUP5",
      "path": "26"
    },
    "7310": {
      "fn": "soulBondToken._claim",
      "offset": [
        2773,
        2793
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7311": {
      "fn": "soulBondToken._claim",
      "offset": [
        2773,
        2793
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7312": {
      "fn": "soulBondToken._claim",
      "offset": [
        2773,
        2793
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "7313": {
      "fn": "soulBondToken._claim",
      "offset": [
        2773,
        2793
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7314": {
      "fn": "soulBondToken._claim",
      "offset": [
        2773,
        2793
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7315": {
      "fn": "soulBondToken._claim",
      "offset": [
        2773,
        2793
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "7316": {
      "fn": "soulBondToken._claim",
      "offset": [
        2773,
        2793
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "7317": {
      "fn": "soulBondToken._claim",
      "offset": [
        2773,
        2793
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xFF"
    },
    "7319": {
      "branch": 120,
      "fn": "soulBondToken._claim",
      "offset": [
        2773,
        2793
      ],
      "op": "AND",
      "path": "26"
    },
    "7320": {
      "fn": "soulBondToken._claim",
      "offset": [
        2751,
        2793
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "7321": {
      "fn": "soulBondToken._claim",
      "offset": [
        2730,
        2844
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1CE4"
    },
    "7324": {
      "branch": 120,
      "fn": "soulBondToken._claim",
      "offset": [
        2730,
        2844
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "7325": {
      "fn": "soulBondToken._claim",
      "offset": [
        2730,
        2844
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "7327": {
      "fn": "soulBondToken._claim",
      "offset": [
        2730,
        2844
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "7328": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7332": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7334": {
      "op": "SHL"
    },
    "7335": {
      "fn": "soulBondToken._claim",
      "offset": [
        2730,
        2844
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7336": {
      "fn": "soulBondToken._claim",
      "offset": [
        2730,
        2844
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7337": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7339": {
      "fn": "soulBondToken._claim",
      "offset": [
        2730,
        2844
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "7341": {
      "fn": "soulBondToken._claim",
      "offset": [
        2730,
        2844
      ],
      "op": "DUP3",
      "path": "26"
    },
    "7342": {
      "fn": "soulBondToken._claim",
      "offset": [
        2730,
        2844
      ],
      "op": "ADD",
      "path": "26"
    },
    "7343": {
      "op": "MSTORE"
    },
    "7344": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "7346": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7348": {
      "op": "DUP3"
    },
    "7349": {
      "op": "ADD"
    },
    "7350": {
      "op": "MSTORE"
    },
    "7351": {
      "op": "PUSH32",
      "value": "0x41646472657373206E6F7420696E20616C6C6F77206C69737400000000000000"
    },
    "7384": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7386": {
      "op": "DUP3"
    },
    "7387": {
      "op": "ADD"
    },
    "7388": {
      "op": "MSTORE"
    },
    "7389": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7391": {
      "op": "ADD"
    },
    "7392": {
      "fn": "soulBondToken._claim",
      "offset": [
        2730,
        2844
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x48B"
    },
    "7395": {
      "op": "JUMP"
    },
    "7396": {
      "fn": "soulBondToken._claim",
      "offset": [
        2730,
        2844
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "7397": {
      "fn": "soulBondToken._claim",
      "offset": [
        2855,
        2873
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "7399": {
      "fn": "soulBondToken._claim",
      "offset": [
        2876,
        2889
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1CEF"
    },
    "7402": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "7404": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7405": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7406": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7407": {
      "fn": "soulBondToken._claim",
      "offset": [
        2876,
        2889
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "7408": {
      "fn": "soulBondToken._claim",
      "offset": [
        2899,
        2921
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 63,
      "value": "0x0"
    },
    "7410": {
      "fn": "soulBondToken._claim",
      "offset": [
        2899,
        2921
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7411": {
      "fn": "soulBondToken._claim",
      "offset": [
        2899,
        2921
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7412": {
      "fn": "soulBondToken._claim",
      "offset": [
        2899,
        2921
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7413": {
      "fn": "soulBondToken._claim",
      "offset": [
        2899,
        2909
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xB"
    },
    "7415": {
      "fn": "soulBondToken._claim",
      "offset": [
        2899,
        2921
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "7417": {
      "fn": "soulBondToken._claim",
      "offset": [
        2899,
        2921
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7418": {
      "fn": "soulBondToken._claim",
      "offset": [
        2899,
        2921
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7419": {
      "fn": "soulBondToken._claim",
      "offset": [
        2899,
        2921
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7420": {
      "fn": "soulBondToken._claim",
      "offset": [
        2899,
        2921
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "7422": {
      "fn": "soulBondToken._claim",
      "offset": [
        2899,
        2921
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "7423": {
      "fn": "soulBondToken._claim",
      "offset": [
        2899,
        2921
      ],
      "op": "DUP3",
      "path": "26"
    },
    "7424": {
      "fn": "soulBondToken._claim",
      "offset": [
        2899,
        2921
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7425": {
      "fn": "soulBondToken._claim",
      "offset": [
        2899,
        2921
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "7426": {
      "fn": "soulBondToken._claim",
      "offset": [
        2899,
        2931
      ],
      "op": "DUP11",
      "path": "26"
    },
    "7427": {
      "fn": "soulBondToken._claim",
      "offset": [
        2899,
        2931
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7428": {
      "fn": "soulBondToken._claim",
      "offset": [
        2899,
        2931
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "7429": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "DUP2",
      "path": "26",
      "statement": 64
    },
    "7430": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "7431": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xA0"
    },
    "7433": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "7435": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "DUP11",
      "path": "26"
    },
    "7436": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "ADD",
      "path": "26"
    },
    "7437": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "DUP4",
      "path": "26"
    },
    "7438": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7439": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "DIV",
      "path": "26"
    },
    "7440": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7441": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "7442": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "MUL",
      "path": "26"
    },
    "7443": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7444": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "ADD",
      "path": "26"
    },
    "7445": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "DUP3",
      "path": "26"
    },
    "7446": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "ADD",
      "path": "26"
    },
    "7447": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7448": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "7449": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7450": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x80"
    },
    "7452": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "DUP3",
      "path": "26"
    },
    "7453": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "ADD",
      "path": "26"
    },
    "7454": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "DUP9",
      "path": "26"
    },
    "7455": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7456": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7457": {
      "fn": "soulBondToken._claim",
      "offset": [
        2855,
        2889
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "7458": {
      "fn": "soulBondToken._claim",
      "offset": [
        2855,
        2889
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "7459": {
      "op": "POP"
    },
    "7460": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7461": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "7462": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "DUP3",
      "path": "26"
    },
    "7463": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "7464": {
      "fn": "soulBondToken._claim",
      "offset": [
        2995,
        3002
      ],
      "op": "DUP10",
      "path": "26"
    },
    "7465": {
      "fn": "soulBondToken._claim",
      "offset": [
        2995,
        3002
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7466": {
      "fn": "soulBondToken._claim",
      "offset": [
        2995,
        3002
      ],
      "op": "DUP10",
      "path": "26"
    },
    "7467": {
      "fn": "soulBondToken._claim",
      "offset": [
        2995,
        3002
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7468": {
      "fn": "soulBondToken._claim",
      "offset": [
        2995,
        3002
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7469": {
      "fn": "soulBondToken._claim",
      "offset": [
        2995,
        3002
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7470": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "DUP6",
      "path": "26"
    },
    "7471": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "ADD",
      "path": "26"
    },
    "7472": {
      "fn": "soulBondToken._claim",
      "offset": [
        2995,
        3002
      ],
      "op": "DUP4",
      "path": "26"
    },
    "7473": {
      "fn": "soulBondToken._claim",
      "offset": [
        2995,
        3002
      ],
      "op": "DUP3",
      "path": "26"
    },
    "7474": {
      "fn": "soulBondToken._claim",
      "offset": [
        2995,
        3002
      ],
      "op": "DUP1",
      "path": "26"
    },
    "7475": {
      "fn": "soulBondToken._claim",
      "offset": [
        2995,
        3002
      ],
      "op": "DUP3",
      "path": "26"
    },
    "7476": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "DUP5",
      "path": "26"
    },
    "7477": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "CALLDATACOPY",
      "path": "26"
    },
    "7478": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "7480": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "7481": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "ADD",
      "path": "26"
    },
    "7482": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "7483": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7484": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "7485": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7486": {
      "op": "POP"
    },
    "7487": {
      "op": "POP"
    },
    "7488": {
      "op": "POP"
    },
    "7489": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7490": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "DUP3",
      "path": "26"
    },
    "7491": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7492": {
      "op": "POP"
    },
    "7493": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "7495": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "DUP1",
      "path": "26"
    },
    "7496": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "7497": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "7499": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "7501": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "DUP9",
      "path": "26"
    },
    "7502": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "ADD",
      "path": "26"
    },
    "7503": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7504": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7505": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "DIV",
      "path": "26"
    },
    "7506": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7507": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "MUL",
      "path": "26"
    },
    "7508": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "DUP3",
      "path": "26"
    },
    "7509": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "ADD",
      "path": "26"
    },
    "7510": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7511": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "ADD",
      "path": "26"
    },
    "7512": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7513": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "7514": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7515": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "DUP7",
      "path": "26"
    },
    "7516": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7517": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7518": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "7519": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7520": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "ADD",
      "path": "26"
    },
    "7521": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "7522": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7523": {
      "fn": "soulBondToken._claim",
      "offset": [
        3016,
        3030
      ],
      "op": "DUP8",
      "path": "26"
    },
    "7524": {
      "fn": "soulBondToken._claim",
      "offset": [
        3016,
        3030
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7525": {
      "fn": "soulBondToken._claim",
      "offset": [
        3016,
        3030
      ],
      "op": "DUP8",
      "path": "26"
    },
    "7526": {
      "fn": "soulBondToken._claim",
      "offset": [
        3016,
        3030
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7527": {
      "fn": "soulBondToken._claim",
      "offset": [
        3016,
        3030
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7528": {
      "fn": "soulBondToken._claim",
      "offset": [
        3016,
        3030
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7529": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "DUP5",
      "path": "26"
    },
    "7530": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "ADD",
      "path": "26"
    },
    "7531": {
      "fn": "soulBondToken._claim",
      "offset": [
        3016,
        3030
      ],
      "op": "DUP4",
      "path": "26"
    },
    "7532": {
      "fn": "soulBondToken._claim",
      "offset": [
        3016,
        3030
      ],
      "op": "DUP3",
      "path": "26"
    },
    "7533": {
      "fn": "soulBondToken._claim",
      "offset": [
        3016,
        3030
      ],
      "op": "DUP1",
      "path": "26"
    },
    "7534": {
      "fn": "soulBondToken._claim",
      "offset": [
        3016,
        3030
      ],
      "op": "DUP3",
      "path": "26"
    },
    "7535": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "DUP5",
      "path": "26"
    },
    "7536": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "CALLDATACOPY",
      "path": "26"
    },
    "7537": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "7539": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "7540": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "ADD",
      "path": "26"
    },
    "7541": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "DUP3",
      "path": "26"
    },
    "7542": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7543": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7544": {
      "op": "POP"
    },
    "7545": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "7546": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "DUP6",
      "path": "26"
    },
    "7547": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7548": {
      "op": "POP"
    },
    "7549": {
      "op": "POP"
    },
    "7550": {
      "fn": "soulBondToken._claim",
      "offset": [
        3044,
        3059
      ],
      "op": "TIMESTAMP",
      "path": "26"
    },
    "7551": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "7553": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "DUP1",
      "path": "26"
    },
    "7554": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "DUP6",
      "path": "26"
    },
    "7555": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "ADD",
      "path": "26"
    },
    "7556": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "7557": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7558": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "7559": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7560": {
      "fn": "soulBondToken._claim",
      "offset": [
        3073,
        3089
      ],
      "op": "DUP7",
      "path": "26"
    },
    "7561": {
      "fn": "soulBondToken._claim",
      "offset": [
        3073,
        3089
      ],
      "op": "DUP4",
      "path": "26"
    },
    "7562": {
      "fn": "soulBondToken._claim",
      "offset": [
        3073,
        3089
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7563": {
      "fn": "soulBondToken._claim",
      "offset": [
        3073,
        3082
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xE"
    },
    "7565": {
      "fn": "soulBondToken._claim",
      "offset": [
        3073,
        3089
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7566": {
      "fn": "soulBondToken._claim",
      "offset": [
        3073,
        3089
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7567": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "7569": {
      "fn": "soulBondToken._claim",
      "offset": [
        3073,
        3089
      ],
      "op": "DUP1",
      "path": "26"
    },
    "7570": {
      "fn": "soulBondToken._claim",
      "offset": [
        3073,
        3089
      ],
      "op": "DUP5",
      "path": "26"
    },
    "7571": {
      "fn": "soulBondToken._claim",
      "offset": [
        3073,
        3089
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "7572": {
      "fn": "soulBondToken._claim",
      "offset": [
        3073,
        3089
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "7573": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "7574": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7575": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "ADD",
      "path": "26"
    },
    "7576": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "7577": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7578": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "7579": {
      "fn": "soulBondToken._claim",
      "offset": [
        2967,
        3099
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7580": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        2964
      ],
      "op": "DUP6",
      "path": "26"
    },
    "7581": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        2964
      ],
      "op": "DUP4",
      "path": "26"
    },
    "7582": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        2964
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7583": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        2952
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xC"
    },
    "7585": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        2964
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7586": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        2964
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7587": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        2964
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "7588": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        2964
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7589": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        2964
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "7590": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        2964
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "7591": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "DUP4",
      "path": "26"
    },
    "7592": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "7593": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "DUP1",
      "path": "26"
    },
    "7594": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "7595": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        2964
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "7596": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        2964
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "7597": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1DBB"
    },
    "7600": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "7601": {
      "op": "POP"
    },
    "7602": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        2964
      ],
      "op": "DUP5",
      "path": "26"
    },
    "7603": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        2964
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "7604": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "7605": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "ADD",
      "path": "26"
    },
    "7606": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7607": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x29AD"
    },
    "7610": {
      "fn": "soulBondToken._claim",
      "jump": "i",
      "offset": [
        2941,
        3099
      ],
      "op": "JUMP",
      "path": "26"
    },
    "7611": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "7612": {
      "op": "POP"
    },
    "7613": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "7615": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "DUP3",
      "path": "26"
    },
    "7616": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7617": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "ADD",
      "path": "26"
    },
    "7618": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "7619": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "DUP1",
      "path": "26"
    },
    "7620": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "7621": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1DD4"
    },
    "7624": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "7625": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "7627": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "DUP6",
      "path": "26"
    },
    "7628": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "ADD",
      "path": "26"
    },
    "7629": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "7630": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "ADD",
      "path": "26"
    },
    "7631": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7632": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x29AD"
    },
    "7635": {
      "fn": "soulBondToken._claim",
      "jump": "i",
      "offset": [
        2941,
        3099
      ],
      "op": "JUMP",
      "path": "26"
    },
    "7636": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "7637": {
      "op": "POP"
    },
    "7638": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "7640": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "DUP3",
      "path": "26"
    },
    "7641": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7642": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "ADD",
      "path": "26"
    },
    "7643": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "7644": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x2"
    },
    "7646": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "DUP4",
      "path": "26"
    },
    "7647": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "ADD",
      "path": "26"
    },
    "7648": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "7649": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x60"
    },
    "7651": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7652": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "7653": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "ADD",
      "path": "26"
    },
    "7654": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "7655": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x3"
    },
    "7657": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7658": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "7659": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "ADD",
      "path": "26"
    },
    "7660": {
      "fn": "soulBondToken._claim",
      "offset": [
        2941,
        3099
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "7661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7663": {
      "fn": "soulBondToken._claim",
      "offset": [
        3109,
        3128
      ],
      "op": "DUP9",
      "path": "26",
      "statement": 65
    },
    "7664": {
      "fn": "soulBondToken._claim",
      "offset": [
        3109,
        3128
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7665": {
      "fn": "soulBondToken._claim",
      "offset": [
        3109,
        3128
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7666": {
      "fn": "soulBondToken._claim",
      "offset": [
        3109,
        3119
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xA"
    },
    "7668": {
      "fn": "soulBondToken._claim",
      "offset": [
        3109,
        3128
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "7670": {
      "fn": "soulBondToken._claim",
      "offset": [
        3109,
        3128
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7671": {
      "fn": "soulBondToken._claim",
      "offset": [
        3109,
        3128
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7672": {
      "fn": "soulBondToken._claim",
      "offset": [
        3109,
        3128
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7673": {
      "fn": "soulBondToken._claim",
      "offset": [
        3109,
        3128
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "7674": {
      "fn": "soulBondToken._claim",
      "offset": [
        3109,
        3128
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7675": {
      "fn": "soulBondToken._claim",
      "offset": [
        3109,
        3128
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "7676": {
      "fn": "soulBondToken._claim",
      "offset": [
        3109,
        3145
      ],
      "op": "DUP1",
      "path": "26"
    },
    "7677": {
      "fn": "soulBondToken._claim",
      "offset": [
        3109,
        3145
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "7678": {
      "fn": "soulBondToken._claim",
      "offset": [
        3109,
        3145
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1"
    },
    "7680": {
      "fn": "soulBondToken._claim",
      "offset": [
        3109,
        3145
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7681": {
      "fn": "soulBondToken._claim",
      "offset": [
        3109,
        3145
      ],
      "op": "ADD",
      "path": "26"
    },
    "7682": {
      "fn": "soulBondToken._claim",
      "offset": [
        3109,
        3145
      ],
      "op": "DUP3",
      "path": "26"
    },
    "7683": {
      "fn": "soulBondToken._claim",
      "offset": [
        3109,
        3145
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "7684": {
      "fn": "soulBondToken._claim",
      "offset": [
        3109,
        3145
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7685": {
      "fn": "soulBondToken._claim",
      "offset": [
        3109,
        3145
      ],
      "op": "DUP3",
      "path": "26"
    },
    "7686": {
      "fn": "soulBondToken._claim",
      "offset": [
        3109,
        3145
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7687": {
      "fn": "soulBondToken._claim",
      "offset": [
        3109,
        3145
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "7688": {
      "fn": "soulBondToken._claim",
      "offset": [
        3109,
        3145
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7689": {
      "fn": "soulBondToken._claim",
      "offset": [
        3109,
        3145
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "7690": {
      "fn": "soulBondToken._claim",
      "offset": [
        3109,
        3145
      ],
      "op": "ADD",
      "path": "26"
    },
    "7691": {
      "fn": "soulBondToken._claim",
      "offset": [
        3109,
        3145
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7692": {
      "fn": "soulBondToken._claim",
      "offset": [
        3109,
        3145
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7693": {
      "fn": "soulBondToken._claim",
      "offset": [
        3109,
        3145
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "7694": {
      "fn": "soulBondToken._claim",
      "offset": [
        3155,
        3177
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 66,
      "value": "0x1E17"
    },
    "7697": {
      "fn": "soulBondToken._claim",
      "offset": [
        3161,
        3164
      ],
      "op": "DUP9",
      "path": "26"
    },
    "7698": {
      "fn": "soulBondToken._claim",
      "offset": [
        3134,
        3144
      ],
      "op": "DUP3",
      "path": "26"
    },
    "7699": {
      "fn": "soulBondToken._claim",
      "offset": [
        3155,
        3160
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2516"
    },
    "7702": {
      "fn": "soulBondToken._claim",
      "jump": "i",
      "offset": [
        3155,
        3177
      ],
      "op": "JUMP",
      "path": "26"
    },
    "7703": {
      "fn": "soulBondToken._claim",
      "offset": [
        3155,
        3177
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "7704": {
      "op": "POP"
    },
    "7705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7709": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7711": {
      "op": "SHL"
    },
    "7712": {
      "op": "SUB"
    },
    "7713": {
      "fn": "soulBondToken._claim",
      "offset": [
        3188,
        3201
      ],
      "op": "SWAP1",
      "path": "26",
      "statement": 67
    },
    "7714": {
      "fn": "soulBondToken._claim",
      "offset": [
        3188,
        3201
      ],
      "op": "SWAP7",
      "path": "26"
    },
    "7715": {
      "fn": "soulBondToken._claim",
      "offset": [
        3188,
        3201
      ],
      "op": "AND",
      "path": "26"
    },
    "7716": {
      "fn": "soulBondToken._claim",
      "offset": [
        3211,
        3216
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "7718": {
      "fn": "soulBondToken._claim",
      "offset": [
        3188,
        3201
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7719": {
      "fn": "soulBondToken._claim",
      "offset": [
        3188,
        3201
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7720": {
      "fn": "soulBondToken._claim",
      "offset": [
        3188,
        3201
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7721": {
      "fn": "soulBondToken._claim",
      "offset": [
        3188,
        3196
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xF"
    },
    "7723": {
      "fn": "soulBondToken._claim",
      "offset": [
        3188,
        3201
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "7725": {
      "fn": "soulBondToken._claim",
      "offset": [
        3188,
        3201
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7726": {
      "fn": "soulBondToken._claim",
      "offset": [
        3188,
        3201
      ],
      "op": "DUP2",
      "path": "26"
    },
    "7727": {
      "fn": "soulBondToken._claim",
      "offset": [
        3188,
        3201
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7728": {
      "fn": "soulBondToken._claim",
      "offset": [
        3188,
        3201
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "7730": {
      "fn": "soulBondToken._claim",
      "offset": [
        3188,
        3201
      ],
      "op": "DUP1",
      "path": "26"
    },
    "7731": {
      "fn": "soulBondToken._claim",
      "offset": [
        3188,
        3201
      ],
      "op": "DUP4",
      "path": "26"
    },
    "7732": {
      "fn": "soulBondToken._claim",
      "offset": [
        3188,
        3201
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "7733": {
      "fn": "soulBondToken._claim",
      "offset": [
        3188,
        3208
      ],
      "op": "SWAP9",
      "path": "26"
    },
    "7734": {
      "fn": "soulBondToken._claim",
      "offset": [
        3188,
        3208
      ],
      "op": "DUP4",
      "path": "26"
    },
    "7735": {
      "fn": "soulBondToken._claim",
      "offset": [
        3188,
        3208
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7736": {
      "fn": "soulBondToken._claim",
      "offset": [
        3188,
        3208
      ],
      "op": "SWAP8",
      "path": "26"
    },
    "7737": {
      "fn": "soulBondToken._claim",
      "offset": [
        3188,
        3208
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7738": {
      "fn": "soulBondToken._claim",
      "offset": [
        3188,
        3208
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "7739": {
      "fn": "soulBondToken._claim",
      "offset": [
        3188,
        3208
      ],
      "op": "SWAP6",
      "path": "26"
    },
    "7740": {
      "fn": "soulBondToken._claim",
      "offset": [
        3188,
        3208
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7741": {
      "fn": "soulBondToken._claim",
      "offset": [
        3188,
        3208
      ],
      "op": "SWAP6",
      "path": "26"
    },
    "7742": {
      "fn": "soulBondToken._claim",
      "offset": [
        3188,
        3208
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "7743": {
      "fn": "soulBondToken._claim",
      "offset": [
        3188,
        3216
      ],
      "op": "DUP1",
      "path": "26"
    },
    "7744": {
      "fn": "soulBondToken._claim",
      "offset": [
        3188,
        3216
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "7745": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7747": {
      "op": "NOT"
    },
    "7748": {
      "fn": "soulBondToken._claim",
      "offset": [
        3188,
        3216
      ],
      "op": "AND",
      "path": "26"
    },
    "7749": {
      "fn": "soulBondToken._claim",
      "offset": [
        3188,
        3216
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "7750": {
      "fn": "soulBondToken._claim",
      "offset": [
        3188,
        3216
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "7751": {
      "op": "POP"
    },
    "7752": {
      "op": "POP"
    },
    "7753": {
      "op": "POP"
    },
    "7754": {
      "op": "POP"
    },
    "7755": {
      "op": "POP"
    },
    "7756": {
      "fn": "soulBondToken._claim",
      "jump": "o",
      "offset": [
        2491,
        3223
      ],
      "op": "JUMP",
      "path": "26"
    },
    "7757": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11266,
        11573
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7758": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11416,
        11424
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 68
    },
    "7759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7763": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7765": {
      "op": "SHL"
    },
    "7766": {
      "op": "SUB"
    },
    "7767": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11407,
        11424
      ],
      "op": "AND",
      "path": "4"
    },
    "7768": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11407,
        11412
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7773": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7775": {
      "op": "SHL"
    },
    "7776": {
      "op": "SUB"
    },
    "7777": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11407,
        11424
      ],
      "op": "AND",
      "path": "4"
    },
    "7778": {
      "branch": 135,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11407,
        11424
      ],
      "op": "SUB",
      "path": "4"
    },
    "7779": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EAE"
    },
    "7782": {
      "branch": 135,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "7783": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7785": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "7786": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7790": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7792": {
      "op": "SHL"
    },
    "7793": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7794": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7795": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7797": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "7799": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7800": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "ADD",
      "path": "4"
    },
    "7801": {
      "op": "MSTORE"
    },
    "7802": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "7804": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7806": {
      "op": "DUP3"
    },
    "7807": {
      "op": "ADD"
    },
    "7808": {
      "op": "MSTORE"
    },
    "7809": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "7842": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7844": {
      "op": "DUP3"
    },
    "7845": {
      "op": "ADD"
    },
    "7846": {
      "op": "MSTORE"
    },
    "7847": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7849": {
      "op": "ADD"
    },
    "7850": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x48B"
    },
    "7853": {
      "op": "JUMP"
    },
    "7854": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7859": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7861": {
      "op": "SHL"
    },
    "7862": {
      "op": "SUB"
    },
    "7863": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 69
    },
    "7864": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7865": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "AND",
      "path": "4"
    },
    "7866": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7868": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7869": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7870": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7871": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11482
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "7873": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "7875": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7876": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7877": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7878": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7880": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7881": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7882": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "7883": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "7884": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "DUP8",
      "path": "4"
    },
    "7885": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "AND",
      "path": "4"
    },
    "7886": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7887": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7888": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7889": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "7890": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7891": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7892": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7893": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7894": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7895": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "7896": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7897": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "7898": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7900": {
      "op": "NOT"
    },
    "7901": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "AND",
      "path": "4"
    },
    "7902": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "DUP7",
      "path": "4"
    },
    "7903": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "7904": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "7905": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7906": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7907": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "OR",
      "path": "4"
    },
    "7908": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7909": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7910": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "7911": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 70
    },
    "7912": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "7913": {
      "op": "SWAP2"
    },
    "7914": {
      "op": "DUP3"
    },
    "7915": {
      "op": "MSTORE"
    },
    "7916": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "7949": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7950": {
      "op": "ADD"
    },
    "7951": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7953": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "7954": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7955": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7956": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "SUB",
      "path": "4"
    },
    "7957": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7958": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "LOG3",
      "path": "4"
    },
    "7959": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11266,
        11573
      ],
      "op": "POP",
      "path": "4"
    },
    "7960": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11266,
        11573
      ],
      "op": "POP",
      "path": "4"
    },
    "7961": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11266,
        11573
      ],
      "op": "POP",
      "path": "4"
    },
    "7962": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        11266,
        11573
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7963": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6426,
        6731
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7964": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6576,
        6604
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 71,
      "value": "0x1F26"
    },
    "7967": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6586,
        6590
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7968": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6592,
        6594
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7969": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6596,
        6603
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7970": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6576,
        6585
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A7F"
    },
    "7973": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6576,
        6604
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7974": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6576,
        6604
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7975": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6622,
        6669
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 72,
      "value": "0x1F32"
    },
    "7978": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6645,
        6649
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7979": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6651,
        6653
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7980": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6655,
        6662
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7981": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6664,
        6668
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7982": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6622,
        6644
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2664"
    },
    "7985": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6622,
        6669
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7986": {
      "branch": 136,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6622,
        6669
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7987": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB7E"
    },
    "7990": {
      "branch": 136,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "7991": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7993": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "7994": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7998": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8000": {
      "op": "SHL"
    },
    "8001": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "DUP2",
      "path": "4"
    },
    "8002": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "8003": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "8005": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "ADD",
      "path": "4"
    },
    "8006": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x48B"
    },
    "8009": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8010": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x38CB"
    },
    "8013": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6614,
        6724
      ],
      "op": "JUMP",
      "path": "4"
    },
    "8014": {
      "fn": "Strings.toString",
      "offset": [
        392,
        1095
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8015": {
      "fn": "Strings.toString",
      "offset": [
        448,
        461
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x60"
    },
    "8017": {
      "fn": "Strings.toString",
      "offset": [
        665,
        670
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8018": {
      "fn": "Strings.toString",
      "offset": [
        674,
        675
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8020": {
      "branch": 146,
      "fn": "Strings.toString",
      "offset": [
        665,
        675
      ],
      "op": "SUB",
      "path": "13"
    },
    "8021": {
      "fn": "Strings.toString",
      "offset": [
        661,
        712
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1F75"
    },
    "8024": {
      "branch": 146,
      "fn": "Strings.toString",
      "offset": [
        661,
        712
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "8025": {
      "op": "POP"
    },
    "8026": {
      "op": "POP"
    },
    "8027": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 73,
      "value": "0x40"
    },
    "8029": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8030": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "8031": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8032": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "DUP3",
      "path": "13"
    },
    "8033": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "ADD",
      "path": "13"
    },
    "8034": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8035": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "8036": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8037": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "8039": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8040": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8041": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "8043": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "8045": {
      "op": "SHL"
    },
    "8046": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8048": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "DUP3",
      "path": "13"
    },
    "8049": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "ADD",
      "path": "13"
    },
    "8050": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8051": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8052": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        392,
        1095
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8053": {
      "fn": "Strings.toString",
      "offset": [
        661,
        712
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8054": {
      "fn": "Strings.toString",
      "offset": [
        736,
        741
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8055": {
      "fn": "Strings.toString",
      "offset": [
        721,
        733
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8057": {
      "fn": "Strings.toString",
      "offset": [
        775,
        850
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8058": {
      "fn": "Strings.toString",
      "offset": [
        782,
        791
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8059": {
      "fn": "Strings.toString",
      "offset": [
        782,
        791
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "8060": {
      "fn": "Strings.toString",
      "offset": [
        775,
        850
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1F9F"
    },
    "8063": {
      "fn": "Strings.toString",
      "offset": [
        775,
        850
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "8064": {
      "fn": "Strings.toString",
      "offset": [
        807,
        815
      ],
      "op": "DUP1",
      "path": "13",
      "statement": 74
    },
    "8065": {
      "fn": "Strings.toString",
      "offset": [
        807,
        815
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1F89"
    },
    "8068": {
      "fn": "Strings.toString",
      "offset": [
        807,
        815
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8069": {
      "fn": "Strings.toString",
      "offset": [
        807,
        815
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x323D"
    },
    "8072": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        807,
        815
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8073": {
      "fn": "Strings.toString",
      "offset": [
        807,
        815
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8074": {
      "fn": "Strings.toString",
      "offset": [
        807,
        815
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "8075": {
      "op": "POP"
    },
    "8076": {
      "fn": "Strings.toString",
      "offset": [
        829,
        839
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 75,
      "value": "0x1F98"
    },
    "8079": {
      "fn": "Strings.toString",
      "offset": [
        829,
        839
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8080": {
      "op": "POP"
    },
    "8081": {
      "fn": "Strings.toString",
      "offset": [
        837,
        839
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA"
    },
    "8083": {
      "fn": "Strings.toString",
      "offset": [
        829,
        839
      ],
      "op": "DUP4",
      "path": "13"
    },
    "8084": {
      "fn": "Strings.toString",
      "offset": [
        829,
        839
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3933"
    },
    "8087": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        829,
        839
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8088": {
      "fn": "Strings.toString",
      "offset": [
        829,
        839
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8089": {
      "fn": "Strings.toString",
      "offset": [
        829,
        839
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "8090": {
      "fn": "Strings.toString",
      "offset": [
        829,
        839
      ],
      "op": "POP",
      "path": "13"
    },
    "8091": {
      "fn": "Strings.toString",
      "offset": [
        775,
        850
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1F79"
    },
    "8094": {
      "fn": "Strings.toString",
      "offset": [
        775,
        850
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8095": {
      "fn": "Strings.toString",
      "offset": [
        775,
        850
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8096": {
      "fn": "Strings.toString",
      "offset": [
        859,
        878
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8098": {
      "fn": "Strings.toString",
      "offset": [
        891,
        897
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8099": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH8",
      "path": "13",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8108": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8109": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "GT",
      "path": "13"
    },
    "8110": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "8111": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1FBA"
    },
    "8114": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "8115": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1FBA"
    },
    "8118": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2CF1"
    },
    "8121": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        881,
        898
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8122": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8123": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "8125": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "8126": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8127": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8128": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "DUP3",
      "path": "13"
    },
    "8129": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8130": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8131": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "8133": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "ADD",
      "path": "13"
    },
    "8134": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1F"
    },
    "8136": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "NOT",
      "path": "13"
    },
    "8137": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "AND",
      "path": "13"
    },
    "8138": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8140": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "ADD",
      "path": "13"
    },
    "8141": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "DUP3",
      "path": "13"
    },
    "8142": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "ADD",
      "path": "13"
    },
    "8143": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "8145": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "8146": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8147": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "8148": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1FE4"
    },
    "8151": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "8152": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8154": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "DUP3",
      "path": "13"
    },
    "8155": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "ADD",
      "path": "13"
    },
    "8156": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8157": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8158": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "8159": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "DUP4",
      "path": "13"
    },
    "8160": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "CALLDATACOPY",
      "path": "13"
    },
    "8161": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "ADD",
      "path": "13"
    },
    "8162": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8163": {
      "op": "POP"
    },
    "8164": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8165": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "POP",
      "path": "13"
    },
    "8166": {
      "fn": "Strings.toString",
      "offset": [
        859,
        898
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8167": {
      "fn": "Strings.toString",
      "offset": [
        859,
        898
      ],
      "op": "POP",
      "path": "13"
    },
    "8168": {
      "fn": "Strings.toString",
      "offset": [
        908,
        1058
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8169": {
      "fn": "Strings.toString",
      "offset": [
        915,
        925
      ],
      "op": "DUP5",
      "path": "13"
    },
    "8170": {
      "fn": "Strings.toString",
      "offset": [
        915,
        925
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "8171": {
      "fn": "Strings.toString",
      "offset": [
        908,
        1058
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1A77"
    },
    "8174": {
      "fn": "Strings.toString",
      "offset": [
        908,
        1058
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "8175": {
      "fn": "Strings.toString",
      "offset": [
        941,
        952
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 76,
      "value": "0x1FF9"
    },
    "8178": {
      "fn": "Strings.toString",
      "offset": [
        951,
        952
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x1"
    },
    "8180": {
      "fn": "Strings.toString",
      "offset": [
        941,
        952
      ],
      "op": "DUP4",
      "path": "13"
    },
    "8181": {
      "fn": "Strings.toString",
      "offset": [
        941,
        952
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x389C"
    },
    "8184": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        941,
        952
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8185": {
      "fn": "Strings.toString",
      "offset": [
        941,
        952
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8186": {
      "fn": "Strings.toString",
      "offset": [
        941,
        952
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "8187": {
      "op": "POP"
    },
    "8188": {
      "fn": "Strings.toString",
      "offset": [
        1009,
        1019
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 77,
      "value": "0x2006"
    },
    "8191": {
      "fn": "Strings.toString",
      "offset": [
        1017,
        1019
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA"
    },
    "8193": {
      "fn": "Strings.toString",
      "offset": [
        1009,
        1014
      ],
      "op": "DUP7",
      "path": "13"
    },
    "8194": {
      "fn": "Strings.toString",
      "offset": [
        1009,
        1019
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3947"
    },
    "8197": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        1009,
        1019
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8198": {
      "fn": "Strings.toString",
      "offset": [
        1009,
        1019
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8199": {
      "fn": "Strings.toString",
      "offset": [
        996,
        1020
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2011"
    },
    "8202": {
      "fn": "Strings.toString",
      "offset": [
        996,
        1020
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8203": {
      "fn": "Strings.toString",
      "offset": [
        996,
        998
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x30"
    },
    "8205": {
      "fn": "Strings.toString",
      "offset": [
        996,
        1020
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x38B3"
    },
    "8208": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        996,
        1020
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8209": {
      "fn": "Strings.toString",
      "offset": [
        996,
        1020
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8210": {
      "fn": "Strings.toString",
      "offset": [
        983,
        1022
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xF8"
    },
    "8212": {
      "fn": "Strings.toString",
      "offset": [
        983,
        1022
      ],
      "op": "SHL",
      "path": "13"
    },
    "8213": {
      "fn": "Strings.toString",
      "offset": [
        966,
        972
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8214": {
      "fn": "Strings.toString",
      "offset": [
        973,
        979
      ],
      "op": "DUP4",
      "path": "13"
    },
    "8215": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8216": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "8217": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8218": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "LT",
      "path": "13"
    },
    "8219": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2026"
    },
    "8222": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "8223": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2026"
    },
    "8226": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x30B8"
    },
    "8229": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        966,
        980
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8230": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8231": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "8233": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "ADD",
      "path": "13"
    },
    "8234": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "ADD",
      "path": "13"
    },
    "8235": {
      "fn": "Strings.toString",
      "offset": [
        966,
        1022
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8240": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "8242": {
      "op": "SHL"
    },
    "8243": {
      "op": "SUB"
    },
    "8244": {
      "fn": "Strings.toString",
      "offset": [
        966,
        1022
      ],
      "op": "NOT",
      "path": "13"
    },
    "8245": {
      "fn": "Strings.toString",
      "offset": [
        966,
        1022
      ],
      "op": "AND",
      "path": "13"
    },
    "8246": {
      "fn": "Strings.toString",
      "offset": [
        966,
        1022
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8247": {
      "fn": "Strings.toString",
      "offset": [
        966,
        1022
      ],
      "op": "DUP2",
      "path": "13"
    },
    "8248": {
      "fn": "Strings.toString",
      "offset": [
        966,
        1022
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "8250": {
      "fn": "Strings.toString",
      "offset": [
        966,
        1022
      ],
      "op": "BYTE",
      "path": "13"
    },
    "8251": {
      "fn": "Strings.toString",
      "offset": [
        966,
        1022
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8252": {
      "fn": "Strings.toString",
      "offset": [
        966,
        1022
      ],
      "op": "MSTORE8",
      "path": "13"
    },
    "8253": {
      "op": "POP"
    },
    "8254": {
      "fn": "Strings.toString",
      "offset": [
        1036,
        1047
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 78,
      "value": "0x2048"
    },
    "8257": {
      "fn": "Strings.toString",
      "offset": [
        1045,
        1047
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA"
    },
    "8259": {
      "fn": "Strings.toString",
      "offset": [
        1036,
        1047
      ],
      "op": "DUP7",
      "path": "13"
    },
    "8260": {
      "fn": "Strings.toString",
      "offset": [
        1036,
        1047
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x3933"
    },
    "8263": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        1036,
        1047
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8264": {
      "fn": "Strings.toString",
      "offset": [
        1036,
        1047
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8265": {
      "fn": "Strings.toString",
      "offset": [
        1036,
        1047
      ],
      "op": "SWAP5",
      "path": "13"
    },
    "8266": {
      "fn": "Strings.toString",
      "offset": [
        1036,
        1047
      ],
      "op": "POP",
      "path": "13"
    },
    "8267": {
      "fn": "Strings.toString",
      "offset": [
        908,
        1058
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1FE8"
    },
    "8270": {
      "fn": "Strings.toString",
      "offset": [
        908,
        1058
      ],
      "op": "JUMP",
      "path": "13"
    },
    "8271": {
      "fn": "Base64.encode",
      "offset": [
        505,
        3531
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8272": {
      "fn": "Base64.encode",
      "offset": [
        563,
        576
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "8274": {
      "fn": "Base64.encode",
      "offset": [
        795,
        799
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8275": {
      "fn": "Base64.encode",
      "offset": [
        795,
        806
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8276": {
      "fn": "Base64.encode",
      "offset": [
        810,
        811
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8278": {
      "branch": 126,
      "fn": "Base64.encode",
      "offset": [
        795,
        811
      ],
      "op": "SUB",
      "path": "11"
    },
    "8279": {
      "fn": "Base64.encode",
      "offset": [
        791,
        822
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x206E"
    },
    "8282": {
      "branch": 126,
      "fn": "Base64.encode",
      "offset": [
        791,
        822
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "8283": {
      "op": "POP"
    },
    "8284": {
      "op": "POP"
    },
    "8285": {
      "fn": "Base64.encode",
      "offset": [
        813,
        822
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 79,
      "value": "0x40"
    },
    "8287": {
      "fn": "Base64.encode",
      "offset": [
        813,
        822
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8288": {
      "fn": "Base64.encode",
      "offset": [
        813,
        822
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8289": {
      "fn": "Base64.encode",
      "offset": [
        813,
        822
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "8291": {
      "fn": "Base64.encode",
      "offset": [
        813,
        822
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8292": {
      "fn": "Base64.encode",
      "offset": [
        813,
        822
      ],
      "op": "ADD",
      "path": "11"
    },
    "8293": {
      "fn": "Base64.encode",
      "offset": [
        813,
        822
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8294": {
      "fn": "Base64.encode",
      "offset": [
        813,
        822
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8295": {
      "fn": "Base64.encode",
      "offset": [
        813,
        822
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8298": {
      "fn": "Base64.encode",
      "offset": [
        813,
        822
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8299": {
      "fn": "Base64.encode",
      "offset": [
        813,
        822
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8300": {
      "fn": "Base64.encode",
      "offset": [
        813,
        822
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8301": {
      "fn": "Base64.encode",
      "jump": "o",
      "offset": [
        505,
        3531
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8302": {
      "fn": "Base64.encode",
      "offset": [
        791,
        822
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8303": {
      "fn": "Base64.encode",
      "offset": [
        872,
        891
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8305": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8307": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8308": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8309": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "8311": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "ADD",
      "path": "11"
    },
    "8312": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8314": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8315": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8316": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8318": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8319": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8320": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "8322": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "ADD",
      "path": "11"
    },
    "8323": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x39EB"
    },
    "8326": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8328": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8329": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "CODECOPY",
      "path": "11"
    },
    "8330": {
      "fn": "Base64.encode",
      "offset": [
        872,
        900
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8331": {
      "fn": "Base64.encode",
      "offset": [
        872,
        900
      ],
      "op": "POP",
      "path": "11"
    },
    "8332": {
      "fn": "Base64.encode",
      "offset": [
        1303,
        1323
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8334": {
      "fn": "Base64.encode",
      "offset": [
        1362,
        1363
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "8336": {
      "fn": "Base64.encode",
      "offset": [
        1343,
        1347
      ],
      "op": "DUP5",
      "path": "11"
    },
    "8337": {
      "fn": "Base64.encode",
      "offset": [
        1343,
        1354
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8338": {
      "fn": "Base64.encode",
      "offset": [
        1357,
        1358
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "8340": {
      "fn": "Base64.encode",
      "offset": [
        1343,
        1358
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x209D"
    },
    "8343": {
      "fn": "Base64.encode",
      "offset": [
        1343,
        1358
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8344": {
      "fn": "Base64.encode",
      "offset": [
        1343,
        1358
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8345": {
      "fn": "Base64.encode",
      "offset": [
        1343,
        1358
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x38B3"
    },
    "8348": {
      "fn": "Base64.encode",
      "jump": "i",
      "offset": [
        1343,
        1358
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8349": {
      "fn": "Base64.encode",
      "offset": [
        1343,
        1358
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8350": {
      "fn": "Base64.encode",
      "offset": [
        1342,
        1363
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x20A7"
    },
    "8353": {
      "fn": "Base64.encode",
      "offset": [
        1342,
        1363
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8354": {
      "fn": "Base64.encode",
      "offset": [
        1342,
        1363
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8355": {
      "fn": "Base64.encode",
      "offset": [
        1342,
        1363
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3933"
    },
    "8358": {
      "fn": "Base64.encode",
      "jump": "i",
      "offset": [
        1342,
        1363
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8359": {
      "fn": "Base64.encode",
      "offset": [
        1342,
        1363
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8360": {
      "fn": "Base64.encode",
      "offset": [
        1337,
        1364
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x20B2"
    },
    "8363": {
      "fn": "Base64.encode",
      "offset": [
        1337,
        1364
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8364": {
      "fn": "Base64.encode",
      "offset": [
        1337,
        1338
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "8366": {
      "fn": "Base64.encode",
      "offset": [
        1337,
        1364
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x395B"
    },
    "8369": {
      "fn": "Base64.encode",
      "jump": "i",
      "offset": [
        1337,
        1364
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8370": {
      "fn": "Base64.encode",
      "offset": [
        1337,
        1364
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8371": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "PUSH8",
      "path": "11",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8380": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8381": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "GT",
      "path": "11"
    },
    "8382": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8383": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x20CA"
    },
    "8386": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "8387": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x20CA"
    },
    "8390": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2CF1"
    },
    "8393": {
      "fn": "Base64.encode",
      "jump": "i",
      "offset": [
        1326,
        1365
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8394": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8395": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8397": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8398": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8399": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8400": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "DUP3",
      "path": "11"
    },
    "8401": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8402": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8403": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "8405": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "ADD",
      "path": "11"
    },
    "8406": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "8408": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "NOT",
      "path": "11"
    },
    "8409": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "AND",
      "path": "11"
    },
    "8410": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "8412": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "ADD",
      "path": "11"
    },
    "8413": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "DUP3",
      "path": "11"
    },
    "8414": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "ADD",
      "path": "11"
    },
    "8415": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8417": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8418": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8419": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8420": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x20F4"
    },
    "8423": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "8424": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "8426": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "DUP3",
      "path": "11"
    },
    "8427": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "ADD",
      "path": "11"
    },
    "8428": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8429": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8430": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "8431": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "DUP4",
      "path": "11"
    },
    "8432": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "CALLDATACOPY",
      "path": "11"
    },
    "8433": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "ADD",
      "path": "11"
    },
    "8434": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8435": {
      "op": "POP"
    },
    "8436": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8437": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "POP",
      "path": "11"
    },
    "8438": {
      "fn": "Base64.encode",
      "offset": [
        1303,
        1365
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8439": {
      "fn": "Base64.encode",
      "offset": [
        1303,
        1365
      ],
      "op": "POP",
      "path": "11"
    },
    "8440": {
      "fn": "Base64.encode",
      "offset": [
        1540,
        1541
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "8442": {
      "fn": "Base64.encode",
      "offset": [
        1533,
        1538
      ],
      "op": "DUP3",
      "path": "11"
    },
    "8443": {
      "fn": "Base64.encode",
      "offset": [
        1529,
        1542
      ],
      "op": "ADD",
      "path": "11"
    },
    "8444": {
      "fn": "Base64.encode",
      "offset": [
        1641,
        1643
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "8446": {
      "fn": "Base64.encode",
      "offset": [
        1633,
        1639
      ],
      "op": "DUP3",
      "path": "11"
    },
    "8447": {
      "fn": "Base64.encode",
      "offset": [
        1629,
        1644
      ],
      "op": "ADD",
      "path": "11"
    },
    "8448": {
      "fn": "Base64.encode",
      "offset": [
        1748,
        1752
      ],
      "op": "DUP6",
      "path": "11"
    },
    "8449": {
      "fn": "Base64.encode",
      "offset": [
        1799,
        1803
      ],
      "op": "DUP7",
      "path": "11"
    },
    "8450": {
      "fn": "Base64.encode",
      "offset": [
        1793,
        1804
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8451": {
      "fn": "Base64.encode",
      "offset": [
        1787,
        1791
      ],
      "op": "DUP8",
      "path": "11"
    },
    "8452": {
      "fn": "Base64.encode",
      "offset": [
        1783,
        1805
      ],
      "op": "ADD",
      "path": "11"
    },
    "8453": {
      "fn": "Base64.encode",
      "offset": [
        1711,
        3114
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8454": {
      "fn": "Base64.encode",
      "offset": [
        1832,
        1838
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8455": {
      "fn": "Base64.encode",
      "offset": [
        1823,
        1830
      ],
      "op": "DUP3",
      "path": "11"
    },
    "8456": {
      "fn": "Base64.encode",
      "offset": [
        1820,
        1839
      ],
      "op": "LT",
      "path": "11"
    },
    "8457": {
      "fn": "Base64.encode",
      "offset": [
        1711,
        3114
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8458": {
      "fn": "Base64.encode",
      "offset": [
        1711,
        3114
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2160"
    },
    "8461": {
      "fn": "Base64.encode",
      "offset": [
        1711,
        3114
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "8462": {
      "fn": "Base64.encode",
      "offset": [
        1934,
        1935
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "8464": {
      "fn": "Base64.encode",
      "offset": [
        1925,
        1932
      ],
      "op": "DUP3",
      "path": "11"
    },
    "8465": {
      "fn": "Base64.encode",
      "offset": [
        1921,
        1936
      ],
      "op": "ADD",
      "path": "11"
    },
    "8466": {
      "fn": "Base64.encode",
      "offset": [
        1910,
        1936
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8467": {
      "fn": "Base64.encode",
      "offset": [
        1910,
        1936
      ],
      "op": "POP",
      "path": "11"
    },
    "8468": {
      "fn": "Base64.encode",
      "offset": [
        1972,
        1979
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8469": {
      "fn": "Base64.encode",
      "offset": [
        1966,
        1980
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8470": {
      "fn": "Base64.encode",
      "offset": [
        2615,
        2619
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3F"
    },
    "8472": {
      "fn": "Base64.encode",
      "offset": [
        2607,
        2612
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8473": {
      "fn": "Base64.encode",
      "offset": [
        2603,
        2605
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x12"
    },
    "8475": {
      "fn": "Base64.encode",
      "offset": [
        2599,
        2613
      ],
      "op": "SHR",
      "path": "11"
    },
    "8476": {
      "fn": "Base64.encode",
      "offset": [
        2595,
        2620
      ],
      "op": "AND",
      "path": "11"
    },
    "8477": {
      "fn": "Base64.encode",
      "offset": [
        2585,
        2593
      ],
      "op": "DUP6",
      "path": "11"
    },
    "8478": {
      "fn": "Base64.encode",
      "offset": [
        2581,
        2621
      ],
      "op": "ADD",
      "path": "11"
    },
    "8479": {
      "fn": "Base64.encode",
      "offset": [
        2575,
        2622
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8480": {
      "fn": "Base64.encode",
      "offset": [
        2564,
        2573
      ],
      "op": "DUP5",
      "path": "11"
    },
    "8481": {
      "fn": "Base64.encode",
      "offset": [
        2556,
        2623
      ],
      "op": "MSTORE8",
      "path": "11"
    },
    "8482": {
      "fn": "Base64.encode",
      "offset": [
        2668,
        2669
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "8484": {
      "fn": "Base64.encode",
      "offset": [
        2657,
        2666
      ],
      "op": "DUP5",
      "path": "11"
    },
    "8485": {
      "fn": "Base64.encode",
      "offset": [
        2653,
        2670
      ],
      "op": "ADD",
      "path": "11"
    },
    "8486": {
      "fn": "Base64.encode",
      "offset": [
        2640,
        2670
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "8487": {
      "fn": "Base64.encode",
      "offset": [
        2640,
        2670
      ],
      "op": "POP",
      "path": "11"
    },
    "8488": {
      "fn": "Base64.encode",
      "offset": [
        2758,
        2762
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3F"
    },
    "8490": {
      "fn": "Base64.encode",
      "offset": [
        2750,
        2755
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8491": {
      "fn": "Base64.encode",
      "offset": [
        2746,
        2748
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xC"
    },
    "8493": {
      "fn": "Base64.encode",
      "offset": [
        2742,
        2756
      ],
      "op": "SHR",
      "path": "11"
    },
    "8494": {
      "fn": "Base64.encode",
      "offset": [
        2738,
        2763
      ],
      "op": "AND",
      "path": "11"
    },
    "8495": {
      "fn": "Base64.encode",
      "offset": [
        2728,
        2736
      ],
      "op": "DUP6",
      "path": "11"
    },
    "8496": {
      "fn": "Base64.encode",
      "offset": [
        2724,
        2764
      ],
      "op": "ADD",
      "path": "11"
    },
    "8497": {
      "fn": "Base64.encode",
      "offset": [
        2718,
        2765
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8498": {
      "fn": "Base64.encode",
      "offset": [
        2707,
        2716
      ],
      "op": "DUP5",
      "path": "11"
    },
    "8499": {
      "fn": "Base64.encode",
      "offset": [
        2699,
        2766
      ],
      "op": "MSTORE8",
      "path": "11"
    },
    "8500": {
      "fn": "Base64.encode",
      "offset": [
        2811,
        2812
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "8502": {
      "fn": "Base64.encode",
      "offset": [
        2800,
        2809
      ],
      "op": "DUP5",
      "path": "11"
    },
    "8503": {
      "fn": "Base64.encode",
      "offset": [
        2796,
        2813
      ],
      "op": "ADD",
      "path": "11"
    },
    "8504": {
      "fn": "Base64.encode",
      "offset": [
        2783,
        2813
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "8505": {
      "fn": "Base64.encode",
      "offset": [
        2783,
        2813
      ],
      "op": "POP",
      "path": "11"
    },
    "8506": {
      "fn": "Base64.encode",
      "offset": [
        2900,
        2904
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3F"
    },
    "8508": {
      "fn": "Base64.encode",
      "offset": [
        2892,
        2897
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8509": {
      "fn": "Base64.encode",
      "offset": [
        2889,
        2890
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x6"
    },
    "8511": {
      "fn": "Base64.encode",
      "offset": [
        2885,
        2898
      ],
      "op": "SHR",
      "path": "11"
    },
    "8512": {
      "fn": "Base64.encode",
      "offset": [
        2881,
        2905
      ],
      "op": "AND",
      "path": "11"
    },
    "8513": {
      "fn": "Base64.encode",
      "offset": [
        2871,
        2879
      ],
      "op": "DUP6",
      "path": "11"
    },
    "8514": {
      "fn": "Base64.encode",
      "offset": [
        2867,
        2906
      ],
      "op": "ADD",
      "path": "11"
    },
    "8515": {
      "fn": "Base64.encode",
      "offset": [
        2861,
        2907
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8516": {
      "fn": "Base64.encode",
      "offset": [
        2850,
        2859
      ],
      "op": "DUP5",
      "path": "11"
    },
    "8517": {
      "fn": "Base64.encode",
      "offset": [
        2842,
        2908
      ],
      "op": "MSTORE8",
      "path": "11"
    },
    "8518": {
      "fn": "Base64.encode",
      "offset": [
        2953,
        2954
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "8520": {
      "fn": "Base64.encode",
      "offset": [
        2942,
        2951
      ],
      "op": "DUP5",
      "path": "11"
    },
    "8521": {
      "fn": "Base64.encode",
      "offset": [
        2938,
        2955
      ],
      "op": "ADD",
      "path": "11"
    },
    "8522": {
      "fn": "Base64.encode",
      "offset": [
        2925,
        2955
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "8523": {
      "fn": "Base64.encode",
      "offset": [
        2925,
        2955
      ],
      "op": "POP",
      "path": "11"
    },
    "8524": {
      "fn": "Base64.encode",
      "offset": [
        3034,
        3038
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3F"
    },
    "8526": {
      "fn": "Base64.encode",
      "offset": [
        3027,
        3032
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8527": {
      "fn": "Base64.encode",
      "offset": [
        3023,
        3039
      ],
      "op": "AND",
      "path": "11"
    },
    "8528": {
      "fn": "Base64.encode",
      "offset": [
        3013,
        3021
      ],
      "op": "DUP6",
      "path": "11"
    },
    "8529": {
      "fn": "Base64.encode",
      "offset": [
        3009,
        3040
      ],
      "op": "ADD",
      "path": "11"
    },
    "8530": {
      "fn": "Base64.encode",
      "offset": [
        3003,
        3041
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8531": {
      "fn": "Base64.encode",
      "offset": [
        2992,
        3001
      ],
      "op": "DUP5",
      "path": "11"
    },
    "8532": {
      "fn": "Base64.encode",
      "offset": [
        2984,
        3042
      ],
      "op": "MSTORE8",
      "path": "11"
    },
    "8533": {
      "fn": "Base64.encode",
      "offset": [
        2984,
        3042
      ],
      "op": "POP",
      "path": "11"
    },
    "8534": {
      "fn": "Base64.encode",
      "offset": [
        3087,
        3088
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "8536": {
      "fn": "Base64.encode",
      "offset": [
        3076,
        3085
      ],
      "op": "DUP4",
      "path": "11"
    },
    "8537": {
      "fn": "Base64.encode",
      "offset": [
        3072,
        3089
      ],
      "op": "ADD",
      "path": "11"
    },
    "8538": {
      "fn": "Base64.encode",
      "offset": [
        3059,
        3089
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "8539": {
      "fn": "Base64.encode",
      "offset": [
        3059,
        3089
      ],
      "op": "POP",
      "path": "11"
    },
    "8540": {
      "fn": "Base64.encode",
      "offset": [
        1711,
        3114
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2105"
    },
    "8543": {
      "fn": "Base64.encode",
      "offset": [
        1711,
        3114
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8544": {
      "fn": "Base64.encode",
      "offset": [
        1711,
        3114
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8545": {
      "fn": "Base64.encode",
      "offset": [
        1715,
        1819
      ],
      "op": "POP",
      "path": "11"
    },
    "8546": {
      "fn": "Base64.encode",
      "offset": [
        1715,
        1819
      ],
      "op": "POP",
      "path": "11"
    },
    "8547": {
      "fn": "Base64.encode",
      "offset": [
        3272,
        3273
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "8549": {
      "fn": "Base64.encode",
      "offset": [
        3265,
        3269
      ],
      "op": "DUP7",
      "path": "11"
    },
    "8550": {
      "fn": "Base64.encode",
      "offset": [
        3259,
        3270
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8551": {
      "fn": "Base64.encode",
      "offset": [
        3255,
        3274
      ],
      "op": "MOD",
      "path": "11"
    },
    "8552": {
      "fn": "Base64.encode",
      "offset": [
        3292,
        3293
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "8554": {
      "fn": "Base64.encode",
      "offset": [
        3287,
        3407
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8555": {
      "fn": "Base64.encode",
      "offset": [
        3287,
        3407
      ],
      "op": "EQ",
      "path": "11"
    },
    "8556": {
      "fn": "Base64.encode",
      "offset": [
        3287,
        3407
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x217C"
    },
    "8559": {
      "fn": "Base64.encode",
      "offset": [
        3287,
        3407
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "8560": {
      "fn": "Base64.encode",
      "offset": [
        3425,
        3426
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "8562": {
      "fn": "Base64.encode",
      "offset": [
        3420,
        3491
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8563": {
      "fn": "Base64.encode",
      "offset": [
        3420,
        3491
      ],
      "op": "EQ",
      "path": "11"
    },
    "8564": {
      "fn": "Base64.encode",
      "offset": [
        3420,
        3491
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x218F"
    },
    "8567": {
      "fn": "Base64.encode",
      "offset": [
        3420,
        3491
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "8568": {
      "fn": "Base64.encode",
      "offset": [
        3248,
        3491
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2197"
    },
    "8571": {
      "fn": "Base64.encode",
      "offset": [
        3248,
        3491
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8572": {
      "fn": "Base64.encode",
      "offset": [
        3287,
        3407
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8573": {
      "fn": "Base64.encode",
      "offset": [
        3339,
        3343
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3D"
    },
    "8575": {
      "fn": "Base64.encode",
      "offset": [
        3335,
        3336
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "8577": {
      "fn": "Base64.encode",
      "offset": [
        3324,
        3333
      ],
      "op": "DUP4",
      "path": "11"
    },
    "8578": {
      "fn": "Base64.encode",
      "offset": [
        3320,
        3337
      ],
      "op": "SUB",
      "path": "11"
    },
    "8579": {
      "fn": "Base64.encode",
      "offset": [
        3312,
        3344
      ],
      "op": "MSTORE8",
      "path": "11"
    },
    "8580": {
      "fn": "Base64.encode",
      "offset": [
        3388,
        3392
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3D"
    },
    "8582": {
      "fn": "Base64.encode",
      "offset": [
        3384,
        3385
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "8584": {
      "fn": "Base64.encode",
      "offset": [
        3373,
        3382
      ],
      "op": "DUP4",
      "path": "11"
    },
    "8585": {
      "fn": "Base64.encode",
      "offset": [
        3369,
        3386
      ],
      "op": "SUB",
      "path": "11"
    },
    "8586": {
      "fn": "Base64.encode",
      "offset": [
        3361,
        3393
      ],
      "op": "MSTORE8",
      "path": "11"
    },
    "8587": {
      "fn": "Base64.encode",
      "offset": [
        3287,
        3407
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2197"
    },
    "8590": {
      "fn": "Base64.encode",
      "offset": [
        3287,
        3407
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8591": {
      "fn": "Base64.encode",
      "offset": [
        3420,
        3491
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8592": {
      "fn": "Base64.encode",
      "offset": [
        3472,
        3476
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3D"
    },
    "8594": {
      "fn": "Base64.encode",
      "offset": [
        3468,
        3469
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "8596": {
      "fn": "Base64.encode",
      "offset": [
        3457,
        3466
      ],
      "op": "DUP4",
      "path": "11"
    },
    "8597": {
      "fn": "Base64.encode",
      "offset": [
        3453,
        3470
      ],
      "op": "SUB",
      "path": "11"
    },
    "8598": {
      "fn": "Base64.encode",
      "offset": [
        3445,
        3477
      ],
      "op": "MSTORE8",
      "path": "11"
    },
    "8599": {
      "fn": "Base64.encode",
      "offset": [
        3248,
        3491
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8600": {
      "op": "POP"
    },
    "8601": {
      "fn": "Base64.encode",
      "offset": [
        3518,
        3524
      ],
      "op": "SWAP2",
      "path": "11",
      "statement": 80
    },
    "8602": {
      "fn": "Base64.encode",
      "offset": [
        3518,
        3524
      ],
      "op": "SWAP6",
      "path": "11"
    },
    "8603": {
      "fn": "Base64.encode",
      "offset": [
        505,
        3531
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "8604": {
      "op": "POP"
    },
    "8605": {
      "op": "POP"
    },
    "8606": {
      "op": "POP"
    },
    "8607": {
      "op": "POP"
    },
    "8608": {
      "op": "POP"
    },
    "8609": {
      "fn": "Base64.encode",
      "jump": "o",
      "offset": [
        505,
        3531
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8610": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        3748,
        4565
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "8611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8615": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8617": {
      "op": "SHL"
    },
    "8618": {
      "op": "SUB"
    },
    "8619": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        3891,
        3907
      ],
      "op": "DUP3",
      "path": "26"
    },
    "8620": {
      "branch": 121,
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        3891,
        3907
      ],
      "op": "AND",
      "path": "26"
    },
    "8621": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        3887,
        3970
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x21F8"
    },
    "8624": {
      "branch": 121,
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        3887,
        3970
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "8625": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        3923,
        3959
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 81,
      "value": "0x40"
    },
    "8627": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        3923,
        3959
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "8628": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8632": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8634": {
      "op": "SHL"
    },
    "8635": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        3923,
        3959
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8636": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        3923,
        3959
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "8637": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8639": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        3923,
        3959
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "8641": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        3923,
        3959
      ],
      "op": "DUP3",
      "path": "26"
    },
    "8642": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        3923,
        3959
      ],
      "op": "ADD",
      "path": "26"
    },
    "8643": {
      "op": "MSTORE"
    },
    "8644": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "8646": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8648": {
      "op": "DUP3"
    },
    "8649": {
      "op": "ADD"
    },
    "8650": {
      "op": "MSTORE"
    },
    "8651": {
      "op": "PUSH32",
      "value": "0x53425420746F6B656E2063616E6E6F74206265206275726E6564000000000000"
    },
    "8684": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8686": {
      "op": "DUP3"
    },
    "8687": {
      "op": "ADD"
    },
    "8688": {
      "op": "MSTORE"
    },
    "8689": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8691": {
      "op": "ADD"
    },
    "8692": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        3923,
        3959
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x48B"
    },
    "8695": {
      "op": "JUMP"
    },
    "8696": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        3887,
        3970
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "8697": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4015
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x10"
    },
    "8699": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4015
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "8700": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "8702": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "8703": {
      "op": "PUSH4",
      "value": "0x3E10510B"
    },
    "8708": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8710": {
      "op": "SHL"
    },
    "8711": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8712": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "8713": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        3980,
        3990
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "8715": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        3980,
        3990
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "8716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8720": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8722": {
      "op": "SHL"
    },
    "8723": {
      "op": "SUB"
    },
    "8724": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4015
      ],
      "op": "AND",
      "path": "26"
    },
    "8725": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4015
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8726": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4025
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x2D888869"
    },
    "8731": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4025
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8732": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4015
      ],
      "op": "DUP3",
      "path": "26"
    },
    "8733": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4015
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8734": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4033
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x3E10510B"
    },
    "8739": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4033
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8740": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x222F"
    },
    "8743": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8744": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "8746": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "ADD",
      "path": "26"
    },
    "8747": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x30CE"
    },
    "8750": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        4026,
        4063
      ],
      "op": "JUMP",
      "path": "26"
    },
    "8751": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "8752": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "8754": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "8756": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "8757": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "DUP1",
      "path": "26"
    },
    "8758": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "DUP4",
      "path": "26"
    },
    "8759": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "SUB",
      "path": "26"
    },
    "8760": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8761": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "DUP7",
      "path": "26"
    },
    "8762": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "GAS",
      "path": "26"
    },
    "8763": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "8764": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "8765": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "DUP1",
      "path": "26"
    },
    "8766": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "8767": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x224C"
    },
    "8770": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "8771": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "8772": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "8774": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "DUP1",
      "path": "26"
    },
    "8775": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "8776": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "8777": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "8779": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "REVERT",
      "path": "26"
    },
    "8780": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "8781": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "POP",
      "path": "26"
    },
    "8782": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "POP",
      "path": "26"
    },
    "8783": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "POP",
      "path": "26"
    },
    "8784": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "POP",
      "path": "26"
    },
    "8785": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "8787": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "8788": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "8789": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "8791": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "DUP3",
      "path": "26"
    },
    "8792": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "8793": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "8795": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "8796": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8797": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8798": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "ADD",
      "path": "26"
    },
    "8799": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8801": {
      "op": "NOT"
    },
    "8802": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "AND",
      "path": "26"
    },
    "8803": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "DUP3",
      "path": "26"
    },
    "8804": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "ADD",
      "path": "26"
    },
    "8805": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "8807": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "8808": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2274"
    },
    "8811": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "8812": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8813": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8814": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "ADD",
      "path": "26"
    },
    "8815": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8816": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3153"
    },
    "8819": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        4026,
        4063
      ],
      "op": "JUMP",
      "path": "26"
    },
    "8820": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4026,
        4063
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "8821": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "8823": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "8824": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "DUP3",
      "path": "26"
    },
    "8825": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xFFFFFFFF"
    },
    "8830": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "AND",
      "path": "26"
    },
    "8831": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xE0"
    },
    "8833": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "SHL",
      "path": "26"
    },
    "8834": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8835": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "8836": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "8838": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "ADD",
      "path": "26"
    },
    "8839": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2290"
    },
    "8842": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "8843": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8844": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2AD8"
    },
    "8847": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        4012,
        4064
      ],
      "op": "JUMP",
      "path": "26"
    },
    "8848": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "8849": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "8851": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "8853": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "8854": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "DUP1",
      "path": "26"
    },
    "8855": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "DUP4",
      "path": "26"
    },
    "8856": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "SUB",
      "path": "26"
    },
    "8857": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8858": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "DUP7",
      "path": "26"
    },
    "8859": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "GAS",
      "path": "26"
    },
    "8860": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "8861": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "8862": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "DUP1",
      "path": "26"
    },
    "8863": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "8864": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x22AD"
    },
    "8867": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "8868": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "8869": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "8871": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "DUP1",
      "path": "26"
    },
    "8872": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "8873": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "8874": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "8876": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "REVERT",
      "path": "26"
    },
    "8877": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "8878": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "POP",
      "path": "26"
    },
    "8879": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "POP",
      "path": "26"
    },
    "8880": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "POP",
      "path": "26"
    },
    "8881": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "POP",
      "path": "26"
    },
    "8882": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "8884": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "8885": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "8886": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "8888": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "NOT",
      "path": "26"
    },
    "8889": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "8891": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "DUP3",
      "path": "26"
    },
    "8892": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "ADD",
      "path": "26"
    },
    "8893": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "AND",
      "path": "26"
    },
    "8894": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "DUP3",
      "path": "26"
    },
    "8895": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "ADD",
      "path": "26"
    },
    "8896": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "DUP1",
      "path": "26"
    },
    "8897": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "8899": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "8900": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "POP",
      "path": "26"
    },
    "8901": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8902": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "ADD",
      "path": "26"
    },
    "8903": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8904": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x22D1"
    },
    "8907": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "8908": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8909": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x319C"
    },
    "8912": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        4012,
        4064
      ],
      "op": "JUMP",
      "path": "26"
    },
    "8913": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4012,
        4064
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "8914": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        3980,
        4074
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8915": {
      "op": "POP"
    },
    "8916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8920": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8922": {
      "op": "SHL"
    },
    "8923": {
      "op": "SUB"
    },
    "8924": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4089,
        4107
      ],
      "op": "DUP5",
      "path": "26"
    },
    "8925": {
      "branch": 122,
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4089,
        4107
      ],
      "op": "AND",
      "path": "26"
    },
    "8926": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4085,
        4503
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x23B4"
    },
    "8929": {
      "branch": 122,
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4085,
        4503
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "8930": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4169,
        4188
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 82,
      "value": "0x0"
    },
    "8932": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4169,
        4188
      ],
      "op": "DUP3",
      "path": "26"
    },
    "8933": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4169,
        4188
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8934": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4169,
        4188
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "8935": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4169,
        4179
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xB"
    },
    "8937": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4169,
        4188
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "8939": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4169,
        4188
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "8940": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4169,
        4188
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "8942": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4169,
        4188
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8943": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4169,
        4188
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8944": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4169,
        4188
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8945": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4169,
        4188
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "8946": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4169,
        4188
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "8947": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8948": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "8949": {
      "op": "PUSH4",
      "value": "0x5D786A4F"
    },
    "8954": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "8956": {
      "op": "SHL"
    },
    "8957": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8958": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "8959": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "8961": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "DUP2",
      "path": "26"
    },
    "8962": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "ADD",
      "path": "26"
    },
    "8963": {
      "op": "SWAP2"
    },
    "8964": {
      "op": "SWAP1"
    },
    "8965": {
      "op": "SWAP2"
    },
    "8966": {
      "op": "MSTORE"
    },
    "8967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8971": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8973": {
      "op": "SHL"
    },
    "8974": {
      "op": "SUB"
    },
    "8975": {
      "op": "DUP5"
    },
    "8976": {
      "op": "DUP2"
    },
    "8977": {
      "op": "AND"
    },
    "8978": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8980": {
      "op": "DUP4"
    },
    "8981": {
      "op": "ADD"
    },
    "8982": {
      "op": "MSTORE"
    },
    "8983": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4168
      ],
      "op": "DUP3",
      "path": "26"
    },
    "8984": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4168
      ],
      "op": "AND",
      "path": "26"
    },
    "8985": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4168
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8986": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4168
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xBAF0D49E"
    },
    "8991": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4168
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "8992": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8994": {
      "op": "ADD"
    },
    "8995": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "8997": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "8999": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "9000": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "DUP1",
      "path": "26"
    },
    "9001": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "DUP4",
      "path": "26"
    },
    "9002": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "SUB",
      "path": "26"
    },
    "9003": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "DUP2",
      "path": "26"
    },
    "9004": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "DUP7",
      "path": "26"
    },
    "9005": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "GAS",
      "path": "26"
    },
    "9006": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "9007": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "9008": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "DUP1",
      "path": "26"
    },
    "9009": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "9010": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x233F"
    },
    "9013": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "9014": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "9015": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "9017": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "DUP1",
      "path": "26"
    },
    "9018": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "9019": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "9020": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "9022": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "REVERT",
      "path": "26"
    },
    "9023": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "9024": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "POP",
      "path": "26"
    },
    "9025": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "POP",
      "path": "26"
    },
    "9026": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "POP",
      "path": "26"
    },
    "9027": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "POP",
      "path": "26"
    },
    "9028": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "9030": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "9031": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "9032": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "9034": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "NOT",
      "path": "26"
    },
    "9035": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "9037": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "DUP3",
      "path": "26"
    },
    "9038": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "ADD",
      "path": "26"
    },
    "9039": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "AND",
      "path": "26"
    },
    "9040": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "DUP3",
      "path": "26"
    },
    "9041": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "ADD",
      "path": "26"
    },
    "9042": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "DUP1",
      "path": "26"
    },
    "9043": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "9045": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "9046": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "POP",
      "path": "26"
    },
    "9047": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "DUP2",
      "path": "26"
    },
    "9048": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "ADD",
      "path": "26"
    },
    "9049": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "9050": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2363"
    },
    "9053": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "9054": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "9055": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x31B9"
    },
    "9058": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        4148,
        4193
      ],
      "op": "JUMP",
      "path": "26"
    },
    "9059": {
      "branch": 123,
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4148,
        4193
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "9060": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4123,
        4259
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x23AF"
    },
    "9063": {
      "branch": 123,
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4123,
        4259
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "9064": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4123,
        4259
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "9066": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4123,
        4259
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "9067": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9071": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9073": {
      "op": "SHL"
    },
    "9074": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4123,
        4259
      ],
      "op": "DUP2",
      "path": "26"
    },
    "9075": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4123,
        4259
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "9076": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9078": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4123,
        4259
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "9080": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4123,
        4259
      ],
      "op": "DUP3",
      "path": "26"
    },
    "9081": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4123,
        4259
      ],
      "op": "ADD",
      "path": "26"
    },
    "9082": {
      "op": "DUP2"
    },
    "9083": {
      "op": "SWAP1"
    },
    "9084": {
      "op": "MSTORE"
    },
    "9085": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9087": {
      "op": "DUP3"
    },
    "9088": {
      "op": "ADD"
    },
    "9089": {
      "op": "MSTORE"
    },
    "9090": {
      "op": "PUSH32",
      "value": "0x53425420746F6B656E20746F2061646472657373206E6F7420616C6C6F776564"
    },
    "9123": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9125": {
      "op": "DUP3"
    },
    "9126": {
      "op": "ADD"
    },
    "9127": {
      "op": "MSTORE"
    },
    "9128": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9130": {
      "op": "ADD"
    },
    "9131": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4123,
        4259
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x48B"
    },
    "9134": {
      "op": "JUMP"
    },
    "9135": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4123,
        4259
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "9136": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4085,
        4503
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x250B"
    },
    "9139": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4085,
        4503
      ],
      "op": "JUMP",
      "path": "26"
    },
    "9140": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4085,
        4503
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "9141": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4336,
        4355
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 83,
      "value": "0x0"
    },
    "9143": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4336,
        4355
      ],
      "op": "DUP3",
      "path": "26"
    },
    "9144": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4336,
        4355
      ],
      "op": "DUP2",
      "path": "26"
    },
    "9145": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4336,
        4355
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "9146": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4336,
        4346
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xB"
    },
    "9148": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4336,
        4355
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "9150": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4336,
        4355
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "9151": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4336,
        4355
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "9153": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4336,
        4355
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "9154": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4336,
        4355
      ],
      "op": "DUP2",
      "path": "26"
    },
    "9155": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4336,
        4355
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "9156": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4336,
        4355
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "9157": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4336,
        4355
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "9158": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "9159": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "9160": {
      "op": "PUSH4",
      "value": "0x5D786A4F"
    },
    "9165": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "9167": {
      "op": "SHL"
    },
    "9168": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "DUP2",
      "path": "26"
    },
    "9169": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "9170": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "9172": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "DUP2",
      "path": "26"
    },
    "9173": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "ADD",
      "path": "26"
    },
    "9174": {
      "op": "SWAP2"
    },
    "9175": {
      "op": "SWAP1"
    },
    "9176": {
      "op": "SWAP2"
    },
    "9177": {
      "op": "MSTORE"
    },
    "9178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9182": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9184": {
      "op": "SHL"
    },
    "9185": {
      "op": "SUB"
    },
    "9186": {
      "op": "DUP6"
    },
    "9187": {
      "op": "DUP2"
    },
    "9188": {
      "op": "AND"
    },
    "9189": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9191": {
      "op": "DUP4"
    },
    "9192": {
      "op": "ADD"
    },
    "9193": {
      "op": "MSTORE"
    },
    "9194": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4335
      ],
      "op": "DUP3",
      "path": "26"
    },
    "9195": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4335
      ],
      "op": "AND",
      "path": "26"
    },
    "9196": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4335
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "9197": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4335
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xBAF0D49E"
    },
    "9202": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4335
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "9203": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9205": {
      "op": "ADD"
    },
    "9206": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "9208": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "9210": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "9211": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "DUP1",
      "path": "26"
    },
    "9212": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "DUP4",
      "path": "26"
    },
    "9213": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "SUB",
      "path": "26"
    },
    "9214": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "DUP2",
      "path": "26"
    },
    "9215": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "DUP7",
      "path": "26"
    },
    "9216": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "GAS",
      "path": "26"
    },
    "9217": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "9218": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "9219": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "DUP1",
      "path": "26"
    },
    "9220": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "9221": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2412"
    },
    "9224": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "9225": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "9226": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "9228": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "DUP1",
      "path": "26"
    },
    "9229": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "9230": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "9231": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "9233": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "REVERT",
      "path": "26"
    },
    "9234": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "9235": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "POP",
      "path": "26"
    },
    "9236": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "POP",
      "path": "26"
    },
    "9237": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "POP",
      "path": "26"
    },
    "9238": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "POP",
      "path": "26"
    },
    "9239": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "9241": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "9242": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "9243": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "9245": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "NOT",
      "path": "26"
    },
    "9246": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "9248": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "DUP3",
      "path": "26"
    },
    "9249": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "ADD",
      "path": "26"
    },
    "9250": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "AND",
      "path": "26"
    },
    "9251": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "DUP3",
      "path": "26"
    },
    "9252": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "ADD",
      "path": "26"
    },
    "9253": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "DUP1",
      "path": "26"
    },
    "9254": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "9256": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "9257": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "POP",
      "path": "26"
    },
    "9258": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "DUP2",
      "path": "26"
    },
    "9259": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "ADD",
      "path": "26"
    },
    "9260": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "9261": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2436"
    },
    "9264": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "9265": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "9266": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x31B9"
    },
    "9269": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        4315,
        4362
      ],
      "op": "JUMP",
      "path": "26"
    },
    "9270": {
      "branch": 124,
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4362
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "9271": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4431
      ],
      "op": "DUP1",
      "path": "26"
    },
    "9272": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4431
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "9273": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4431
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x24BF"
    },
    "9276": {
      "branch": 124,
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4315,
        4431
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "9277": {
      "op": "POP"
    },
    "9278": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4407,
        4426
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "9280": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4407,
        4426
      ],
      "op": "DUP3",
      "path": "26"
    },
    "9281": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4407,
        4426
      ],
      "op": "DUP2",
      "path": "26"
    },
    "9282": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4407,
        4426
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "9283": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4407,
        4417
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xB"
    },
    "9285": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4407,
        4426
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "9287": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4407,
        4426
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "9288": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4407,
        4426
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "9290": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4407,
        4426
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "9291": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4407,
        4426
      ],
      "op": "DUP2",
      "path": "26"
    },
    "9292": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4407,
        4426
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "9293": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4407,
        4426
      ],
      "op": "KECCAK256",
      "path": "26"
    },
    "9294": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4407,
        4426
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "9295": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "9296": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "9297": {
      "op": "PUSH4",
      "value": "0x5D786A4F"
    },
    "9302": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "9304": {
      "op": "SHL"
    },
    "9305": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "DUP2",
      "path": "26"
    },
    "9306": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "9307": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "9309": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "DUP2",
      "path": "26"
    },
    "9310": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "ADD",
      "path": "26"
    },
    "9311": {
      "op": "SWAP2"
    },
    "9312": {
      "op": "SWAP1"
    },
    "9313": {
      "op": "SWAP2"
    },
    "9314": {
      "op": "MSTORE"
    },
    "9315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9319": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9321": {
      "op": "SHL"
    },
    "9322": {
      "op": "SUB"
    },
    "9323": {
      "op": "DUP5"
    },
    "9324": {
      "op": "DUP2"
    },
    "9325": {
      "op": "AND"
    },
    "9326": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9328": {
      "op": "DUP4"
    },
    "9329": {
      "op": "ADD"
    },
    "9330": {
      "op": "MSTORE"
    },
    "9331": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4406
      ],
      "op": "DUP3",
      "path": "26"
    },
    "9332": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4406
      ],
      "op": "AND",
      "path": "26"
    },
    "9333": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4406
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "9334": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4406
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xBAF0D49E"
    },
    "9339": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4406
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "9340": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9342": {
      "op": "ADD"
    },
    "9343": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "9345": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "9347": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "9348": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "DUP1",
      "path": "26"
    },
    "9349": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "DUP4",
      "path": "26"
    },
    "9350": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "SUB",
      "path": "26"
    },
    "9351": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "DUP2",
      "path": "26"
    },
    "9352": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "DUP7",
      "path": "26"
    },
    "9353": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "GAS",
      "path": "26"
    },
    "9354": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "STATICCALL",
      "path": "26"
    },
    "9355": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "9356": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "DUP1",
      "path": "26"
    },
    "9357": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "9358": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x249B"
    },
    "9361": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "9362": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "9363": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "9365": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "DUP1",
      "path": "26"
    },
    "9366": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "9367": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "9368": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "9370": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "REVERT",
      "path": "26"
    },
    "9371": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "9372": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "POP",
      "path": "26"
    },
    "9373": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "POP",
      "path": "26"
    },
    "9374": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "POP",
      "path": "26"
    },
    "9375": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "POP",
      "path": "26"
    },
    "9376": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "9378": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "9379": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "9380": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "9382": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "NOT",
      "path": "26"
    },
    "9383": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x1F"
    },
    "9385": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "DUP3",
      "path": "26"
    },
    "9386": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "ADD",
      "path": "26"
    },
    "9387": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "AND",
      "path": "26"
    },
    "9388": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "DUP3",
      "path": "26"
    },
    "9389": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "ADD",
      "path": "26"
    },
    "9390": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "DUP1",
      "path": "26"
    },
    "9391": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "9393": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "9394": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "POP",
      "path": "26"
    },
    "9395": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "DUP2",
      "path": "26"
    },
    "9396": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "ADD",
      "path": "26"
    },
    "9397": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "9398": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x24BF"
    },
    "9401": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "9402": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "9403": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x31B9"
    },
    "9406": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        4386,
        4431
      ],
      "op": "JUMP",
      "path": "26"
    },
    "9407": {
      "branch": 125,
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4386,
        4431
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "9408": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4290,
        4492
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x250B"
    },
    "9411": {
      "branch": 125,
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4290,
        4492
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "9412": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4290,
        4492
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "9414": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4290,
        4492
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "9415": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9419": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9421": {
      "op": "SHL"
    },
    "9422": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4290,
        4492
      ],
      "op": "DUP2",
      "path": "26"
    },
    "9423": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4290,
        4492
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "9424": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9426": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4290,
        4492
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "9428": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4290,
        4492
      ],
      "op": "DUP3",
      "path": "26"
    },
    "9429": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4290,
        4492
      ],
      "op": "ADD",
      "path": "26"
    },
    "9430": {
      "op": "MSTORE"
    },
    "9431": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "9433": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9435": {
      "op": "DUP3"
    },
    "9436": {
      "op": "ADD"
    },
    "9437": {
      "op": "MSTORE"
    },
    "9438": {
      "op": "PUSH32",
      "value": "0x53425420746F6B656E2063616E6E6F74207472616E7366657265640000000000"
    },
    "9471": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9473": {
      "op": "DUP3"
    },
    "9474": {
      "op": "ADD"
    },
    "9475": {
      "op": "MSTORE"
    },
    "9476": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9478": {
      "op": "ADD"
    },
    "9479": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4290,
        4492
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x48B"
    },
    "9482": {
      "op": "JUMP"
    },
    "9483": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4290,
        4492
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "9484": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4513,
        4558
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 84,
      "value": "0xB7E"
    },
    "9487": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4540,
        4544
      ],
      "op": "DUP5",
      "path": "26"
    },
    "9488": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4546,
        4548
      ],
      "op": "DUP5",
      "path": "26"
    },
    "9489": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4550,
        4557
      ],
      "op": "DUP5",
      "path": "26"
    },
    "9490": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "offset": [
        4513,
        4539
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2765"
    },
    "9493": {
      "fn": "soulBondToken._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        4513,
        4558
      ],
      "op": "JUMP",
      "path": "26"
    },
    "9494": {
      "fn": "ERC721._mint",
      "offset": [
        8868,
        9295
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "9495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9499": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9501": {
      "op": "SHL"
    },
    "9502": {
      "op": "SUB"
    },
    "9503": {
      "fn": "ERC721._mint",
      "offset": [
        8947,
        8963
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 85
    },
    "9504": {
      "branch": 137,
      "fn": "ERC721._mint",
      "offset": [
        8947,
        8963
      ],
      "op": "AND",
      "path": "4"
    },
    "9505": {
      "fn": "ERC721._mint",
      "offset": [
        8939,
        9000
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x256C"
    },
    "9508": {
      "branch": 137,
      "fn": "ERC721._mint",
      "offset": [
        8939,
        9000
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "9509": {
      "fn": "ERC721._mint",
      "offset": [
        8939,
        9000
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "9511": {
      "fn": "ERC721._mint",
      "offset": [
        8939,
        9000
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "9512": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9516": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9518": {
      "op": "SHL"
    },
    "9519": {
      "fn": "ERC721._mint",
      "offset": [
        8939,
        9000
      ],
      "op": "DUP2",
      "path": "4"
    },
    "9520": {
      "fn": "ERC721._mint",
      "offset": [
        8939,
        9000
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9521": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9523": {
      "fn": "ERC721._mint",
      "offset": [
        8939,
        9000
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "9525": {
      "fn": "ERC721._mint",
      "offset": [
        8939,
        9000
      ],
      "op": "DUP3",
      "path": "4"
    },
    "9526": {
      "fn": "ERC721._mint",
      "offset": [
        8939,
        9000
      ],
      "op": "ADD",
      "path": "4"
    },
    "9527": {
      "op": "DUP2"
    },
    "9528": {
      "op": "SWAP1"
    },
    "9529": {
      "op": "MSTORE"
    },
    "9530": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9532": {
      "op": "DUP3"
    },
    "9533": {
      "op": "ADD"
    },
    "9534": {
      "op": "MSTORE"
    },
    "9535": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "9568": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9570": {
      "op": "DUP3"
    },
    "9571": {
      "op": "ADD"
    },
    "9572": {
      "op": "MSTORE"
    },
    "9573": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9575": {
      "op": "ADD"
    },
    "9576": {
      "fn": "ERC721._mint",
      "offset": [
        8939,
        9000
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x48B"
    },
    "9579": {
      "op": "JUMP"
    },
    "9580": {
      "fn": "ERC721._mint",
      "offset": [
        8939,
        9000
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "9581": {
      "fn": "ERC721._exists",
      "offset": [
        7099,
        7103
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "9583": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "DUP2",
      "path": "4"
    },
    "9584": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "DUP2",
      "path": "4"
    },
    "9585": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9586": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7129
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "9588": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "9590": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9591": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "9593": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9594": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "9595": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "9596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9600": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9602": {
      "op": "SHL"
    },
    "9603": {
      "op": "SUB"
    },
    "9604": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "AND",
      "path": "4"
    },
    "9605": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7152
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "9606": {
      "fn": "ERC721._mint",
      "offset": [
        9010,
        9068
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 86,
      "value": "0x25D1"
    },
    "9609": {
      "fn": "ERC721._mint",
      "offset": [
        9010,
        9068
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "9610": {
      "fn": "ERC721._mint",
      "offset": [
        9010,
        9068
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "9612": {
      "fn": "ERC721._mint",
      "offset": [
        9010,
        9068
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "9613": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9617": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9619": {
      "op": "SHL"
    },
    "9620": {
      "fn": "ERC721._mint",
      "offset": [
        9010,
        9068
      ],
      "op": "DUP2",
      "path": "4"
    },
    "9621": {
      "fn": "ERC721._mint",
      "offset": [
        9010,
        9068
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9622": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9624": {
      "fn": "ERC721._mint",
      "offset": [
        9010,
        9068
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "9626": {
      "fn": "ERC721._mint",
      "offset": [
        9010,
        9068
      ],
      "op": "DUP3",
      "path": "4"
    },
    "9627": {
      "fn": "ERC721._mint",
      "offset": [
        9010,
        9068
      ],
      "op": "ADD",
      "path": "4"
    },
    "9628": {
      "op": "MSTORE"
    },
    "9629": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "9631": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9633": {
      "op": "DUP3"
    },
    "9634": {
      "op": "ADD"
    },
    "9635": {
      "op": "MSTORE"
    },
    "9636": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "9669": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9671": {
      "op": "DUP3"
    },
    "9672": {
      "op": "ADD"
    },
    "9673": {
      "op": "MSTORE"
    },
    "9674": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9676": {
      "op": "ADD"
    },
    "9677": {
      "fn": "ERC721._mint",
      "offset": [
        9010,
        9068
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x48B"
    },
    "9680": {
      "op": "JUMP"
    },
    "9681": {
      "fn": "ERC721._mint",
      "offset": [
        9010,
        9068
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "9682": {
      "fn": "ERC721._mint",
      "offset": [
        9079,
        9124
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 87,
      "value": "0x25DD"
    },
    "9685": {
      "fn": "ERC721._mint",
      "offset": [
        9108,
        9109
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "9687": {
      "fn": "ERC721._mint",
      "offset": [
        9112,
        9114
      ],
      "op": "DUP4",
      "path": "4"
    },
    "9688": {
      "fn": "ERC721._mint",
      "offset": [
        9116,
        9123
      ],
      "op": "DUP4",
      "path": "4"
    },
    "9689": {
      "fn": "ERC721._mint",
      "offset": [
        9079,
        9099
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21A2"
    },
    "9692": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9079,
        9124
      ],
      "op": "JUMP",
      "path": "4"
    },
    "9693": {
      "fn": "ERC721._mint",
      "offset": [
        9079,
        9124
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "9694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9698": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9700": {
      "op": "SHL"
    },
    "9701": {
      "op": "SUB"
    },
    "9702": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9148
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 88
    },
    "9703": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9148
      ],
      "op": "AND",
      "path": "4"
    },
    "9704": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9148
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "9706": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9148
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9707": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9148
      ],
      "op": "DUP2",
      "path": "4"
    },
    "9708": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9148
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9709": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9144
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "9711": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9148
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "9713": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9148
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9714": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9148
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "9716": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9148
      ],
      "op": "DUP2",
      "path": "4"
    },
    "9717": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9148
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "9718": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9153
      ],
      "op": "DUP1",
      "path": "4"
    },
    "9719": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9153
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "9720": {
      "fn": "ERC721._mint",
      "offset": [
        9152,
        9153
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "9722": {
      "fn": "ERC721._mint",
      "offset": [
        9152,
        9153
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "9723": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9148
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9724": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9153
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2606"
    },
    "9727": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9153
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9728": {
      "fn": "ERC721._mint",
      "offset": [
        9152,
        9153
      ],
      "op": "DUP5",
      "path": "4"
    },
    "9729": {
      "fn": "ERC721._mint",
      "offset": [
        9152,
        9153
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9730": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9153
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x38B3"
    },
    "9733": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9135,
        9153
      ],
      "op": "JUMP",
      "path": "4"
    },
    "9734": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9153
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "9735": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9153
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9736": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9153
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "9737": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9153
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "9738": {
      "op": "POP"
    },
    "9739": {
      "op": "POP"
    },
    "9740": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9179
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 89,
      "value": "0x0"
    },
    "9742": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9179
      ],
      "op": "DUP2",
      "path": "4"
    },
    "9743": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9179
      ],
      "op": "DUP2",
      "path": "4"
    },
    "9744": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9179
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9745": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9170
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "9747": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9179
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "9749": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9179
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9750": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9179
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "9752": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9179
      ],
      "op": "DUP1",
      "path": "4"
    },
    "9753": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9179
      ],
      "op": "DUP3",
      "path": "4"
    },
    "9754": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9179
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "9755": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9184
      ],
      "op": "DUP1",
      "path": "4"
    },
    "9756": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9184
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "9757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9763": {
      "op": "SHL"
    },
    "9764": {
      "op": "SUB"
    },
    "9765": {
      "op": "NOT"
    },
    "9766": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9184
      ],
      "op": "AND",
      "path": "4"
    },
    "9767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9771": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9773": {
      "op": "SHL"
    },
    "9774": {
      "op": "SUB"
    },
    "9775": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9184
      ],
      "op": "DUP7",
      "path": "4"
    },
    "9776": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9184
      ],
      "op": "AND",
      "path": "4"
    },
    "9777": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9184
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9778": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9184
      ],
      "op": "DUP2",
      "path": "4"
    },
    "9779": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9184
      ],
      "op": "OR",
      "path": "4"
    },
    "9780": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9184
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9781": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9184
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "9782": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9184
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "9783": {
      "fn": "ERC721._mint",
      "offset": [
        9200,
        9233
      ],
      "op": "SWAP1",
      "path": "4",
      "statement": 90
    },
    "9784": {
      "fn": "ERC721._mint",
      "offset": [
        9200,
        9233
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "9785": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9179
      ],
      "op": "DUP4",
      "path": "4"
    },
    "9786": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9179
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "9787": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9179
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9788": {
      "fn": "ERC721._mint",
      "offset": [
        9200,
        9233
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "9821": {
      "fn": "ERC721._mint",
      "offset": [
        9200,
        9233
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9822": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9179
      ],
      "op": "DUP3",
      "path": "4"
    },
    "9823": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9179
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9824": {
      "fn": "ERC721._mint",
      "offset": [
        9200,
        9233
      ],
      "op": "LOG4",
      "path": "4"
    },
    "9825": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "POP",
      "path": "4"
    },
    "9826": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "POP",
      "path": "4"
    },
    "9827": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMP",
      "path": "4"
    },
    "9828": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12342,
        13173
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "9829": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12491,
        12495
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "9831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9835": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9837": {
      "op": "SHL"
    },
    "9838": {
      "op": "SUB"
    },
    "9839": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12511,
        12524
      ],
      "op": "DUP5",
      "path": "4"
    },
    "9840": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12511,
        12524
      ],
      "op": "AND",
      "path": "4"
    },
    "9841": {
      "op": "EXTCODESIZE"
    },
    "9842": {
      "op": "ISZERO"
    },
    "9843": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12507,
        13167
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x275A"
    },
    "9846": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12507,
        13167
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "9847": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "9849": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "9850": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "9855": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "9857": {
      "op": "SHL"
    },
    "9858": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "DUP2",
      "path": "4"
    },
    "9859": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9864": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9866": {
      "op": "SHL"
    },
    "9867": {
      "op": "SUB"
    },
    "9868": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12582
      ],
      "op": "DUP6",
      "path": "4"
    },
    "9869": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12582
      ],
      "op": "AND",
      "path": "4"
    },
    "9870": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12582
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9871": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12582
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x150B7A02"
    },
    "9876": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12582
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9877": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x26A8"
    },
    "9880": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9881": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "12"
    },
    "9882": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "9883": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12597,
        12601
      ],
      "op": "DUP10",
      "path": "4"
    },
    "9884": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12597,
        12601
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9885": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12603,
        12610
      ],
      "op": "DUP9",
      "path": "4"
    },
    "9886": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12603,
        12610
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9887": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12612,
        12616
      ],
      "op": "DUP9",
      "path": "4"
    },
    "9888": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12612,
        12616
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9889": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "9891": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "ADD",
      "path": "4"
    },
    "9892": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x397A"
    },
    "9895": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12546,
        12617
      ],
      "op": "JUMP",
      "path": "4"
    },
    "9896": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "9897": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "9899": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "9901": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "9902": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "DUP1",
      "path": "4"
    },
    "9903": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "DUP4",
      "path": "4"
    },
    "9904": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "SUB",
      "path": "4"
    },
    "9905": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "DUP2",
      "path": "4"
    },
    "9906": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "9908": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "DUP8",
      "path": "4"
    },
    "9909": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "GAS",
      "path": "4"
    },
    "9910": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "CALL",
      "path": "4"
    },
    "9911": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "9912": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "POP",
      "path": "4"
    },
    "9913": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "POP",
      "path": "4"
    },
    "9914": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "POP",
      "path": "4"
    },
    "9915": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "DUP1",
      "path": "4"
    },
    "9916": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "9917": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x26E3"
    },
    "9920": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "9921": {
      "op": "POP"
    },
    "9922": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "9924": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "DUP1",
      "path": "4"
    },
    "9925": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "9926": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "9928": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "9929": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9930": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "DUP2",
      "path": "4"
    },
    "9931": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "ADD",
      "path": "4"
    },
    "9932": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9934": {
      "op": "NOT"
    },
    "9935": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "AND",
      "path": "4"
    },
    "9936": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "DUP3",
      "path": "4"
    },
    "9937": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "ADD",
      "path": "4"
    },
    "9938": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9939": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "9940": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9941": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x26E0"
    },
    "9944": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "9945": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "DUP2",
      "path": "4"
    },
    "9946": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "ADD",
      "path": "4"
    },
    "9947": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9948": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x39B7"
    },
    "9951": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12546,
        12617
      ],
      "op": "JUMP",
      "path": "4"
    },
    "9952": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "9953": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "9955": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "9956": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2740"
    },
    "9959": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "9960": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "9961": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "DUP1",
      "path": "4"
    },
    "9962": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "DUP1",
      "path": "4"
    },
    "9963": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "9964": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2711"
    },
    "9967": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "9968": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "9970": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "9971": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "9972": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "POP",
      "path": "4"
    },
    "9973": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "9975": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "NOT",
      "path": "4"
    },
    "9976": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3F"
    },
    "9978": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "9979": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "ADD",
      "path": "4"
    },
    "9980": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "AND",
      "path": "4"
    },
    "9981": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "DUP3",
      "path": "4"
    },
    "9982": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "ADD",
      "path": "4"
    },
    "9983": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "9985": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9986": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "9987": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "DUP3",
      "path": "4"
    },
    "9988": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9989": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "9990": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "9992": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "9994": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "DUP5",
      "path": "4"
    },
    "9995": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "ADD",
      "path": "4"
    },
    "9996": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "9997": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2716"
    },
    "10000": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "JUMP",
      "path": "4"
    },
    "10001": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "10002": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "10004": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "10005": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "POP",
      "path": "4"
    },
    "10006": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "10007": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "POP",
      "path": "4"
    },
    "10008": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12784,
        12790
      ],
      "op": "DUP1",
      "path": "4"
    },
    "10009": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12784,
        12797
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "10010": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12801,
        12802
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "10012": {
      "branch": 138,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12784,
        12802
      ],
      "op": "SUB",
      "path": "4"
    },
    "10013": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12780,
        13101
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2738"
    },
    "10016": {
      "branch": 138,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12780,
        13101
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "10017": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12826,
        12886
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 91,
      "value": "0x40"
    },
    "10019": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12826,
        12886
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "10020": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10024": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10026": {
      "op": "SHL"
    },
    "10027": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12826,
        12886
      ],
      "op": "DUP2",
      "path": "4"
    },
    "10028": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12826,
        12886
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "10029": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12826,
        12886
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "10031": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12826,
        12886
      ],
      "op": "ADD",
      "path": "4"
    },
    "10032": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12826,
        12886
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x48B"
    },
    "10035": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12826,
        12886
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10036": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12826,
        12886
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x38CB"
    },
    "10039": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12826,
        12886
      ],
      "op": "JUMP",
      "path": "4"
    },
    "10040": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12780,
        13101
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "10041": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13053,
        13059
      ],
      "op": "DUP1",
      "path": "4"
    },
    "10042": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13047,
        13060
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "10043": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13038,
        13044
      ],
      "op": "DUP2",
      "path": "4"
    },
    "10044": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13034,
        13036
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "10046": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13030,
        13045
      ],
      "op": "ADD",
      "path": "4"
    },
    "10047": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13023,
        13061
      ],
      "op": "REVERT",
      "path": "4"
    },
    "10048": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "10049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10053": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10055": {
      "op": "SHL"
    },
    "10056": {
      "op": "SUB"
    },
    "10057": {
      "op": "NOT"
    },
    "10058": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12667,
        12718
      ],
      "op": "AND",
      "path": "4",
      "statement": 92
    },
    "10059": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "10064": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "10066": {
      "op": "SHL"
    },
    "10067": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12667,
        12718
      ],
      "op": "EQ",
      "path": "4"
    },
    "10068": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12667,
        12718
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10069": {
      "op": "POP"
    },
    "10070": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12660,
        12718
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A77"
    },
    "10073": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12660,
        12718
      ],
      "op": "JUMP",
      "path": "4"
    },
    "10074": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12507,
        13167
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "10075": {
      "op": "POP"
    },
    "10076": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13152,
        13156
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 93,
      "value": "0x1"
    },
    "10078": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12342,
        13173
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "10079": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12342,
        13173
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "10080": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12342,
        13173
      ],
      "op": "POP",
      "path": "4"
    },
    "10081": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12342,
        13173
      ],
      "op": "POP",
      "path": "4"
    },
    "10082": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12342,
        13173
      ],
      "op": "POP",
      "path": "4"
    },
    "10083": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12342,
        13173
      ],
      "op": "POP",
      "path": "4"
    },
    "10084": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        12342,
        13173
      ],
      "op": "JUMP",
      "path": "4"
    },
    "10085": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2624,
        3196
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10090": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10092": {
      "op": "SHL"
    },
    "10093": {
      "op": "SUB"
    },
    "10094": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2823,
        2841
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10095": {
      "branch": 141,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2823,
        2841
      ],
      "op": "AND",
      "path": "7"
    },
    "10096": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27C0"
    },
    "10099": {
      "branch": 141,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "10100": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2857,
        2897
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 94,
      "value": "0x27BB"
    },
    "10103": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2889,
        2896
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10104": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4005,
        4015
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 95,
      "value": "0x8"
    },
    "10106": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4005,
        4022
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10107": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4005,
        4022
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "10108": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10110": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10111": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10112": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10113": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        3993
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "10115": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "10117": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10118": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10120": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10121": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10122": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4022
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10123": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4022
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10124": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4022
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "10125": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 96,
      "value": "0x1"
    },
    "10127": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10128": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "ADD",
      "path": "7"
    },
    "10129": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10130": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "10131": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10132": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10133": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10134": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10135": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
    },
    "10168": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "ADD",
      "path": "7"
    },
    "10169": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "10170": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3902,
        4063
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10171": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2857,
        2897
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10172": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27E3"
    },
    "10175": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10176": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10177": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2926,
        2928
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10182": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10184": {
      "op": "SHL"
    },
    "10185": {
      "op": "SUB"
    },
    "10186": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2928
      ],
      "op": "AND",
      "path": "7"
    },
    "10187": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2922
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10192": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10194": {
      "op": "SHL"
    },
    "10195": {
      "op": "SUB"
    },
    "10196": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2928
      ],
      "op": "AND",
      "path": "7"
    },
    "10197": {
      "branch": 142,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2928
      ],
      "op": "EQ",
      "path": "7"
    },
    "10198": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2914,
        3002
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27E3"
    },
    "10201": {
      "branch": 142,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2914,
        3002
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "10202": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2944,
        2991
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 97,
      "value": "0x27E3"
    },
    "10205": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2977,
        2981
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10206": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2983,
        2990
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10207": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2944,
        2976
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x281D"
    },
    "10210": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        2944,
        2991
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10211": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2944,
        2991
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10216": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10218": {
      "op": "SHL"
    },
    "10219": {
      "op": "SUB"
    },
    "10220": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3015,
        3031
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10221": {
      "branch": 143,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3015,
        3031
      ],
      "op": "AND",
      "path": "7"
    },
    "10222": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3011,
        3190
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27FA"
    },
    "10225": {
      "branch": 143,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3011,
        3190
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "10226": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3047,
        3092
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 98,
      "value": "0x52C"
    },
    "10229": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3084,
        3091
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10230": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3047,
        3083
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x28BA"
    },
    "10233": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3047,
        3092
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10234": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3011,
        3190
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10235": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3119,
        3123
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10240": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10242": {
      "op": "SHL"
    },
    "10243": {
      "op": "SUB"
    },
    "10244": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3123
      ],
      "op": "AND",
      "path": "7"
    },
    "10245": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3115
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10250": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10252": {
      "op": "SHL"
    },
    "10253": {
      "op": "SUB"
    },
    "10254": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3123
      ],
      "op": "AND",
      "path": "7"
    },
    "10255": {
      "branch": 144,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3123
      ],
      "op": "EQ",
      "path": "7"
    },
    "10256": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3109,
        3190
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x52C"
    },
    "10259": {
      "branch": 144,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3109,
        3190
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "10260": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3139,
        3179
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 99,
      "value": "0x52C"
    },
    "10263": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3169
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10264": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3171,
        3178
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10265": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3139,
        3166
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2969"
    },
    "10268": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3139,
        3179
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10269": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4680,
        5650
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10270": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4942,
        4964
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10272": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4992,
        4993
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "10274": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4989
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x282A"
    },
    "10277": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4984,
        4988
      ],
      "op": "DUP5",
      "path": "7"
    },
    "10278": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4983
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x901"
    },
    "10281": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        4967,
        4989
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10282": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4989
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10283": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2834"
    },
    "10286": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10287": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10288": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x389C"
    },
    "10291": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        4967,
        4993
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10292": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10293": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5003,
        5021
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10295": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10296": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10297": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10298": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5041
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "10300": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "10302": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10303": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10305": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10306": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10307": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "10308": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4942,
        4993
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10309": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4942,
        4993
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10310": {
      "op": "POP"
    },
    "10311": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5154,
        5182
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10312": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5154,
        5182
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10313": {
      "branch": 145,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5154,
        5182
      ],
      "op": "EQ",
      "path": "7"
    },
    "10314": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5150,
        5473
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2887"
    },
    "10317": {
      "branch": 145,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5150,
        5473
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "10318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10322": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10324": {
      "op": "SHL"
    },
    "10325": {
      "op": "SUB"
    },
    "10326": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP5",
      "path": "7"
    },
    "10327": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "AND",
      "path": "7"
    },
    "10328": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5198,
        5217
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10330": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10331": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10332": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10333": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5232
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "10335": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "10337": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10338": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10339": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10340": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10342": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10343": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10344": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10345": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP6",
      "path": "7"
    },
    "10346": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP5",
      "path": "7"
    },
    "10347": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10348": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10349": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10350": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10351": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10352": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10353": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "10354": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP5",
      "path": "7",
      "statement": 100
    },
    "10355": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP5",
      "path": "7"
    },
    "10356": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10357": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10358": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP5",
      "path": "7"
    },
    "10359": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10360": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5313
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10361": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5313
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10362": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5313
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "10363": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 101
    },
    "10364": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10365": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5402
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "10367": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10368": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10369": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10370": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10371": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10372": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5428
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10373": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5428
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10374": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5428
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "10375": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5150,
        5473
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10376": {
      "op": "POP"
    },
    "10377": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 102,
      "value": "0x0"
    },
    "10379": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10380": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10381": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10382": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5583
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "10384": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "10386": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10387": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10388": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10389": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10391": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10392": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP5",
      "path": "7"
    },
    "10393": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10394": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5559,
        5592
      ],
      "op": "DUP5",
      "path": "7"
    },
    "10395": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5559,
        5592
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10396": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5559,
        5592
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "10397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10401": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10403": {
      "op": "SHL"
    },
    "10404": {
      "op": "SUB"
    },
    "10405": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 103
    },
    "10406": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "10407": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "AND",
      "path": "7"
    },
    "10408": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10409": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10410": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5621
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "10412": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10413": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10414": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10415": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10416": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10417": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10418": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10419": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10420": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10421": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10422": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10423": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10424": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5602,
        5643
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "10425": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "o",
      "offset": [
        4680,
        5650
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10426": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        5938,
        6999
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10427": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6222
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "10429": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6229
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "10430": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6209
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10432": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6209
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10433": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x28CC"
    },
    "10436": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10437": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6232,
        6233
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "10439": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6232,
        6233
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10440": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x389C"
    },
    "10443": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6212,
        6233
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10444": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10445": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6243,
        6261
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10447": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10448": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10449": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10450": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6279
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "10452": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "10454": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10455": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10457": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10458": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10459": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "10460": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6642
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "10462": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10463": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "10464": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "10465": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "10466": {
      "op": "POP"
    },
    "10467": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10468": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "10469": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "DUP5",
      "path": "7"
    },
    "10470": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10471": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10472": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "LT",
      "path": "7"
    },
    "10473": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x28F4"
    },
    "10476": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "10477": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x28F4"
    },
    "10480": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x30B8"
    },
    "10483": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6632,
        6658
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10484": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10485": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10486": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10488": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10489": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "10491": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10493": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10494": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "ADD",
      "path": "7"
    },
    "10495": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "10496": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6610,
        6658
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10497": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6610,
        6658
      ],
      "op": "POP",
      "path": "7"
    },
    "10498": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6694,
        6705
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 104
    },
    "10499": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6679
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x8"
    },
    "10501": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6680,
        6690
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10502": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10503": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "10504": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10505": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "LT",
      "path": "7"
    },
    "10506": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2915"
    },
    "10509": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "10510": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2915"
    },
    "10513": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x30B8"
    },
    "10516": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6669,
        6691
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10517": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10518": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10520": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10521": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10522": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10523": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "10525": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10526": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10527": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10528": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10529": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10530": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "ADD",
      "path": "7"
    },
    "10531": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "10532": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10533": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "10534": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "10535": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 105
    },
    "10536": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10537": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10538": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6788
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x9"
    },
    "10540": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10541": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10542": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10543": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10545": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10546": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10547": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10548": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6814
      ],
      "op": "DUP5",
      "path": "7"
    },
    "10549": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6814
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10550": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6814
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "10551": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "DUP6",
      "path": "7",
      "statement": 106
    },
    "10552": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10553": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10554": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10555": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10556": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6935,
        6966
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "10557": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6986
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 107,
      "value": "0x8"
    },
    "10559": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10560": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "10561": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10562": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x294D"
    },
    "10565": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "10566": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x294D"
    },
    "10569": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x39D4"
    },
    "10572": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6976,
        6992
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10573": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10574": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "10576": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10577": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SUB",
      "path": "7"
    },
    "10578": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10579": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10580": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10581": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10583": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10584": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "10586": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10588": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10589": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "ADD",
      "path": "7"
    },
    "10590": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10592": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10593": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "10594": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10595": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "10596": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6009,
        6999
      ],
      "op": "POP",
      "path": "7"
    },
    "10597": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6009,
        6999
      ],
      "op": "POP",
      "path": "7"
    },
    "10598": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6009,
        6999
      ],
      "op": "POP",
      "path": "7"
    },
    "10599": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        5938,
        6999
      ],
      "op": "POP",
      "path": "7"
    },
    "10600": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "o",
      "offset": [
        5938,
        6999
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10601": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3490,
        3707
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10602": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3574,
        3588
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10604": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3591,
        3611
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2974"
    },
    "10607": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3608,
        3610
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10608": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3591,
        3607
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x901"
    },
    "10611": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "i",
      "offset": [
        3591,
        3611
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10612": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3591,
        3611
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10619": {
      "op": "SHL"
    },
    "10620": {
      "op": "SUB"
    },
    "10621": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 108
    },
    "10622": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "10623": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "AND",
      "path": "7"
    },
    "10624": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10626": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10627": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10628": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10629": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3633
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x6"
    },
    "10631": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "10633": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10634": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10635": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10636": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10638": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10639": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10640": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10641": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP7",
      "path": "7"
    },
    "10642": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP5",
      "path": "7"
    },
    "10643": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10644": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10645": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10646": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10647": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10648": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10649": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3655
      ],
      "op": "DUP6",
      "path": "7"
    },
    "10650": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3655
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10651": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3655
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "10652": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP4",
      "path": "7",
      "statement": 109
    },
    "10653": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10654": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10655": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3682
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x7"
    },
    "10657": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10658": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10659": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10660": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10661": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10662": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "10663": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10664": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10665": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10666": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "10667": {
      "op": "POP"
    },
    "10668": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "o",
      "offset": [
        3490,
        3707
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10669": {
      "op": "JUMPDEST"
    },
    "10670": {
      "op": "DUP3"
    },
    "10671": {
      "op": "DUP1"
    },
    "10672": {
      "op": "SLOAD"
    },
    "10673": {
      "op": "PUSH2",
      "value": "0x29B9"
    },
    "10676": {
      "op": "SWAP1"
    },
    "10677": {
      "op": "PUSH2",
      "value": "0x3030"
    },
    "10680": {
      "jump": "i",
      "op": "JUMP"
    },
    "10681": {
      "op": "JUMPDEST"
    },
    "10682": {
      "op": "SWAP1"
    },
    "10683": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10685": {
      "op": "MSTORE"
    },
    "10686": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10688": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10690": {
      "op": "KECCAK256"
    },
    "10691": {
      "op": "SWAP1"
    },
    "10692": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10694": {
      "op": "ADD"
    },
    "10695": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10697": {
      "op": "SWAP1"
    },
    "10698": {
      "op": "DIV"
    },
    "10699": {
      "op": "DUP2"
    },
    "10700": {
      "op": "ADD"
    },
    "10701": {
      "op": "SWAP3"
    },
    "10702": {
      "op": "DUP3"
    },
    "10703": {
      "op": "PUSH2",
      "value": "0x29DB"
    },
    "10706": {
      "op": "JUMPI"
    },
    "10707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10709": {
      "op": "DUP6"
    },
    "10710": {
      "op": "SSTORE"
    },
    "10711": {
      "op": "PUSH2",
      "value": "0x2A21"
    },
    "10714": {
      "op": "JUMP"
    },
    "10715": {
      "op": "JUMPDEST"
    },
    "10716": {
      "op": "DUP3"
    },
    "10717": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10719": {
      "op": "LT"
    },
    "10720": {
      "op": "PUSH2",
      "value": "0x29F4"
    },
    "10723": {
      "op": "JUMPI"
    },
    "10724": {
      "op": "DUP1"
    },
    "10725": {
      "op": "MLOAD"
    },
    "10726": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10728": {
      "op": "NOT"
    },
    "10729": {
      "op": "AND"
    },
    "10730": {
      "op": "DUP4"
    },
    "10731": {
      "op": "DUP1"
    },
    "10732": {
      "op": "ADD"
    },
    "10733": {
      "op": "OR"
    },
    "10734": {
      "op": "DUP6"
    },
    "10735": {
      "op": "SSTORE"
    },
    "10736": {
      "op": "PUSH2",
      "value": "0x2A21"
    },
    "10739": {
      "op": "JUMP"
    },
    "10740": {
      "op": "JUMPDEST"
    },
    "10741": {
      "op": "DUP3"
    },
    "10742": {
      "op": "DUP1"
    },
    "10743": {
      "op": "ADD"
    },
    "10744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10746": {
      "op": "ADD"
    },
    "10747": {
      "op": "DUP6"
    },
    "10748": {
      "op": "SSTORE"
    },
    "10749": {
      "op": "DUP3"
    },
    "10750": {
      "op": "ISZERO"
    },
    "10751": {
      "op": "PUSH2",
      "value": "0x2A21"
    },
    "10754": {
      "op": "JUMPI"
    },
    "10755": {
      "op": "SWAP2"
    },
    "10756": {
      "op": "DUP3"
    },
    "10757": {
      "op": "ADD"
    },
    "10758": {
      "op": "JUMPDEST"
    },
    "10759": {
      "op": "DUP3"
    },
    "10760": {
      "op": "DUP2"
    },
    "10761": {
      "op": "GT"
    },
    "10762": {
      "op": "ISZERO"
    },
    "10763": {
      "op": "PUSH2",
      "value": "0x2A21"
    },
    "10766": {
      "op": "JUMPI"
    },
    "10767": {
      "op": "DUP3"
    },
    "10768": {
      "op": "MLOAD"
    },
    "10769": {
      "op": "DUP3"
    },
    "10770": {
      "op": "SSTORE"
    },
    "10771": {
      "op": "SWAP2"
    },
    "10772": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10774": {
      "op": "ADD"
    },
    "10775": {
      "op": "SWAP2"
    },
    "10776": {
      "op": "SWAP1"
    },
    "10777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10779": {
      "op": "ADD"
    },
    "10780": {
      "op": "SWAP1"
    },
    "10781": {
      "op": "PUSH2",
      "value": "0x2A06"
    },
    "10784": {
      "op": "JUMP"
    },
    "10785": {
      "op": "JUMPDEST"
    },
    "10786": {
      "op": "POP"
    },
    "10787": {
      "op": "PUSH2",
      "value": "0x2A2D"
    },
    "10790": {
      "op": "SWAP3"
    },
    "10791": {
      "op": "SWAP2"
    },
    "10792": {
      "op": "POP"
    },
    "10793": {
      "op": "PUSH2",
      "value": "0x2A31"
    },
    "10796": {
      "jump": "i",
      "op": "JUMP"
    },
    "10797": {
      "op": "JUMPDEST"
    },
    "10798": {
      "op": "POP"
    },
    "10799": {
      "op": "SWAP1"
    },
    "10800": {
      "jump": "o",
      "op": "JUMP"
    },
    "10801": {
      "op": "JUMPDEST"
    },
    "10802": {
      "op": "JUMPDEST"
    },
    "10803": {
      "op": "DUP1"
    },
    "10804": {
      "op": "DUP3"
    },
    "10805": {
      "op": "GT"
    },
    "10806": {
      "op": "ISZERO"
    },
    "10807": {
      "op": "PUSH2",
      "value": "0x2A2D"
    },
    "10810": {
      "op": "JUMPI"
    },
    "10811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10813": {
      "op": "DUP2"
    },
    "10814": {
      "op": "SSTORE"
    },
    "10815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10817": {
      "op": "ADD"
    },
    "10818": {
      "op": "PUSH2",
      "value": "0x2A32"
    },
    "10821": {
      "op": "JUMP"
    },
    "10822": {
      "op": "JUMPDEST"
    },
    "10823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10827": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10829": {
      "op": "SHL"
    },
    "10830": {
      "op": "SUB"
    },
    "10831": {
      "op": "NOT"
    },
    "10832": {
      "op": "DUP2"
    },
    "10833": {
      "op": "AND"
    },
    "10834": {
      "op": "DUP2"
    },
    "10835": {
      "op": "EQ"
    },
    "10836": {
      "op": "PUSH2",
      "value": "0x198F"
    },
    "10839": {
      "op": "JUMPI"
    },
    "10840": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10842": {
      "op": "DUP1"
    },
    "10843": {
      "op": "REVERT"
    },
    "10844": {
      "op": "JUMPDEST"
    },
    "10845": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10847": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10849": {
      "op": "DUP3"
    },
    "10850": {
      "op": "DUP5"
    },
    "10851": {
      "op": "SUB"
    },
    "10852": {
      "op": "SLT"
    },
    "10853": {
      "op": "ISZERO"
    },
    "10854": {
      "op": "PUSH2",
      "value": "0x2A6E"
    },
    "10857": {
      "op": "JUMPI"
    },
    "10858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10860": {
      "op": "DUP1"
    },
    "10861": {
      "op": "REVERT"
    },
    "10862": {
      "op": "JUMPDEST"
    },
    "10863": {
      "op": "DUP2"
    },
    "10864": {
      "op": "CALLDATALOAD"
    },
    "10865": {
      "op": "PUSH2",
      "value": "0x2A79"
    },
    "10868": {
      "op": "DUP2"
    },
    "10869": {
      "op": "PUSH2",
      "value": "0x2A46"
    },
    "10872": {
      "jump": "i",
      "op": "JUMP"
    },
    "10873": {
      "op": "JUMPDEST"
    },
    "10874": {
      "op": "SWAP4"
    },
    "10875": {
      "op": "SWAP3"
    },
    "10876": {
      "op": "POP"
    },
    "10877": {
      "op": "POP"
    },
    "10878": {
      "op": "POP"
    },
    "10879": {
      "jump": "o",
      "op": "JUMP"
    },
    "10880": {
      "op": "JUMPDEST"
    },
    "10881": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10883": {
      "op": "JUMPDEST"
    },
    "10884": {
      "op": "DUP4"
    },
    "10885": {
      "op": "DUP2"
    },
    "10886": {
      "op": "LT"
    },
    "10887": {
      "op": "ISZERO"
    },
    "10888": {
      "op": "PUSH2",
      "value": "0x2A9B"
    },
    "10891": {
      "op": "JUMPI"
    },
    "10892": {
      "op": "DUP2"
    },
    "10893": {
      "op": "DUP2"
    },
    "10894": {
      "op": "ADD"
    },
    "10895": {
      "op": "MLOAD"
    },
    "10896": {
      "op": "DUP4"
    },
    "10897": {
      "op": "DUP3"
    },
    "10898": {
      "op": "ADD"
    },
    "10899": {
      "op": "MSTORE"
    },
    "10900": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10902": {
      "op": "ADD"
    },
    "10903": {
      "op": "PUSH2",
      "value": "0x2A83"
    },
    "10906": {
      "op": "JUMP"
    },
    "10907": {
      "op": "JUMPDEST"
    },
    "10908": {
      "op": "DUP4"
    },
    "10909": {
      "op": "DUP2"
    },
    "10910": {
      "op": "GT"
    },
    "10911": {
      "op": "ISZERO"
    },
    "10912": {
      "op": "PUSH2",
      "value": "0xB7E"
    },
    "10915": {
      "op": "JUMPI"
    },
    "10916": {
      "op": "POP"
    },
    "10917": {
      "op": "POP"
    },
    "10918": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10920": {
      "op": "SWAP2"
    },
    "10921": {
      "op": "ADD"
    },
    "10922": {
      "op": "MSTORE"
    },
    "10923": {
      "jump": "o",
      "op": "JUMP"
    },
    "10924": {
      "op": "JUMPDEST"
    },
    "10925": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10927": {
      "op": "DUP2"
    },
    "10928": {
      "op": "MLOAD"
    },
    "10929": {
      "op": "DUP1"
    },
    "10930": {
      "op": "DUP5"
    },
    "10931": {
      "op": "MSTORE"
    },
    "10932": {
      "op": "PUSH2",
      "value": "0x2AC4"
    },
    "10935": {
      "op": "DUP2"
    },
    "10936": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10938": {
      "op": "DUP7"
    },
    "10939": {
      "op": "ADD"
    },
    "10940": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10942": {
      "op": "DUP7"
    },
    "10943": {
      "op": "ADD"
    },
    "10944": {
      "op": "PUSH2",
      "value": "0x2A80"
    },
    "10947": {
      "jump": "i",
      "op": "JUMP"
    },
    "10948": {
      "op": "JUMPDEST"
    },
    "10949": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10951": {
      "op": "ADD"
    },
    "10952": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10954": {
      "op": "NOT"
    },
    "10955": {
      "op": "AND"
    },
    "10956": {
      "op": "SWAP3"
    },
    "10957": {
      "op": "SWAP1"
    },
    "10958": {
      "op": "SWAP3"
    },
    "10959": {
      "op": "ADD"
    },
    "10960": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10962": {
      "op": "ADD"
    },
    "10963": {
      "op": "SWAP3"
    },
    "10964": {
      "op": "SWAP2"
    },
    "10965": {
      "op": "POP"
    },
    "10966": {
      "op": "POP"
    },
    "10967": {
      "jump": "o",
      "op": "JUMP"
    },
    "10968": {
      "op": "JUMPDEST"
    },
    "10969": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10971": {
      "op": "DUP2"
    },
    "10972": {
      "op": "MSTORE"
    },
    "10973": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10975": {
      "op": "PUSH2",
      "value": "0x2A79"
    },
    "10978": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10980": {
      "op": "DUP4"
    },
    "10981": {
      "op": "ADD"
    },
    "10982": {
      "op": "DUP5"
    },
    "10983": {
      "op": "PUSH2",
      "value": "0x2AAC"
    },
    "10986": {
      "jump": "i",
      "op": "JUMP"
    },
    "10987": {
      "op": "JUMPDEST"
    },
    "10988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10990": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10992": {
      "op": "DUP3"
    },
    "10993": {
      "op": "DUP5"
    },
    "10994": {
      "op": "SUB"
    },
    "10995": {
      "op": "SLT"
    },
    "10996": {
      "op": "ISZERO"
    },
    "10997": {
      "op": "PUSH2",
      "value": "0x2AFD"
    },
    "11000": {
      "op": "JUMPI"
    },
    "11001": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11003": {
      "op": "DUP1"
    },
    "11004": {
      "op": "REVERT"
    },
    "11005": {
      "op": "JUMPDEST"
    },
    "11006": {
      "op": "POP"
    },
    "11007": {
      "op": "CALLDATALOAD"
    },
    "11008": {
      "op": "SWAP2"
    },
    "11009": {
      "op": "SWAP1"
    },
    "11010": {
      "op": "POP"
    },
    "11011": {
      "jump": "o",
      "op": "JUMP"
    },
    "11012": {
      "op": "JUMPDEST"
    },
    "11013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11019": {
      "op": "SHL"
    },
    "11020": {
      "op": "SUB"
    },
    "11021": {
      "op": "DUP2"
    },
    "11022": {
      "op": "AND"
    },
    "11023": {
      "op": "DUP2"
    },
    "11024": {
      "op": "EQ"
    },
    "11025": {
      "op": "PUSH2",
      "value": "0x198F"
    },
    "11028": {
      "op": "JUMPI"
    },
    "11029": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11031": {
      "op": "DUP1"
    },
    "11032": {
      "op": "REVERT"
    },
    "11033": {
      "op": "JUMPDEST"
    },
    "11034": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11036": {
      "op": "DUP1"
    },
    "11037": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11039": {
      "op": "DUP4"
    },
    "11040": {
      "op": "DUP6"
    },
    "11041": {
      "op": "SUB"
    },
    "11042": {
      "op": "SLT"
    },
    "11043": {
      "op": "ISZERO"
    },
    "11044": {
      "op": "PUSH2",
      "value": "0x2B2C"
    },
    "11047": {
      "op": "JUMPI"
    },
    "11048": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11050": {
      "op": "DUP1"
    },
    "11051": {
      "op": "REVERT"
    },
    "11052": {
      "op": "JUMPDEST"
    },
    "11053": {
      "op": "DUP3"
    },
    "11054": {
      "op": "CALLDATALOAD"
    },
    "11055": {
      "op": "PUSH2",
      "value": "0x2B37"
    },
    "11058": {
      "op": "DUP2"
    },
    "11059": {
      "op": "PUSH2",
      "value": "0x2B04"
    },
    "11062": {
      "jump": "i",
      "op": "JUMP"
    },
    "11063": {
      "op": "JUMPDEST"
    },
    "11064": {
      "op": "SWAP5"
    },
    "11065": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11067": {
      "op": "SWAP4"
    },
    "11068": {
      "op": "SWAP1"
    },
    "11069": {
      "op": "SWAP4"
    },
    "11070": {
      "op": "ADD"
    },
    "11071": {
      "op": "CALLDATALOAD"
    },
    "11072": {
      "op": "SWAP4"
    },
    "11073": {
      "op": "POP"
    },
    "11074": {
      "op": "POP"
    },
    "11075": {
      "op": "POP"
    },
    "11076": {
      "jump": "o",
      "op": "JUMP"
    },
    "11077": {
      "op": "JUMPDEST"
    },
    "11078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11080": {
      "op": "DUP1"
    },
    "11081": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11083": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11085": {
      "op": "DUP5"
    },
    "11086": {
      "op": "DUP7"
    },
    "11087": {
      "op": "SUB"
    },
    "11088": {
      "op": "SLT"
    },
    "11089": {
      "op": "ISZERO"
    },
    "11090": {
      "op": "PUSH2",
      "value": "0x2B5A"
    },
    "11093": {
      "op": "JUMPI"
    },
    "11094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11096": {
      "op": "DUP1"
    },
    "11097": {
      "op": "REVERT"
    },
    "11098": {
      "op": "JUMPDEST"
    },
    "11099": {
      "op": "DUP4"
    },
    "11100": {
      "op": "CALLDATALOAD"
    },
    "11101": {
      "op": "PUSH2",
      "value": "0x2B65"
    },
    "11104": {
      "op": "DUP2"
    },
    "11105": {
      "op": "PUSH2",
      "value": "0x2B04"
    },
    "11108": {
      "jump": "i",
      "op": "JUMP"
    },
    "11109": {
      "op": "JUMPDEST"
    },
    "11110": {
      "op": "SWAP3"
    },
    "11111": {
      "op": "POP"
    },
    "11112": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11114": {
      "op": "DUP5"
    },
    "11115": {
      "op": "ADD"
    },
    "11116": {
      "op": "CALLDATALOAD"
    },
    "11117": {
      "op": "PUSH2",
      "value": "0x2B75"
    },
    "11120": {
      "op": "DUP2"
    },
    "11121": {
      "op": "PUSH2",
      "value": "0x2B04"
    },
    "11124": {
      "jump": "i",
      "op": "JUMP"
    },
    "11125": {
      "op": "JUMPDEST"
    },
    "11126": {
      "op": "SWAP3"
    },
    "11127": {
      "op": "SWAP6"
    },
    "11128": {
      "op": "SWAP3"
    },
    "11129": {
      "op": "SWAP5"
    },
    "11130": {
      "op": "POP"
    },
    "11131": {
      "op": "POP"
    },
    "11132": {
      "op": "POP"
    },
    "11133": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11135": {
      "op": "SWAP2"
    },
    "11136": {
      "op": "SWAP1"
    },
    "11137": {
      "op": "SWAP2"
    },
    "11138": {
      "op": "ADD"
    },
    "11139": {
      "op": "CALLDATALOAD"
    },
    "11140": {
      "op": "SWAP1"
    },
    "11141": {
      "jump": "o",
      "op": "JUMP"
    },
    "11142": {
      "op": "JUMPDEST"
    },
    "11143": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11145": {
      "op": "DUP1"
    },
    "11146": {
      "op": "DUP3"
    },
    "11147": {
      "op": "MSTORE"
    },
    "11148": {
      "op": "DUP3"
    },
    "11149": {
      "op": "MLOAD"
    },
    "11150": {
      "op": "DUP3"
    },
    "11151": {
      "op": "DUP3"
    },
    "11152": {
      "op": "ADD"
    },
    "11153": {
      "op": "DUP2"
    },
    "11154": {
      "op": "SWAP1"
    },
    "11155": {
      "op": "MSTORE"
    },
    "11156": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11158": {
      "op": "SWAP2"
    },
    "11159": {
      "op": "SWAP1"
    },
    "11160": {
      "op": "DUP5"
    },
    "11161": {
      "op": "DUP3"
    },
    "11162": {
      "op": "ADD"
    },
    "11163": {
      "op": "SWAP1"
    },
    "11164": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11166": {
      "op": "DUP6"
    },
    "11167": {
      "op": "ADD"
    },
    "11168": {
      "op": "SWAP1"
    },
    "11169": {
      "op": "DUP5"
    },
    "11170": {
      "op": "JUMPDEST"
    },
    "11171": {
      "op": "DUP2"
    },
    "11172": {
      "op": "DUP2"
    },
    "11173": {
      "op": "LT"
    },
    "11174": {
      "op": "ISZERO"
    },
    "11175": {
      "op": "PUSH2",
      "value": "0x2BBE"
    },
    "11178": {
      "op": "JUMPI"
    },
    "11179": {
      "op": "DUP4"
    },
    "11180": {
      "op": "MLOAD"
    },
    "11181": {
      "op": "DUP4"
    },
    "11182": {
      "op": "MSTORE"
    },
    "11183": {
      "op": "SWAP3"
    },
    "11184": {
      "op": "DUP5"
    },
    "11185": {
      "op": "ADD"
    },
    "11186": {
      "op": "SWAP3"
    },
    "11187": {
      "op": "SWAP2"
    },
    "11188": {
      "op": "DUP5"
    },
    "11189": {
      "op": "ADD"
    },
    "11190": {
      "op": "SWAP2"
    },
    "11191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11193": {
      "op": "ADD"
    },
    "11194": {
      "op": "PUSH2",
      "value": "0x2BA2"
    },
    "11197": {
      "op": "JUMP"
    },
    "11198": {
      "op": "JUMPDEST"
    },
    "11199": {
      "op": "POP"
    },
    "11200": {
      "op": "SWAP1"
    },
    "11201": {
      "op": "SWAP7"
    },
    "11202": {
      "op": "SWAP6"
    },
    "11203": {
      "op": "POP"
    },
    "11204": {
      "op": "POP"
    },
    "11205": {
      "op": "POP"
    },
    "11206": {
      "op": "POP"
    },
    "11207": {
      "op": "POP"
    },
    "11208": {
      "op": "POP"
    },
    "11209": {
      "jump": "o",
      "op": "JUMP"
    },
    "11210": {
      "op": "JUMPDEST"
    },
    "11211": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11213": {
      "op": "DUP1"
    },
    "11214": {
      "op": "DUP4"
    },
    "11215": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11217": {
      "op": "DUP5"
    },
    "11218": {
      "op": "ADD"
    },
    "11219": {
      "op": "SLT"
    },
    "11220": {
      "op": "PUSH2",
      "value": "0x2BDC"
    },
    "11223": {
      "op": "JUMPI"
    },
    "11224": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11226": {
      "op": "DUP1"
    },
    "11227": {
      "op": "REVERT"
    },
    "11228": {
      "op": "JUMPDEST"
    },
    "11229": {
      "op": "POP"
    },
    "11230": {
      "op": "DUP2"
    },
    "11231": {
      "op": "CALLDATALOAD"
    },
    "11232": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11241": {
      "op": "DUP2"
    },
    "11242": {
      "op": "GT"
    },
    "11243": {
      "op": "ISZERO"
    },
    "11244": {
      "op": "PUSH2",
      "value": "0x2BF4"
    },
    "11247": {
      "op": "JUMPI"
    },
    "11248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11250": {
      "op": "DUP1"
    },
    "11251": {
      "op": "REVERT"
    },
    "11252": {
      "op": "JUMPDEST"
    },
    "11253": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11255": {
      "op": "DUP4"
    },
    "11256": {
      "op": "ADD"
    },
    "11257": {
      "op": "SWAP2"
    },
    "11258": {
      "op": "POP"
    },
    "11259": {
      "op": "DUP4"
    },
    "11260": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11262": {
      "op": "DUP3"
    },
    "11263": {
      "op": "DUP6"
    },
    "11264": {
      "op": "ADD"
    },
    "11265": {
      "op": "ADD"
    },
    "11266": {
      "op": "GT"
    },
    "11267": {
      "op": "ISZERO"
    },
    "11268": {
      "op": "PUSH2",
      "value": "0x2C0C"
    },
    "11271": {
      "op": "JUMPI"
    },
    "11272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11274": {
      "op": "DUP1"
    },
    "11275": {
      "op": "REVERT"
    },
    "11276": {
      "op": "JUMPDEST"
    },
    "11277": {
      "op": "SWAP3"
    },
    "11278": {
      "op": "POP"
    },
    "11279": {
      "op": "SWAP3"
    },
    "11280": {
      "op": "SWAP1"
    },
    "11281": {
      "op": "POP"
    },
    "11282": {
      "jump": "o",
      "op": "JUMP"
    },
    "11283": {
      "op": "JUMPDEST"
    },
    "11284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11286": {
      "op": "DUP1"
    },
    "11287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11289": {
      "op": "DUP1"
    },
    "11290": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11292": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11294": {
      "op": "DUP7"
    },
    "11295": {
      "op": "DUP9"
    },
    "11296": {
      "op": "SUB"
    },
    "11297": {
      "op": "SLT"
    },
    "11298": {
      "op": "ISZERO"
    },
    "11299": {
      "op": "PUSH2",
      "value": "0x2C2B"
    },
    "11302": {
      "op": "JUMPI"
    },
    "11303": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11305": {
      "op": "DUP1"
    },
    "11306": {
      "op": "REVERT"
    },
    "11307": {
      "op": "JUMPDEST"
    },
    "11308": {
      "op": "DUP6"
    },
    "11309": {
      "op": "CALLDATALOAD"
    },
    "11310": {
      "op": "SWAP5"
    },
    "11311": {
      "op": "POP"
    },
    "11312": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11314": {
      "op": "DUP7"
    },
    "11315": {
      "op": "ADD"
    },
    "11316": {
      "op": "CALLDATALOAD"
    },
    "11317": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11326": {
      "op": "DUP1"
    },
    "11327": {
      "op": "DUP3"
    },
    "11328": {
      "op": "GT"
    },
    "11329": {
      "op": "ISZERO"
    },
    "11330": {
      "op": "PUSH2",
      "value": "0x2C4A"
    },
    "11333": {
      "op": "JUMPI"
    },
    "11334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11336": {
      "op": "DUP1"
    },
    "11337": {
      "op": "REVERT"
    },
    "11338": {
      "op": "JUMPDEST"
    },
    "11339": {
      "op": "PUSH2",
      "value": "0x2C56"
    },
    "11342": {
      "op": "DUP10"
    },
    "11343": {
      "op": "DUP4"
    },
    "11344": {
      "op": "DUP11"
    },
    "11345": {
      "op": "ADD"
    },
    "11346": {
      "op": "PUSH2",
      "value": "0x2BCA"
    },
    "11349": {
      "jump": "i",
      "op": "JUMP"
    },
    "11350": {
      "op": "JUMPDEST"
    },
    "11351": {
      "op": "SWAP1"
    },
    "11352": {
      "op": "SWAP7"
    },
    "11353": {
      "op": "POP"
    },
    "11354": {
      "op": "SWAP5"
    },
    "11355": {
      "op": "POP"
    },
    "11356": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11358": {
      "op": "DUP9"
    },
    "11359": {
      "op": "ADD"
    },
    "11360": {
      "op": "CALLDATALOAD"
    },
    "11361": {
      "op": "SWAP2"
    },
    "11362": {
      "op": "POP"
    },
    "11363": {
      "op": "DUP1"
    },
    "11364": {
      "op": "DUP3"
    },
    "11365": {
      "op": "GT"
    },
    "11366": {
      "op": "ISZERO"
    },
    "11367": {
      "op": "PUSH2",
      "value": "0x2C6F"
    },
    "11370": {
      "op": "JUMPI"
    },
    "11371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11373": {
      "op": "DUP1"
    },
    "11374": {
      "op": "REVERT"
    },
    "11375": {
      "op": "JUMPDEST"
    },
    "11376": {
      "op": "POP"
    },
    "11377": {
      "op": "PUSH2",
      "value": "0x2C7C"
    },
    "11380": {
      "op": "DUP9"
    },
    "11381": {
      "op": "DUP3"
    },
    "11382": {
      "op": "DUP10"
    },
    "11383": {
      "op": "ADD"
    },
    "11384": {
      "op": "PUSH2",
      "value": "0x2BCA"
    },
    "11387": {
      "jump": "i",
      "op": "JUMP"
    },
    "11388": {
      "op": "JUMPDEST"
    },
    "11389": {
      "op": "SWAP7"
    },
    "11390": {
      "op": "SWAP10"
    },
    "11391": {
      "op": "SWAP6"
    },
    "11392": {
      "op": "SWAP9"
    },
    "11393": {
      "op": "POP"
    },
    "11394": {
      "op": "SWAP4"
    },
    "11395": {
      "op": "SWAP7"
    },
    "11396": {
      "op": "POP"
    },
    "11397": {
      "op": "SWAP3"
    },
    "11398": {
      "op": "SWAP5"
    },
    "11399": {
      "op": "SWAP4"
    },
    "11400": {
      "op": "SWAP3"
    },
    "11401": {
      "op": "POP"
    },
    "11402": {
      "op": "POP"
    },
    "11403": {
      "op": "POP"
    },
    "11404": {
      "jump": "o",
      "op": "JUMP"
    },
    "11405": {
      "op": "JUMPDEST"
    },
    "11406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11408": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11410": {
      "op": "DUP3"
    },
    "11411": {
      "op": "DUP5"
    },
    "11412": {
      "op": "SUB"
    },
    "11413": {
      "op": "SLT"
    },
    "11414": {
      "op": "ISZERO"
    },
    "11415": {
      "op": "PUSH2",
      "value": "0x2C9F"
    },
    "11418": {
      "op": "JUMPI"
    },
    "11419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11421": {
      "op": "DUP1"
    },
    "11422": {
      "op": "REVERT"
    },
    "11423": {
      "op": "JUMPDEST"
    },
    "11424": {
      "op": "DUP2"
    },
    "11425": {
      "op": "CALLDATALOAD"
    },
    "11426": {
      "op": "PUSH2",
      "value": "0x2A79"
    },
    "11429": {
      "op": "DUP2"
    },
    "11430": {
      "op": "PUSH2",
      "value": "0x2B04"
    },
    "11433": {
      "jump": "i",
      "op": "JUMP"
    },
    "11434": {
      "op": "JUMPDEST"
    },
    "11435": {
      "op": "DUP1"
    },
    "11436": {
      "op": "ISZERO"
    },
    "11437": {
      "op": "ISZERO"
    },
    "11438": {
      "op": "DUP2"
    },
    "11439": {
      "op": "EQ"
    },
    "11440": {
      "op": "PUSH2",
      "value": "0x198F"
    },
    "11443": {
      "op": "JUMPI"
    },
    "11444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11446": {
      "op": "DUP1"
    },
    "11447": {
      "op": "REVERT"
    },
    "11448": {
      "op": "JUMPDEST"
    },
    "11449": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11451": {
      "op": "DUP1"
    },
    "11452": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11454": {
      "op": "DUP4"
    },
    "11455": {
      "op": "DUP6"
    },
    "11456": {
      "op": "SUB"
    },
    "11457": {
      "op": "SLT"
    },
    "11458": {
      "op": "ISZERO"
    },
    "11459": {
      "op": "PUSH2",
      "value": "0x2CCB"
    },
    "11462": {
      "op": "JUMPI"
    },
    "11463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11465": {
      "op": "DUP1"
    },
    "11466": {
      "op": "REVERT"
    },
    "11467": {
      "op": "JUMPDEST"
    },
    "11468": {
      "op": "DUP3"
    },
    "11469": {
      "op": "CALLDATALOAD"
    },
    "11470": {
      "op": "PUSH2",
      "value": "0x2CD6"
    },
    "11473": {
      "op": "DUP2"
    },
    "11474": {
      "op": "PUSH2",
      "value": "0x2B04"
    },
    "11477": {
      "jump": "i",
      "op": "JUMP"
    },
    "11478": {
      "op": "JUMPDEST"
    },
    "11479": {
      "op": "SWAP2"
    },
    "11480": {
      "op": "POP"
    },
    "11481": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11483": {
      "op": "DUP4"
    },
    "11484": {
      "op": "ADD"
    },
    "11485": {
      "op": "CALLDATALOAD"
    },
    "11486": {
      "op": "PUSH2",
      "value": "0x2CE6"
    },
    "11489": {
      "op": "DUP2"
    },
    "11490": {
      "op": "PUSH2",
      "value": "0x2CAA"
    },
    "11493": {
      "jump": "i",
      "op": "JUMP"
    },
    "11494": {
      "op": "JUMPDEST"
    },
    "11495": {
      "op": "DUP1"
    },
    "11496": {
      "op": "SWAP2"
    },
    "11497": {
      "op": "POP"
    },
    "11498": {
      "op": "POP"
    },
    "11499": {
      "op": "SWAP3"
    },
    "11500": {
      "op": "POP"
    },
    "11501": {
      "op": "SWAP3"
    },
    "11502": {
      "op": "SWAP1"
    },
    "11503": {
      "op": "POP"
    },
    "11504": {
      "jump": "o",
      "op": "JUMP"
    },
    "11505": {
      "op": "JUMPDEST"
    },
    "11506": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11511": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11513": {
      "op": "SHL"
    },
    "11514": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11516": {
      "op": "MSTORE"
    },
    "11517": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "11519": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11521": {
      "op": "MSTORE"
    },
    "11522": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11526": {
      "op": "REVERT"
    },
    "11527": {
      "op": "JUMPDEST"
    },
    "11528": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11530": {
      "op": "MLOAD"
    },
    "11531": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11533": {
      "op": "DUP3"
    },
    "11534": {
      "op": "ADD"
    },
    "11535": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11537": {
      "op": "NOT"
    },
    "11538": {
      "op": "AND"
    },
    "11539": {
      "op": "DUP2"
    },
    "11540": {
      "op": "ADD"
    },
    "11541": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11550": {
      "op": "DUP2"
    },
    "11551": {
      "op": "GT"
    },
    "11552": {
      "op": "DUP3"
    },
    "11553": {
      "op": "DUP3"
    },
    "11554": {
      "op": "LT"
    },
    "11555": {
      "op": "OR"
    },
    "11556": {
      "op": "ISZERO"
    },
    "11557": {
      "op": "PUSH2",
      "value": "0x2D30"
    },
    "11560": {
      "op": "JUMPI"
    },
    "11561": {
      "op": "PUSH2",
      "value": "0x2D30"
    },
    "11564": {
      "op": "PUSH2",
      "value": "0x2CF1"
    },
    "11567": {
      "jump": "i",
      "op": "JUMP"
    },
    "11568": {
      "op": "JUMPDEST"
    },
    "11569": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11571": {
      "op": "MSTORE"
    },
    "11572": {
      "op": "SWAP2"
    },
    "11573": {
      "op": "SWAP1"
    },
    "11574": {
      "op": "POP"
    },
    "11575": {
      "jump": "o",
      "op": "JUMP"
    },
    "11576": {
      "op": "JUMPDEST"
    },
    "11577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11579": {
      "op": "DUP1"
    },
    "11580": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11582": {
      "op": "DUP1"
    },
    "11583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11585": {
      "op": "DUP1"
    },
    "11586": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11588": {
      "op": "DUP8"
    },
    "11589": {
      "op": "DUP10"
    },
    "11590": {
      "op": "SUB"
    },
    "11591": {
      "op": "SLT"
    },
    "11592": {
      "op": "ISZERO"
    },
    "11593": {
      "op": "PUSH2",
      "value": "0x2D51"
    },
    "11596": {
      "op": "JUMPI"
    },
    "11597": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11599": {
      "op": "DUP1"
    },
    "11600": {
      "op": "REVERT"
    },
    "11601": {
      "op": "JUMPDEST"
    },
    "11602": {
      "op": "DUP7"
    },
    "11603": {
      "op": "CALLDATALOAD"
    },
    "11604": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11613": {
      "op": "DUP1"
    },
    "11614": {
      "op": "DUP3"
    },
    "11615": {
      "op": "GT"
    },
    "11616": {
      "op": "ISZERO"
    },
    "11617": {
      "op": "PUSH2",
      "value": "0x2D69"
    },
    "11620": {
      "op": "JUMPI"
    },
    "11621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11623": {
      "op": "DUP1"
    },
    "11624": {
      "op": "REVERT"
    },
    "11625": {
      "op": "JUMPDEST"
    },
    "11626": {
      "op": "PUSH2",
      "value": "0x2D75"
    },
    "11629": {
      "op": "DUP11"
    },
    "11630": {
      "op": "DUP4"
    },
    "11631": {
      "op": "DUP12"
    },
    "11632": {
      "op": "ADD"
    },
    "11633": {
      "op": "PUSH2",
      "value": "0x2BCA"
    },
    "11636": {
      "jump": "i",
      "op": "JUMP"
    },
    "11637": {
      "op": "JUMPDEST"
    },
    "11638": {
      "op": "SWAP1"
    },
    "11639": {
      "op": "SWAP9"
    },
    "11640": {
      "op": "POP"
    },
    "11641": {
      "op": "SWAP7"
    },
    "11642": {
      "op": "POP"
    },
    "11643": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11645": {
      "op": "SWAP2"
    },
    "11646": {
      "op": "POP"
    },
    "11647": {
      "op": "DUP9"
    },
    "11648": {
      "op": "DUP3"
    },
    "11649": {
      "op": "ADD"
    },
    "11650": {
      "op": "CALLDATALOAD"
    },
    "11651": {
      "op": "DUP2"
    },
    "11652": {
      "op": "DUP2"
    },
    "11653": {
      "op": "GT"
    },
    "11654": {
      "op": "ISZERO"
    },
    "11655": {
      "op": "PUSH2",
      "value": "0x2D8F"
    },
    "11658": {
      "op": "JUMPI"
    },
    "11659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11661": {
      "op": "DUP1"
    },
    "11662": {
      "op": "REVERT"
    },
    "11663": {
      "op": "JUMPDEST"
    },
    "11664": {
      "op": "PUSH2",
      "value": "0x2D9B"
    },
    "11667": {
      "op": "DUP12"
    },
    "11668": {
      "op": "DUP3"
    },
    "11669": {
      "op": "DUP13"
    },
    "11670": {
      "op": "ADD"
    },
    "11671": {
      "op": "PUSH2",
      "value": "0x2BCA"
    },
    "11674": {
      "jump": "i",
      "op": "JUMP"
    },
    "11675": {
      "op": "JUMPDEST"
    },
    "11676": {
      "op": "SWAP1"
    },
    "11677": {
      "op": "SWAP8"
    },
    "11678": {
      "op": "POP"
    },
    "11679": {
      "op": "SWAP6"
    },
    "11680": {
      "op": "POP"
    },
    "11681": {
      "op": "POP"
    },
    "11682": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11684": {
      "op": "DUP10"
    },
    "11685": {
      "op": "ADD"
    },
    "11686": {
      "op": "CALLDATALOAD"
    },
    "11687": {
      "op": "SWAP4"
    },
    "11688": {
      "op": "POP"
    },
    "11689": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11691": {
      "op": "DUP10"
    },
    "11692": {
      "op": "ADD"
    },
    "11693": {
      "op": "CALLDATALOAD"
    },
    "11694": {
      "op": "DUP2"
    },
    "11695": {
      "op": "DUP2"
    },
    "11696": {
      "op": "GT"
    },
    "11697": {
      "op": "ISZERO"
    },
    "11698": {
      "op": "PUSH2",
      "value": "0x2DBA"
    },
    "11701": {
      "op": "JUMPI"
    },
    "11702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11704": {
      "op": "DUP1"
    },
    "11705": {
      "op": "REVERT"
    },
    "11706": {
      "op": "JUMPDEST"
    },
    "11707": {
      "op": "DUP10"
    },
    "11708": {
      "op": "ADD"
    },
    "11709": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11711": {
      "op": "DUP2"
    },
    "11712": {
      "op": "ADD"
    },
    "11713": {
      "op": "DUP12"
    },
    "11714": {
      "op": "SGT"
    },
    "11715": {
      "op": "PUSH2",
      "value": "0x2DCB"
    },
    "11718": {
      "op": "JUMPI"
    },
    "11719": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11721": {
      "op": "DUP1"
    },
    "11722": {
      "op": "REVERT"
    },
    "11723": {
      "op": "JUMPDEST"
    },
    "11724": {
      "op": "DUP1"
    },
    "11725": {
      "op": "CALLDATALOAD"
    },
    "11726": {
      "op": "DUP3"
    },
    "11727": {
      "op": "DUP2"
    },
    "11728": {
      "op": "GT"
    },
    "11729": {
      "op": "ISZERO"
    },
    "11730": {
      "op": "PUSH2",
      "value": "0x2DDD"
    },
    "11733": {
      "op": "JUMPI"
    },
    "11734": {
      "op": "PUSH2",
      "value": "0x2DDD"
    },
    "11737": {
      "op": "PUSH2",
      "value": "0x2CF1"
    },
    "11740": {
      "jump": "i",
      "op": "JUMP"
    },
    "11741": {
      "op": "JUMPDEST"
    },
    "11742": {
      "op": "DUP1"
    },
    "11743": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "11745": {
      "op": "SHL"
    },
    "11746": {
      "op": "SWAP3"
    },
    "11747": {
      "op": "POP"
    },
    "11748": {
      "op": "PUSH2",
      "value": "0x2DEE"
    },
    "11751": {
      "op": "DUP5"
    },
    "11752": {
      "op": "DUP5"
    },
    "11753": {
      "op": "ADD"
    },
    "11754": {
      "op": "PUSH2",
      "value": "0x2D07"
    },
    "11757": {
      "jump": "i",
      "op": "JUMP"
    },
    "11758": {
      "op": "JUMPDEST"
    },
    "11759": {
      "op": "DUP2"
    },
    "11760": {
      "op": "DUP2"
    },
    "11761": {
      "op": "MSTORE"
    },
    "11762": {
      "op": "SWAP3"
    },
    "11763": {
      "op": "DUP3"
    },
    "11764": {
      "op": "ADD"
    },
    "11765": {
      "op": "DUP5"
    },
    "11766": {
      "op": "ADD"
    },
    "11767": {
      "op": "SWAP3"
    },
    "11768": {
      "op": "DUP5"
    },
    "11769": {
      "op": "DUP2"
    },
    "11770": {
      "op": "ADD"
    },
    "11771": {
      "op": "SWAP1"
    },
    "11772": {
      "op": "DUP14"
    },
    "11773": {
      "op": "DUP6"
    },
    "11774": {
      "op": "GT"
    },
    "11775": {
      "op": "ISZERO"
    },
    "11776": {
      "op": "PUSH2",
      "value": "0x2E08"
    },
    "11779": {
      "op": "JUMPI"
    },
    "11780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11782": {
      "op": "DUP1"
    },
    "11783": {
      "op": "REVERT"
    },
    "11784": {
      "op": "JUMPDEST"
    },
    "11785": {
      "op": "SWAP3"
    },
    "11786": {
      "op": "DUP6"
    },
    "11787": {
      "op": "ADD"
    },
    "11788": {
      "op": "SWAP3"
    },
    "11789": {
      "op": "JUMPDEST"
    },
    "11790": {
      "op": "DUP5"
    },
    "11791": {
      "op": "DUP5"
    },
    "11792": {
      "op": "LT"
    },
    "11793": {
      "op": "ISZERO"
    },
    "11794": {
      "op": "PUSH2",
      "value": "0x2E32"
    },
    "11797": {
      "op": "JUMPI"
    },
    "11798": {
      "op": "DUP4"
    },
    "11799": {
      "op": "CALLDATALOAD"
    },
    "11800": {
      "op": "SWAP3"
    },
    "11801": {
      "op": "POP"
    },
    "11802": {
      "op": "PUSH2",
      "value": "0x2E22"
    },
    "11805": {
      "op": "DUP4"
    },
    "11806": {
      "op": "PUSH2",
      "value": "0x2B04"
    },
    "11809": {
      "jump": "i",
      "op": "JUMP"
    },
    "11810": {
      "op": "JUMPDEST"
    },
    "11811": {
      "op": "DUP3"
    },
    "11812": {
      "op": "DUP3"
    },
    "11813": {
      "op": "MSTORE"
    },
    "11814": {
      "op": "SWAP3"
    },
    "11815": {
      "op": "DUP6"
    },
    "11816": {
      "op": "ADD"
    },
    "11817": {
      "op": "SWAP3"
    },
    "11818": {
      "op": "SWAP1"
    },
    "11819": {
      "op": "DUP6"
    },
    "11820": {
      "op": "ADD"
    },
    "11821": {
      "op": "SWAP1"
    },
    "11822": {
      "op": "PUSH2",
      "value": "0x2E0D"
    },
    "11825": {
      "op": "JUMP"
    },
    "11826": {
      "op": "JUMPDEST"
    },
    "11827": {
      "op": "DUP1"
    },
    "11828": {
      "op": "SWAP7"
    },
    "11829": {
      "op": "POP"
    },
    "11830": {
      "op": "POP"
    },
    "11831": {
      "op": "POP"
    },
    "11832": {
      "op": "POP"
    },
    "11833": {
      "op": "POP"
    },
    "11834": {
      "op": "POP"
    },
    "11835": {
      "op": "POP"
    },
    "11836": {
      "op": "SWAP3"
    },
    "11837": {
      "op": "SWAP6"
    },
    "11838": {
      "op": "POP"
    },
    "11839": {
      "op": "SWAP3"
    },
    "11840": {
      "op": "SWAP6"
    },
    "11841": {
      "op": "POP"
    },
    "11842": {
      "op": "SWAP3"
    },
    "11843": {
      "op": "SWAP6"
    },
    "11844": {
      "jump": "o",
      "op": "JUMP"
    },
    "11845": {
      "op": "JUMPDEST"
    },
    "11846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11848": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11857": {
      "op": "DUP3"
    },
    "11858": {
      "op": "GT"
    },
    "11859": {
      "op": "ISZERO"
    },
    "11860": {
      "op": "PUSH2",
      "value": "0x2E5F"
    },
    "11863": {
      "op": "JUMPI"
    },
    "11864": {
      "op": "PUSH2",
      "value": "0x2E5F"
    },
    "11867": {
      "op": "PUSH2",
      "value": "0x2CF1"
    },
    "11870": {
      "jump": "i",
      "op": "JUMP"
    },
    "11871": {
      "op": "JUMPDEST"
    },
    "11872": {
      "op": "POP"
    },
    "11873": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11875": {
      "op": "ADD"
    },
    "11876": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11878": {
      "op": "NOT"
    },
    "11879": {
      "op": "AND"
    },
    "11880": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11882": {
      "op": "ADD"
    },
    "11883": {
      "op": "SWAP1"
    },
    "11884": {
      "jump": "o",
      "op": "JUMP"
    },
    "11885": {
      "op": "JUMPDEST"
    },
    "11886": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11888": {
      "op": "DUP1"
    },
    "11889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11891": {
      "op": "DUP1"
    },
    "11892": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11894": {
      "op": "DUP6"
    },
    "11895": {
      "op": "DUP8"
    },
    "11896": {
      "op": "SUB"
    },
    "11897": {
      "op": "SLT"
    },
    "11898": {
      "op": "ISZERO"
    },
    "11899": {
      "op": "PUSH2",
      "value": "0x2E83"
    },
    "11902": {
      "op": "JUMPI"
    },
    "11903": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11905": {
      "op": "DUP1"
    },
    "11906": {
      "op": "REVERT"
    },
    "11907": {
      "op": "JUMPDEST"
    },
    "11908": {
      "op": "DUP5"
    },
    "11909": {
      "op": "CALLDATALOAD"
    },
    "11910": {
      "op": "PUSH2",
      "value": "0x2E8E"
    },
    "11913": {
      "op": "DUP2"
    },
    "11914": {
      "op": "PUSH2",
      "value": "0x2B04"
    },
    "11917": {
      "jump": "i",
      "op": "JUMP"
    },
    "11918": {
      "op": "JUMPDEST"
    },
    "11919": {
      "op": "SWAP4"
    },
    "11920": {
      "op": "POP"
    },
    "11921": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11923": {
      "op": "DUP6"
    },
    "11924": {
      "op": "ADD"
    },
    "11925": {
      "op": "CALLDATALOAD"
    },
    "11926": {
      "op": "PUSH2",
      "value": "0x2E9E"
    },
    "11929": {
      "op": "DUP2"
    },
    "11930": {
      "op": "PUSH2",
      "value": "0x2B04"
    },
    "11933": {
      "jump": "i",
      "op": "JUMP"
    },
    "11934": {
      "op": "JUMPDEST"
    },
    "11935": {
      "op": "SWAP3"
    },
    "11936": {
      "op": "POP"
    },
    "11937": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11939": {
      "op": "DUP6"
    },
    "11940": {
      "op": "ADD"
    },
    "11941": {
      "op": "CALLDATALOAD"
    },
    "11942": {
      "op": "SWAP2"
    },
    "11943": {
      "op": "POP"
    },
    "11944": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11946": {
      "op": "DUP6"
    },
    "11947": {
      "op": "ADD"
    },
    "11948": {
      "op": "CALLDATALOAD"
    },
    "11949": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11958": {
      "op": "DUP2"
    },
    "11959": {
      "op": "GT"
    },
    "11960": {
      "op": "ISZERO"
    },
    "11961": {
      "op": "PUSH2",
      "value": "0x2EC1"
    },
    "11964": {
      "op": "JUMPI"
    },
    "11965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11967": {
      "op": "DUP1"
    },
    "11968": {
      "op": "REVERT"
    },
    "11969": {
      "op": "JUMPDEST"
    },
    "11970": {
      "op": "DUP6"
    },
    "11971": {
      "op": "ADD"
    },
    "11972": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11974": {
      "op": "DUP2"
    },
    "11975": {
      "op": "ADD"
    },
    "11976": {
      "op": "DUP8"
    },
    "11977": {
      "op": "SGT"
    },
    "11978": {
      "op": "PUSH2",
      "value": "0x2ED2"
    },
    "11981": {
      "op": "JUMPI"
    },
    "11982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11984": {
      "op": "DUP1"
    },
    "11985": {
      "op": "REVERT"
    },
    "11986": {
      "op": "JUMPDEST"
    },
    "11987": {
      "op": "DUP1"
    },
    "11988": {
      "op": "CALLDATALOAD"
    },
    "11989": {
      "op": "PUSH2",
      "value": "0x2EE5"
    },
    "11992": {
      "op": "PUSH2",
      "value": "0x2EE0"
    },
    "11995": {
      "op": "DUP3"
    },
    "11996": {
      "op": "PUSH2",
      "value": "0x2E45"
    },
    "11999": {
      "jump": "i",
      "op": "JUMP"
    },
    "12000": {
      "op": "JUMPDEST"
    },
    "12001": {
      "op": "PUSH2",
      "value": "0x2D07"
    },
    "12004": {
      "jump": "i",
      "op": "JUMP"
    },
    "12005": {
      "op": "JUMPDEST"
    },
    "12006": {
      "op": "DUP2"
    },
    "12007": {
      "op": "DUP2"
    },
    "12008": {
      "op": "MSTORE"
    },
    "12009": {
      "op": "DUP9"
    },
    "12010": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12012": {
      "op": "DUP4"
    },
    "12013": {
      "op": "DUP6"
    },
    "12014": {
      "op": "ADD"
    },
    "12015": {
      "op": "ADD"
    },
    "12016": {
      "op": "GT"
    },
    "12017": {
      "op": "ISZERO"
    },
    "12018": {
      "op": "PUSH2",
      "value": "0x2EFA"
    },
    "12021": {
      "op": "JUMPI"
    },
    "12022": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12024": {
      "op": "DUP1"
    },
    "12025": {
      "op": "REVERT"
    },
    "12026": {
      "op": "JUMPDEST"
    },
    "12027": {
      "op": "DUP2"
    },
    "12028": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12030": {
      "op": "DUP5"
    },
    "12031": {
      "op": "ADD"
    },
    "12032": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12034": {
      "op": "DUP4"
    },
    "12035": {
      "op": "ADD"
    },
    "12036": {
      "op": "CALLDATACOPY"
    },
    "12037": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12039": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12041": {
      "op": "DUP4"
    },
    "12042": {
      "op": "DUP4"
    },
    "12043": {
      "op": "ADD"
    },
    "12044": {
      "op": "ADD"
    },
    "12045": {
      "op": "MSTORE"
    },
    "12046": {
      "op": "DUP1"
    },
    "12047": {
      "op": "SWAP4"
    },
    "12048": {
      "op": "POP"
    },
    "12049": {
      "op": "POP"
    },
    "12050": {
      "op": "POP"
    },
    "12051": {
      "op": "POP"
    },
    "12052": {
      "op": "SWAP3"
    },
    "12053": {
      "op": "SWAP6"
    },
    "12054": {
      "op": "SWAP2"
    },
    "12055": {
      "op": "SWAP5"
    },
    "12056": {
      "op": "POP"
    },
    "12057": {
      "op": "SWAP3"
    },
    "12058": {
      "op": "POP"
    },
    "12059": {
      "jump": "o",
      "op": "JUMP"
    },
    "12060": {
      "op": "JUMPDEST"
    },
    "12061": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12063": {
      "op": "DUP2"
    },
    "12064": {
      "op": "MSTORE"
    },
    "12065": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12067": {
      "op": "DUP3"
    },
    "12068": {
      "op": "MLOAD"
    },
    "12069": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12071": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12073": {
      "op": "DUP5"
    },
    "12074": {
      "op": "ADD"
    },
    "12075": {
      "op": "MSTORE"
    },
    "12076": {
      "op": "PUSH2",
      "value": "0x2F38"
    },
    "12079": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12081": {
      "op": "DUP5"
    },
    "12082": {
      "op": "ADD"
    },
    "12083": {
      "op": "DUP3"
    },
    "12084": {
      "op": "PUSH2",
      "value": "0x2AAC"
    },
    "12087": {
      "jump": "i",
      "op": "JUMP"
    },
    "12088": {
      "op": "JUMPDEST"
    },
    "12089": {
      "op": "SWAP1"
    },
    "12090": {
      "op": "POP"
    },
    "12091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12093": {
      "op": "DUP5"
    },
    "12094": {
      "op": "ADD"
    },
    "12095": {
      "op": "MLOAD"
    },
    "12096": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12098": {
      "op": "NOT"
    },
    "12099": {
      "op": "DUP5"
    },
    "12100": {
      "op": "DUP4"
    },
    "12101": {
      "op": "SUB"
    },
    "12102": {
      "op": "ADD"
    },
    "12103": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12105": {
      "op": "DUP6"
    },
    "12106": {
      "op": "ADD"
    },
    "12107": {
      "op": "MSTORE"
    },
    "12108": {
      "op": "PUSH2",
      "value": "0x2F55"
    },
    "12111": {
      "op": "DUP3"
    },
    "12112": {
      "op": "DUP3"
    },
    "12113": {
      "op": "PUSH2",
      "value": "0x2AAC"
    },
    "12116": {
      "jump": "i",
      "op": "JUMP"
    },
    "12117": {
      "op": "JUMPDEST"
    },
    "12118": {
      "op": "SWAP2"
    },
    "12119": {
      "op": "POP"
    },
    "12120": {
      "op": "POP"
    },
    "12121": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12123": {
      "op": "DUP5"
    },
    "12124": {
      "op": "ADD"
    },
    "12125": {
      "op": "MLOAD"
    },
    "12126": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12128": {
      "op": "DUP5"
    },
    "12129": {
      "op": "ADD"
    },
    "12130": {
      "op": "MSTORE"
    },
    "12131": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12133": {
      "op": "DUP5"
    },
    "12134": {
      "op": "ADD"
    },
    "12135": {
      "op": "MLOAD"
    },
    "12136": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12138": {
      "op": "DUP5"
    },
    "12139": {
      "op": "ADD"
    },
    "12140": {
      "op": "MSTORE"
    },
    "12141": {
      "op": "DUP1"
    },
    "12142": {
      "op": "SWAP2"
    },
    "12143": {
      "op": "POP"
    },
    "12144": {
      "op": "POP"
    },
    "12145": {
      "op": "SWAP3"
    },
    "12146": {
      "op": "SWAP2"
    },
    "12147": {
      "op": "POP"
    },
    "12148": {
      "op": "POP"
    },
    "12149": {
      "jump": "o",
      "op": "JUMP"
    },
    "12150": {
      "op": "JUMPDEST"
    },
    "12151": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12153": {
      "op": "DUP1"
    },
    "12154": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12156": {
      "op": "DUP4"
    },
    "12157": {
      "op": "DUP6"
    },
    "12158": {
      "op": "SUB"
    },
    "12159": {
      "op": "SLT"
    },
    "12160": {
      "op": "ISZERO"
    },
    "12161": {
      "op": "PUSH2",
      "value": "0x2F89"
    },
    "12164": {
      "op": "JUMPI"
    },
    "12165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12167": {
      "op": "DUP1"
    },
    "12168": {
      "op": "REVERT"
    },
    "12169": {
      "op": "JUMPDEST"
    },
    "12170": {
      "op": "DUP3"
    },
    "12171": {
      "op": "CALLDATALOAD"
    },
    "12172": {
      "op": "PUSH2",
      "value": "0x2F94"
    },
    "12175": {
      "op": "DUP2"
    },
    "12176": {
      "op": "PUSH2",
      "value": "0x2B04"
    },
    "12179": {
      "jump": "i",
      "op": "JUMP"
    },
    "12180": {
      "op": "JUMPDEST"
    },
    "12181": {
      "op": "SWAP2"
    },
    "12182": {
      "op": "POP"
    },
    "12183": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12185": {
      "op": "DUP4"
    },
    "12186": {
      "op": "ADD"
    },
    "12187": {
      "op": "CALLDATALOAD"
    },
    "12188": {
      "op": "PUSH2",
      "value": "0x2CE6"
    },
    "12191": {
      "op": "DUP2"
    },
    "12192": {
      "op": "PUSH2",
      "value": "0x2B04"
    },
    "12195": {
      "jump": "i",
      "op": "JUMP"
    },
    "12196": {
      "op": "JUMPDEST"
    },
    "12197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12199": {
      "op": "DUP1"
    },
    "12200": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12202": {
      "op": "DUP1"
    },
    "12203": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12205": {
      "op": "DUP1"
    },
    "12206": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12208": {
      "op": "DUP8"
    },
    "12209": {
      "op": "DUP10"
    },
    "12210": {
      "op": "SUB"
    },
    "12211": {
      "op": "SLT"
    },
    "12212": {
      "op": "ISZERO"
    },
    "12213": {
      "op": "PUSH2",
      "value": "0x2FBD"
    },
    "12216": {
      "op": "JUMPI"
    },
    "12217": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12219": {
      "op": "DUP1"
    },
    "12220": {
      "op": "REVERT"
    },
    "12221": {
      "op": "JUMPDEST"
    },
    "12222": {
      "op": "DUP7"
    },
    "12223": {
      "op": "CALLDATALOAD"
    },
    "12224": {
      "op": "PUSH2",
      "value": "0x2FC8"
    },
    "12227": {
      "op": "DUP2"
    },
    "12228": {
      "op": "PUSH2",
      "value": "0x2B04"
    },
    "12231": {
      "jump": "i",
      "op": "JUMP"
    },
    "12232": {
      "op": "JUMPDEST"
    },
    "12233": {
      "op": "SWAP6"
    },
    "12234": {
      "op": "POP"
    },
    "12235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12237": {
      "op": "DUP8"
    },
    "12238": {
      "op": "ADD"
    },
    "12239": {
      "op": "CALLDATALOAD"
    },
    "12240": {
      "op": "SWAP5"
    },
    "12241": {
      "op": "POP"
    },
    "12242": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12244": {
      "op": "DUP8"
    },
    "12245": {
      "op": "ADD"
    },
    "12246": {
      "op": "CALLDATALOAD"
    },
    "12247": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12256": {
      "op": "DUP1"
    },
    "12257": {
      "op": "DUP3"
    },
    "12258": {
      "op": "GT"
    },
    "12259": {
      "op": "ISZERO"
    },
    "12260": {
      "op": "PUSH2",
      "value": "0x2FEC"
    },
    "12263": {
      "op": "JUMPI"
    },
    "12264": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12266": {
      "op": "DUP1"
    },
    "12267": {
      "op": "REVERT"
    },
    "12268": {
      "op": "JUMPDEST"
    },
    "12269": {
      "op": "PUSH2",
      "value": "0x2FF8"
    },
    "12272": {
      "op": "DUP11"
    },
    "12273": {
      "op": "DUP4"
    },
    "12274": {
      "op": "DUP12"
    },
    "12275": {
      "op": "ADD"
    },
    "12276": {
      "op": "PUSH2",
      "value": "0x2BCA"
    },
    "12279": {
      "jump": "i",
      "op": "JUMP"
    },
    "12280": {
      "op": "JUMPDEST"
    },
    "12281": {
      "op": "SWAP1"
    },
    "12282": {
      "op": "SWAP7"
    },
    "12283": {
      "op": "POP"
    },
    "12284": {
      "op": "SWAP5"
    },
    "12285": {
      "op": "POP"
    },
    "12286": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12288": {
      "op": "DUP10"
    },
    "12289": {
      "op": "ADD"
    },
    "12290": {
      "op": "CALLDATALOAD"
    },
    "12291": {
      "op": "SWAP2"
    },
    "12292": {
      "op": "POP"
    },
    "12293": {
      "op": "DUP1"
    },
    "12294": {
      "op": "DUP3"
    },
    "12295": {
      "op": "GT"
    },
    "12296": {
      "op": "ISZERO"
    },
    "12297": {
      "op": "PUSH2",
      "value": "0x3011"
    },
    "12300": {
      "op": "JUMPI"
    },
    "12301": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12303": {
      "op": "DUP1"
    },
    "12304": {
      "op": "REVERT"
    },
    "12305": {
      "op": "JUMPDEST"
    },
    "12306": {
      "op": "POP"
    },
    "12307": {
      "op": "PUSH2",
      "value": "0x301E"
    },
    "12310": {
      "op": "DUP10"
    },
    "12311": {
      "op": "DUP3"
    },
    "12312": {
      "op": "DUP11"
    },
    "12313": {
      "op": "ADD"
    },
    "12314": {
      "op": "PUSH2",
      "value": "0x2BCA"
    },
    "12317": {
      "jump": "i",
      "op": "JUMP"
    },
    "12318": {
      "op": "JUMPDEST"
    },
    "12319": {
      "op": "SWAP8"
    },
    "12320": {
      "op": "SWAP11"
    },
    "12321": {
      "op": "SWAP7"
    },
    "12322": {
      "op": "SWAP10"
    },
    "12323": {
      "op": "POP"
    },
    "12324": {
      "op": "SWAP5"
    },
    "12325": {
      "op": "SWAP8"
    },
    "12326": {
      "op": "POP"
    },
    "12327": {
      "op": "SWAP3"
    },
    "12328": {
      "op": "SWAP6"
    },
    "12329": {
      "op": "SWAP4"
    },
    "12330": {
      "op": "SWAP5"
    },
    "12331": {
      "op": "SWAP3"
    },
    "12332": {
      "op": "POP"
    },
    "12333": {
      "op": "POP"
    },
    "12334": {
      "op": "POP"
    },
    "12335": {
      "jump": "o",
      "op": "JUMP"
    },
    "12336": {
      "op": "JUMPDEST"
    },
    "12337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12339": {
      "op": "DUP2"
    },
    "12340": {
      "op": "DUP2"
    },
    "12341": {
      "op": "SHR"
    },
    "12342": {
      "op": "SWAP1"
    },
    "12343": {
      "op": "DUP3"
    },
    "12344": {
      "op": "AND"
    },
    "12345": {
      "op": "DUP1"
    },
    "12346": {
      "op": "PUSH2",
      "value": "0x3044"
    },
    "12349": {
      "op": "JUMPI"
    },
    "12350": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "12352": {
      "op": "DUP3"
    },
    "12353": {
      "op": "AND"
    },
    "12354": {
      "op": "SWAP2"
    },
    "12355": {
      "op": "POP"
    },
    "12356": {
      "op": "JUMPDEST"
    },
    "12357": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12359": {
      "op": "DUP3"
    },
    "12360": {
      "op": "LT"
    },
    "12361": {
      "op": "DUP2"
    },
    "12362": {
      "op": "SUB"
    },
    "12363": {
      "op": "PUSH2",
      "value": "0x3064"
    },
    "12366": {
      "op": "JUMPI"
    },
    "12367": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12372": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12374": {
      "op": "SHL"
    },
    "12375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12377": {
      "op": "MSTORE"
    },
    "12378": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "12380": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12382": {
      "op": "MSTORE"
    },
    "12383": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12385": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12387": {
      "op": "REVERT"
    },
    "12388": {
      "op": "JUMPDEST"
    },
    "12389": {
      "op": "POP"
    },
    "12390": {
      "op": "SWAP2"
    },
    "12391": {
      "op": "SWAP1"
    },
    "12392": {
      "op": "POP"
    },
    "12393": {
      "jump": "o",
      "op": "JUMP"
    },
    "12394": {
      "op": "JUMPDEST"
    },
    "12395": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12397": {
      "op": "DUP1"
    },
    "12398": {
      "op": "DUP3"
    },
    "12399": {
      "op": "MSTORE"
    },
    "12400": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "12402": {
      "op": "SWAP1"
    },
    "12403": {
      "op": "DUP3"
    },
    "12404": {
      "op": "ADD"
    },
    "12405": {
      "op": "MSTORE"
    },
    "12406": {
      "op": "PUSH32",
      "value": "0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
    },
    "12439": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12441": {
      "op": "DUP3"
    },
    "12442": {
      "op": "ADD"
    },
    "12443": {
      "op": "MSTORE"
    },
    "12444": {
      "op": "PUSH14",
      "value": "0x1C881B9BDC88185C1C1C9BDD9959"
    },
    "12459": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "12461": {
      "op": "SHL"
    },
    "12462": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12464": {
      "op": "DUP3"
    },
    "12465": {
      "op": "ADD"
    },
    "12466": {
      "op": "MSTORE"
    },
    "12467": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12469": {
      "op": "ADD"
    },
    "12470": {
      "op": "SWAP1"
    },
    "12471": {
      "jump": "o",
      "op": "JUMP"
    },
    "12472": {
      "op": "JUMPDEST"
    },
    "12473": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12478": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12480": {
      "op": "SHL"
    },
    "12481": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12483": {
      "op": "MSTORE"
    },
    "12484": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "12486": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12488": {
      "op": "MSTORE"
    },
    "12489": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12493": {
      "op": "REVERT"
    },
    "12494": {
      "op": "JUMPDEST"
    },
    "12495": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12497": {
      "op": "DUP2"
    },
    "12498": {
      "op": "MSTORE"
    },
    "12499": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12501": {
      "op": "PUSH2",
      "value": "0x30F4"
    },
    "12504": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12506": {
      "op": "DUP4"
    },
    "12507": {
      "op": "ADD"
    },
    "12508": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "12510": {
      "op": "DUP2"
    },
    "12511": {
      "op": "MSTORE"
    },
    "12512": {
      "op": "PUSH6",
      "value": "0x49534F544F5"
    },
    "12519": {
      "op": "PUSH1",
      "value": "0xD4"
    },
    "12521": {
      "op": "SHL"
    },
    "12522": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12524": {
      "op": "DUP3"
    },
    "12525": {
      "op": "ADD"
    },
    "12526": {
      "op": "MSTORE"
    },
    "12527": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12529": {
      "op": "ADD"
    },
    "12530": {
      "op": "SWAP1"
    },
    "12531": {
      "op": "JUMP"
    },
    "12532": {
      "op": "JUMPDEST"
    },
    "12533": {
      "op": "DUP3"
    },
    "12534": {
      "op": "DUP2"
    },
    "12535": {
      "op": "SUB"
    },
    "12536": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12538": {
      "op": "SWAP4"
    },
    "12539": {
      "op": "DUP5"
    },
    "12540": {
      "op": "ADD"
    },
    "12541": {
      "op": "MSTORE"
    },
    "12542": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "12544": {
      "op": "DUP2"
    },
    "12545": {
      "op": "MSTORE"
    },
    "12546": {
      "op": "PUSH16",
      "value": "0x4245455F534F554C5F41444452455353"
    },
    "12563": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12565": {
      "op": "SHL"
    },
    "12566": {
      "op": "SWAP3"
    },
    "12567": {
      "op": "DUP2"
    },
    "12568": {
      "op": "ADD"
    },
    "12569": {
      "op": "SWAP3"
    },
    "12570": {
      "op": "SWAP1"
    },
    "12571": {
      "op": "SWAP3"
    },
    "12572": {
      "op": "MSTORE"
    },
    "12573": {
      "op": "POP"
    },
    "12574": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12576": {
      "op": "ADD"
    },
    "12577": {
      "op": "SWAP1"
    },
    "12578": {
      "jump": "o",
      "op": "JUMP"
    },
    "12579": {
      "op": "JUMPDEST"
    },
    "12580": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12582": {
      "op": "PUSH2",
      "value": "0x3131"
    },
    "12585": {
      "op": "PUSH2",
      "value": "0x2EE0"
    },
    "12588": {
      "op": "DUP5"
    },
    "12589": {
      "op": "PUSH2",
      "value": "0x2E45"
    },
    "12592": {
      "jump": "i",
      "op": "JUMP"
    },
    "12593": {
      "op": "JUMPDEST"
    },
    "12594": {
      "op": "SWAP1"
    },
    "12595": {
      "op": "POP"
    },
    "12596": {
      "op": "DUP3"
    },
    "12597": {
      "op": "DUP2"
    },
    "12598": {
      "op": "MSTORE"
    },
    "12599": {
      "op": "DUP4"
    },
    "12600": {
      "op": "DUP4"
    },
    "12601": {
      "op": "DUP4"
    },
    "12602": {
      "op": "ADD"
    },
    "12603": {
      "op": "GT"
    },
    "12604": {
      "op": "ISZERO"
    },
    "12605": {
      "op": "PUSH2",
      "value": "0x3145"
    },
    "12608": {
      "op": "JUMPI"
    },
    "12609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12611": {
      "op": "DUP1"
    },
    "12612": {
      "op": "REVERT"
    },
    "12613": {
      "op": "JUMPDEST"
    },
    "12614": {
      "op": "PUSH2",
      "value": "0x2A79"
    },
    "12617": {
      "op": "DUP4"
    },
    "12618": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12620": {
      "op": "DUP4"
    },
    "12621": {
      "op": "ADD"
    },
    "12622": {
      "op": "DUP5"
    },
    "12623": {
      "op": "PUSH2",
      "value": "0x2A80"
    },
    "12626": {
      "jump": "i",
      "op": "JUMP"
    },
    "12627": {
      "op": "JUMPDEST"
    },
    "12628": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12632": {
      "op": "DUP3"
    },
    "12633": {
      "op": "DUP5"
    },
    "12634": {
      "op": "SUB"
    },
    "12635": {
      "op": "SLT"
    },
    "12636": {
      "op": "ISZERO"
    },
    "12637": {
      "op": "PUSH2",
      "value": "0x3165"
    },
    "12640": {
      "op": "JUMPI"
    },
    "12641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12643": {
      "op": "DUP1"
    },
    "12644": {
      "op": "REVERT"
    },
    "12645": {
      "op": "JUMPDEST"
    },
    "12646": {
      "op": "DUP2"
    },
    "12647": {
      "op": "MLOAD"
    },
    "12648": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12657": {
      "op": "DUP2"
    },
    "12658": {
      "op": "GT"
    },
    "12659": {
      "op": "ISZERO"
    },
    "12660": {
      "op": "PUSH2",
      "value": "0x317C"
    },
    "12663": {
      "op": "JUMPI"
    },
    "12664": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12666": {
      "op": "DUP1"
    },
    "12667": {
      "op": "REVERT"
    },
    "12668": {
      "op": "JUMPDEST"
    },
    "12669": {
      "op": "DUP3"
    },
    "12670": {
      "op": "ADD"
    },
    "12671": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12673": {
      "op": "DUP2"
    },
    "12674": {
      "op": "ADD"
    },
    "12675": {
      "op": "DUP5"
    },
    "12676": {
      "op": "SGT"
    },
    "12677": {
      "op": "PUSH2",
      "value": "0x318D"
    },
    "12680": {
      "op": "JUMPI"
    },
    "12681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12683": {
      "op": "DUP1"
    },
    "12684": {
      "op": "REVERT"
    },
    "12685": {
      "op": "JUMPDEST"
    },
    "12686": {
      "op": "PUSH2",
      "value": "0x1A77"
    },
    "12689": {
      "op": "DUP5"
    },
    "12690": {
      "op": "DUP3"
    },
    "12691": {
      "op": "MLOAD"
    },
    "12692": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12694": {
      "op": "DUP5"
    },
    "12695": {
      "op": "ADD"
    },
    "12696": {
      "op": "PUSH2",
      "value": "0x3123"
    },
    "12699": {
      "jump": "i",
      "op": "JUMP"
    },
    "12700": {
      "op": "JUMPDEST"
    },
    "12701": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12703": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12705": {
      "op": "DUP3"
    },
    "12706": {
      "op": "DUP5"
    },
    "12707": {
      "op": "SUB"
    },
    "12708": {
      "op": "SLT"
    },
    "12709": {
      "op": "ISZERO"
    },
    "12710": {
      "op": "PUSH2",
      "value": "0x31AE"
    },
    "12713": {
      "op": "JUMPI"
    },
    "12714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12716": {
      "op": "DUP1"
    },
    "12717": {
      "op": "REVERT"
    },
    "12718": {
      "op": "JUMPDEST"
    },
    "12719": {
      "op": "DUP2"
    },
    "12720": {
      "op": "MLOAD"
    },
    "12721": {
      "op": "PUSH2",
      "value": "0x2A79"
    },
    "12724": {
      "op": "DUP2"
    },
    "12725": {
      "op": "PUSH2",
      "value": "0x2B04"
    },
    "12728": {
      "jump": "i",
      "op": "JUMP"
    },
    "12729": {
      "op": "JUMPDEST"
    },
    "12730": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12732": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12734": {
      "op": "DUP3"
    },
    "12735": {
      "op": "DUP5"
    },
    "12736": {
      "op": "SUB"
    },
    "12737": {
      "op": "SLT"
    },
    "12738": {
      "op": "ISZERO"
    },
    "12739": {
      "op": "PUSH2",
      "value": "0x31CB"
    },
    "12742": {
      "op": "JUMPI"
    },
    "12743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12745": {
      "op": "DUP1"
    },
    "12746": {
      "op": "REVERT"
    },
    "12747": {
      "op": "JUMPDEST"
    },
    "12748": {
      "op": "DUP2"
    },
    "12749": {
      "op": "MLOAD"
    },
    "12750": {
      "op": "PUSH2",
      "value": "0x2A79"
    },
    "12753": {
      "op": "DUP2"
    },
    "12754": {
      "op": "PUSH2",
      "value": "0x2CAA"
    },
    "12757": {
      "jump": "i",
      "op": "JUMP"
    },
    "12758": {
      "op": "JUMPDEST"
    },
    "12759": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12761": {
      "op": "DUP2"
    },
    "12762": {
      "op": "MSTORE"
    },
    "12763": {
      "op": "DUP2"
    },
    "12764": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12766": {
      "op": "DUP3"
    },
    "12767": {
      "op": "ADD"
    },
    "12768": {
      "op": "MSTORE"
    },
    "12769": {
      "op": "DUP2"
    },
    "12770": {
      "op": "DUP4"
    },
    "12771": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12773": {
      "op": "DUP4"
    },
    "12774": {
      "op": "ADD"
    },
    "12775": {
      "op": "CALLDATACOPY"
    },
    "12776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12778": {
      "op": "DUP2"
    },
    "12779": {
      "op": "DUP4"
    },
    "12780": {
      "op": "ADD"
    },
    "12781": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12783": {
      "op": "SWAP1"
    },
    "12784": {
      "op": "DUP2"
    },
    "12785": {
      "op": "ADD"
    },
    "12786": {
      "op": "SWAP2"
    },
    "12787": {
      "op": "SWAP1"
    },
    "12788": {
      "op": "SWAP2"
    },
    "12789": {
      "op": "MSTORE"
    },
    "12790": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12792": {
      "op": "SWAP1"
    },
    "12793": {
      "op": "SWAP3"
    },
    "12794": {
      "op": "ADD"
    },
    "12795": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12797": {
      "op": "NOT"
    },
    "12798": {
      "op": "AND"
    },
    "12799": {
      "op": "ADD"
    },
    "12800": {
      "op": "ADD"
    },
    "12801": {
      "op": "SWAP2"
    },
    "12802": {
      "op": "SWAP1"
    },
    "12803": {
      "op": "POP"
    },
    "12804": {
      "jump": "o",
      "op": "JUMP"
    },
    "12805": {
      "op": "JUMPDEST"
    },
    "12806": {
      "op": "DUP4"
    },
    "12807": {
      "op": "DUP6"
    },
    "12808": {
      "op": "DUP3"
    },
    "12809": {
      "op": "CALLDATACOPY"
    },
    "12810": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12812": {
      "op": "DUP5"
    },
    "12813": {
      "op": "DUP3"
    },
    "12814": {
      "op": "ADD"
    },
    "12815": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12817": {
      "op": "DUP2"
    },
    "12818": {
      "op": "MSTORE"
    },
    "12819": {
      "op": "DUP4"
    },
    "12820": {
      "op": "DUP6"
    },
    "12821": {
      "op": "DUP3"
    },
    "12822": {
      "op": "CALLDATACOPY"
    },
    "12823": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12825": {
      "op": "SWAP4"
    },
    "12826": {
      "op": "ADD"
    },
    "12827": {
      "op": "SWAP3"
    },
    "12828": {
      "op": "DUP4"
    },
    "12829": {
      "op": "MSTORE"
    },
    "12830": {
      "op": "POP"
    },
    "12831": {
      "op": "SWAP1"
    },
    "12832": {
      "op": "SWAP5"
    },
    "12833": {
      "op": "SWAP4"
    },
    "12834": {
      "op": "POP"
    },
    "12835": {
      "op": "POP"
    },
    "12836": {
      "op": "POP"
    },
    "12837": {
      "op": "POP"
    },
    "12838": {
      "jump": "o",
      "op": "JUMP"
    },
    "12839": {
      "op": "JUMPDEST"
    },
    "12840": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12845": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12847": {
      "op": "SHL"
    },
    "12848": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12850": {
      "op": "MSTORE"
    },
    "12851": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "12853": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12855": {
      "op": "MSTORE"
    },
    "12856": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12860": {
      "op": "REVERT"
    },
    "12861": {
      "op": "JUMPDEST"
    },
    "12862": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12866": {
      "op": "DUP3"
    },
    "12867": {
      "op": "ADD"
    },
    "12868": {
      "op": "PUSH2",
      "value": "0x324F"
    },
    "12871": {
      "op": "JUMPI"
    },
    "12872": {
      "op": "PUSH2",
      "value": "0x324F"
    },
    "12875": {
      "op": "PUSH2",
      "value": "0x3227"
    },
    "12878": {
      "jump": "i",
      "op": "JUMP"
    },
    "12879": {
      "op": "JUMPDEST"
    },
    "12880": {
      "op": "POP"
    },
    "12881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12883": {
      "op": "ADD"
    },
    "12884": {
      "op": "SWAP1"
    },
    "12885": {
      "jump": "o",
      "op": "JUMP"
    },
    "12886": {
      "op": "JUMPDEST"
    },
    "12887": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12889": {
      "op": "DUP2"
    },
    "12890": {
      "op": "MSTORE"
    },
    "12891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12893": {
      "op": "PUSH2",
      "value": "0x327C"
    },
    "12896": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12898": {
      "op": "DUP4"
    },
    "12899": {
      "op": "ADD"
    },
    "12900": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "12902": {
      "op": "DUP2"
    },
    "12903": {
      "op": "MSTORE"
    },
    "12904": {
      "op": "PUSH6",
      "value": "0x49534F544F5"
    },
    "12911": {
      "op": "PUSH1",
      "value": "0xD4"
    },
    "12913": {
      "op": "SHL"
    },
    "12914": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12916": {
      "op": "DUP3"
    },
    "12917": {
      "op": "ADD"
    },
    "12918": {
      "op": "MSTORE"
    },
    "12919": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12921": {
      "op": "ADD"
    },
    "12922": {
      "op": "SWAP1"
    },
    "12923": {
      "op": "JUMP"
    },
    "12924": {
      "op": "JUMPDEST"
    },
    "12925": {
      "op": "DUP3"
    },
    "12926": {
      "op": "DUP2"
    },
    "12927": {
      "op": "SUB"
    },
    "12928": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12930": {
      "op": "SWAP4"
    },
    "12931": {
      "op": "DUP5"
    },
    "12932": {
      "op": "ADD"
    },
    "12933": {
      "op": "MSTORE"
    },
    "12934": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "12936": {
      "op": "DUP2"
    },
    "12937": {
      "op": "MSTORE"
    },
    "12938": {
      "op": "PUSH20",
      "value": "0x4245455F4441544554494D455F41444452455353"
    },
    "12959": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12961": {
      "op": "SHL"
    },
    "12962": {
      "op": "SWAP3"
    },
    "12963": {
      "op": "DUP2"
    },
    "12964": {
      "op": "ADD"
    },
    "12965": {
      "op": "SWAP3"
    },
    "12966": {
      "op": "SWAP1"
    },
    "12967": {
      "op": "SWAP3"
    },
    "12968": {
      "op": "MSTORE"
    },
    "12969": {
      "op": "POP"
    },
    "12970": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12972": {
      "op": "ADD"
    },
    "12973": {
      "op": "SWAP1"
    },
    "12974": {
      "jump": "o",
      "op": "JUMP"
    },
    "12975": {
      "op": "JUMPDEST"
    },
    "12976": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12978": {
      "op": "DUP2"
    },
    "12979": {
      "op": "MSTORE"
    },
    "12980": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12982": {
      "op": "PUSH2",
      "value": "0x32C2"
    },
    "12985": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12987": {
      "op": "DUP4"
    },
    "12988": {
      "op": "ADD"
    },
    "12989": {
      "op": "DUP6"
    },
    "12990": {
      "op": "PUSH2",
      "value": "0x2AAC"
    },
    "12993": {
      "jump": "i",
      "op": "JUMP"
    },
    "12994": {
      "op": "JUMPDEST"
    },
    "12995": {
      "op": "DUP3"
    },
    "12996": {
      "op": "DUP2"
    },
    "12997": {
      "op": "SUB"
    },
    "12998": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13000": {
      "op": "DUP5"
    },
    "13001": {
      "op": "ADD"
    },
    "13002": {
      "op": "MSTORE"
    },
    "13003": {
      "op": "PUSH2",
      "value": "0x32D4"
    },
    "13006": {
      "op": "DUP2"
    },
    "13007": {
      "op": "DUP6"
    },
    "13008": {
      "op": "PUSH2",
      "value": "0x2AAC"
    },
    "13011": {
      "jump": "i",
      "op": "JUMP"
    },
    "13012": {
      "op": "JUMPDEST"
    },
    "13013": {
      "op": "SWAP6"
    },
    "13014": {
      "op": "SWAP5"
    },
    "13015": {
      "op": "POP"
    },
    "13016": {
      "op": "POP"
    },
    "13017": {
      "op": "POP"
    },
    "13018": {
      "op": "POP"
    },
    "13019": {
      "op": "POP"
    },
    "13020": {
      "jump": "o",
      "op": "JUMP"
    },
    "13021": {
      "op": "JUMPDEST"
    },
    "13022": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13024": {
      "op": "DUP2"
    },
    "13025": {
      "op": "MSTORE"
    },
    "13026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13028": {
      "op": "PUSH2",
      "value": "0x3303"
    },
    "13031": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13033": {
      "op": "DUP4"
    },
    "13034": {
      "op": "ADD"
    },
    "13035": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "13037": {
      "op": "DUP2"
    },
    "13038": {
      "op": "MSTORE"
    },
    "13039": {
      "op": "PUSH6",
      "value": "0x49534F544F5"
    },
    "13046": {
      "op": "PUSH1",
      "value": "0xD4"
    },
    "13048": {
      "op": "SHL"
    },
    "13049": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13051": {
      "op": "DUP3"
    },
    "13052": {
      "op": "ADD"
    },
    "13053": {
      "op": "MSTORE"
    },
    "13054": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13056": {
      "op": "ADD"
    },
    "13057": {
      "op": "SWAP1"
    },
    "13058": {
      "op": "JUMP"
    },
    "13059": {
      "op": "JUMPDEST"
    },
    "13060": {
      "op": "DUP3"
    },
    "13061": {
      "op": "DUP2"
    },
    "13062": {
      "op": "SUB"
    },
    "13063": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13065": {
      "op": "SWAP4"
    },
    "13066": {
      "op": "DUP5"
    },
    "13067": {
      "op": "ADD"
    },
    "13068": {
      "op": "MSTORE"
    },
    "13069": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "13071": {
      "op": "DUP2"
    },
    "13072": {
      "op": "MSTORE"
    },
    "13073": {
      "op": "PUSH15",
      "value": "0x10915157D4D09517D1115190555315"
    },
    "13089": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "13091": {
      "op": "SHL"
    },
    "13092": {
      "op": "SWAP3"
    },
    "13093": {
      "op": "DUP2"
    },
    "13094": {
      "op": "ADD"
    },
    "13095": {
      "op": "SWAP3"
    },
    "13096": {
      "op": "SWAP1"
    },
    "13097": {
      "op": "SWAP3"
    },
    "13098": {
      "op": "MSTORE"
    },
    "13099": {
      "op": "POP"
    },
    "13100": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13102": {
      "op": "ADD"
    },
    "13103": {
      "op": "SWAP1"
    },
    "13104": {
      "jump": "o",
      "op": "JUMP"
    },
    "13105": {
      "op": "JUMPDEST"
    },
    "13106": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13108": {
      "op": "DUP2"
    },
    "13109": {
      "op": "MLOAD"
    },
    "13110": {
      "op": "PUSH2",
      "value": "0x3343"
    },
    "13113": {
      "op": "DUP2"
    },
    "13114": {
      "op": "DUP6"
    },
    "13115": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13117": {
      "op": "DUP7"
    },
    "13118": {
      "op": "ADD"
    },
    "13119": {
      "op": "PUSH2",
      "value": "0x2A80"
    },
    "13122": {
      "jump": "i",
      "op": "JUMP"
    },
    "13123": {
      "op": "JUMPDEST"
    },
    "13124": {
      "op": "SWAP3"
    },
    "13125": {
      "op": "SWAP1"
    },
    "13126": {
      "op": "SWAP3"
    },
    "13127": {
      "op": "ADD"
    },
    "13128": {
      "op": "SWAP3"
    },
    "13129": {
      "op": "SWAP2"
    },
    "13130": {
      "op": "POP"
    },
    "13131": {
      "op": "POP"
    },
    "13132": {
      "jump": "o",
      "op": "JUMP"
    },
    "13133": {
      "op": "JUMPDEST"
    },
    "13134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13136": {
      "op": "DUP4"
    },
    "13137": {
      "op": "MLOAD"
    },
    "13138": {
      "op": "PUSH2",
      "value": "0x335F"
    },
    "13141": {
      "op": "DUP2"
    },
    "13142": {
      "op": "DUP5"
    },
    "13143": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13145": {
      "op": "DUP9"
    },
    "13146": {
      "op": "ADD"
    },
    "13147": {
      "op": "PUSH2",
      "value": "0x2A80"
    },
    "13150": {
      "jump": "i",
      "op": "JUMP"
    },
    "13151": {
      "op": "JUMPDEST"
    },
    "13152": {
      "op": "DUP4"
    },
    "13153": {
      "op": "MLOAD"
    },
    "13154": {
      "op": "SWAP1"
    },
    "13155": {
      "op": "DUP4"
    },
    "13156": {
      "op": "ADD"
    },
    "13157": {
      "op": "SWAP1"
    },
    "13158": {
      "op": "PUSH2",
      "value": "0x3373"
    },
    "13161": {
      "op": "DUP2"
    },
    "13162": {
      "op": "DUP4"
    },
    "13163": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13165": {
      "op": "DUP9"
    },
    "13166": {
      "op": "ADD"
    },
    "13167": {
      "op": "PUSH2",
      "value": "0x2A80"
    },
    "13170": {
      "jump": "i",
      "op": "JUMP"
    },
    "13171": {
      "op": "JUMPDEST"
    },
    "13172": {
      "op": "PUSH5",
      "value": "0x173539B7B7"
    },
    "13178": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "13180": {
      "op": "SHL"
    },
    "13181": {
      "op": "SWAP2"
    },
    "13182": {
      "op": "ADD"
    },
    "13183": {
      "op": "SWAP1"
    },
    "13184": {
      "op": "DUP2"
    },
    "13185": {
      "op": "MSTORE"
    },
    "13186": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "13188": {
      "op": "ADD"
    },
    "13189": {
      "op": "SWAP5"
    },
    "13190": {
      "op": "SWAP4"
    },
    "13191": {
      "op": "POP"
    },
    "13192": {
      "op": "POP"
    },
    "13193": {
      "op": "POP"
    },
    "13194": {
      "op": "POP"
    },
    "13195": {
      "jump": "o",
      "op": "JUMP"
    },
    "13196": {
      "op": "JUMPDEST"
    },
    "13197": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13199": {
      "op": "DUP2"
    },
    "13200": {
      "op": "MSTORE"
    },
    "13201": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13203": {
      "op": "PUSH2",
      "value": "0x339F"
    },
    "13206": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13208": {
      "op": "DUP4"
    },
    "13209": {
      "op": "ADD"
    },
    "13210": {
      "op": "DUP6"
    },
    "13211": {
      "op": "PUSH2",
      "value": "0x2AAC"
    },
    "13214": {
      "jump": "i",
      "op": "JUMP"
    },
    "13215": {
      "op": "JUMPDEST"
    },
    "13216": {
      "op": "DUP3"
    },
    "13217": {
      "op": "DUP2"
    },
    "13218": {
      "op": "SUB"
    },
    "13219": {
      "op": "DUP1"
    },
    "13220": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13222": {
      "op": "DUP6"
    },
    "13223": {
      "op": "ADD"
    },
    "13224": {
      "op": "MSTORE"
    },
    "13225": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "13227": {
      "op": "DUP3"
    },
    "13228": {
      "op": "MSTORE"
    },
    "13229": {
      "op": "PUSH17",
      "value": "0x5B534F554C49442020202020202020205D"
    },
    "13247": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "13249": {
      "op": "SHL"
    },
    "13250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13252": {
      "op": "DUP4"
    },
    "13253": {
      "op": "ADD"
    },
    "13254": {
      "op": "MSTORE"
    },
    "13255": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13257": {
      "op": "DUP2"
    },
    "13258": {
      "op": "ADD"
    },
    "13259": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13261": {
      "op": "DUP6"
    },
    "13262": {
      "op": "ADD"
    },
    "13263": {
      "op": "MSTORE"
    },
    "13264": {
      "op": "POP"
    },
    "13265": {
      "op": "PUSH2",
      "value": "0x32D4"
    },
    "13268": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13270": {
      "op": "DUP3"
    },
    "13271": {
      "op": "ADD"
    },
    "13272": {
      "op": "DUP6"
    },
    "13273": {
      "op": "PUSH2",
      "value": "0x2AAC"
    },
    "13276": {
      "jump": "i",
      "op": "JUMP"
    },
    "13277": {
      "op": "JUMPDEST"
    },
    "13278": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13280": {
      "op": "DUP2"
    },
    "13281": {
      "op": "MSTORE"
    },
    "13282": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13284": {
      "op": "PUSH2",
      "value": "0x33F0"
    },
    "13287": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13289": {
      "op": "DUP4"
    },
    "13290": {
      "op": "ADD"
    },
    "13291": {
      "op": "DUP6"
    },
    "13292": {
      "op": "PUSH2",
      "value": "0x2AAC"
    },
    "13295": {
      "jump": "i",
      "op": "JUMP"
    },
    "13296": {
      "op": "JUMPDEST"
    },
    "13297": {
      "op": "DUP3"
    },
    "13298": {
      "op": "DUP2"
    },
    "13299": {
      "op": "SUB"
    },
    "13300": {
      "op": "DUP1"
    },
    "13301": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13303": {
      "op": "DUP6"
    },
    "13304": {
      "op": "ADD"
    },
    "13305": {
      "op": "MSTORE"
    },
    "13306": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "13308": {
      "op": "DUP3"
    },
    "13309": {
      "op": "MSTORE"
    },
    "13310": {
      "op": "PUSH17",
      "value": "0x5B544F4B454E494420202020202020205D"
    },
    "13328": {
      "op": "PUSH1",
      "value": "0x78"
    },
    "13330": {
      "op": "SHL"
    },
    "13331": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13333": {
      "op": "DUP4"
    },
    "13334": {
      "op": "ADD"
    },
    "13335": {
      "op": "MSTORE"
    },
    "13336": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13338": {
      "op": "DUP2"
    },
    "13339": {
      "op": "ADD"
    },
    "13340": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13342": {
      "op": "DUP6"
    },
    "13343": {
      "op": "ADD"
    },
    "13344": {
      "op": "MSTORE"
    },
    "13345": {
      "op": "POP"
    },
    "13346": {
      "op": "PUSH2",
      "value": "0x32D4"
    },
    "13349": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13351": {
      "op": "DUP3"
    },
    "13352": {
      "op": "ADD"
    },
    "13353": {
      "op": "DUP6"
    },
    "13354": {
      "op": "PUSH2",
      "value": "0x2AAC"
    },
    "13357": {
      "jump": "i",
      "op": "JUMP"
    },
    "13358": {
      "op": "JUMPDEST"
    },
    "13359": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13361": {
      "op": "DUP2"
    },
    "13362": {
      "op": "MSTORE"
    },
    "13363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13365": {
      "op": "PUSH2",
      "value": "0x3441"
    },
    "13368": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13370": {
      "op": "DUP4"
    },
    "13371": {
      "op": "ADD"
    },
    "13372": {
      "op": "DUP6"
    },
    "13373": {
      "op": "PUSH2",
      "value": "0x2AAC"
    },
    "13376": {
      "jump": "i",
      "op": "JUMP"
    },
    "13377": {
      "op": "JUMPDEST"
    },
    "13378": {
      "op": "DUP3"
    },
    "13379": {
      "op": "DUP2"
    },
    "13380": {
      "op": "SUB"
    },
    "13381": {
      "op": "DUP1"
    },
    "13382": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13384": {
      "op": "DUP6"
    },
    "13385": {
      "op": "ADD"
    },
    "13386": {
      "op": "MSTORE"
    },
    "13387": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "13389": {
      "op": "DUP3"
    },
    "13390": {
      "op": "MSTORE"
    },
    "13391": {
      "op": "PUSH22",
      "value": "0x5B434C41494D2044415445202020202020202020205D"
    },
    "13414": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "13416": {
      "op": "SHL"
    },
    "13417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13419": {
      "op": "DUP4"
    },
    "13420": {
      "op": "ADD"
    },
    "13421": {
      "op": "MSTORE"
    },
    "13422": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13424": {
      "op": "DUP2"
    },
    "13425": {
      "op": "ADD"
    },
    "13426": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13428": {
      "op": "DUP6"
    },
    "13429": {
      "op": "ADD"
    },
    "13430": {
      "op": "MSTORE"
    },
    "13431": {
      "op": "POP"
    },
    "13432": {
      "op": "PUSH2",
      "value": "0x32D4"
    },
    "13435": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13437": {
      "op": "DUP3"
    },
    "13438": {
      "op": "ADD"
    },
    "13439": {
      "op": "DUP6"
    },
    "13440": {
      "op": "PUSH2",
      "value": "0x2AAC"
    },
    "13443": {
      "jump": "i",
      "op": "JUMP"
    },
    "13444": {
      "op": "JUMPDEST"
    },
    "13445": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13447": {
      "op": "DUP2"
    },
    "13448": {
      "op": "MSTORE"
    },
    "13449": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13451": {
      "op": "PUSH2",
      "value": "0x3497"
    },
    "13454": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13456": {
      "op": "DUP4"
    },
    "13457": {
      "op": "ADD"
    },
    "13458": {
      "op": "DUP6"
    },
    "13459": {
      "op": "PUSH2",
      "value": "0x2AAC"
    },
    "13462": {
      "jump": "i",
      "op": "JUMP"
    },
    "13463": {
      "op": "JUMPDEST"
    },
    "13464": {
      "op": "DUP3"
    },
    "13465": {
      "op": "DUP2"
    },
    "13466": {
      "op": "SUB"
    },
    "13467": {
      "op": "DUP1"
    },
    "13468": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13470": {
      "op": "DUP6"
    },
    "13471": {
      "op": "ADD"
    },
    "13472": {
      "op": "MSTORE"
    },
    "13473": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "13475": {
      "op": "DUP3"
    },
    "13476": {
      "op": "MSTORE"
    },
    "13477": {
      "op": "PUSH22",
      "value": "0x5B56414C49442044415445202020202020202020205D"
    },
    "13500": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "13502": {
      "op": "SHL"
    },
    "13503": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13505": {
      "op": "DUP4"
    },
    "13506": {
      "op": "ADD"
    },
    "13507": {
      "op": "MSTORE"
    },
    "13508": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13510": {
      "op": "DUP2"
    },
    "13511": {
      "op": "ADD"
    },
    "13512": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13514": {
      "op": "DUP6"
    },
    "13515": {
      "op": "ADD"
    },
    "13516": {
      "op": "MSTORE"
    },
    "13517": {
      "op": "POP"
    },
    "13518": {
      "op": "PUSH2",
      "value": "0x32D4"
    },
    "13521": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13523": {
      "op": "DUP3"
    },
    "13524": {
      "op": "ADD"
    },
    "13525": {
      "op": "DUP6"
    },
    "13526": {
      "op": "PUSH2",
      "value": "0x2AAC"
    },
    "13529": {
      "jump": "i",
      "op": "JUMP"
    },
    "13530": {
      "op": "JUMPDEST"
    },
    "13531": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13533": {
      "op": "DUP2"
    },
    "13534": {
      "op": "MSTORE"
    },
    "13535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13537": {
      "op": "PUSH2",
      "value": "0x34ED"
    },
    "13540": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13542": {
      "op": "DUP4"
    },
    "13543": {
      "op": "ADD"
    },
    "13544": {
      "op": "DUP6"
    },
    "13545": {
      "op": "PUSH2",
      "value": "0x2AAC"
    },
    "13548": {
      "jump": "i",
      "op": "JUMP"
    },
    "13549": {
      "op": "JUMPDEST"
    },
    "13550": {
      "op": "DUP3"
    },
    "13551": {
      "op": "DUP2"
    },
    "13552": {
      "op": "SUB"
    },
    "13553": {
      "op": "DUP1"
    },
    "13554": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13556": {
      "op": "DUP6"
    },
    "13557": {
      "op": "ADD"
    },
    "13558": {
      "op": "MSTORE"
    },
    "13559": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "13561": {
      "op": "DUP3"
    },
    "13562": {
      "op": "MSTORE"
    },
    "13563": {
      "op": "PUSH11",
      "value": "0x5B49532056414C49443F5D"
    },
    "13575": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "13577": {
      "op": "SHL"
    },
    "13578": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13580": {
      "op": "DUP4"
    },
    "13581": {
      "op": "ADD"
    },
    "13582": {
      "op": "MSTORE"
    },
    "13583": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13585": {
      "op": "DUP2"
    },
    "13586": {
      "op": "ADD"
    },
    "13587": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13589": {
      "op": "DUP6"
    },
    "13590": {
      "op": "ADD"
    },
    "13591": {
      "op": "MSTORE"
    },
    "13592": {
      "op": "POP"
    },
    "13593": {
      "op": "PUSH2",
      "value": "0x32D4"
    },
    "13596": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13598": {
      "op": "DUP3"
    },
    "13599": {
      "op": "ADD"
    },
    "13600": {
      "op": "DUP6"
    },
    "13601": {
      "op": "PUSH2",
      "value": "0x2AAC"
    },
    "13604": {
      "jump": "i",
      "op": "JUMP"
    },
    "13605": {
      "op": "JUMPDEST"
    },
    "13606": {
      "op": "PUSH14",
      "value": "0x7B226E616D65223A202253425423"
    },
    "13621": {
      "op": "PUSH1",
      "value": "0x90"
    },
    "13623": {
      "op": "SHL"
    },
    "13624": {
      "op": "DUP2"
    },
    "13625": {
      "op": "MSTORE"
    },
    "13626": {
      "op": "DUP5"
    },
    "13627": {
      "op": "MLOAD"
    },
    "13628": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13630": {
      "op": "SWAP1"
    },
    "13631": {
      "op": "PUSH2",
      "value": "0x354F"
    },
    "13634": {
      "op": "DUP2"
    },
    "13635": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "13637": {
      "op": "DUP6"
    },
    "13638": {
      "op": "ADD"
    },
    "13639": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13641": {
      "op": "DUP11"
    },
    "13642": {
      "op": "ADD"
    },
    "13643": {
      "op": "PUSH2",
      "value": "0x2A80"
    },
    "13646": {
      "jump": "i",
      "op": "JUMP"
    },
    "13647": {
      "op": "JUMPDEST"
    },
    "13648": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13650": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "13652": {
      "op": "SHL"
    },
    "13653": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "13655": {
      "op": "SWAP2"
    },
    "13656": {
      "op": "DUP5"
    },
    "13657": {
      "op": "ADD"
    },
    "13658": {
      "op": "SWAP2"
    },
    "13659": {
      "op": "DUP3"
    },
    "13660": {
      "op": "ADD"
    },
    "13661": {
      "op": "MSTORE"
    },
    "13662": {
      "op": "DUP6"
    },
    "13663": {
      "op": "MLOAD"
    },
    "13664": {
      "op": "PUSH2",
      "value": "0x3570"
    },
    "13667": {
      "op": "DUP2"
    },
    "13668": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "13670": {
      "op": "DUP5"
    },
    "13671": {
      "op": "ADD"
    },
    "13672": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13674": {
      "op": "DUP11"
    },
    "13675": {
      "op": "ADD"
    },
    "13676": {
      "op": "PUSH2",
      "value": "0x2A80"
    },
    "13679": {
      "jump": "i",
      "op": "JUMP"
    },
    "13680": {
      "op": "JUMPDEST"
    },
    "13681": {
      "op": "PUSH32",
      "value": "0x222C202273796D626F6C223A2022534254222C20226465736372697074696F6E"
    },
    "13714": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "13716": {
      "op": "SWAP3"
    },
    "13717": {
      "op": "SWAP1"
    },
    "13718": {
      "op": "SWAP2"
    },
    "13719": {
      "op": "ADD"
    },
    "13720": {
      "op": "SWAP2"
    },
    "13721": {
      "op": "DUP3"
    },
    "13722": {
      "op": "ADD"
    },
    "13723": {
      "op": "MSTORE"
    },
    "13724": {
      "op": "PUSH32",
      "value": "0x223A2022536F756C426F756E64546F6B656E2070726F7065727479222C202269"
    },
    "13757": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "13759": {
      "op": "DUP3"
    },
    "13760": {
      "op": "ADD"
    },
    "13761": {
      "op": "MSTORE"
    },
    "13762": {
      "op": "PUSH32",
      "value": "0x6D616765223A22646174613A696D6167652F7376672B786D6C3B626173653634"
    },
    "13795": {
      "op": "PUSH1",
      "value": "0x4F"
    },
    "13797": {
      "op": "DUP3"
    },
    "13798": {
      "op": "ADD"
    },
    "13799": {
      "op": "MSTORE"
    },
    "13800": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "13802": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "13804": {
      "op": "SHL"
    },
    "13805": {
      "op": "PUSH1",
      "value": "0x6F"
    },
    "13807": {
      "op": "DUP3"
    },
    "13808": {
      "op": "ADD"
    },
    "13809": {
      "op": "MSTORE"
    },
    "13810": {
      "op": "DUP5"
    },
    "13811": {
      "op": "MLOAD"
    },
    "13812": {
      "op": "PUSH2",
      "value": "0x3604"
    },
    "13815": {
      "op": "DUP2"
    },
    "13816": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "13818": {
      "op": "DUP5"
    },
    "13819": {
      "op": "ADD"
    },
    "13820": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13822": {
      "op": "DUP10"
    },
    "13823": {
      "op": "ADD"
    },
    "13824": {
      "op": "PUSH2",
      "value": "0x2A80"
    },
    "13827": {
      "jump": "i",
      "op": "JUMP"
    },
    "13828": {
      "op": "JUMPDEST"
    },
    "13829": {
      "op": "PUSH16",
      "value": "0x111610113232B9B4B3B732B9111D1011"
    },
    "13846": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "13848": {
      "op": "SHL"
    },
    "13849": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "13851": {
      "op": "SWAP3"
    },
    "13852": {
      "op": "SWAP1"
    },
    "13853": {
      "op": "SWAP2"
    },
    "13854": {
      "op": "ADD"
    },
    "13855": {
      "op": "SWAP2"
    },
    "13856": {
      "op": "DUP3"
    },
    "13857": {
      "op": "ADD"
    },
    "13858": {
      "op": "MSTORE"
    },
    "13859": {
      "op": "PUSH2",
      "value": "0x3678"
    },
    "13862": {
      "op": "PUSH2",
      "value": "0x3632"
    },
    "13865": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13867": {
      "op": "DUP4"
    },
    "13868": {
      "op": "ADD"
    },
    "13869": {
      "op": "DUP7"
    },
    "13870": {
      "op": "PUSH2",
      "value": "0x3331"
    },
    "13873": {
      "jump": "i",
      "op": "JUMP"
    },
    "13874": {
      "op": "JUMPDEST"
    },
    "13875": {
      "op": "PUSH32",
      "value": "0x222C202261747472696275746573223A205B7B202274726169745F7479706522"
    },
    "13908": {
      "op": "DUP2"
    },
    "13909": {
      "op": "MSTORE"
    },
    "13910": {
      "op": "PUSH20",
      "value": "0x1D101129B7BAB6111610113B30B63AB2911D1011"
    },
    "13931": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "13933": {
      "op": "SHL"
    },
    "13934": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13936": {
      "op": "DUP3"
    },
    "13937": {
      "op": "ADD"
    },
    "13938": {
      "op": "MSTORE"
    },
    "13939": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "13941": {
      "op": "ADD"
    },
    "13942": {
      "op": "SWAP1"
    },
    "13943": {
      "op": "JUMP"
    },
    "13944": {
      "op": "JUMPDEST"
    },
    "13945": {
      "op": "SWAP8"
    },
    "13946": {
      "op": "SWAP7"
    },
    "13947": {
      "op": "POP"
    },
    "13948": {
      "op": "POP"
    },
    "13949": {
      "op": "POP"
    },
    "13950": {
      "op": "POP"
    },
    "13951": {
      "op": "POP"
    },
    "13952": {
      "op": "POP"
    },
    "13953": {
      "op": "POP"
    },
    "13954": {
      "jump": "o",
      "op": "JUMP"
    },
    "13955": {
      "op": "JUMPDEST"
    },
    "13956": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13958": {
      "op": "DUP9"
    },
    "13959": {
      "op": "MLOAD"
    },
    "13960": {
      "op": "PUSH2",
      "value": "0x3695"
    },
    "13963": {
      "op": "DUP2"
    },
    "13964": {
      "op": "DUP5"
    },
    "13965": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13967": {
      "op": "DUP14"
    },
    "13968": {
      "op": "ADD"
    },
    "13969": {
      "op": "PUSH2",
      "value": "0x2A80"
    },
    "13972": {
      "jump": "i",
      "op": "JUMP"
    },
    "13973": {
      "op": "JUMPDEST"
    },
    "13974": {
      "op": "DUP9"
    },
    "13975": {
      "op": "MLOAD"
    },
    "13976": {
      "op": "SWAP1"
    },
    "13977": {
      "op": "DUP4"
    },
    "13978": {
      "op": "ADD"
    },
    "13979": {
      "op": "SWAP1"
    },
    "13980": {
      "op": "PUSH2",
      "value": "0x36A9"
    },
    "13983": {
      "op": "DUP2"
    },
    "13984": {
      "op": "DUP4"
    },
    "13985": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13987": {
      "op": "DUP14"
    },
    "13988": {
      "op": "ADD"
    },
    "13989": {
      "op": "PUSH2",
      "value": "0x2A80"
    },
    "13992": {
      "jump": "i",
      "op": "JUMP"
    },
    "13993": {
      "op": "JUMPDEST"
    },
    "13994": {
      "op": "DUP1"
    },
    "13995": {
      "op": "DUP3"
    },
    "13996": {
      "op": "ADD"
    },
    "13997": {
      "op": "SWAP2"
    },
    "13998": {
      "op": "POP"
    },
    "13999": {
      "op": "POP"
    },
    "14000": {
      "op": "PUSH32",
      "value": "0x227D2C7B202274726169745F74797065223A2022534254204944222C20227661"
    },
    "14033": {
      "op": "DUP2"
    },
    "14034": {
      "op": "MSTORE"
    },
    "14035": {
      "op": "PUSH7",
      "value": "0x363AB2911D1011"
    },
    "14043": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "14045": {
      "op": "SHL"
    },
    "14046": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14048": {
      "op": "DUP3"
    },
    "14049": {
      "op": "ADD"
    },
    "14050": {
      "op": "MSTORE"
    },
    "14051": {
      "op": "DUP8"
    },
    "14052": {
      "op": "MLOAD"
    },
    "14053": {
      "op": "PUSH2",
      "value": "0x36F5"
    },
    "14056": {
      "op": "DUP2"
    },
    "14057": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "14059": {
      "op": "DUP5"
    },
    "14060": {
      "op": "ADD"
    },
    "14061": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14063": {
      "op": "DUP13"
    },
    "14064": {
      "op": "ADD"
    },
    "14065": {
      "op": "PUSH2",
      "value": "0x2A80"
    },
    "14068": {
      "jump": "i",
      "op": "JUMP"
    },
    "14069": {
      "op": "JUMPDEST"
    },
    "14070": {
      "op": "PUSH32",
      "value": "0x227D2C7B202274726169745F74797065223A2022436572746966696361746520"
    },
    "14103": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "14105": {
      "op": "SWAP3"
    },
    "14106": {
      "op": "SWAP1"
    },
    "14107": {
      "op": "SWAP2"
    },
    "14108": {
      "op": "ADD"
    },
    "14109": {
      "op": "SWAP2"
    },
    "14110": {
      "op": "DUP3"
    },
    "14111": {
      "op": "ADD"
    },
    "14112": {
      "op": "MSTORE"
    },
    "14113": {
      "op": "PUSH19",
      "value": "0x24B9B9BAB2B9111610113B30B63AB2911D1011"
    },
    "14133": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "14135": {
      "op": "SHL"
    },
    "14136": {
      "op": "PUSH1",
      "value": "0x47"
    },
    "14138": {
      "op": "DUP3"
    },
    "14139": {
      "op": "ADD"
    },
    "14140": {
      "op": "MSTORE"
    },
    "14141": {
      "op": "DUP7"
    },
    "14142": {
      "op": "MLOAD"
    },
    "14143": {
      "op": "PUSH2",
      "value": "0x374F"
    },
    "14146": {
      "op": "DUP2"
    },
    "14147": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "14149": {
      "op": "DUP5"
    },
    "14150": {
      "op": "ADD"
    },
    "14151": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14153": {
      "op": "DUP12"
    },
    "14154": {
      "op": "ADD"
    },
    "14155": {
      "op": "PUSH2",
      "value": "0x2A80"
    },
    "14158": {
      "jump": "i",
      "op": "JUMP"
    },
    "14159": {
      "op": "JUMPDEST"
    },
    "14160": {
      "op": "PUSH32",
      "value": "0x227D2C7B202274726169745F74797065223A2022436C61696D2044617465222C"
    },
    "14193": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "14195": {
      "op": "SWAP3"
    },
    "14196": {
      "op": "SWAP1"
    },
    "14197": {
      "op": "SWAP2"
    },
    "14198": {
      "op": "ADD"
    },
    "14199": {
      "op": "SWAP2"
    },
    "14200": {
      "op": "DUP3"
    },
    "14201": {
      "op": "ADD"
    },
    "14202": {
      "op": "MSTORE"
    },
    "14203": {
      "op": "PUSH11",
      "value": "0x10113B30B63AB2911D1011"
    },
    "14215": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "14217": {
      "op": "SHL"
    },
    "14218": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "14220": {
      "op": "DUP3"
    },
    "14221": {
      "op": "ADD"
    },
    "14222": {
      "op": "MSTORE"
    },
    "14223": {
      "op": "PUSH2",
      "value": "0x3849"
    },
    "14226": {
      "op": "PUSH2",
      "value": "0x3839"
    },
    "14229": {
      "op": "PUSH2",
      "value": "0x3833"
    },
    "14232": {
      "op": "PUSH2",
      "value": "0x37ED"
    },
    "14235": {
      "op": "PUSH2",
      "value": "0x37E7"
    },
    "14238": {
      "op": "PUSH2",
      "value": "0x37AA"
    },
    "14241": {
      "op": "PUSH1",
      "value": "0x85"
    },
    "14243": {
      "op": "DUP8"
    },
    "14244": {
      "op": "ADD"
    },
    "14245": {
      "op": "DUP13"
    },
    "14246": {
      "op": "PUSH2",
      "value": "0x3331"
    },
    "14249": {
      "jump": "i",
      "op": "JUMP"
    },
    "14250": {
      "op": "JUMPDEST"
    },
    "14251": {
      "op": "PUSH32",
      "value": "0x227D2C7B202274726169745F74797065223A202256616C69642044617465222C"
    },
    "14284": {
      "op": "DUP2"
    },
    "14285": {
      "op": "MSTORE"
    },
    "14286": {
      "op": "PUSH11",
      "value": "0x10113B30B63AB2911D1011"
    },
    "14298": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "14300": {
      "op": "SHL"
    },
    "14301": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14303": {
      "op": "DUP3"
    },
    "14304": {
      "op": "ADD"
    },
    "14305": {
      "op": "MSTORE"
    },
    "14306": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "14308": {
      "op": "ADD"
    },
    "14309": {
      "op": "SWAP1"
    },
    "14310": {
      "op": "JUMP"
    },
    "14311": {
      "op": "JUMPDEST"
    },
    "14312": {
      "op": "DUP10"
    },
    "14313": {
      "op": "PUSH2",
      "value": "0x3331"
    },
    "14316": {
      "jump": "i",
      "op": "JUMP"
    },
    "14317": {
      "op": "JUMPDEST"
    },
    "14318": {
      "op": "PUSH32",
      "value": "0x227D2C7B202274726169745F74797065223A202243657274696669636174696F"
    },
    "14351": {
      "op": "DUP2"
    },
    "14352": {
      "op": "MSTORE"
    },
    "14353": {
      "op": "PUSH20",
      "value": "0x37102B30B634B2111610113B30B63AB2911D1011"
    },
    "14374": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "14376": {
      "op": "SHL"
    },
    "14377": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14379": {
      "op": "DUP3"
    },
    "14380": {
      "op": "ADD"
    },
    "14381": {
      "op": "MSTORE"
    },
    "14382": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "14384": {
      "op": "ADD"
    },
    "14385": {
      "op": "SWAP1"
    },
    "14386": {
      "op": "JUMP"
    },
    "14387": {
      "op": "JUMPDEST"
    },
    "14388": {
      "op": "DUP7"
    },
    "14389": {
      "op": "PUSH2",
      "value": "0x3331"
    },
    "14392": {
      "jump": "i",
      "op": "JUMP"
    },
    "14393": {
      "op": "JUMPDEST"
    },
    "14394": {
      "op": "PUSH4",
      "value": "0x227D5D7D"
    },
    "14399": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14401": {
      "op": "SHL"
    },
    "14402": {
      "op": "DUP2"
    },
    "14403": {
      "op": "MSTORE"
    },
    "14404": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14406": {
      "op": "ADD"
    },
    "14407": {
      "op": "SWAP1"
    },
    "14408": {
      "op": "JUMP"
    },
    "14409": {
      "op": "JUMPDEST"
    },
    "14410": {
      "op": "SWAP11"
    },
    "14411": {
      "op": "SWAP10"
    },
    "14412": {
      "op": "POP"
    },
    "14413": {
      "op": "POP"
    },
    "14414": {
      "op": "POP"
    },
    "14415": {
      "op": "POP"
    },
    "14416": {
      "op": "POP"
    },
    "14417": {
      "op": "POP"
    },
    "14418": {
      "op": "POP"
    },
    "14419": {
      "op": "POP"
    },
    "14420": {
      "op": "POP"
    },
    "14421": {
      "op": "POP"
    },
    "14422": {
      "jump": "o",
      "op": "JUMP"
    },
    "14423": {
      "op": "JUMPDEST"
    },
    "14424": {
      "op": "PUSH32",
      "value": "0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000"
    },
    "14457": {
      "op": "DUP2"
    },
    "14458": {
      "op": "MSTORE"
    },
    "14459": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14461": {
      "op": "DUP3"
    },
    "14462": {
      "op": "MLOAD"
    },
    "14463": {
      "op": "PUSH2",
      "value": "0x388F"
    },
    "14466": {
      "op": "DUP2"
    },
    "14467": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "14469": {
      "op": "DUP6"
    },
    "14470": {
      "op": "ADD"
    },
    "14471": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14473": {
      "op": "DUP8"
    },
    "14474": {
      "op": "ADD"
    },
    "14475": {
      "op": "PUSH2",
      "value": "0x2A80"
    },
    "14478": {
      "jump": "i",
      "op": "JUMP"
    },
    "14479": {
      "op": "JUMPDEST"
    },
    "14480": {
      "op": "SWAP2"
    },
    "14481": {
      "op": "SWAP1"
    },
    "14482": {
      "op": "SWAP2"
    },
    "14483": {
      "op": "ADD"
    },
    "14484": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "14486": {
      "op": "ADD"
    },
    "14487": {
      "op": "SWAP3"
    },
    "14488": {
      "op": "SWAP2"
    },
    "14489": {
      "op": "POP"
    },
    "14490": {
      "op": "POP"
    },
    "14491": {
      "jump": "o",
      "op": "JUMP"
    },
    "14492": {
      "op": "JUMPDEST"
    },
    "14493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14495": {
      "op": "DUP3"
    },
    "14496": {
      "op": "DUP3"
    },
    "14497": {
      "op": "LT"
    },
    "14498": {
      "op": "ISZERO"
    },
    "14499": {
      "op": "PUSH2",
      "value": "0x38AE"
    },
    "14502": {
      "op": "JUMPI"
    },
    "14503": {
      "op": "PUSH2",
      "value": "0x38AE"
    },
    "14506": {
      "op": "PUSH2",
      "value": "0x3227"
    },
    "14509": {
      "jump": "i",
      "op": "JUMP"
    },
    "14510": {
      "op": "JUMPDEST"
    },
    "14511": {
      "op": "POP"
    },
    "14512": {
      "op": "SUB"
    },
    "14513": {
      "op": "SWAP1"
    },
    "14514": {
      "jump": "o",
      "op": "JUMP"
    },
    "14515": {
      "op": "JUMPDEST"
    },
    "14516": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14518": {
      "op": "DUP3"
    },
    "14519": {
      "op": "NOT"
    },
    "14520": {
      "op": "DUP3"
    },
    "14521": {
      "op": "GT"
    },
    "14522": {
      "op": "ISZERO"
    },
    "14523": {
      "op": "PUSH2",
      "value": "0x38C6"
    },
    "14526": {
      "op": "JUMPI"
    },
    "14527": {
      "op": "PUSH2",
      "value": "0x38C6"
    },
    "14530": {
      "op": "PUSH2",
      "value": "0x3227"
    },
    "14533": {
      "jump": "i",
      "op": "JUMP"
    },
    "14534": {
      "op": "JUMPDEST"
    },
    "14535": {
      "op": "POP"
    },
    "14536": {
      "op": "ADD"
    },
    "14537": {
      "op": "SWAP1"
    },
    "14538": {
      "jump": "o",
      "op": "JUMP"
    },
    "14539": {
      "op": "JUMPDEST"
    },
    "14540": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14542": {
      "op": "DUP1"
    },
    "14543": {
      "op": "DUP3"
    },
    "14544": {
      "op": "MSTORE"
    },
    "14545": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "14547": {
      "op": "SWAP1"
    },
    "14548": {
      "op": "DUP3"
    },
    "14549": {
      "op": "ADD"
    },
    "14550": {
      "op": "MSTORE"
    },
    "14551": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "14584": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14586": {
      "op": "DUP3"
    },
    "14587": {
      "op": "ADD"
    },
    "14588": {
      "op": "MSTORE"
    },
    "14589": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "14608": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "14610": {
      "op": "SHL"
    },
    "14611": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14613": {
      "op": "DUP3"
    },
    "14614": {
      "op": "ADD"
    },
    "14615": {
      "op": "MSTORE"
    },
    "14616": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14618": {
      "op": "ADD"
    },
    "14619": {
      "op": "SWAP1"
    },
    "14620": {
      "jump": "o",
      "op": "JUMP"
    },
    "14621": {
      "op": "JUMPDEST"
    },
    "14622": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14627": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14629": {
      "op": "SHL"
    },
    "14630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14632": {
      "op": "MSTORE"
    },
    "14633": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "14635": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14637": {
      "op": "MSTORE"
    },
    "14638": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14640": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14642": {
      "op": "REVERT"
    },
    "14643": {
      "op": "JUMPDEST"
    },
    "14644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14646": {
      "op": "DUP3"
    },
    "14647": {
      "op": "PUSH2",
      "value": "0x3942"
    },
    "14650": {
      "op": "JUMPI"
    },
    "14651": {
      "op": "PUSH2",
      "value": "0x3942"
    },
    "14654": {
      "op": "PUSH2",
      "value": "0x391D"
    },
    "14657": {
      "jump": "i",
      "op": "JUMP"
    },
    "14658": {
      "op": "JUMPDEST"
    },
    "14659": {
      "op": "POP"
    },
    "14660": {
      "op": "DIV"
    },
    "14661": {
      "op": "SWAP1"
    },
    "14662": {
      "jump": "o",
      "op": "JUMP"
    },
    "14663": {
      "op": "JUMPDEST"
    },
    "14664": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14666": {
      "op": "DUP3"
    },
    "14667": {
      "op": "PUSH2",
      "value": "0x3956"
    },
    "14670": {
      "op": "JUMPI"
    },
    "14671": {
      "op": "PUSH2",
      "value": "0x3956"
    },
    "14674": {
      "op": "PUSH2",
      "value": "0x391D"
    },
    "14677": {
      "jump": "i",
      "op": "JUMP"
    },
    "14678": {
      "op": "JUMPDEST"
    },
    "14679": {
      "op": "POP"
    },
    "14680": {
      "op": "MOD"
    },
    "14681": {
      "op": "SWAP1"
    },
    "14682": {
      "jump": "o",
      "op": "JUMP"
    },
    "14683": {
      "op": "JUMPDEST"
    },
    "14684": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14686": {
      "op": "DUP2"
    },
    "14687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14689": {
      "op": "NOT"
    },
    "14690": {
      "op": "DIV"
    },
    "14691": {
      "op": "DUP4"
    },
    "14692": {
      "op": "GT"
    },
    "14693": {
      "op": "DUP3"
    },
    "14694": {
      "op": "ISZERO"
    },
    "14695": {
      "op": "ISZERO"
    },
    "14696": {
      "op": "AND"
    },
    "14697": {
      "op": "ISZERO"
    },
    "14698": {
      "op": "PUSH2",
      "value": "0x3975"
    },
    "14701": {
      "op": "JUMPI"
    },
    "14702": {
      "op": "PUSH2",
      "value": "0x3975"
    },
    "14705": {
      "op": "PUSH2",
      "value": "0x3227"
    },
    "14708": {
      "jump": "i",
      "op": "JUMP"
    },
    "14709": {
      "op": "JUMPDEST"
    },
    "14710": {
      "op": "POP"
    },
    "14711": {
      "op": "MUL"
    },
    "14712": {
      "op": "SWAP1"
    },
    "14713": {
      "jump": "o",
      "op": "JUMP"
    },
    "14714": {
      "op": "JUMPDEST"
    },
    "14715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14719": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14721": {
      "op": "SHL"
    },
    "14722": {
      "op": "SUB"
    },
    "14723": {
      "op": "DUP6"
    },
    "14724": {
      "op": "DUP2"
    },
    "14725": {
      "op": "AND"
    },
    "14726": {
      "op": "DUP3"
    },
    "14727": {
      "op": "MSTORE"
    },
    "14728": {
      "op": "DUP5"
    },
    "14729": {
      "op": "AND"
    },
    "14730": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14732": {
      "op": "DUP3"
    },
    "14733": {
      "op": "ADD"
    },
    "14734": {
      "op": "MSTORE"
    },
    "14735": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14737": {
      "op": "DUP2"
    },
    "14738": {
      "op": "ADD"
    },
    "14739": {
      "op": "DUP4"
    },
    "14740": {
      "op": "SWAP1"
    },
    "14741": {
      "op": "MSTORE"
    },
    "14742": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14744": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14746": {
      "op": "DUP3"
    },
    "14747": {
      "op": "ADD"
    },
    "14748": {
      "op": "DUP2"
    },
    "14749": {
      "op": "SWAP1"
    },
    "14750": {
      "op": "MSTORE"
    },
    "14751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14753": {
      "op": "SWAP1"
    },
    "14754": {
      "op": "PUSH2",
      "value": "0x39AD"
    },
    "14757": {
      "op": "SWAP1"
    },
    "14758": {
      "op": "DUP4"
    },
    "14759": {
      "op": "ADD"
    },
    "14760": {
      "op": "DUP5"
    },
    "14761": {
      "op": "PUSH2",
      "value": "0x2AAC"
    },
    "14764": {
      "jump": "i",
      "op": "JUMP"
    },
    "14765": {
      "op": "JUMPDEST"
    },
    "14766": {
      "op": "SWAP7"
    },
    "14767": {
      "op": "SWAP6"
    },
    "14768": {
      "op": "POP"
    },
    "14769": {
      "op": "POP"
    },
    "14770": {
      "op": "POP"
    },
    "14771": {
      "op": "POP"
    },
    "14772": {
      "op": "POP"
    },
    "14773": {
      "op": "POP"
    },
    "14774": {
      "jump": "o",
      "op": "JUMP"
    },
    "14775": {
      "op": "JUMPDEST"
    },
    "14776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14778": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14780": {
      "op": "DUP3"
    },
    "14781": {
      "op": "DUP5"
    },
    "14782": {
      "op": "SUB"
    },
    "14783": {
      "op": "SLT"
    },
    "14784": {
      "op": "ISZERO"
    },
    "14785": {
      "op": "PUSH2",
      "value": "0x39C9"
    },
    "14788": {
      "op": "JUMPI"
    },
    "14789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14791": {
      "op": "DUP1"
    },
    "14792": {
      "op": "REVERT"
    },
    "14793": {
      "op": "JUMPDEST"
    },
    "14794": {
      "op": "DUP2"
    },
    "14795": {
      "op": "MLOAD"
    },
    "14796": {
      "op": "PUSH2",
      "value": "0x2A79"
    },
    "14799": {
      "op": "DUP2"
    },
    "14800": {
      "op": "PUSH2",
      "value": "0x2A46"
    },
    "14803": {
      "jump": "i",
      "op": "JUMP"
    },
    "14804": {
      "op": "JUMPDEST"
    },
    "14805": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14810": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14812": {
      "op": "SHL"
    },
    "14813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14815": {
      "op": "MSTORE"
    },
    "14816": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "14818": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "14820": {
      "op": "MSTORE"
    },
    "14821": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14823": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14825": {
      "op": "REVERT"
    }
  },
  "sha1": "e3b0d892847322730619142fdba44c40ab78c37d",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\nimport \"@openzeppelin/contracts/utils/Base64.sol\";\n\nimport \"./ISoul.sol\";\nimport \"../IDDS.sol\";\nimport \"./IsoulBondToken.sol\";\nimport \"../IDateTime.sol\";\n\ncontract soulBondToken is ERC721Enumerable {\n    struct tokenStructure {\n        string issuer;\n        string certification;\n        uint256 claimDate;\n        uint256 validDate;\n    }\n\n    using Strings for uint256;\n    using Strings for uint160;\n\n    mapping(uint256 => uint256[]) private soul2Token;\n    mapping(uint256 => uint256) private token2Soul;\n    mapping(uint256 => tokenStructure) private token2Value;\n\n    mapping(bytes32 => bool) private globalAllow;\n    mapping(bytes32 => uint256) private validDate;\n    mapping(address => mapping(bytes32 => bool)) private allowMap;\n\n    IDDS dds;\n\n    constructor() ERC721(\"SoulBontToken Registry\", \"SBT\") {\n        dds = IDDS(BEE_DDS_ADDRESS);\n    }\n\n    function issue(\n        string calldata _issuer,\n        string calldata _certification,\n        uint256 validDate_,\n        address[] memory _allows\n    ) external {\n        require(dds.getOwner(_issuer) == msg.sender, \"Only domain owner\");\n        // require(\n        //     dds.get(_issuer, _certification).length > 0,\n        //     \"DDS data not found\"\n        // );\n\n        bytes32 _hash = keccak256(abi.encodePacked(_issuer, _certification));\n\n        validDate[_hash] = validDate_;\n\n        if (_allows.length == 0) globalAllow[_hash] = true;\n        else {\n            for (uint256 i = 0; i < _allows.length; i++) {\n                allowMap[_allows[i]][_hash] = true;\n            }\n        }\n    }\n\n    function claim(\n        uint256 _soulId,\n        string calldata _issuer,\n        string calldata _certification\n    ) external {\n        ISoul soul = ISoul(\n            dds.toAddress(dds.get(\"ISOTOP\", \"BEE_SOUL_ADDRESS\"))\n        );\n        require(soul.validateAddress(_soulId, msg.sender), \"not owner\");\n        _claim(msg.sender, _soulId, _issuer, _certification);\n    }\n\n    function assign(\n        address _to,\n        uint256 _soulId,\n        string calldata _issuer,\n        string calldata _certification\n    ) external {\n        ISoul soul = ISoul(\n            dds.toAddress(dds.get(\"ISOTOP\", \"BEE_SOUL_ADDRESS\"))\n        );\n        require(msg.sender == soul.getOperator(_soulId), \"only operator\");\n        _claim(_to, _soulId, _issuer, _certification);\n    }\n\n    function _claim(\n        address _to,\n        uint256 _soulId,\n        string calldata _issuer,\n        string calldata _certification\n    ) internal {\n        bytes32 _hash = keccak256(abi.encodePacked(_issuer, _certification));\n\n        require(\n            globalAllow[_hash] || allowMap[_to][_hash],\n            \"Address not in allow list\"\n        );\n\n        uint256 _currentId = totalSupply();\n        token2Soul[_currentId] = _soulId;\n        token2Value[_currentId] = tokenStructure(\n            _issuer,\n            _certification,\n            block.timestamp,\n            validDate[_hash]\n        );\n        soul2Token[_soulId].push(_currentId);\n        _mint(_to, _currentId);\n\n        allowMap[_to][_hash] = false;\n    }\n\n    function getToken(uint256 tokenId)\n        external\n        view\n        returns (tokenStructure memory)\n    {\n        // require(\n        //     soul.validateAddress(token2Soul[tokenId], msg.sender),\n        //     \"not owner\"\n        // );\n        return token2Value[tokenId];\n    }\n\n    function getTokenIds(uint256 soulId)\n        external\n        view\n        returns (uint256[] memory)\n    {\n        // require(soul.validateAddress(soulId, msg.sender), \"not owner\");\n        return soul2Token[soulId];\n    }\n\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual override {\n        if (to == address(0)) {\n            revert(\"SBT token cannot be burned\");\n        }\n\n        ISoul soul = ISoul(\n            dds.toAddress(dds.get(\"ISOTOP\", \"BEE_SOUL_ADDRESS\"))\n        );\n\n        if (from == address(0)) {\n            require(\n                soul.validateAddress(token2Soul[tokenId], to),\n                \"SBT token to address not allowed\"\n            );\n        } else {\n            require(\n                soul.validateAddress(token2Soul[tokenId], from) &&\n                    soul.validateAddress(token2Soul[tokenId], to),\n                \"SBT token cannot transfered\"\n            );\n        }\n\n        super._beforeTokenTransfer(from, to, tokenId);\n    }\n\n    function tokenURI(uint256 tokenId)\n        public\n        view\n        virtual\n        override\n        returns (string memory)\n    {\n        require(_exists(tokenId), \"nonexistent token\");\n\n        IDateTime date = IDateTime(\n            dds.toAddress(dds.get(\"ISOTOP\", \"BEE_DATETIME_ADDRESS\"))\n        );\n\n        tokenStructure memory _value = token2Value[tokenId];\n        bytes memory tokenData = dds.get(_value.issuer, _value.certification);\n        bytes memory image_;\n\n        if (tokenData.length < 1) image_ = dds.get(\"ISOTOP\", \"BEE_SBT_DEFAULT\");\n        else {\n            if (\n                tokenData[0] == 0x68 /* h means http://URL */\n            )\n                return\n                    string(\n                        abi.encodePacked(tokenData, tokenId.toString(), \".json\")\n                    );\n\n            if (\n                tokenData[0] == 0x3c /* <svg... means image */\n            ) image_ = tokenData;\n            else image_ = dds.get(\"ISOTOP\", \"BEE_SBT_DEFAULT\");\n        }\n\n        bool isValid = _value.validDate > block.timestamp;\n        dds.setValue(\n            image_,\n            \"[SOULID         ]\",\n            bytes(token2Soul[tokenId].toString())\n        );\n        dds.setValue(image_, \"[TOKENID        ]\", bytes(tokenId.toString()));\n        dds.setValue(\n            image_,\n            \"[CLAIM DATE          ]\",\n            bytes(date.timeToDate(_value.claimDate))\n        );\n        dds.setValue(\n            image_,\n            \"[VALID DATE          ]\",\n            bytes(date.timeToDate(_value.validDate))\n        );\n        dds.setValue(\n            image_,\n            \"[IS VALID?]\",\n            bytes(isValid ? \"VALID\" : \"NOT VALID\")\n        );\n\n        bytes memory meta = abi.encodePacked(\n            '{\"name\": \"SBT#',\n            tokenId.toString(),\n            \"|\",\n            _value.certification,\n            '\", \"symbol\": \"SBT\", \"description\": \"SoulBoundToken property\", \"image\":\"data:image/svg+xml;base64,',\n            Base64.encode(image_),\n            '\", \"designer\": \"',\n            _value.issuer,\n            '\", \"attributes\": [{ \"trait_type\": \"Soul\", \"value\": \"'\n        );\n        meta = abi.encodePacked(\n            meta,\n            token2Soul[tokenId].toString(),\n            '\"},{ \"trait_type\": \"SBT ID\", \"value\": \"',\n            tokenId.toString(),\n            '\"},{ \"trait_type\": \"Certificate Issuer\", \"value\": \"',\n            _value.issuer,\n            '\"},{ \"trait_type\": \"Claim Date\", \"value\": \"',\n            date.timeToDate(_value.claimDate),\n            '\"},{ \"trait_type\": \"Valid Date\", \"value\": \"',\n            date.timeToDate(_value.validDate),\n            '\"},{ \"trait_type\": \"Certification Valid\", \"value\": \"',\n            isValid ? \"VALID\" : \"NOT VALID\",\n            '\"}]}'\n        );\n\n        return\n            string(\n                abi.encodePacked(\n                    \"data:application/json;base64,\",\n                    Base64.encode(meta)\n                )\n            );\n    }\n}\n",
  "sourceMap": "292:7262:26:-:0;;;897:98;;;;;;;;;-1:-1:-1;1390:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:4;;;;1456:13;;1390:113;;;1456:13;;-1:-1:-1;;1456:13:4;:::i;:::-;-1:-1:-1;1479:17:4;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;961:3:26::1;:27:::0;;-1:-1:-1;;;;;;961:27:26::1;140:42:20;961:27:26;::::0;;-1:-1:-1;292:7262:26;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;292:7262:26;;;-1:-1:-1;292:7262:26;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:27;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;292:7262:26;;;;;;",
  "sourcePath": "contracts/Soul/soulBondToken.sol",
  "type": "contract"
}