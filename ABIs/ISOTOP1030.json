{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "gasManager",
          "type": "address"
        }
      ],
      "name": "gasLoaded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getTGas",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "numWords",
          "type": "uint32"
        }
      ],
      "name": "requestRandomWords",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tgas",
          "type": "address"
        }
      ],
      "name": "setTGas",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "21": "contracts/IDDS.sol",
    "25": "contracts/ISOTOP1030.sol",
    "34": "contracts/VRF/VRFGenerator.sol",
    "36": "contracts/VRF/chainlinkv0.8/VRFCoordinatorV2Interface.sol",
    "38": "contracts/VRFTGasInterface.sol"
  },
  "ast": {
    "absolutePath": "contracts/ISOTOP1030.sol",
    "exportedSymbols": {
      "BEE_DDS_ADDRESS": [
        4
      ],
      "Context": [
        5862
      ],
      "FOEVER": [
        2607
      ],
      "IDDS": [
        109
      ],
      "ISOTOP1030": [
        1241
      ],
      "Ownable": [
        3407
      ],
      "VRFConsumerBaseV2": [
        5744
      ],
      "VRFCoordinatorV2Interface": [
        5840
      ],
      "VRFGenerator": [
        3171
      ],
      "VRFTGasInterface": [
        4594
      ],
      "ZERO": [
        4590
      ]
    },
    "id": 1242,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1172,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:25"
      },
      {
        "absolutePath": "contracts/VRF/VRFGenerator.sol",
        "file": "./VRF/VRFGenerator.sol",
        "id": 1173,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1242,
        "sourceUnit": 3172,
        "src": "58:32:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/VRFTGasInterface.sol",
        "file": "./VRFTGasInterface.sol",
        "id": 1174,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1242,
        "sourceUnit": 4595,
        "src": "92:32:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ISOTOP1030",
        "contractDependencies": [
          3171
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1241,
        "linearizedBaseContracts": [
          1241
        ],
        "name": "ISOTOP1030",
        "nameLocation": "135:10:25",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "eventSelector": "5d13706edecffc8d4ccc3b8dbcc026ce8a4914496820ba012530a4790b08d3a7",
            "id": 1178,
            "name": "gasLoaded",
            "nameLocation": "158:9:25",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1176,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gasManager",
                  "nameLocation": "176:10:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 1178,
                  "src": "168:18:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1175,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "168:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "167:20:25"
            },
            "src": "152:36:25"
          },
          {
            "constant": false,
            "id": 1180,
            "mutability": "mutable",
            "name": "tgas",
            "nameLocation": "202:4:25",
            "nodeType": "VariableDeclaration",
            "scope": 1241,
            "src": "194:12:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1179,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "194:7:25",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1187,
            "mutability": "mutable",
            "name": "vrf",
            "nameLocation": "225:3:25",
            "nodeType": "VariableDeclaration",
            "scope": 1241,
            "src": "212:37:25",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_VRFGenerator_$3171",
              "typeString": "contract VRFGenerator"
            },
            "typeName": {
              "id": 1182,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1181,
                "name": "VRFGenerator",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3171,
                "src": "212:12:25"
              },
              "referencedDeclaration": 3171,
              "src": "212:12:25",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_VRFGenerator_$3171",
                "typeString": "contract VRFGenerator"
              }
            },
            "value": {
              "arguments": [],
              "expression": {
                "argumentTypes": [],
                "id": 1185,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "231:16:25",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_VRFGenerator_$3171_$",
                  "typeString": "function () returns (contract VRFGenerator)"
                },
                "typeName": {
                  "id": 1184,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1183,
                    "name": "VRFGenerator",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 3171,
                    "src": "235:12:25"
                  },
                  "referencedDeclaration": 3171,
                  "src": "235:12:25",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_VRFGenerator_$3171",
                    "typeString": "contract VRFGenerator"
                  }
                }
              },
              "id": 1186,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "231:18:25",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_VRFGenerator_$3171",
                "typeString": "contract VRFGenerator"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1208,
              "nodeType": "Block",
              "src": "305:183:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1193,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -26,
                            "src": "336:2:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 1194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "src": "336:9:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "307837423064633233453837666562463144303533453744663961463463636533304632316641653943",
                          "id": 1195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "349:42:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x7B0dc23E87febF1D053E7Df9aF4cce30F21fAe9C"
                        },
                        "src": "336:55:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792049534f544f50",
                        "id": 1197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "405:13:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_01bf992f451e98f2080f3cc71553e743e88f9c2ea40f99c6da3f931428a8df8d",
                          "typeString": "literal_string \"Only ISOTOP\""
                        },
                        "value": "Only ISOTOP"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_01bf992f451e98f2080f3cc71553e743e88f9c2ea40f99c6da3f931428a8df8d",
                          "typeString": "literal_string \"Only ISOTOP\""
                        }
                      ],
                      "id": 1192,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "315:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "315:113:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1199,
                  "nodeType": "ExpressionStatement",
                  "src": "315:113:25"
                },
                {
                  "expression": {
                    "id": 1202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1200,
                      "name": "tgas",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1180,
                      "src": "438:4:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1201,
                      "name": "_tgas",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1189,
                      "src": "445:5:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "438:12:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1203,
                  "nodeType": "ExpressionStatement",
                  "src": "438:12:25"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1205,
                        "name": "_tgas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1189,
                        "src": "475:5:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1204,
                      "name": "gasLoaded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1178,
                      "src": "465:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "465:16:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1207,
                  "nodeType": "EmitStatement",
                  "src": "460:21:25"
                }
              ]
            },
            "functionSelector": "40898f4f",
            "id": 1209,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTGas",
            "nameLocation": "265:7:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1189,
                  "mutability": "mutable",
                  "name": "_tgas",
                  "nameLocation": "281:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 1209,
                  "src": "273:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1188,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "273:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "272:15:25"
            },
            "returnParameters": {
              "id": 1191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "305:0:25"
            },
            "scope": 1241,
            "src": "256:232:25",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1216,
              "nodeType": "Block",
              "src": "553:28:25",
              "statements": [
                {
                  "expression": {
                    "id": 1214,
                    "name": "tgas",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1180,
                    "src": "570:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1213,
                  "id": 1215,
                  "nodeType": "Return",
                  "src": "563:11:25"
                }
              ]
            },
            "functionSelector": "766ef5e7",
            "id": 1217,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTGas",
            "nameLocation": "503:7:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "510:2:25"
            },
            "returnParameters": {
              "id": 1213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1212,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1217,
                  "src": "544:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1211,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "544:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "543:9:25"
            },
            "scope": 1241,
            "src": "494:87:25",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1239,
              "nodeType": "Block",
              "src": "689:113:25",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1224,
                      "name": "tgas",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1180,
                      "src": "703:4:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 1225,
                      "name": "ZERO",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4590,
                      "src": "711:4:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "703:12:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1233,
                  "nodeType": "IfStatement",
                  "src": "699:47:25",
                  "trueBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 1228,
                              "name": "tgas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1180,
                              "src": "734:4:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1227,
                            "name": "VRFTGasInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4594,
                            "src": "717:16:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_VRFTGasInterface_$4594_$",
                              "typeString": "type(contract VRFTGasInterface)"
                            }
                          },
                          "id": 1229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "717:22:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VRFTGasInterface_$4594",
                            "typeString": "contract VRFTGasInterface"
                          }
                        },
                        "id": 1230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "bill",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4593,
                        "src": "717:27:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                          "typeString": "function () external"
                        }
                      },
                      "id": 1231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "717:29:25",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1232,
                    "nodeType": "ExpressionStatement",
                    "src": "717:29:25"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1236,
                        "name": "numWords",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1219,
                        "src": "786:8:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 1234,
                        "name": "vrf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1187,
                        "src": "763:3:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VRFGenerator_$3171",
                          "typeString": "contract VRFGenerator"
                        }
                      },
                      "id": 1235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestRandomWords",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2863,
                      "src": "763:22:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint32_$returns$_t_uint256_$",
                        "typeString": "function (uint32) external returns (uint256)"
                      }
                    },
                    "id": 1237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "763:32:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1223,
                  "id": 1238,
                  "nodeType": "Return",
                  "src": "756:39:25"
                }
              ]
            },
            "functionSelector": "e726f2e1",
            "id": 1240,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestRandomWords",
            "nameLocation": "596:18:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1219,
                  "mutability": "mutable",
                  "name": "numWords",
                  "nameLocation": "622:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 1240,
                  "src": "615:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1218,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "615:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "614:17:25"
            },
            "returnParameters": {
              "id": 1223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1222,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "674:9:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 1240,
                  "src": "666:17:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1221,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "666:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "665:19:25"
            },
            "scope": 1241,
            "src": "587:215:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1242,
        "src": "126:678:25",
        "usedErrors": []
      }
    ],
    "src": "33:772:25"
  },
  "bytecode": "",
  "bytecodeSha1": "e369dfa6a76465945dbed35886c293d5c9daefc1",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "ISOTOP1030",
  "coverageMap": {
    "branches": {
      "21": {},
      "25": {
        "ISOTOP1030.requestRandomWords": {
          "7": [
            703,
            715,
            false
          ]
        },
        "ISOTOP1030.setTGas": {
          "6": [
            336,
            391,
            true
          ]
        }
      },
      "34": {},
      "36": {},
      "38": {}
    },
    "statements": {
      "21": {},
      "25": {
        "ISOTOP1030.getTGas": {
          "0": [
            563,
            574
          ]
        },
        "ISOTOP1030.requestRandomWords": {
          "4": [
            717,
            746
          ],
          "5": [
            756,
            795
          ]
        },
        "ISOTOP1030.setTGas": {
          "1": [
            315,
            428
          ],
          "2": [
            438,
            450
          ],
          "3": [
            460,
            481
          ]
        }
      },
      "34": {},
      "36": {},
      "38": {}
    }
  },
  "dependencies": [
    "IDDS",
    "VRFCoordinatorV2Interface",
    "VRFGenerator",
    "VRFTGasInterface"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100415760003560e01c806340898f4f14610046578063766ef5e71461005b578063e726f2e11461007b575b600080fd5b61005961005436600461022b565b61009c565b005b6000546040516001600160a01b0390911681526020015b60405180910390f35b61008e61008936600461025b565b610145565b604051908152602001610072565b737b0dc23e87febf1d053e7df9af4cce30f21fae9c32146100f15760405162461bcd60e51b815260206004820152600b60248201526a04f6e6c792049534f544f560ac1b604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f5d13706edecffc8d4ccc3b8dbcc026ce8a4914496820ba012530a4790b08d3a79060200160405180910390a150565b600080546001600160a01b0316156101b1576000805460408051631b8f33bd60e11b815290516001600160a01b039092169263371e677a9260048084019382900301818387803b15801561019857600080fd5b505af11580156101ac573d6000803e3d6000fd5b505050505b60015460405163e726f2e160e01b815263ffffffff841660048201526001600160a01b039091169063e726f2e1906024016020604051808303816000875af1158015610201573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102259190610281565b92915050565b60006020828403121561023d57600080fd5b81356001600160a01b038116811461025457600080fd5b9392505050565b60006020828403121561026d57600080fd5b813563ffffffff8116811461025457600080fd5b60006020828403121561029357600080fd5b505191905056fea264697066735822122087742dd0fe720a324b5978f5dad817cc5d23cb8f61e8bcd156b2b4073445f27e64736f6c634300080d0033",
  "deployedSourceMap": "126:678:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;256:232;;;;;;:::i;:::-;;:::i;:::-;;494:87;544:7;570:4;494:87;;-1:-1:-1;;;;;570:4:25;;;451:51:41;;439:2;424:18;494:87:25;;;;;;;;587:215;;;;;;:::i;:::-;;:::i;:::-;;;940:25:41;;;928:2;913:18;587:215:25;794:177:41;256:232:25;349:42;336:9;:55;315:113;;;;-1:-1:-1;;;315:113:25;;1178:2:41;315:113:25;;;1160:21:41;1217:2;1197:18;;;1190:30;-1:-1:-1;;;1236:18:41;;;1229:41;1287:18;;315:113:25;;;;;;;;438:4;:12;;-1:-1:-1;;;;;;438:12:25;-1:-1:-1;;;;;438:12:25;;;;;;;;465:16;;451:51:41;;;465:16:25;;439:2:41;424:18;465:16:25;;;;;;;256:232;:::o;587:215::-;666:17;703:4;;-1:-1:-1;;;;;703:4:25;:12;699:47;;734:4;;;717:29;;;-1:-1:-1;;;717:29:25;;;;-1:-1:-1;;;;;734:4:25;;;;717:27;;:29;;;;;;;;;;734:4;;717:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;699:47;763:3;;:32;;-1:-1:-1;;;763:32:25;;1490:10:41;1478:23;;763:32:25;;;1460:42:41;-1:-1:-1;;;;;763:3:25;;;;:22;;1433:18:41;;763:32:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;756:39;587:215;-1:-1:-1;;587:215:25:o;14:286:41:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:41;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:41:o;513:276::-;571:6;624:2;612:9;603:7;599:23;595:32;592:52;;;640:1;637;630:12;592:52;679:9;666:23;729:10;722:5;718:22;711:5;708:33;698:61;;755:1;752;745:12;1513:184;1583:6;1636:2;1624:9;1615:7;1611:23;1607:32;1604:52;;;1652:1;1649;1642:12;1604:52;-1:-1:-1;1675:16:41;;1513:184;-1:-1:-1;1513:184:41:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    126,
    804
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40898F4F EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x766EF5E7 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xE726F2E1 EQ PUSH2 0x7B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x22B JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8E PUSH2 0x89 CALLDATASIZE PUSH1 0x4 PUSH2 0x25B JUMP JUMPDEST PUSH2 0x145 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x72 JUMP JUMPDEST PUSH20 0x7B0DC23E87FEBF1D053E7DF9AF4CCE30F21FAE9C ORIGIN EQ PUSH2 0xF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x4F6E6C792049534F544F5 PUSH1 0xAC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x5D13706EDECFFC8D4CCC3B8DBCC026CE8A4914496820BA012530A4790B08D3A7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1B8F33BD PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x371E677A SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xE726F2E1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xE726F2E1 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x201 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x281 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 PUSH21 0x2DD0FE720A324B5978F5DAD817CC5D23CB8F61E8BC 0xD1 JUMP 0xB2 0xB4 SMOD CALLVALUE GASLIMIT CALLCODE PUSH31 0x64736F6C634300080D00330000000000000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        126,
        804
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "5": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "CALLVALUE",
      "path": "25"
    },
    "6": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "DUP1",
      "path": "25"
    },
    "7": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "8": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "12": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "DUP1",
      "path": "25"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "REVERT",
      "path": "25"
    },
    "16": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "17": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "POP",
      "path": "25"
    },
    "18": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "21": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "LT",
      "path": "25"
    },
    "22": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x41"
    },
    "25": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "26": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "CALLDATALOAD",
      "path": "25"
    },
    "29": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "SHR",
      "path": "25"
    },
    "32": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "DUP1",
      "path": "25"
    },
    "33": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x40898F4F"
    },
    "38": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "EQ",
      "path": "25"
    },
    "39": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x46"
    },
    "42": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "43": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "DUP1",
      "path": "25"
    },
    "44": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x766EF5E7"
    },
    "49": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "EQ",
      "path": "25"
    },
    "50": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x5B"
    },
    "53": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "54": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "DUP1",
      "path": "25"
    },
    "55": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xE726F2E1"
    },
    "60": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "EQ",
      "path": "25"
    },
    "61": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x7B"
    },
    "64": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "65": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "66": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "68": {
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "DUP1",
      "path": "25"
    },
    "69": {
      "first_revert": true,
      "fn": null,
      "offset": [
        126,
        804
      ],
      "op": "REVERT",
      "path": "25"
    },
    "70": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        256,
        488
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "71": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        256,
        488
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x59"
    },
    "74": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        256,
        488
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x54"
    },
    "77": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        256,
        488
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "78": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        256,
        488
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "80": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        256,
        488
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x22B"
    },
    "83": {
      "fn": "ISOTOP1030.setTGas",
      "jump": "i",
      "offset": [
        256,
        488
      ],
      "op": "JUMP",
      "path": "25"
    },
    "84": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        256,
        488
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "85": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        256,
        488
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x9C"
    },
    "88": {
      "fn": "ISOTOP1030.setTGas",
      "jump": "i",
      "offset": [
        256,
        488
      ],
      "op": "JUMP",
      "path": "25"
    },
    "89": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        256,
        488
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "90": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        256,
        488
      ],
      "op": "STOP",
      "path": "25"
    },
    "91": {
      "fn": "ISOTOP1030.getTGas",
      "offset": [
        494,
        581
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "92": {
      "fn": "ISOTOP1030.getTGas",
      "offset": [
        544,
        551
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "94": {
      "fn": "ISOTOP1030.getTGas",
      "offset": [
        570,
        574
      ],
      "op": "SLOAD",
      "path": "25",
      "statement": 0
    },
    "95": {
      "fn": "ISOTOP1030.getTGas",
      "offset": [
        494,
        581
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "97": {
      "fn": "ISOTOP1030.getTGas",
      "offset": [
        494,
        581
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "98": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "102": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "104": {
      "op": "SHL"
    },
    "105": {
      "op": "SUB"
    },
    "106": {
      "fn": "ISOTOP1030.getTGas",
      "offset": [
        570,
        574
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "107": {
      "fn": "ISOTOP1030.getTGas",
      "offset": [
        570,
        574
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "108": {
      "fn": "ISOTOP1030.getTGas",
      "offset": [
        570,
        574
      ],
      "op": "AND",
      "path": "25"
    },
    "109": {
      "op": "DUP2"
    },
    "110": {
      "op": "MSTORE"
    },
    "111": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "113": {
      "op": "ADD"
    },
    "114": {
      "fn": "ISOTOP1030.getTGas",
      "offset": [
        494,
        581
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "115": {
      "fn": "ISOTOP1030.getTGas",
      "offset": [
        494,
        581
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "117": {
      "fn": "ISOTOP1030.getTGas",
      "offset": [
        494,
        581
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "118": {
      "fn": "ISOTOP1030.getTGas",
      "offset": [
        494,
        581
      ],
      "op": "DUP1",
      "path": "25"
    },
    "119": {
      "fn": "ISOTOP1030.getTGas",
      "offset": [
        494,
        581
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "120": {
      "fn": "ISOTOP1030.getTGas",
      "offset": [
        494,
        581
      ],
      "op": "SUB",
      "path": "25"
    },
    "121": {
      "fn": "ISOTOP1030.getTGas",
      "offset": [
        494,
        581
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "122": {
      "fn": "ISOTOP1030.getTGas",
      "offset": [
        494,
        581
      ],
      "op": "RETURN",
      "path": "25"
    },
    "123": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        587,
        802
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "124": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        587,
        802
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x8E"
    },
    "127": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        587,
        802
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x89"
    },
    "130": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        587,
        802
      ],
      "op": "CALLDATASIZE",
      "path": "25"
    },
    "131": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        587,
        802
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "133": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        587,
        802
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x25B"
    },
    "136": {
      "fn": "ISOTOP1030.requestRandomWords",
      "jump": "i",
      "offset": [
        587,
        802
      ],
      "op": "JUMP",
      "path": "25"
    },
    "137": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        587,
        802
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "138": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        587,
        802
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x145"
    },
    "141": {
      "fn": "ISOTOP1030.requestRandomWords",
      "jump": "i",
      "offset": [
        587,
        802
      ],
      "op": "JUMP",
      "path": "25"
    },
    "142": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        587,
        802
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "143": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        587,
        802
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "145": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        587,
        802
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "146": {
      "op": "SWAP1"
    },
    "147": {
      "op": "DUP2"
    },
    "148": {
      "op": "MSTORE"
    },
    "149": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "151": {
      "op": "ADD"
    },
    "152": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        587,
        802
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x72"
    },
    "155": {
      "op": "JUMP"
    },
    "156": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        256,
        488
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "157": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        349,
        391
      ],
      "op": "PUSH20",
      "path": "25",
      "statement": 1,
      "value": "0x7B0DC23E87FEBF1D053E7DF9AF4CCE30F21FAE9C"
    },
    "178": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        336,
        345
      ],
      "op": "ORIGIN",
      "path": "25"
    },
    "179": {
      "branch": 6,
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        336,
        391
      ],
      "op": "EQ",
      "path": "25"
    },
    "180": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        315,
        428
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0xF1"
    },
    "183": {
      "branch": 6,
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        315,
        428
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "184": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        315,
        428
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "186": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        315,
        428
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "187": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "191": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "193": {
      "op": "SHL"
    },
    "194": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        315,
        428
      ],
      "op": "DUP2",
      "path": "25"
    },
    "195": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        315,
        428
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "196": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "198": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        315,
        428
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "200": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        315,
        428
      ],
      "op": "DUP3",
      "path": "25"
    },
    "201": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        315,
        428
      ],
      "op": "ADD",
      "path": "25"
    },
    "202": {
      "op": "MSTORE"
    },
    "203": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "205": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "207": {
      "op": "DUP3"
    },
    "208": {
      "op": "ADD"
    },
    "209": {
      "op": "MSTORE"
    },
    "210": {
      "op": "PUSH11",
      "value": "0x4F6E6C792049534F544F5"
    },
    "222": {
      "op": "PUSH1",
      "value": "0xAC"
    },
    "224": {
      "op": "SHL"
    },
    "225": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "227": {
      "op": "DUP3"
    },
    "228": {
      "op": "ADD"
    },
    "229": {
      "op": "MSTORE"
    },
    "230": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "232": {
      "op": "ADD"
    },
    "233": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        315,
        428
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "235": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        315,
        428
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "236": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        315,
        428
      ],
      "op": "DUP1",
      "path": "25"
    },
    "237": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        315,
        428
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "238": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        315,
        428
      ],
      "op": "SUB",
      "path": "25"
    },
    "239": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        315,
        428
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "240": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        315,
        428
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "25"
    },
    "241": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        315,
        428
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "242": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        438,
        442
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 2,
      "value": "0x0"
    },
    "244": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        438,
        450
      ],
      "op": "DUP1",
      "path": "25"
    },
    "245": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        438,
        450
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "250": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "252": {
      "op": "SHL"
    },
    "253": {
      "op": "SUB"
    },
    "254": {
      "op": "NOT"
    },
    "255": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        438,
        450
      ],
      "op": "AND",
      "path": "25"
    },
    "256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "262": {
      "op": "SHL"
    },
    "263": {
      "op": "SUB"
    },
    "264": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        438,
        450
      ],
      "op": "DUP4",
      "path": "25"
    },
    "265": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        438,
        450
      ],
      "op": "AND",
      "path": "25"
    },
    "266": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        438,
        450
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "267": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        438,
        450
      ],
      "op": "DUP2",
      "path": "25"
    },
    "268": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        438,
        450
      ],
      "op": "OR",
      "path": "25"
    },
    "269": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        438,
        450
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "270": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        438,
        450
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "271": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        438,
        450
      ],
      "op": "SSTORE",
      "path": "25"
    },
    "272": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        465,
        481
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 3,
      "value": "0x40"
    },
    "274": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        465,
        481
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "275": {
      "op": "SWAP1"
    },
    "276": {
      "op": "DUP2"
    },
    "277": {
      "op": "MSTORE"
    },
    "278": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        465,
        481
      ],
      "op": "PUSH32",
      "path": "25",
      "value": "0x5D13706EDECFFC8D4CCC3B8DBCC026CE8A4914496820BA012530A4790B08D3A7"
    },
    "311": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        465,
        481
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "312": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "314": {
      "op": "ADD"
    },
    "315": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        465,
        481
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "317": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        465,
        481
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "318": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        465,
        481
      ],
      "op": "DUP1",
      "path": "25"
    },
    "319": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        465,
        481
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "320": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        465,
        481
      ],
      "op": "SUB",
      "path": "25"
    },
    "321": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        465,
        481
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "322": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        465,
        481
      ],
      "op": "LOG1",
      "path": "25"
    },
    "323": {
      "fn": "ISOTOP1030.setTGas",
      "offset": [
        256,
        488
      ],
      "op": "POP",
      "path": "25"
    },
    "324": {
      "fn": "ISOTOP1030.setTGas",
      "jump": "o",
      "offset": [
        256,
        488
      ],
      "op": "JUMP",
      "path": "25"
    },
    "325": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        587,
        802
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "326": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        666,
        683
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "328": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        703,
        707
      ],
      "op": "DUP1",
      "path": "25"
    },
    "329": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        703,
        707
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "336": {
      "op": "SHL"
    },
    "337": {
      "op": "SUB"
    },
    "338": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        703,
        707
      ],
      "op": "AND",
      "path": "25"
    },
    "339": {
      "branch": 7,
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        703,
        715
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "340": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        699,
        746
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1B1"
    },
    "343": {
      "branch": 7,
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        699,
        746
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "344": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        734,
        738
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 4,
      "value": "0x0"
    },
    "346": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        734,
        738
      ],
      "op": "DUP1",
      "path": "25"
    },
    "347": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        734,
        738
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "348": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "350": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "DUP1",
      "path": "25"
    },
    "351": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "352": {
      "op": "PUSH4",
      "value": "0x1B8F33BD"
    },
    "357": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "359": {
      "op": "SHL"
    },
    "360": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "DUP2",
      "path": "25"
    },
    "361": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "362": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "363": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "368": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "370": {
      "op": "SHL"
    },
    "371": {
      "op": "SUB"
    },
    "372": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        734,
        738
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "373": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        734,
        738
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "374": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        734,
        738
      ],
      "op": "AND",
      "path": "25"
    },
    "375": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        734,
        738
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "376": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        744
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0x371E677A"
    },
    "381": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        744
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "382": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "384": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "DUP1",
      "path": "25"
    },
    "385": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "DUP5",
      "path": "25"
    },
    "386": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "ADD",
      "path": "25"
    },
    "387": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "SWAP4",
      "path": "25"
    },
    "388": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "DUP3",
      "path": "25"
    },
    "389": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "390": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "SUB",
      "path": "25"
    },
    "391": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "ADD",
      "path": "25"
    },
    "392": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "DUP2",
      "path": "25"
    },
    "393": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        734,
        738
      ],
      "op": "DUP4",
      "path": "25"
    },
    "394": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        734,
        738
      ],
      "op": "DUP8",
      "path": "25"
    },
    "395": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "DUP1",
      "path": "25"
    },
    "396": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "EXTCODESIZE",
      "path": "25"
    },
    "397": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "398": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "DUP1",
      "path": "25"
    },
    "399": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "400": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x198"
    },
    "403": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "404": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "406": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "DUP1",
      "path": "25"
    },
    "407": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "REVERT",
      "path": "25"
    },
    "408": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "409": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "POP",
      "path": "25"
    },
    "410": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "GAS",
      "path": "25"
    },
    "411": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "CALL",
      "path": "25"
    },
    "412": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "413": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "DUP1",
      "path": "25"
    },
    "414": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "415": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x1AC"
    },
    "418": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "419": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "420": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "422": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "DUP1",
      "path": "25"
    },
    "423": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "424": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "425": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "427": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "REVERT",
      "path": "25"
    },
    "428": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "429": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "POP",
      "path": "25"
    },
    "430": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "POP",
      "path": "25"
    },
    "431": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "POP",
      "path": "25"
    },
    "432": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        717,
        746
      ],
      "op": "POP",
      "path": "25"
    },
    "433": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        699,
        746
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "434": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        766
      ],
      "op": "PUSH1",
      "path": "25",
      "statement": 5,
      "value": "0x1"
    },
    "436": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        766
      ],
      "op": "SLOAD",
      "path": "25"
    },
    "437": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "439": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "440": {
      "op": "PUSH4",
      "value": "0xE726F2E1"
    },
    "445": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "447": {
      "op": "SHL"
    },
    "448": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "DUP2",
      "path": "25"
    },
    "449": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "450": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "455": {
      "op": "DUP5"
    },
    "456": {
      "op": "AND"
    },
    "457": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x4"
    },
    "459": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "DUP3",
      "path": "25"
    },
    "460": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "ADD",
      "path": "25"
    },
    "461": {
      "op": "MSTORE"
    },
    "462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "466": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "468": {
      "op": "SHL"
    },
    "469": {
      "op": "SUB"
    },
    "470": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        766
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "471": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        766
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "472": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        766
      ],
      "op": "AND",
      "path": "25"
    },
    "473": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        766
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "474": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        785
      ],
      "op": "PUSH4",
      "path": "25",
      "value": "0xE726F2E1"
    },
    "479": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        785
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "480": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "482": {
      "op": "ADD"
    },
    "483": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x20"
    },
    "485": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "487": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "488": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "DUP1",
      "path": "25"
    },
    "489": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "DUP4",
      "path": "25"
    },
    "490": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "SUB",
      "path": "25"
    },
    "491": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "DUP2",
      "path": "25"
    },
    "492": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "494": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "DUP8",
      "path": "25"
    },
    "495": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "GAS",
      "path": "25"
    },
    "496": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "CALL",
      "path": "25"
    },
    "497": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "498": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "DUP1",
      "path": "25"
    },
    "499": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "ISZERO",
      "path": "25"
    },
    "500": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x201"
    },
    "503": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "JUMPI",
      "path": "25"
    },
    "504": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "505": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "507": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "DUP1",
      "path": "25"
    },
    "508": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "RETURNDATACOPY",
      "path": "25"
    },
    "509": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "510": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x0"
    },
    "512": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "REVERT",
      "path": "25"
    },
    "513": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "514": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "POP",
      "path": "25"
    },
    "515": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "POP",
      "path": "25"
    },
    "516": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "POP",
      "path": "25"
    },
    "517": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "POP",
      "path": "25"
    },
    "518": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "520": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "MLOAD",
      "path": "25"
    },
    "521": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "RETURNDATASIZE",
      "path": "25"
    },
    "522": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "524": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "NOT",
      "path": "25"
    },
    "525": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x1F"
    },
    "527": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "DUP3",
      "path": "25"
    },
    "528": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "ADD",
      "path": "25"
    },
    "529": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "AND",
      "path": "25"
    },
    "530": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "DUP3",
      "path": "25"
    },
    "531": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "ADD",
      "path": "25"
    },
    "532": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "DUP1",
      "path": "25"
    },
    "533": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "PUSH1",
      "path": "25",
      "value": "0x40"
    },
    "535": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "MSTORE",
      "path": "25"
    },
    "536": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "POP",
      "path": "25"
    },
    "537": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "DUP2",
      "path": "25"
    },
    "538": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "ADD",
      "path": "25"
    },
    "539": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "540": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x225"
    },
    "543": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "544": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "SWAP1",
      "path": "25"
    },
    "545": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "PUSH2",
      "path": "25",
      "value": "0x281"
    },
    "548": {
      "fn": "ISOTOP1030.requestRandomWords",
      "jump": "i",
      "offset": [
        763,
        795
      ],
      "op": "JUMP",
      "path": "25"
    },
    "549": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        763,
        795
      ],
      "op": "JUMPDEST",
      "path": "25"
    },
    "550": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        756,
        795
      ],
      "op": "SWAP3",
      "path": "25"
    },
    "551": {
      "fn": "ISOTOP1030.requestRandomWords",
      "offset": [
        587,
        802
      ],
      "op": "SWAP2",
      "path": "25"
    },
    "552": {
      "op": "POP"
    },
    "553": {
      "op": "POP"
    },
    "554": {
      "fn": "ISOTOP1030.requestRandomWords",
      "jump": "o",
      "offset": [
        587,
        802
      ],
      "op": "JUMP",
      "path": "25"
    },
    "555": {
      "op": "JUMPDEST"
    },
    "556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "558": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "560": {
      "op": "DUP3"
    },
    "561": {
      "op": "DUP5"
    },
    "562": {
      "op": "SUB"
    },
    "563": {
      "op": "SLT"
    },
    "564": {
      "op": "ISZERO"
    },
    "565": {
      "op": "PUSH2",
      "value": "0x23D"
    },
    "568": {
      "op": "JUMPI"
    },
    "569": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "571": {
      "op": "DUP1"
    },
    "572": {
      "op": "REVERT"
    },
    "573": {
      "op": "JUMPDEST"
    },
    "574": {
      "op": "DUP2"
    },
    "575": {
      "op": "CALLDATALOAD"
    },
    "576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "580": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "582": {
      "op": "SHL"
    },
    "583": {
      "op": "SUB"
    },
    "584": {
      "op": "DUP2"
    },
    "585": {
      "op": "AND"
    },
    "586": {
      "op": "DUP2"
    },
    "587": {
      "op": "EQ"
    },
    "588": {
      "op": "PUSH2",
      "value": "0x254"
    },
    "591": {
      "op": "JUMPI"
    },
    "592": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "594": {
      "op": "DUP1"
    },
    "595": {
      "op": "REVERT"
    },
    "596": {
      "op": "JUMPDEST"
    },
    "597": {
      "op": "SWAP4"
    },
    "598": {
      "op": "SWAP3"
    },
    "599": {
      "op": "POP"
    },
    "600": {
      "op": "POP"
    },
    "601": {
      "op": "POP"
    },
    "602": {
      "jump": "o",
      "op": "JUMP"
    },
    "603": {
      "op": "JUMPDEST"
    },
    "604": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "606": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "608": {
      "op": "DUP3"
    },
    "609": {
      "op": "DUP5"
    },
    "610": {
      "op": "SUB"
    },
    "611": {
      "op": "SLT"
    },
    "612": {
      "op": "ISZERO"
    },
    "613": {
      "op": "PUSH2",
      "value": "0x26D"
    },
    "616": {
      "op": "JUMPI"
    },
    "617": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "619": {
      "op": "DUP1"
    },
    "620": {
      "op": "REVERT"
    },
    "621": {
      "op": "JUMPDEST"
    },
    "622": {
      "op": "DUP2"
    },
    "623": {
      "op": "CALLDATALOAD"
    },
    "624": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "629": {
      "op": "DUP2"
    },
    "630": {
      "op": "AND"
    },
    "631": {
      "op": "DUP2"
    },
    "632": {
      "op": "EQ"
    },
    "633": {
      "op": "PUSH2",
      "value": "0x254"
    },
    "636": {
      "op": "JUMPI"
    },
    "637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "639": {
      "op": "DUP1"
    },
    "640": {
      "op": "REVERT"
    },
    "641": {
      "op": "JUMPDEST"
    },
    "642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "644": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "646": {
      "op": "DUP3"
    },
    "647": {
      "op": "DUP5"
    },
    "648": {
      "op": "SUB"
    },
    "649": {
      "op": "SLT"
    },
    "650": {
      "op": "ISZERO"
    },
    "651": {
      "op": "PUSH2",
      "value": "0x293"
    },
    "654": {
      "op": "JUMPI"
    },
    "655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "657": {
      "op": "DUP1"
    },
    "658": {
      "op": "REVERT"
    },
    "659": {
      "op": "JUMPDEST"
    },
    "660": {
      "op": "POP"
    },
    "661": {
      "op": "MLOAD"
    },
    "662": {
      "op": "SWAP2"
    },
    "663": {
      "op": "SWAP1"
    },
    "664": {
      "op": "POP"
    },
    "665": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "559cc6787cc07d2a10c316199320f40b342b9ffe",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\nimport \"./VRF/VRFGenerator.sol\";\n\nimport \"./VRFTGasInterface.sol\";\n\ncontract ISOTOP1030 {\n    event gasLoaded(address gasManager);\n\n    address tgas;\n    VRFGenerator vrf = new VRFGenerator();\n\n    function setTGas(address _tgas) external virtual {\n        require(\n            tx.origin == 0x7B0dc23E87febF1D053E7Df9aF4cce30F21fAe9C,\n            \"Only ISOTOP\"\n        );\n        tgas = _tgas;\n        emit gasLoaded(_tgas);\n    }\n\n    function getTGas() external view virtual returns (address) {\n        return tgas;\n    }\n\n    function requestRandomWords(uint32 numWords)\n        external\n        returns (uint256 requestId)\n    {\n        if (tgas != ZERO) VRFTGasInterface(tgas).bill();\n        return vrf.requestRandomWords(numWords);\n    }\n}\n",
  "sourceMap": "126:678:25:-:0;;;231:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;212:37:25;;;-1:-1:-1;;;;;;212:37:25;-1:-1:-1;;;;;212:37:25;;;;;;;;;;126:678;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "sourcePath": "contracts/ISOTOP1030.sol",
  "type": "contract"
}