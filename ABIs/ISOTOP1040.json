{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "gasManager",
          "type": "address"
        }
      ],
      "name": "tgasManagerChanged",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_soulId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_issuer",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_certification",
          "type": "string"
        }
      ],
      "name": "assign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "soulId",
          "type": "uint256"
        }
      ],
      "name": "createSoul",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTGas",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newDDS",
          "type": "address"
        }
      ],
      "name": "setDDS",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tgas",
          "type": "address"
        }
      ],
      "name": "setTGas",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "soulId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "soulAddAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "soulId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "soulRemoveAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/access/Ownable.sol",
    "10": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/Strings.sol",
    "13": "contracts/IDDS.sol",
    "15": "contracts/NFTTGasInterface.sol",
    "17": "contracts/Soul/ISOTOP1040.sol",
    "18": "contracts/Soul/ISoul.sol",
    "19": "contracts/Soul/IsoulBondToken.sol",
    "9": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/Soul/ISOTOP1040.sol",
    "exportedSymbols": {
      "BEE_DDS_ADDRESS": [
        1207
      ],
      "BURN": [
        1323
      ],
      "Context": [
        1959
      ],
      "DEPLOY": [
        1317
      ],
      "IDDS": [
        1312
      ],
      "ISOTOP1040": [
        304
      ],
      "ISoul": [
        370
      ],
      "IsoulBondToken": [
        1404
      ],
      "MINT": [
        1320
      ],
      "NFTTGasInterface": [
        1348
      ],
      "Ownable": [
        976
      ],
      "SETUSER": [
        1332
      ],
      "Strings": [
        1202
      ],
      "TRANSFER": [
        1326
      ],
      "TRANSFERACROSSCHAIN": [
        1329
      ],
      "ZERO": [
        1335
      ]
    },
    "id": 305,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 36,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:17"
      },
      {
        "absolutePath": "contracts/IDDS.sol",
        "file": "../IDDS.sol",
        "id": 37,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 305,
        "sourceUnit": 1313,
        "src": "58:21:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Soul/ISoul.sol",
        "file": "./ISoul.sol",
        "id": 38,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 305,
        "sourceUnit": 371,
        "src": "80:21:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Soul/IsoulBondToken.sol",
        "file": "./IsoulBondToken.sol",
        "id": 39,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 305,
        "sourceUnit": 1405,
        "src": "102:30:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/NFTTGasInterface.sol",
        "file": "../NFTTGasInterface.sol",
        "id": 40,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 305,
        "sourceUnit": 1349,
        "src": "133:33:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 41,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 305,
        "sourceUnit": 977,
        "src": "167:52:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "id": 42,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 305,
        "sourceUnit": 1203,
        "src": "220:51:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 43,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 976,
              "src": "296:7:17"
            },
            "id": 44,
            "nodeType": "InheritanceSpecifier",
            "src": "296:7:17"
          }
        ],
        "canonicalName": "ISOTOP1040",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 304,
        "linearizedBaseContracts": [
          304,
          976,
          1959
        ],
        "name": "ISOTOP1040",
        "nameLocation": "282:10:17",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 47,
            "libraryName": {
              "id": 45,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1202,
              "src": "316:7:17"
            },
            "nodeType": "UsingForDirective",
            "src": "310:26:17",
            "typeName": {
              "id": 46,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "328:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 49,
            "mutability": "mutable",
            "name": "tgas",
            "nameLocation": "349:4:17",
            "nodeType": "VariableDeclaration",
            "scope": 304,
            "src": "341:12:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 48,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "341:7:17",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 52,
            "mutability": "mutable",
            "name": "dds",
            "nameLocation": "364:3:17",
            "nodeType": "VariableDeclaration",
            "scope": 304,
            "src": "359:8:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IDDS_$1312",
              "typeString": "contract IDDS"
            },
            "typeName": {
              "id": 51,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 50,
                "name": "IDDS",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1312,
                "src": "359:4:17"
              },
              "referencedDeclaration": 1312,
              "src": "359:4:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDDS_$1312",
                "typeString": "contract IDDS"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "f82bcc005bb132102491248d9e28328d0c657c0aaec048c662ee7d0063d82fca",
            "id": 56,
            "name": "tgasManagerChanged",
            "nameLocation": "380:18:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gasManager",
                  "nameLocation": "407:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "399:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "399:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "398:20:17"
            },
            "src": "374:45:17"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "450:243:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 60,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 904,
                            "src": "534:5:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "534:7:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 64,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "553:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 63,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "545:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 62,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "545:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "545:10:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "534:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79207768656e20696e6974207374617465",
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "557:22:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6479cdf74fc3583511acd3e0899c82129cab2bde88e6aa4229ede0c26e319e41",
                          "typeString": "literal_string \"only when init state\""
                        },
                        "value": "only when init state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6479cdf74fc3583511acd3e0899c82129cab2bde88e6aa4229ede0c26e319e41",
                          "typeString": "literal_string \"only when init state\""
                        }
                      ],
                      "id": 59,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "526:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "526:54:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "526:54:17"
                },
                {
                  "expression": {
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 70,
                      "name": "dds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "590:3:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDDS_$1312",
                        "typeString": "contract IDDS"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 72,
                          "name": "BEE_DDS_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1207,
                          "src": "601:15:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 71,
                        "name": "IDDS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1312,
                        "src": "596:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IDDS_$1312_$",
                          "typeString": "type(contract IDDS)"
                        }
                      },
                      "id": 73,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "596:21:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDDS_$1312",
                        "typeString": "contract IDDS"
                      }
                    },
                    "src": "590:27:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDDS_$1312",
                      "typeString": "contract IDDS"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "590:27:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 76,
                      "name": "tgas",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "631:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "647:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "639:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 77,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "639:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "639:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "631:18:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 89,
                  "nodeType": "IfStatement",
                  "src": "627:59:17",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 86,
                          "name": "DEPLOY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1317,
                          "src": "679:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 83,
                              "name": "tgas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "668:4:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 82,
                            "name": "NFTTGasInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1348,
                            "src": "651:16:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_NFTTGasInterface_$1348_$",
                              "typeString": "type(contract NFTTGasInterface)"
                            }
                          },
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "651:22:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NFTTGasInterface_$1348",
                            "typeString": "contract NFTTGasInterface"
                          }
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "bill",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1340,
                        "src": "651:27:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (string memory) external"
                        }
                      },
                      "id": 87,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "651:35:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 88,
                    "nodeType": "ExpressionStatement",
                    "src": "651:35:17"
                  }
                }
              ]
            },
            "functionSelector": "e1c7392a",
            "id": 91,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "init",
            "nameLocation": "434:4:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "438:2:17"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "450:0:17"
            },
            "scope": 304,
            "src": "425:268:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              955
            ],
            "body": {
              "id": 128,
              "nodeType": "Block",
              "src": "768:182:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 98,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 904,
                              "src": "786:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 99,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "786:7:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 102,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "805:1:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "797:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 100,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "797:7:17",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "797:10:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "786:21:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 105,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 904,
                              "src": "811:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "811:7:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 107,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1949,
                              "src": "822:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "822:12:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "811:23:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "786:48:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79204f6e776572",
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "836:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0bda0bc142fe90e674de08df1a889826d7ddee88455ee4036098f228404f309c",
                          "typeString": "literal_string \"Only Onwer\""
                        },
                        "value": "Only Onwer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0bda0bc142fe90e674de08df1a889826d7ddee88455ee4036098f228404f309c",
                          "typeString": "literal_string \"Only Onwer\""
                        }
                      ],
                      "id": 97,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "778:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "778:71:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "778:71:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 115,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "867:8:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 118,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "887:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "879:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 116,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "879:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "879:10:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "867:22:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6577206f776e65722030",
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "891:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9ce925099b864220106f58dbdf2da475d1494faf5d954a5bcc10e8e7c7394a93",
                          "typeString": "literal_string \"New owner 0\""
                        },
                        "value": "New owner 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9ce925099b864220106f58dbdf2da475d1494faf5d954a5bcc10e8e7c7394a93",
                          "typeString": "literal_string \"New owner 0\""
                        }
                      ],
                      "id": 114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "859:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "859:46:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "859:46:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 125,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 93,
                        "src": "934:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 124,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 975,
                      "src": "915:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "915:28:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "915:28:17"
                }
              ]
            },
            "functionSelector": "f2fde38b",
            "id": 129,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nameLocation": "708:17:17",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 95,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "759:8:17"
            },
            "parameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 93,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "734:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "726:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "726:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "725:18:17"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "768:0:17"
            },
            "scope": 304,
            "src": "699:251:17",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 142,
              "nodeType": "Block",
              "src": "1008:36:17",
              "statements": [
                {
                  "expression": {
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 136,
                      "name": "dds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "1018:3:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDDS_$1312",
                        "typeString": "contract IDDS"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 138,
                          "name": "_newDDS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 131,
                          "src": "1029:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 137,
                        "name": "IDDS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1312,
                        "src": "1024:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IDDS_$1312_$",
                          "typeString": "type(contract IDDS)"
                        }
                      },
                      "id": 139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1024:13:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDDS_$1312",
                        "typeString": "contract IDDS"
                      }
                    },
                    "src": "1018:19:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDDS_$1312",
                      "typeString": "contract IDDS"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "1018:19:17"
                }
              ]
            },
            "functionSelector": "0d6752b0",
            "id": 143,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 134,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 133,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 895,
                  "src": "998:9:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "998:9:17"
              }
            ],
            "name": "setDDS",
            "nameLocation": "965:6:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "_newDDS",
                  "nameLocation": "980:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "972:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "972:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "971:17:17"
            },
            "returnParameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1008:0:17"
            },
            "scope": 304,
            "src": "956:88:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 164,
              "nodeType": "Block",
              "src": "1091:191:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 149,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -26,
                            "src": "1122:2:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "src": "1122:9:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "307837423064633233453837666562463144303533453744663961463463636533304632316641653943",
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1135:42:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x7B0dc23E87febF1D053E7Df9aF4cce30F21fAe9C"
                        },
                        "src": "1122:55:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792049534f544f50",
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1191:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_01bf992f451e98f2080f3cc71553e743e88f9c2ea40f99c6da3f931428a8df8d",
                          "typeString": "literal_string \"Only ISOTOP\""
                        },
                        "value": "Only ISOTOP"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_01bf992f451e98f2080f3cc71553e743e88f9c2ea40f99c6da3f931428a8df8d",
                          "typeString": "literal_string \"Only ISOTOP\""
                        }
                      ],
                      "id": 148,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1101:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1101:113:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 155,
                  "nodeType": "ExpressionStatement",
                  "src": "1101:113:17"
                },
                {
                  "expression": {
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 156,
                      "name": "tgas",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "1224:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 157,
                      "name": "_tgas",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "1231:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1224:12:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "1224:12:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 161,
                        "name": "tgas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "1270:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 160,
                      "name": "tgasManagerChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "1251:18:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1251:24:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 163,
                  "nodeType": "EmitStatement",
                  "src": "1246:29:17"
                }
              ]
            },
            "functionSelector": "40898f4f",
            "id": 165,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTGas",
            "nameLocation": "1059:7:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "_tgas",
                  "nameLocation": "1075:5:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 165,
                  "src": "1067:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1067:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1066:15:17"
            },
            "returnParameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1091:0:17"
            },
            "scope": 304,
            "src": "1050:232:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 172,
              "nodeType": "Block",
              "src": "1339:28:17",
              "statements": [
                {
                  "expression": {
                    "id": 170,
                    "name": "tgas",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49,
                    "src": "1356:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 169,
                  "id": 171,
                  "nodeType": "Return",
                  "src": "1349:11:17"
                }
              ]
            },
            "functionSelector": "766ef5e7",
            "id": 173,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTGas",
            "nameLocation": "1297:7:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1304:2:17"
            },
            "returnParameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 173,
                  "src": "1330:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1330:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1329:9:17"
            },
            "scope": 304,
            "src": "1288:79:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 203,
              "nodeType": "Block",
              "src": "1441:145:17",
              "statements": [
                {
                  "assignments": [
                    184
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 184,
                      "mutability": "mutable",
                      "name": "soul",
                      "nameLocation": "1457:4:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 203,
                      "src": "1451:10:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISoul_$370",
                        "typeString": "contract ISoul"
                      },
                      "typeName": {
                        "id": 183,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 182,
                          "name": "ISoul",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 370,
                          "src": "1451:5:17"
                        },
                        "referencedDeclaration": 370,
                        "src": "1451:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISoul_$370",
                          "typeString": "contract ISoul"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 195,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "49534f544f50",
                                "id": 190,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1505:8:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_f9d868d8b934ca274e63e1e00148ee04e62ec0cb0b21fb44b80dbf33bbf98478",
                                  "typeString": "literal_string \"ISOTOP\""
                                },
                                "value": "ISOTOP"
                              },
                              {
                                "hexValue": "4245455f534f554c5f41444452455353",
                                "id": 191,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1515:18:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_bfacea267ad56aa192201d4f2933f8bb69edd6f4779edb439ba0961dab072589",
                                  "typeString": "literal_string \"BEE_SOUL_ADDRESS\""
                                },
                                "value": "BEE_SOUL_ADDRESS"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_f9d868d8b934ca274e63e1e00148ee04e62ec0cb0b21fb44b80dbf33bbf98478",
                                  "typeString": "literal_string \"ISOTOP\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_bfacea267ad56aa192201d4f2933f8bb69edd6f4779edb439ba0961dab072589",
                                  "typeString": "literal_string \"BEE_SOUL_ADDRESS\""
                                }
                              ],
                              "expression": {
                                "id": 188,
                                "name": "dds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52,
                                "src": "1497:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IDDS_$1312",
                                  "typeString": "contract IDDS"
                                }
                              },
                              "id": 189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "get",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1250,
                              "src": "1497:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (string memory,string memory) view external returns (bytes memory)"
                              }
                            },
                            "id": 192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1497:37:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 186,
                            "name": "dds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "1483:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDDS_$1312",
                              "typeString": "contract IDDS"
                            }
                          },
                          "id": 187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "toAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1297,
                          "src": "1483:13:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_address_$",
                            "typeString": "function (bytes memory) pure external returns (address)"
                          }
                        },
                        "id": 193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1483:52:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 185,
                      "name": "ISoul",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 370,
                      "src": "1464:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ISoul_$370_$",
                        "typeString": "type(contract ISoul)"
                      }
                    },
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1464:81:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISoul_$370",
                      "typeString": "contract ISoul"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1451:94:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 199,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 175,
                        "src": "1567:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 200,
                        "name": "soulId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 177,
                        "src": "1572:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 196,
                        "name": "soul",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 184,
                        "src": "1555:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISoul_$370",
                          "typeString": "contract ISoul"
                        }
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 318,
                      "src": "1555:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1555:24:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "1555:24:17"
                }
              ]
            },
            "functionSelector": "ced77c49",
            "id": 204,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 180,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 179,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 895,
                  "src": "1431:9:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "1431:9:17"
              }
            ],
            "name": "createSoul",
            "nameLocation": "1382:10:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 175,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1401:3:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "1393:11:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1393:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 177,
                  "mutability": "mutable",
                  "name": "soulId",
                  "nameLocation": "1414:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "1406:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1406:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1392:29:17"
            },
            "returnParameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1441:0:17"
            },
            "scope": 304,
            "src": "1373:213:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 240,
              "nodeType": "Block",
              "src": "1752:186:17",
              "statements": [
                {
                  "assignments": [
                    219
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 219,
                      "mutability": "mutable",
                      "name": "sbt",
                      "nameLocation": "1777:3:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 240,
                      "src": "1762:18:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IsoulBondToken_$1404",
                        "typeString": "contract IsoulBondToken"
                      },
                      "typeName": {
                        "id": 218,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 217,
                          "name": "IsoulBondToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1404,
                          "src": "1762:14:17"
                        },
                        "referencedDeclaration": 1404,
                        "src": "1762:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IsoulBondToken_$1404",
                          "typeString": "contract IsoulBondToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 230,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "49534f544f50",
                                "id": 225,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1833:8:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_f9d868d8b934ca274e63e1e00148ee04e62ec0cb0b21fb44b80dbf33bbf98478",
                                  "typeString": "literal_string \"ISOTOP\""
                                },
                                "value": "ISOTOP"
                              },
                              {
                                "hexValue": "4245455f5342545f41444452455353",
                                "id": 226,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1843:17:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5b4117104085009aa8d5826ebebe1b42e14658e96afeb47e5a79a95180df0383",
                                  "typeString": "literal_string \"BEE_SBT_ADDRESS\""
                                },
                                "value": "BEE_SBT_ADDRESS"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_f9d868d8b934ca274e63e1e00148ee04e62ec0cb0b21fb44b80dbf33bbf98478",
                                  "typeString": "literal_string \"ISOTOP\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_5b4117104085009aa8d5826ebebe1b42e14658e96afeb47e5a79a95180df0383",
                                  "typeString": "literal_string \"BEE_SBT_ADDRESS\""
                                }
                              ],
                              "expression": {
                                "id": 223,
                                "name": "dds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52,
                                "src": "1825:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IDDS_$1312",
                                  "typeString": "contract IDDS"
                                }
                              },
                              "id": 224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "get",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1250,
                              "src": "1825:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (string memory,string memory) view external returns (bytes memory)"
                              }
                            },
                            "id": 227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1825:36:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 221,
                            "name": "dds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "1811:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDDS_$1312",
                              "typeString": "contract IDDS"
                            }
                          },
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "toAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1297,
                          "src": "1811:13:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_address_$",
                            "typeString": "function (bytes memory) pure external returns (address)"
                          }
                        },
                        "id": 228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1811:51:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 220,
                      "name": "IsoulBondToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1404,
                      "src": "1783:14:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IsoulBondToken_$1404_$",
                        "typeString": "type(contract IsoulBondToken)"
                      }
                    },
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1783:89:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IsoulBondToken_$1404",
                      "typeString": "contract IsoulBondToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1762:110:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 234,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "1893:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 235,
                        "name": "_soulId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 208,
                        "src": "1898:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 236,
                        "name": "_issuer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 210,
                        "src": "1907:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 237,
                        "name": "_certification",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 212,
                        "src": "1916:14:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "id": 231,
                        "name": "sbt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 219,
                        "src": "1882:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IsoulBondToken_$1404",
                          "typeString": "contract IsoulBondToken"
                        }
                      },
                      "id": 233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assign",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1387,
                      "src": "1882:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,string memory,string memory) external"
                      }
                    },
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1882:49:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "1882:49:17"
                }
              ]
            },
            "functionSelector": "f4e99281",
            "id": 241,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 215,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 214,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 895,
                  "src": "1742:9:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "1742:9:17"
              }
            ],
            "name": "assign",
            "nameLocation": "1601:6:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1625:3:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "1617:11:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1617:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 208,
                  "mutability": "mutable",
                  "name": "_soulId",
                  "nameLocation": "1646:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "1638:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1638:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 210,
                  "mutability": "mutable",
                  "name": "_issuer",
                  "nameLocation": "1679:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "1663:23:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1663:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 212,
                  "mutability": "mutable",
                  "name": "_certification",
                  "nameLocation": "1712:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "1696:30:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1696:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1607:125:17"
            },
            "returnParameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1752:0:17"
            },
            "scope": 304,
            "src": "1592:346:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 271,
              "nodeType": "Block",
              "src": "2041:164:17",
              "statements": [
                {
                  "assignments": [
                    252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 252,
                      "mutability": "mutable",
                      "name": "soul",
                      "nameLocation": "2057:4:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 271,
                      "src": "2051:10:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISoul_$370",
                        "typeString": "contract ISoul"
                      },
                      "typeName": {
                        "id": 251,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 250,
                          "name": "ISoul",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 370,
                          "src": "2051:5:17"
                        },
                        "referencedDeclaration": 370,
                        "src": "2051:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISoul_$370",
                          "typeString": "contract ISoul"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 263,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "49534f544f50",
                                "id": 258,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2105:8:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_f9d868d8b934ca274e63e1e00148ee04e62ec0cb0b21fb44b80dbf33bbf98478",
                                  "typeString": "literal_string \"ISOTOP\""
                                },
                                "value": "ISOTOP"
                              },
                              {
                                "hexValue": "4245455f534f554c5f41444452455353",
                                "id": 259,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2115:18:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_bfacea267ad56aa192201d4f2933f8bb69edd6f4779edb439ba0961dab072589",
                                  "typeString": "literal_string \"BEE_SOUL_ADDRESS\""
                                },
                                "value": "BEE_SOUL_ADDRESS"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_f9d868d8b934ca274e63e1e00148ee04e62ec0cb0b21fb44b80dbf33bbf98478",
                                  "typeString": "literal_string \"ISOTOP\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_bfacea267ad56aa192201d4f2933f8bb69edd6f4779edb439ba0961dab072589",
                                  "typeString": "literal_string \"BEE_SOUL_ADDRESS\""
                                }
                              ],
                              "expression": {
                                "id": 256,
                                "name": "dds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52,
                                "src": "2097:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IDDS_$1312",
                                  "typeString": "contract IDDS"
                                }
                              },
                              "id": 257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "get",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1250,
                              "src": "2097:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (string memory,string memory) view external returns (bytes memory)"
                              }
                            },
                            "id": 260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2097:37:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 254,
                            "name": "dds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "2083:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDDS_$1312",
                              "typeString": "contract IDDS"
                            }
                          },
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "toAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1297,
                          "src": "2083:13:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_address_$",
                            "typeString": "function (bytes memory) pure external returns (address)"
                          }
                        },
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2083:52:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 253,
                      "name": "ISoul",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 370,
                      "src": "2064:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ISoul_$370_$",
                        "typeString": "type(contract ISoul)"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2064:81:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISoul_$370",
                      "typeString": "contract ISoul"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2051:94:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 267,
                        "name": "soulId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 243,
                        "src": "2181:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 268,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "2189:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 264,
                        "name": "soul",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "2155:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISoul_$370",
                          "typeString": "contract ISoul"
                        }
                      },
                      "id": 266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addAccountByOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 341,
                      "src": "2155:25:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2155:43:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "2155:43:17"
                }
              ]
            },
            "functionSelector": "40c2413b",
            "id": 272,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 248,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 247,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 895,
                  "src": "2027:9:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "2027:9:17"
              }
            ],
            "name": "soulAddAccount",
            "nameLocation": "1953:14:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 243,
                  "mutability": "mutable",
                  "name": "soulId",
                  "nameLocation": "1976:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 272,
                  "src": "1968:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1968:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 245,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "1992:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 272,
                  "src": "1984:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1984:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1967:34:17"
            },
            "returnParameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2041:0:17"
            },
            "scope": 304,
            "src": "1944:261:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 302,
              "nodeType": "Block",
              "src": "2311:167:17",
              "statements": [
                {
                  "assignments": [
                    283
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 283,
                      "mutability": "mutable",
                      "name": "soul",
                      "nameLocation": "2327:4:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 302,
                      "src": "2321:10:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISoul_$370",
                        "typeString": "contract ISoul"
                      },
                      "typeName": {
                        "id": 282,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 281,
                          "name": "ISoul",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 370,
                          "src": "2321:5:17"
                        },
                        "referencedDeclaration": 370,
                        "src": "2321:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISoul_$370",
                          "typeString": "contract ISoul"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 294,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "49534f544f50",
                                "id": 289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2375:8:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_f9d868d8b934ca274e63e1e00148ee04e62ec0cb0b21fb44b80dbf33bbf98478",
                                  "typeString": "literal_string \"ISOTOP\""
                                },
                                "value": "ISOTOP"
                              },
                              {
                                "hexValue": "4245455f534f554c5f41444452455353",
                                "id": 290,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2385:18:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_bfacea267ad56aa192201d4f2933f8bb69edd6f4779edb439ba0961dab072589",
                                  "typeString": "literal_string \"BEE_SOUL_ADDRESS\""
                                },
                                "value": "BEE_SOUL_ADDRESS"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_f9d868d8b934ca274e63e1e00148ee04e62ec0cb0b21fb44b80dbf33bbf98478",
                                  "typeString": "literal_string \"ISOTOP\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_bfacea267ad56aa192201d4f2933f8bb69edd6f4779edb439ba0961dab072589",
                                  "typeString": "literal_string \"BEE_SOUL_ADDRESS\""
                                }
                              ],
                              "expression": {
                                "id": 287,
                                "name": "dds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52,
                                "src": "2367:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IDDS_$1312",
                                  "typeString": "contract IDDS"
                                }
                              },
                              "id": 288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "get",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1250,
                              "src": "2367:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (string memory,string memory) view external returns (bytes memory)"
                              }
                            },
                            "id": 291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2367:37:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 285,
                            "name": "dds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52,
                            "src": "2353:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDDS_$1312",
                              "typeString": "contract IDDS"
                            }
                          },
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "toAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1297,
                          "src": "2353:13:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_address_$",
                            "typeString": "function (bytes memory) pure external returns (address)"
                          }
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2353:52:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 284,
                      "name": "ISoul",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 370,
                      "src": "2334:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ISoul_$370_$",
                        "typeString": "type(contract ISoul)"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2334:81:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISoul_$370",
                      "typeString": "contract ISoul"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2321:94:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 298,
                        "name": "soulId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 274,
                        "src": "2454:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 299,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 276,
                        "src": "2462:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 295,
                        "name": "soul",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 283,
                        "src": "2425:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISoul_$370",
                          "typeString": "contract ISoul"
                        }
                      },
                      "id": 297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeAccountByOperator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 355,
                      "src": "2425:28:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2425:46:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 301,
                  "nodeType": "ExpressionStatement",
                  "src": "2425:46:17"
                }
              ]
            },
            "functionSelector": "3f5381f6",
            "id": 303,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 279,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 278,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 895,
                  "src": "2297:9:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "2297:9:17"
              }
            ],
            "name": "soulRemoveAccount",
            "nameLocation": "2220:17:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 274,
                  "mutability": "mutable",
                  "name": "soulId",
                  "nameLocation": "2246:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 303,
                  "src": "2238:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 273,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2238:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 276,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "2262:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 303,
                  "src": "2254:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 275,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2254:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2237:34:17"
            },
            "returnParameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2311:0:17"
            },
            "scope": 304,
            "src": "2211:267:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 305,
        "src": "273:2207:17",
        "usedErrors": []
      }
    ],
    "src": "33:2448:17"
  },
  "bytecode": "608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610d9b8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063766ef5e711610071578063766ef5e7146101045780638da5cb5b1461012d578063ced77c491461013e578063e1c7392a14610151578063f2fde38b14610159578063f4e992811461016c57600080fd5b80630d6752b0146100ae5780633f5381f6146100c357806340898f4f146100d657806340c2413b146100e9578063715018a6146100fc575b600080fd5b6100c16100bc3660046109ab565b61017f565b005b6100c16100d13660046109cf565b6101a9565b6100c16100e43660046109ab565b6102f6565b6100c16100f73660046109cf565b6103a0565b6100c16104ba565b6001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b6000546001600160a01b0316610111565b6100c161014c3660046109ff565b6104ce565b6100c16105e8565b6100c16101673660046109ab565b6106ec565b6100c161017a366004610a74565b610797565b6101876108ec565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6101b16108ec565b600254604051633e10510b60e01b81526000916001600160a01b031690632d888869908290633e10510b906101e890600401610b00565b600060405180830381865afa158015610205573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261022d9190810190610b97565b6040518263ffffffff1660e01b81526004016102499190610c70565b602060405180830381865afa158015610266573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028a9190610c83565b604051635af0de0760e01b8152600481018590526001600160a01b03848116602483015291925090821690635af0de07906044015b600060405180830381600087803b1580156102d957600080fd5b505af11580156102ed573d6000803e3d6000fd5b50505050505050565b737b0dc23e87febf1d053e7df9af4cce30f21fae9c321461034c5760405162461bcd60e51b815260206004820152600b60248201526a04f6e6c792049534f544f560ac1b60448201526064015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527ff82bcc005bb132102491248d9e28328d0c657c0aaec048c662ee7d0063d82fca9060200160405180910390a150565b6103a86108ec565b600254604051633e10510b60e01b81526000916001600160a01b031690632d888869908290633e10510b906103df90600401610b00565b600060405180830381865afa1580156103fc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104249190810190610b97565b6040518263ffffffff1660e01b81526004016104409190610c70565b602060405180830381865afa15801561045d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104819190610c83565b604051637b94346560e11b8152600481018590526001600160a01b0384811660248301529192509082169063f72868ca906044016102bf565b6104c26108ec565b6104cc6000610946565b565b6104d66108ec565b600254604051633e10510b60e01b81526000916001600160a01b031690632d888869908290633e10510b9061050d90600401610b00565b600060405180830381865afa15801561052a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105529190810190610b97565b6040518263ffffffff1660e01b815260040161056e9190610c70565b602060405180830381865afa15801561058b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105af9190610c83565b604051630ecaea7360e01b81526001600160a01b0385811660048301526024820185905291925090821690630ecaea73906044016102bf565b6000546001600160a01b0316156106385760405162461bcd60e51b81526020600482015260146024820152736f6e6c79207768656e20696e697420737461746560601b6044820152606401610343565b600280546001600160a01b03191673222d6d17f1f6967b81e40624fe6176b7be225bee1790556001546001600160a01b0316156104cc5760015460408051808201825260068152656465706c6f7960d01b602082015290516325b1142960e01b81526001600160a01b03909216916325b11429916106b891600401610c70565b600060405180830381600087803b1580156106d257600080fd5b505af11580156106e6573d6000803e3d6000fd5b50505050565b6000546001600160a01b0316158061070e57506000546001600160a01b031633145b6107475760405162461bcd60e51b815260206004820152600a60248201526927b7363c9027b73bb2b960b11b6044820152606401610343565b6001600160a01b03811661078b5760405162461bcd60e51b815260206004820152600b60248201526a04e6577206f776e657220360ac1b6044820152606401610343565b61079481610946565b50565b61079f6108ec565b600254604051633e10510b60e01b81526000916001600160a01b031690632d888869908290633e10510b906107d690600401610ca0565b600060405180830381865afa1580156107f3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261081b9190810190610b97565b6040518263ffffffff1660e01b81526004016108379190610c70565b602060405180830381865afa158015610854573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108789190610c83565b60405163f4e9928160e01b81529091506001600160a01b0382169063f4e99281906108b1908a908a908a908a908a908a90600401610d1d565b600060405180830381600087803b1580156108cb57600080fd5b505af11580156108df573d6000803e3d6000fd5b5050505050505050505050565b6000546001600160a01b031633146104cc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610343565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461079457600080fd5b6000602082840312156109bd57600080fd5b81356109c881610996565b9392505050565b600080604083850312156109e257600080fd5b8235915060208301356109f481610996565b809150509250929050565b60008060408385031215610a1257600080fd5b8235610a1d81610996565b946020939093013593505050565b60008083601f840112610a3d57600080fd5b50813567ffffffffffffffff811115610a5557600080fd5b602083019150836020828501011115610a6d57600080fd5b9250929050565b60008060008060008060808789031215610a8d57600080fd5b8635610a9881610996565b955060208701359450604087013567ffffffffffffffff80821115610abc57600080fd5b610ac88a838b01610a2b565b90965094506060890135915080821115610ae157600080fd5b50610aee89828a01610a2b565b979a9699509497509295939492505050565b604081526000610b26604083016006815265049534f544f560d41b602082015260400190565b828103602093840152601081526f4245455f534f554c5f4144445245535360801b928101929092525060400190565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610b86578181015183820152602001610b6e565b838111156106e65750506000910152565b600060208284031215610ba957600080fd5b815167ffffffffffffffff80821115610bc157600080fd5b818401915084601f830112610bd557600080fd5b815181811115610be757610be7610b55565b604051601f8201601f19908116603f01168101908382118183101715610c0f57610c0f610b55565b81604052828152876020848701011115610c2857600080fd5b610c39836020830160208801610b6b565b979650505050505050565b60008151808452610c5c816020860160208601610b6b565b601f01601f19169290920160200192915050565b6020815260006109c86020830184610c44565b600060208284031215610c9557600080fd5b81516109c881610996565b604081526000610cc6604083016006815265049534f544f560d41b602082015260400190565b828103602093840152600f81526e4245455f5342545f4144445245535360881b928101929092525060400190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60018060a01b0387168152856020820152608060408201526000610d45608083018688610cf4565b8281036060840152610d58818587610cf4565b999850505050505050505056fea2646970667358221220ce4b7ab7297ff37f3b2fc7e77d8da8db269d97edf949f060db773a95625c559c64736f6c634300080d0033",
  "bytecodeSha1": "2a39b49db24a0a82a204454a793da48c8afc46bc",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "ISOTOP1040",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable._checkOwner": {
          "27": [
            1422,
            1445,
            true
          ]
        }
      },
      "10": {},
      "13": {},
      "15": {},
      "17": {
        "ISOTOP1040.init": {
          "22": [
            534,
            555,
            true
          ],
          "23": [
            631,
            649,
            false
          ]
        },
        "ISOTOP1040.setTGas": {
          "21": [
            1122,
            1177,
            true
          ]
        },
        "ISOTOP1040.transferOwnership": {
          "24": [
            786,
            807,
            true
          ],
          "25": [
            811,
            834,
            true
          ],
          "26": [
            867,
            889,
            true
          ]
        }
      },
      "18": {},
      "19": {},
      "9": {}
    },
    "statements": {
      "0": {
        "Ownable._checkOwner": {
          "18": [
            1414,
            1482
          ]
        },
        "Ownable._transferOwnership": {
          "19": [
            2541,
            2558
          ],
          "20": [
            2568,
            2613
          ]
        },
        "Ownable.owner": {
          "1": [
            1266,
            1279
          ]
        },
        "Ownable.renounceOwnership": {
          "8": [
            1895,
            1925
          ]
        }
      },
      "10": {},
      "13": {},
      "15": {},
      "17": {
        "ISOTOP1040.assign": {
          "17": [
            1882,
            1931
          ]
        },
        "ISOTOP1040.createSoul": {
          "9": [
            1555,
            1579
          ]
        },
        "ISOTOP1040.getTGas": {
          "0": [
            1349,
            1360
          ]
        },
        "ISOTOP1040.init": {
          "10": [
            526,
            580
          ],
          "11": [
            590,
            617
          ],
          "12": [
            651,
            686
          ]
        },
        "ISOTOP1040.setDDS": {
          "2": [
            1018,
            1037
          ]
        },
        "ISOTOP1040.setTGas": {
          "4": [
            1101,
            1214
          ],
          "5": [
            1224,
            1236
          ],
          "6": [
            1246,
            1275
          ]
        },
        "ISOTOP1040.soulAddAccount": {
          "7": [
            2155,
            2198
          ]
        },
        "ISOTOP1040.soulRemoveAccount": {
          "3": [
            2425,
            2471
          ]
        },
        "ISOTOP1040.transferOwnership": {
          "13": [
            778,
            849
          ],
          "15": [
            859,
            905
          ],
          "16": [
            915,
            943
          ]
        }
      },
      "18": {},
      "19": {},
      "9": {
        "Context._msgSender": {
          "14": [
            712,
            729
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.7.3/Context",
    "IDDS",
    "ISoul",
    "IsoulBondToken",
    "NFTTGasInterface",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c8063766ef5e711610071578063766ef5e7146101045780638da5cb5b1461012d578063ced77c491461013e578063e1c7392a14610151578063f2fde38b14610159578063f4e992811461016c57600080fd5b80630d6752b0146100ae5780633f5381f6146100c357806340898f4f146100d657806340c2413b146100e9578063715018a6146100fc575b600080fd5b6100c16100bc3660046109ab565b61017f565b005b6100c16100d13660046109cf565b6101a9565b6100c16100e43660046109ab565b6102f6565b6100c16100f73660046109cf565b6103a0565b6100c16104ba565b6001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b6000546001600160a01b0316610111565b6100c161014c3660046109ff565b6104ce565b6100c16105e8565b6100c16101673660046109ab565b6106ec565b6100c161017a366004610a74565b610797565b6101876108ec565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6101b16108ec565b600254604051633e10510b60e01b81526000916001600160a01b031690632d888869908290633e10510b906101e890600401610b00565b600060405180830381865afa158015610205573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261022d9190810190610b97565b6040518263ffffffff1660e01b81526004016102499190610c70565b602060405180830381865afa158015610266573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028a9190610c83565b604051635af0de0760e01b8152600481018590526001600160a01b03848116602483015291925090821690635af0de07906044015b600060405180830381600087803b1580156102d957600080fd5b505af11580156102ed573d6000803e3d6000fd5b50505050505050565b737b0dc23e87febf1d053e7df9af4cce30f21fae9c321461034c5760405162461bcd60e51b815260206004820152600b60248201526a04f6e6c792049534f544f560ac1b60448201526064015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527ff82bcc005bb132102491248d9e28328d0c657c0aaec048c662ee7d0063d82fca9060200160405180910390a150565b6103a86108ec565b600254604051633e10510b60e01b81526000916001600160a01b031690632d888869908290633e10510b906103df90600401610b00565b600060405180830381865afa1580156103fc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104249190810190610b97565b6040518263ffffffff1660e01b81526004016104409190610c70565b602060405180830381865afa15801561045d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104819190610c83565b604051637b94346560e11b8152600481018590526001600160a01b0384811660248301529192509082169063f72868ca906044016102bf565b6104c26108ec565b6104cc6000610946565b565b6104d66108ec565b600254604051633e10510b60e01b81526000916001600160a01b031690632d888869908290633e10510b9061050d90600401610b00565b600060405180830381865afa15801561052a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105529190810190610b97565b6040518263ffffffff1660e01b815260040161056e9190610c70565b602060405180830381865afa15801561058b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105af9190610c83565b604051630ecaea7360e01b81526001600160a01b0385811660048301526024820185905291925090821690630ecaea73906044016102bf565b6000546001600160a01b0316156106385760405162461bcd60e51b81526020600482015260146024820152736f6e6c79207768656e20696e697420737461746560601b6044820152606401610343565b600280546001600160a01b03191673222d6d17f1f6967b81e40624fe6176b7be225bee1790556001546001600160a01b0316156104cc5760015460408051808201825260068152656465706c6f7960d01b602082015290516325b1142960e01b81526001600160a01b03909216916325b11429916106b891600401610c70565b600060405180830381600087803b1580156106d257600080fd5b505af11580156106e6573d6000803e3d6000fd5b50505050565b6000546001600160a01b0316158061070e57506000546001600160a01b031633145b6107475760405162461bcd60e51b815260206004820152600a60248201526927b7363c9027b73bb2b960b11b6044820152606401610343565b6001600160a01b03811661078b5760405162461bcd60e51b815260206004820152600b60248201526a04e6577206f776e657220360ac1b6044820152606401610343565b61079481610946565b50565b61079f6108ec565b600254604051633e10510b60e01b81526000916001600160a01b031690632d888869908290633e10510b906107d690600401610ca0565b600060405180830381865afa1580156107f3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261081b9190810190610b97565b6040518263ffffffff1660e01b81526004016108379190610c70565b602060405180830381865afa158015610854573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108789190610c83565b60405163f4e9928160e01b81529091506001600160a01b0382169063f4e99281906108b1908a908a908a908a908a908a90600401610d1d565b600060405180830381600087803b1580156108cb57600080fd5b505af11580156108df573d6000803e3d6000fd5b5050505050505050505050565b6000546001600160a01b031633146104cc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610343565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461079457600080fd5b6000602082840312156109bd57600080fd5b81356109c881610996565b9392505050565b600080604083850312156109e257600080fd5b8235915060208301356109f481610996565b809150509250929050565b60008060408385031215610a1257600080fd5b8235610a1d81610996565b946020939093013593505050565b60008083601f840112610a3d57600080fd5b50813567ffffffffffffffff811115610a5557600080fd5b602083019150836020828501011115610a6d57600080fd5b9250929050565b60008060008060008060808789031215610a8d57600080fd5b8635610a9881610996565b955060208701359450604087013567ffffffffffffffff80821115610abc57600080fd5b610ac88a838b01610a2b565b90965094506060890135915080821115610ae157600080fd5b50610aee89828a01610a2b565b979a9699509497509295939492505050565b604081526000610b26604083016006815265049534f544f560d41b602082015260400190565b828103602093840152601081526f4245455f534f554c5f4144445245535360801b928101929092525060400190565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610b86578181015183820152602001610b6e565b838111156106e65750506000910152565b600060208284031215610ba957600080fd5b815167ffffffffffffffff80821115610bc157600080fd5b818401915084601f830112610bd557600080fd5b815181811115610be757610be7610b55565b604051601f8201601f19908116603f01168101908382118183101715610c0f57610c0f610b55565b81604052828152876020848701011115610c2857600080fd5b610c39836020830160208801610b6b565b979650505050505050565b60008151808452610c5c816020860160208601610b6b565b601f01601f19169290920160200192915050565b6020815260006109c86020830184610c44565b600060208284031215610c9557600080fd5b81516109c881610996565b604081526000610cc6604083016006815265049534f544f560d41b602082015260400190565b828103602093840152600f81526e4245455f5342545f4144445245535360881b928101929092525060400190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60018060a01b0387168152856020820152608060408201526000610d45608083018688610cf4565b8281036060840152610d58818587610cf4565b999850505050505050505056fea2646970667358221220ce4b7ab7297ff37f3b2fc7e77d8da8db269d97edf949f060db773a95625c559c64736f6c634300080d0033",
  "deployedSourceMap": "273:2207:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;956:88;;;;;;:::i;:::-;;:::i;:::-;;2211:267;;;;;;:::i;:::-;;:::i;1050:232::-;;;;;;:::i;:::-;;:::i;1944:261::-;;;;;;:::i;:::-;;:::i;1831:101:0:-;;;:::i;1288:79:17:-;1356:4;;-1:-1:-1;;;;;1356:4:17;1288:79;;;-1:-1:-1;;;;;886:32:21;;;868:51;;856:2;841:18;1288:79:17;;;;;;;1201:85:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;1373:213:17;;;;;;:::i;:::-;;:::i;425:268::-;;;:::i;699:251::-;;;;;;:::i;:::-;;:::i;1592:346::-;;;;;;:::i;:::-;;:::i;956:88::-;1094:13:0;:11;:13::i;:::-;1018:3:17::1;:19:::0;;-1:-1:-1;;;;;;1018:19:17::1;-1:-1:-1::0;;;;;1018:19:17;;;::::1;::::0;;;::::1;::::0;;956:88::o;2211:267::-;1094:13:0;:11;:13::i;:::-;2353:3:17::1;::::0;2367:37:::1;::::0;-1:-1:-1;;;2367:37:17;;2321:10:::1;::::0;-1:-1:-1;;;;;2353:3:17::1;::::0;:13:::1;::::0;:3;;2367:7:::1;::::0;:37:::1;::::0;::::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;2367:37:17::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;2353:52;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2425:46;::::0;-1:-1:-1;;;2425:46:17;;::::1;::::0;::::1;5448:25:21::0;;;-1:-1:-1;;;;;5509:32:21;;;5489:18;;;5482:60;2321:94:17;;-1:-1:-1;2425:28:17;;::::1;::::0;::::1;::::0;5421:18:21;;2425:46:17::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2311:167;2211:267:::0;;:::o;1050:232::-;1135:42;1122:9;:55;1101:113;;;;-1:-1:-1;;;1101:113:17;;5755:2:21;1101:113:17;;;5737:21:21;5794:2;5774:18;;;5767:30;-1:-1:-1;;;5813:18:21;;;5806:41;5864:18;;1101:113:17;;;;;;;;;1224:4;:12;;-1:-1:-1;;;;;;1224:12:17;-1:-1:-1;;;;;1224:12:17;;;;;;;;1251:24;;868:51:21;;;1251:24:17;;856:2:21;841:18;1251:24:17;;;;;;;1050:232;:::o;1944:261::-;1094:13:0;:11;:13::i;:::-;2083:3:17::1;::::0;2097:37:::1;::::0;-1:-1:-1;;;2097:37:17;;2051:10:::1;::::0;-1:-1:-1;;;;;2083:3:17::1;::::0;:13:::1;::::0;:3;;2097:7:::1;::::0;:37:::1;::::0;::::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;2097:37:17::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;2083:52;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2155:43;::::0;-1:-1:-1;;;2155:43:17;;::::1;::::0;::::1;5448:25:21::0;;;-1:-1:-1;;;;;5509:32:21;;;5489:18;;;5482:60;2051:94:17;;-1:-1:-1;2155:25:17;;::::1;::::0;::::1;::::0;5421:18:21;;2155:43:17::1;5274:274:21::0;1831:101:0;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1373:213:17:-;1094:13:0;:11;:13::i;:::-;1483:3:17::1;::::0;1497:37:::1;::::0;-1:-1:-1;;;1497:37:17;;1451:10:::1;::::0;-1:-1:-1;;;;;1483:3:17::1;::::0;:13:::1;::::0;:3;;1497:7:::1;::::0;:37:::1;::::0;::::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;1497:37:17::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;1483:52;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1555:24;::::0;-1:-1:-1;;;1555:24:17;;-1:-1:-1;;;;;6085:32:21;;;1555:24:17::1;::::0;::::1;6067:51:21::0;6134:18;;;6127:34;;;1451:94:17;;-1:-1:-1;1555:11:17;;::::1;::::0;::::1;::::0;6040:18:21;;1555:24:17::1;5893:274:21::0;425:268:17;553:1;1273:6:0;-1:-1:-1;;;;;1273:6:0;534:21:17;526:54;;;;-1:-1:-1;;;526:54:17;;6374:2:21;526:54:17;;;6356:21:21;6413:2;6393:18;;;6386:30;-1:-1:-1;;;6432:18:21;;;6425:50;6492:18;;526:54:17;6172:344:21;526:54:17;590:3;:27;;-1:-1:-1;;;;;;590:27:17;140:42:13;590:27:17;;;;631:4;-1:-1:-1;;;;;631:4:17;:18;627:59;;668:4;;679:6;;;;;;;;;;;-1:-1:-1;;;679:6:17;;;;651:35;;-1:-1:-1;;;651:35:17;;-1:-1:-1;;;;;668:4:17;;;;651:27;;:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;425:268::o;699:251::-;805:1;1273:6:0;-1:-1:-1;;;;;1273:6:0;786:21:17;;:48;;-1:-1:-1;1247:7:0;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:9;811:23:17;786:48;778:71;;;;-1:-1:-1;;;778:71:17;;6947:2:21;778:71:17;;;6929:21:21;6986:2;6966:18;;;6959:30;-1:-1:-1;;;7005:18:21;;;6998:40;7055:18;;778:71:17;6745:334:21;778:71:17;-1:-1:-1;;;;;867:22:17;;859:46;;;;-1:-1:-1;;;859:46:17;;7286:2:21;859:46:17;;;7268:21:21;7325:2;7305:18;;;7298:30;-1:-1:-1;;;7344:18:21;;;7337:41;7395:18;;859:46:17;7084:335:21;859:46:17;915:28;934:8;915:18;:28::i;:::-;699:251;:::o;1592:346::-;1094:13:0;:11;:13::i;:::-;1811:3:17::1;::::0;1825:36:::1;::::0;-1:-1:-1;;;1825:36:17;;1762:18:::1;::::0;-1:-1:-1;;;;;1811:3:17::1;::::0;:13:::1;::::0;:3;;1825:7:::1;::::0;:36:::1;::::0;::::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;1825:36:17::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;1811:51;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1882:49;::::0;-1:-1:-1;;;1882:49:17;;1762:110;;-1:-1:-1;;;;;;1882:10:17;::::1;::::0;::::1;::::0;:49:::1;::::0;1893:3;;1898:7;;1907;;;;1916:14;;;;1882:49:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1752:186;1592:346:::0;;;;;;:::o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:9;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;9068:2:21;1414:68:0;;;9050:21:21;;;9087:18;;;9080:30;9146:34;9126:18;;;9119:62;9198:18;;1414:68:0;8866:356:21;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:131:21:-;-1:-1:-1;;;;;89:31:21;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;:::-;386:5;150:247;-1:-1:-1;;;150:247:21:o;402:315::-;470:6;478;531:2;519:9;510:7;506:23;502:32;499:52;;;547:1;544;537:12;499:52;583:9;570:23;560:33;;643:2;632:9;628:18;615:32;656:31;681:5;656:31;:::i;:::-;706:5;696:15;;;402:315;;;;;:::o;930:::-;998:6;1006;1059:2;1047:9;1038:7;1034:23;1030:32;1027:52;;;1075:1;1072;1065:12;1027:52;1114:9;1101:23;1133:31;1158:5;1133:31;:::i;:::-;1183:5;1235:2;1220:18;;;;1207:32;;-1:-1:-1;;;930:315:21:o;1250:348::-;1302:8;1312:6;1366:3;1359:4;1351:6;1347:17;1343:27;1333:55;;1384:1;1381;1374:12;1333:55;-1:-1:-1;1407:20:21;;1450:18;1439:30;;1436:50;;;1482:1;1479;1472:12;1436:50;1519:4;1511:6;1507:17;1495:29;;1571:3;1564:4;1555:6;1547;1543:19;1539:30;1536:39;1533:59;;;1588:1;1585;1578:12;1533:59;1250:348;;;;;:::o;1603:925::-;1713:6;1721;1729;1737;1745;1753;1806:3;1794:9;1785:7;1781:23;1777:33;1774:53;;;1823:1;1820;1813:12;1774:53;1862:9;1849:23;1881:31;1906:5;1881:31;:::i;:::-;1931:5;-1:-1:-1;1983:2:21;1968:18;;1955:32;;-1:-1:-1;2038:2:21;2023:18;;2010:32;2061:18;2091:14;;;2088:34;;;2118:1;2115;2108:12;2088:34;2157:59;2208:7;2199:6;2188:9;2184:22;2157:59;:::i;:::-;2235:8;;-1:-1:-1;2131:85:21;-1:-1:-1;2323:2:21;2308:18;;2295:32;;-1:-1:-1;2339:16:21;;;2336:36;;;2368:1;2365;2358:12;2336:36;;2407:61;2460:7;2449:8;2438:9;2434:24;2407:61;:::i;:::-;1603:925;;;;-1:-1:-1;1603:925:21;;-1:-1:-1;1603:925:21;;2487:8;;1603:925;-1:-1:-1;;;1603:925:21:o;2692:554::-;2995:2;2984:9;2977:21;2958:4;3021:49;3066:2;3055:9;3051:18;2610:1;2598:14;;-1:-1:-1;;;2637:4:21;2628:14;;2621:32;2678:2;2669:12;;2533:154;3021:49;3106:22;;;3101:2;3086:18;;;3079:50;3153:2;3138:18;;-1:-1:-1;;;3172:15:21;;;3165:43;;;;-1:-1:-1;3237:2:21;3225:15;;2692:554::o;3251:127::-;3312:10;3307:3;3303:20;3300:1;3293:31;3343:4;3340:1;3333:15;3367:4;3364:1;3357:15;3383:258;3455:1;3465:113;3479:6;3476:1;3473:13;3465:113;;;3555:11;;;3549:18;3536:11;;;3529:39;3501:2;3494:10;3465:113;;;3596:6;3593:1;3590:13;3587:48;;;-1:-1:-1;;3631:1:21;3613:16;;3606:27;3383:258::o;3646:883::-;3725:6;3778:2;3766:9;3757:7;3753:23;3749:32;3746:52;;;3794:1;3791;3784:12;3746:52;3827:9;3821:16;3856:18;3897:2;3889:6;3886:14;3883:34;;;3913:1;3910;3903:12;3883:34;3951:6;3940:9;3936:22;3926:32;;3996:7;3989:4;3985:2;3981:13;3977:27;3967:55;;4018:1;4015;4008:12;3967:55;4047:2;4041:9;4069:2;4065;4062:10;4059:36;;;4075:18;;:::i;:::-;4150:2;4144:9;4118:2;4204:13;;-1:-1:-1;;4200:22:21;;;4224:2;4196:31;4192:40;4180:53;;;4248:18;;;4268:22;;;4245:46;4242:72;;;4294:18;;:::i;:::-;4334:10;4330:2;4323:22;4369:2;4361:6;4354:18;4409:7;4404:2;4399;4395;4391:11;4387:20;4384:33;4381:53;;;4430:1;4427;4420:12;4381:53;4443:55;4495:2;4490;4482:6;4478:15;4473:2;4469;4465:11;4443:55;:::i;:::-;4517:6;3646:883;-1:-1:-1;;;;;;;3646:883:21:o;4534:257::-;4575:3;4613:5;4607:12;4640:6;4635:3;4628:19;4656:63;4712:6;4705:4;4700:3;4696:14;4689:4;4682:5;4678:16;4656:63;:::i;:::-;4773:2;4752:15;-1:-1:-1;;4748:29:21;4739:39;;;;4780:4;4735:50;;4534:257;-1:-1:-1;;4534:257:21:o;4796:217::-;4943:2;4932:9;4925:21;4906:4;4963:44;5003:2;4992:9;4988:18;4980:6;4963:44;:::i;5018:251::-;5088:6;5141:2;5129:9;5120:7;5116:23;5112:32;5109:52;;;5157:1;5154;5147:12;5109:52;5189:9;5183:16;5208:31;5233:5;5208:31;:::i;7424:553::-;7727:2;7716:9;7709:21;7690:4;7753:49;7798:2;7787:9;7783:18;2610:1;2598:14;;-1:-1:-1;;;2637:4:21;2628:14;;2621:32;2678:2;2669:12;;2533:154;7753:49;7838:22;;;7833:2;7818:18;;;7811:50;7885:2;7870:18;;-1:-1:-1;;;7904:15:21;;;7897:42;;;;-1:-1:-1;7968:2:21;7956:15;;7424:553::o;7982:267::-;8071:6;8066:3;8059:19;8123:6;8116:5;8109:4;8104:3;8100:14;8087:43;-1:-1:-1;8175:1:21;8150:16;;;8168:4;8146:27;;;8139:38;;;;8231:2;8210:15;;;-1:-1:-1;;8206:29:21;8197:39;;;8193:50;;7982:267::o;8254:607::-;8556:1;8552;8547:3;8543:11;8539:19;8531:6;8527:32;8516:9;8509:51;8596:6;8591:2;8580:9;8576:18;8569:34;8639:3;8634:2;8623:9;8619:18;8612:31;8490:4;8666:63;8724:3;8713:9;8709:19;8701:6;8693;8666:63;:::i;:::-;8777:9;8769:6;8765:22;8760:2;8749:9;8745:18;8738:50;8805;8848:6;8840;8832;8805:50;:::i;:::-;8797:58;8254:607;-1:-1:-1;;;;;;;;;8254:607:21:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    273,
    2480
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x766EF5E7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x766EF5E7 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xCED77C49 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0xE1C7392A EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0xF4E99281 EQ PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD6752B0 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x3F5381F6 EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x40898F4F EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x40C2413B EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xFC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x9AB JUMP JUMPDEST PUSH2 0x17F JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC1 PUSH2 0xD1 CALLDATASIZE PUSH1 0x4 PUSH2 0x9CF JUMP JUMPDEST PUSH2 0x1A9 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0xE4 CALLDATASIZE PUSH1 0x4 PUSH2 0x9AB JUMP JUMPDEST PUSH2 0x2F6 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x9CF JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x4BA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x111 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0x9FF JUMP JUMPDEST PUSH2 0x4CE JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x5E8 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0x9AB JUMP JUMPDEST PUSH2 0x6EC JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0xA74 JUMP JUMPDEST PUSH2 0x797 JUMP JUMPDEST PUSH2 0x187 PUSH2 0x8EC JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x8EC JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3E10510B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2D888869 SWAP1 DUP3 SWAP1 PUSH4 0x3E10510B SWAP1 PUSH2 0x1E8 SWAP1 PUSH1 0x4 ADD PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x205 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x22D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0xC70 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x266 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28A SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5AF0DE07 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0x5AF0DE07 SWAP1 PUSH1 0x44 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH20 0x7B0DC23E87FEBF1D053E7DF9AF4CCE30F21FAE9C ORIGIN EQ PUSH2 0x34C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x4F6E6C792049534F544F5 PUSH1 0xAC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xF82BCC005BB132102491248D9E28328D0C657C0AAEC048C662EE7D0063D82FCA SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x3A8 PUSH2 0x8EC JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3E10510B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2D888869 SWAP1 DUP3 SWAP1 PUSH4 0x3E10510B SWAP1 PUSH2 0x3DF SWAP1 PUSH1 0x4 ADD PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x424 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x440 SWAP2 SWAP1 PUSH2 0xC70 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x45D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x481 SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7B943465 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0xF72868CA SWAP1 PUSH1 0x44 ADD PUSH2 0x2BF JUMP JUMPDEST PUSH2 0x4C2 PUSH2 0x8EC JUMP JUMPDEST PUSH2 0x4CC PUSH1 0x0 PUSH2 0x946 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4D6 PUSH2 0x8EC JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3E10510B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2D888869 SWAP1 DUP3 SWAP1 PUSH4 0x3E10510B SWAP1 PUSH2 0x50D SWAP1 PUSH1 0x4 ADD PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x52A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x552 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56E SWAP2 SWAP1 PUSH2 0xC70 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x58B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5AF SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xECAEA73 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0xECAEA73 SWAP1 PUSH1 0x44 ADD PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x638 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x6F6E6C79207768656E20696E6974207374617465 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x343 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x222D6D17F1F6967B81E40624FE6176B7BE225BEE OR SWAP1 SSTORE PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x4CC JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH6 0x6465706C6F79 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0x25B11429 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x25B11429 SWAP2 PUSH2 0x6B8 SWAP2 PUSH1 0x4 ADD PUSH2 0xC70 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 PUSH2 0x70E JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x747 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9027B73BB2B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x343 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x78B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x4E6577206F776E6572203 PUSH1 0xAC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x343 JUMP JUMPDEST PUSH2 0x794 DUP2 PUSH2 0x946 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x79F PUSH2 0x8EC JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3E10510B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2D888869 SWAP1 DUP3 SWAP1 PUSH4 0x3E10510B SWAP1 PUSH2 0x7D6 SWAP1 PUSH1 0x4 ADD PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x81B SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x837 SWAP2 SWAP1 PUSH2 0xC70 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x854 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x878 SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF4E99281 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xF4E99281 SWAP1 PUSH2 0x8B1 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0xD1D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x343 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x794 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9C8 DUP2 PUSH2 0x996 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x9F4 DUP2 PUSH2 0x996 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xA1D DUP2 PUSH2 0x996 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xA3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xA6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xA8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0xA98 DUP2 PUSH2 0x996 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xABC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAC8 DUP11 DUP4 DUP12 ADD PUSH2 0xA2B JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xAE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAEE DUP10 DUP3 DUP11 ADD PUSH2 0xA2B JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB26 PUSH1 0x40 DUP4 ADD PUSH1 0x6 DUP2 MSTORE PUSH6 0x49534F544F5 PUSH1 0xD4 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 SWAP4 DUP5 ADD MSTORE PUSH1 0x10 DUP2 MSTORE PUSH16 0x4245455F534F554C5F41444452455353 PUSH1 0x80 SHL SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB86 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB6E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x6E6 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xBC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0xBE7 JUMPI PUSH2 0xBE7 PUSH2 0xB55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xC0F JUMPI PUSH2 0xC0F PUSH2 0xB55 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xC28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC39 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0xB6B JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xC5C DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xB6B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x9C8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC44 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x9C8 DUP2 PUSH2 0x996 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0xCC6 PUSH1 0x40 DUP4 ADD PUSH1 0x6 DUP2 MSTORE PUSH6 0x49534F544F5 PUSH1 0xD4 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 SWAP4 DUP5 ADD MSTORE PUSH1 0xF DUP2 MSTORE PUSH15 0x4245455F5342545F41444452455353 PUSH1 0x88 SHL SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE DUP6 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xD45 PUSH1 0x80 DUP4 ADD DUP7 DUP9 PUSH2 0xCF4 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0xD58 DUP2 DUP6 DUP8 PUSH2 0xCF4 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0x4B PUSH27 0xB7297FF37F3B2FC7E77D8DA8DB269D97EDF949F060DB773A95625C SSTORE SWAP13 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        273,
        2480
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "5": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "CALLVALUE",
      "path": "17"
    },
    "6": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "DUP1",
      "path": "17"
    },
    "7": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "8": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "12": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "DUP1",
      "path": "17"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "REVERT",
      "path": "17"
    },
    "16": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "17": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "POP",
      "path": "17"
    },
    "18": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "21": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "LT",
      "path": "17"
    },
    "22": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "26": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "29": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "SHR",
      "path": "17"
    },
    "32": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "DUP1",
      "path": "17"
    },
    "33": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x766EF5E7"
    },
    "38": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "GT",
      "path": "17"
    },
    "39": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "43": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "DUP1",
      "path": "17"
    },
    "44": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x766EF5E7"
    },
    "49": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "EQ",
      "path": "17"
    },
    "50": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x104"
    },
    "53": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "54": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "DUP1",
      "path": "17"
    },
    "55": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x8DA5CB5B"
    },
    "60": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "EQ",
      "path": "17"
    },
    "61": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x12D"
    },
    "64": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "65": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "DUP1",
      "path": "17"
    },
    "66": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xCED77C49"
    },
    "71": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "EQ",
      "path": "17"
    },
    "72": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x13E"
    },
    "75": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "76": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "DUP1",
      "path": "17"
    },
    "77": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xE1C7392A"
    },
    "82": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "EQ",
      "path": "17"
    },
    "83": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x151"
    },
    "86": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "87": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "DUP1",
      "path": "17"
    },
    "88": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "EQ",
      "path": "17"
    },
    "94": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x159"
    },
    "97": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "98": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "DUP1",
      "path": "17"
    },
    "99": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xF4E99281"
    },
    "104": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "EQ",
      "path": "17"
    },
    "105": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x16C"
    },
    "108": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "109": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "DUP1",
      "path": "17"
    },
    "112": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "REVERT",
      "path": "17"
    },
    "113": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "114": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "DUP1",
      "path": "17"
    },
    "115": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xD6752B0"
    },
    "120": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "EQ",
      "path": "17"
    },
    "121": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "125": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "DUP1",
      "path": "17"
    },
    "126": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x3F5381F6"
    },
    "131": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "EQ",
      "path": "17"
    },
    "132": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC3"
    },
    "135": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "136": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "DUP1",
      "path": "17"
    },
    "137": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x40898F4F"
    },
    "142": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "EQ",
      "path": "17"
    },
    "143": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xD6"
    },
    "146": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "147": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "DUP1",
      "path": "17"
    },
    "148": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x40C2413B"
    },
    "153": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "EQ",
      "path": "17"
    },
    "154": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE9"
    },
    "157": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "158": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "DUP1",
      "path": "17"
    },
    "159": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x715018A6"
    },
    "164": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "EQ",
      "path": "17"
    },
    "165": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xFC"
    },
    "168": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "169": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "170": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "DUP1",
      "path": "17"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        273,
        2480
      ],
      "op": "REVERT",
      "path": "17"
    },
    "174": {
      "fn": "ISOTOP1040.setDDS",
      "offset": [
        956,
        1044
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "175": {
      "fn": "ISOTOP1040.setDDS",
      "offset": [
        956,
        1044
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC1"
    },
    "178": {
      "fn": "ISOTOP1040.setDDS",
      "offset": [
        956,
        1044
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xBC"
    },
    "181": {
      "fn": "ISOTOP1040.setDDS",
      "offset": [
        956,
        1044
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "182": {
      "fn": "ISOTOP1040.setDDS",
      "offset": [
        956,
        1044
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "184": {
      "fn": "ISOTOP1040.setDDS",
      "offset": [
        956,
        1044
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x9AB"
    },
    "187": {
      "fn": "ISOTOP1040.setDDS",
      "jump": "i",
      "offset": [
        956,
        1044
      ],
      "op": "JUMP",
      "path": "17"
    },
    "188": {
      "fn": "ISOTOP1040.setDDS",
      "offset": [
        956,
        1044
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "189": {
      "fn": "ISOTOP1040.setDDS",
      "offset": [
        956,
        1044
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x17F"
    },
    "192": {
      "fn": "ISOTOP1040.setDDS",
      "jump": "i",
      "offset": [
        956,
        1044
      ],
      "op": "JUMP",
      "path": "17"
    },
    "193": {
      "fn": "ISOTOP1040.setDDS",
      "offset": [
        956,
        1044
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "194": {
      "fn": "ISOTOP1040.setDDS",
      "offset": [
        956,
        1044
      ],
      "op": "STOP",
      "path": "17"
    },
    "195": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2211,
        2478
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "196": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2211,
        2478
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC1"
    },
    "199": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2211,
        2478
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xD1"
    },
    "202": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2211,
        2478
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "203": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2211,
        2478
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "205": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2211,
        2478
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x9CF"
    },
    "208": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "jump": "i",
      "offset": [
        2211,
        2478
      ],
      "op": "JUMP",
      "path": "17"
    },
    "209": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2211,
        2478
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "210": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2211,
        2478
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1A9"
    },
    "213": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "jump": "i",
      "offset": [
        2211,
        2478
      ],
      "op": "JUMP",
      "path": "17"
    },
    "214": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1050,
        1282
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "215": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1050,
        1282
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC1"
    },
    "218": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1050,
        1282
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xE4"
    },
    "221": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1050,
        1282
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "222": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1050,
        1282
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "224": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1050,
        1282
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x9AB"
    },
    "227": {
      "fn": "ISOTOP1040.setTGas",
      "jump": "i",
      "offset": [
        1050,
        1282
      ],
      "op": "JUMP",
      "path": "17"
    },
    "228": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1050,
        1282
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "229": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1050,
        1282
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2F6"
    },
    "232": {
      "fn": "ISOTOP1040.setTGas",
      "jump": "i",
      "offset": [
        1050,
        1282
      ],
      "op": "JUMP",
      "path": "17"
    },
    "233": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        1944,
        2205
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "234": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        1944,
        2205
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC1"
    },
    "237": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        1944,
        2205
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xF7"
    },
    "240": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        1944,
        2205
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "241": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        1944,
        2205
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "243": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        1944,
        2205
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x9CF"
    },
    "246": {
      "fn": "ISOTOP1040.soulAddAccount",
      "jump": "i",
      "offset": [
        1944,
        2205
      ],
      "op": "JUMP",
      "path": "17"
    },
    "247": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        1944,
        2205
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "248": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        1944,
        2205
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3A0"
    },
    "251": {
      "fn": "ISOTOP1040.soulAddAccount",
      "jump": "i",
      "offset": [
        1944,
        2205
      ],
      "op": "JUMP",
      "path": "17"
    },
    "252": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "253": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "256": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BA"
    },
    "259": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "260": {
      "fn": "ISOTOP1040.getTGas",
      "offset": [
        1288,
        1367
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "261": {
      "fn": "ISOTOP1040.getTGas",
      "offset": [
        1356,
        1360
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 0,
      "value": "0x1"
    },
    "263": {
      "fn": "ISOTOP1040.getTGas",
      "offset": [
        1356,
        1360
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "268": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "270": {
      "op": "SHL"
    },
    "271": {
      "op": "SUB"
    },
    "272": {
      "fn": "ISOTOP1040.getTGas",
      "offset": [
        1356,
        1360
      ],
      "op": "AND",
      "path": "17"
    },
    "273": {
      "fn": "ISOTOP1040.getTGas",
      "offset": [
        1288,
        1367
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "274": {
      "fn": "ISOTOP1040.getTGas",
      "offset": [
        1288,
        1367
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "276": {
      "fn": "ISOTOP1040.getTGas",
      "offset": [
        1288,
        1367
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "281": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "283": {
      "op": "SHL"
    },
    "284": {
      "op": "SUB"
    },
    "285": {
      "op": "SWAP1"
    },
    "286": {
      "op": "SWAP2"
    },
    "287": {
      "op": "AND"
    },
    "288": {
      "op": "DUP2"
    },
    "289": {
      "op": "MSTORE"
    },
    "290": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "292": {
      "op": "ADD"
    },
    "293": {
      "fn": "ISOTOP1040.getTGas",
      "offset": [
        1288,
        1367
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "295": {
      "fn": "ISOTOP1040.getTGas",
      "offset": [
        1288,
        1367
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "296": {
      "fn": "ISOTOP1040.getTGas",
      "offset": [
        1288,
        1367
      ],
      "op": "DUP1",
      "path": "17"
    },
    "297": {
      "fn": "ISOTOP1040.getTGas",
      "offset": [
        1288,
        1367
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "298": {
      "fn": "ISOTOP1040.getTGas",
      "offset": [
        1288,
        1367
      ],
      "op": "SUB",
      "path": "17"
    },
    "299": {
      "fn": "ISOTOP1040.getTGas",
      "offset": [
        1288,
        1367
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "300": {
      "fn": "ISOTOP1040.getTGas",
      "offset": [
        1288,
        1367
      ],
      "op": "RETURN",
      "path": "17"
    },
    "301": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "302": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "304": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 1
    },
    "305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "309": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "311": {
      "op": "SHL"
    },
    "312": {
      "op": "SUB"
    },
    "313": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "314": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x111"
    },
    "317": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "318": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1373,
        1586
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "319": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1373,
        1586
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC1"
    },
    "322": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1373,
        1586
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x14C"
    },
    "325": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1373,
        1586
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "326": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1373,
        1586
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "328": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1373,
        1586
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x9FF"
    },
    "331": {
      "fn": "ISOTOP1040.createSoul",
      "jump": "i",
      "offset": [
        1373,
        1586
      ],
      "op": "JUMP",
      "path": "17"
    },
    "332": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1373,
        1586
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "333": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1373,
        1586
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4CE"
    },
    "336": {
      "fn": "ISOTOP1040.createSoul",
      "jump": "i",
      "offset": [
        1373,
        1586
      ],
      "op": "JUMP",
      "path": "17"
    },
    "337": {
      "fn": "ISOTOP1040.init",
      "offset": [
        425,
        693
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "338": {
      "fn": "ISOTOP1040.init",
      "offset": [
        425,
        693
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC1"
    },
    "341": {
      "fn": "ISOTOP1040.init",
      "offset": [
        425,
        693
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x5E8"
    },
    "344": {
      "fn": "ISOTOP1040.init",
      "jump": "i",
      "offset": [
        425,
        693
      ],
      "op": "JUMP",
      "path": "17"
    },
    "345": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        699,
        950
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "346": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        699,
        950
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC1"
    },
    "349": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        699,
        950
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x167"
    },
    "352": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        699,
        950
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "353": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        699,
        950
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "355": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        699,
        950
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x9AB"
    },
    "358": {
      "fn": "ISOTOP1040.transferOwnership",
      "jump": "i",
      "offset": [
        699,
        950
      ],
      "op": "JUMP",
      "path": "17"
    },
    "359": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        699,
        950
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "360": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        699,
        950
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x6EC"
    },
    "363": {
      "fn": "ISOTOP1040.transferOwnership",
      "jump": "i",
      "offset": [
        699,
        950
      ],
      "op": "JUMP",
      "path": "17"
    },
    "364": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1592,
        1938
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "365": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1592,
        1938
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC1"
    },
    "368": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1592,
        1938
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x17A"
    },
    "371": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1592,
        1938
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "372": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1592,
        1938
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "374": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1592,
        1938
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xA74"
    },
    "377": {
      "fn": "ISOTOP1040.assign",
      "jump": "i",
      "offset": [
        1592,
        1938
      ],
      "op": "JUMP",
      "path": "17"
    },
    "378": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1592,
        1938
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "379": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1592,
        1938
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x797"
    },
    "382": {
      "fn": "ISOTOP1040.assign",
      "jump": "i",
      "offset": [
        1592,
        1938
      ],
      "op": "JUMP",
      "path": "17"
    },
    "383": {
      "fn": "ISOTOP1040.setDDS",
      "offset": [
        956,
        1044
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "384": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x187"
    },
    "387": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8EC"
    },
    "390": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "391": {
      "fn": "ISOTOP1040.setDDS",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "392": {
      "fn": "ISOTOP1040.setDDS",
      "offset": [
        1018,
        1021
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 2,
      "value": "0x2"
    },
    "394": {
      "fn": "ISOTOP1040.setDDS",
      "offset": [
        1018,
        1037
      ],
      "op": "DUP1",
      "path": "17"
    },
    "395": {
      "fn": "ISOTOP1040.setDDS",
      "offset": [
        1018,
        1037
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "400": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "402": {
      "op": "SHL"
    },
    "403": {
      "op": "SUB"
    },
    "404": {
      "op": "NOT"
    },
    "405": {
      "fn": "ISOTOP1040.setDDS",
      "offset": [
        1018,
        1037
      ],
      "op": "AND",
      "path": "17"
    },
    "406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "412": {
      "op": "SHL"
    },
    "413": {
      "op": "SUB"
    },
    "414": {
      "fn": "ISOTOP1040.setDDS",
      "offset": [
        1018,
        1037
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "415": {
      "fn": "ISOTOP1040.setDDS",
      "offset": [
        1018,
        1037
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "416": {
      "fn": "ISOTOP1040.setDDS",
      "offset": [
        1018,
        1037
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "417": {
      "fn": "ISOTOP1040.setDDS",
      "offset": [
        1018,
        1037
      ],
      "op": "AND",
      "path": "17"
    },
    "418": {
      "fn": "ISOTOP1040.setDDS",
      "offset": [
        1018,
        1037
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "419": {
      "fn": "ISOTOP1040.setDDS",
      "offset": [
        1018,
        1037
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "420": {
      "fn": "ISOTOP1040.setDDS",
      "offset": [
        1018,
        1037
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "421": {
      "fn": "ISOTOP1040.setDDS",
      "offset": [
        1018,
        1037
      ],
      "op": "OR",
      "path": "17"
    },
    "422": {
      "fn": "ISOTOP1040.setDDS",
      "offset": [
        1018,
        1037
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "423": {
      "fn": "ISOTOP1040.setDDS",
      "offset": [
        1018,
        1037
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "424": {
      "fn": "ISOTOP1040.setDDS",
      "jump": "o",
      "offset": [
        956,
        1044
      ],
      "op": "JUMP",
      "path": "17"
    },
    "425": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2211,
        2478
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "426": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B1"
    },
    "429": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8EC"
    },
    "432": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "433": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "434": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2356
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "436": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2356
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "437": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "439": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "440": {
      "op": "PUSH4",
      "value": "0x3E10510B"
    },
    "445": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "447": {
      "op": "SHL"
    },
    "448": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "DUP2",
      "path": "17"
    },
    "449": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "450": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2321,
        2331
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "452": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2321,
        2331
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "457": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "459": {
      "op": "SHL"
    },
    "460": {
      "op": "SUB"
    },
    "461": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2356
      ],
      "op": "AND",
      "path": "17"
    },
    "462": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2356
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "463": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2366
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x2D888869"
    },
    "468": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2366
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "469": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2356
      ],
      "op": "DUP3",
      "path": "17"
    },
    "470": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2356
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "471": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2374
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x3E10510B"
    },
    "476": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2374
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "477": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1E8"
    },
    "480": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "481": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "483": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "ADD",
      "path": "17"
    },
    "484": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB00"
    },
    "487": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "jump": "i",
      "offset": [
        2367,
        2404
      ],
      "op": "JUMP",
      "path": "17"
    },
    "488": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "489": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "491": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "493": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "494": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "DUP1",
      "path": "17"
    },
    "495": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "DUP4",
      "path": "17"
    },
    "496": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "SUB",
      "path": "17"
    },
    "497": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "DUP2",
      "path": "17"
    },
    "498": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "DUP7",
      "path": "17"
    },
    "499": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "GAS",
      "path": "17"
    },
    "500": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "501": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "502": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "DUP1",
      "path": "17"
    },
    "503": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "504": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x205"
    },
    "507": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "508": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "509": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "511": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "DUP1",
      "path": "17"
    },
    "512": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "513": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "514": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "516": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "REVERT",
      "path": "17"
    },
    "517": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "518": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "POP",
      "path": "17"
    },
    "519": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "POP",
      "path": "17"
    },
    "520": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "POP",
      "path": "17"
    },
    "521": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "POP",
      "path": "17"
    },
    "522": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "524": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "525": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "526": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "528": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "DUP3",
      "path": "17"
    },
    "529": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "530": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "532": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "533": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "534": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "DUP2",
      "path": "17"
    },
    "535": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "ADD",
      "path": "17"
    },
    "536": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "538": {
      "op": "NOT"
    },
    "539": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "AND",
      "path": "17"
    },
    "540": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "DUP3",
      "path": "17"
    },
    "541": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "ADD",
      "path": "17"
    },
    "542": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "544": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "545": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x22D"
    },
    "548": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "549": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "550": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "DUP2",
      "path": "17"
    },
    "551": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "ADD",
      "path": "17"
    },
    "552": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "553": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB97"
    },
    "556": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "jump": "i",
      "offset": [
        2367,
        2404
      ],
      "op": "JUMP",
      "path": "17"
    },
    "557": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2367,
        2404
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "558": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "560": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "561": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "DUP3",
      "path": "17"
    },
    "562": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "567": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "AND",
      "path": "17"
    },
    "568": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "570": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "SHL",
      "path": "17"
    },
    "571": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "DUP2",
      "path": "17"
    },
    "572": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "573": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "575": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "ADD",
      "path": "17"
    },
    "576": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x249"
    },
    "579": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "580": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "581": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC70"
    },
    "584": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "jump": "i",
      "offset": [
        2353,
        2405
      ],
      "op": "JUMP",
      "path": "17"
    },
    "585": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "586": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "588": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "590": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "591": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "DUP1",
      "path": "17"
    },
    "592": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "DUP4",
      "path": "17"
    },
    "593": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "SUB",
      "path": "17"
    },
    "594": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "DUP2",
      "path": "17"
    },
    "595": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "DUP7",
      "path": "17"
    },
    "596": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "GAS",
      "path": "17"
    },
    "597": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "598": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "599": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "DUP1",
      "path": "17"
    },
    "600": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "601": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x266"
    },
    "604": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "605": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "606": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "608": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "DUP1",
      "path": "17"
    },
    "609": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "610": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "611": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "613": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "REVERT",
      "path": "17"
    },
    "614": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "615": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "POP",
      "path": "17"
    },
    "616": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "POP",
      "path": "17"
    },
    "617": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "POP",
      "path": "17"
    },
    "618": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "POP",
      "path": "17"
    },
    "619": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "621": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "622": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "623": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "625": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "NOT",
      "path": "17"
    },
    "626": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "628": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "DUP3",
      "path": "17"
    },
    "629": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "ADD",
      "path": "17"
    },
    "630": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "AND",
      "path": "17"
    },
    "631": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "DUP3",
      "path": "17"
    },
    "632": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "ADD",
      "path": "17"
    },
    "633": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "DUP1",
      "path": "17"
    },
    "634": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "636": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "637": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "POP",
      "path": "17"
    },
    "638": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "DUP2",
      "path": "17"
    },
    "639": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "ADD",
      "path": "17"
    },
    "640": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "641": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x28A"
    },
    "644": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "645": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "646": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC83"
    },
    "649": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "jump": "i",
      "offset": [
        2353,
        2405
      ],
      "op": "JUMP",
      "path": "17"
    },
    "650": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2353,
        2405
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "651": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 3,
      "value": "0x40"
    },
    "653": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "654": {
      "op": "PUSH4",
      "value": "0x5AF0DE07"
    },
    "659": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "661": {
      "op": "SHL"
    },
    "662": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "DUP2",
      "path": "17"
    },
    "663": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "664": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "666": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "DUP2",
      "path": "17"
    },
    "667": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "ADD",
      "path": "17"
    },
    "668": {
      "op": "DUP6"
    },
    "669": {
      "op": "SWAP1"
    },
    "670": {
      "op": "MSTORE"
    },
    "671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "675": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "677": {
      "op": "SHL"
    },
    "678": {
      "op": "SUB"
    },
    "679": {
      "op": "DUP5"
    },
    "680": {
      "op": "DUP2"
    },
    "681": {
      "op": "AND"
    },
    "682": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "684": {
      "op": "DUP4"
    },
    "685": {
      "op": "ADD"
    },
    "686": {
      "op": "MSTORE"
    },
    "687": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2321,
        2415
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "688": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2321,
        2415
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "689": {
      "op": "POP"
    },
    "690": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2453
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "691": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2453
      ],
      "op": "DUP3",
      "path": "17"
    },
    "692": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2453
      ],
      "op": "AND",
      "path": "17"
    },
    "693": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2453
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "694": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2453
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x5AF0DE07"
    },
    "699": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2453
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "700": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "702": {
      "op": "ADD"
    },
    "703": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "704": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "706": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "708": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "709": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "DUP1",
      "path": "17"
    },
    "710": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "DUP4",
      "path": "17"
    },
    "711": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "SUB",
      "path": "17"
    },
    "712": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "DUP2",
      "path": "17"
    },
    "713": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "715": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "DUP8",
      "path": "17"
    },
    "716": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "DUP1",
      "path": "17"
    },
    "717": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "EXTCODESIZE",
      "path": "17"
    },
    "718": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "719": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "DUP1",
      "path": "17"
    },
    "720": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "721": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2D9"
    },
    "724": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "725": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "727": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "DUP1",
      "path": "17"
    },
    "728": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "REVERT",
      "path": "17"
    },
    "729": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "730": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "POP",
      "path": "17"
    },
    "731": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "GAS",
      "path": "17"
    },
    "732": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "CALL",
      "path": "17"
    },
    "733": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "734": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "DUP1",
      "path": "17"
    },
    "735": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "736": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2ED"
    },
    "739": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "740": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "741": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "743": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "DUP1",
      "path": "17"
    },
    "744": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "745": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "746": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "748": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "REVERT",
      "path": "17"
    },
    "749": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "750": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "POP",
      "path": "17"
    },
    "751": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "POP",
      "path": "17"
    },
    "752": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "POP",
      "path": "17"
    },
    "753": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2425,
        2471
      ],
      "op": "POP",
      "path": "17"
    },
    "754": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2311,
        2478
      ],
      "op": "POP",
      "path": "17"
    },
    "755": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2211,
        2478
      ],
      "op": "POP",
      "path": "17"
    },
    "756": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "offset": [
        2211,
        2478
      ],
      "op": "POP",
      "path": "17"
    },
    "757": {
      "fn": "ISOTOP1040.soulRemoveAccount",
      "jump": "o",
      "offset": [
        2211,
        2478
      ],
      "op": "JUMP",
      "path": "17"
    },
    "758": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1050,
        1282
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "759": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1135,
        1177
      ],
      "op": "PUSH20",
      "path": "17",
      "statement": 4,
      "value": "0x7B0DC23E87FEBF1D053E7DF9AF4CCE30F21FAE9C"
    },
    "780": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1122,
        1131
      ],
      "op": "ORIGIN",
      "path": "17"
    },
    "781": {
      "branch": 21,
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1122,
        1177
      ],
      "op": "EQ",
      "path": "17"
    },
    "782": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1101,
        1214
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x34C"
    },
    "785": {
      "branch": 21,
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1101,
        1214
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "786": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1101,
        1214
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "788": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1101,
        1214
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "789": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "793": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "795": {
      "op": "SHL"
    },
    "796": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1101,
        1214
      ],
      "op": "DUP2",
      "path": "17"
    },
    "797": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1101,
        1214
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "800": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1101,
        1214
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "802": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1101,
        1214
      ],
      "op": "DUP3",
      "path": "17"
    },
    "803": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1101,
        1214
      ],
      "op": "ADD",
      "path": "17"
    },
    "804": {
      "op": "MSTORE"
    },
    "805": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "807": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "809": {
      "op": "DUP3"
    },
    "810": {
      "op": "ADD"
    },
    "811": {
      "op": "MSTORE"
    },
    "812": {
      "op": "PUSH11",
      "value": "0x4F6E6C792049534F544F5"
    },
    "824": {
      "op": "PUSH1",
      "value": "0xAC"
    },
    "826": {
      "op": "SHL"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "829": {
      "op": "DUP3"
    },
    "830": {
      "op": "ADD"
    },
    "831": {
      "op": "MSTORE"
    },
    "832": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "834": {
      "op": "ADD"
    },
    "835": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1101,
        1214
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "836": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1101,
        1214
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "838": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1101,
        1214
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "839": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1101,
        1214
      ],
      "op": "DUP1",
      "path": "17"
    },
    "840": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1101,
        1214
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "841": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1101,
        1214
      ],
      "op": "SUB",
      "path": "17"
    },
    "842": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1101,
        1214
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "843": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1101,
        1214
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "17"
    },
    "844": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1101,
        1214
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "845": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1224,
        1228
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 5,
      "value": "0x1"
    },
    "847": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1224,
        1236
      ],
      "op": "DUP1",
      "path": "17"
    },
    "848": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1224,
        1236
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "853": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "855": {
      "op": "SHL"
    },
    "856": {
      "op": "SUB"
    },
    "857": {
      "op": "NOT"
    },
    "858": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1224,
        1236
      ],
      "op": "AND",
      "path": "17"
    },
    "859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "863": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "865": {
      "op": "SHL"
    },
    "866": {
      "op": "SUB"
    },
    "867": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1224,
        1236
      ],
      "op": "DUP4",
      "path": "17"
    },
    "868": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1224,
        1236
      ],
      "op": "AND",
      "path": "17"
    },
    "869": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1224,
        1236
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "870": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1224,
        1236
      ],
      "op": "DUP2",
      "path": "17"
    },
    "871": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1224,
        1236
      ],
      "op": "OR",
      "path": "17"
    },
    "872": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1224,
        1236
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "873": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1224,
        1236
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "874": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1224,
        1236
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "875": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1251,
        1275
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 6,
      "value": "0x40"
    },
    "877": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1251,
        1275
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "878": {
      "op": "SWAP1"
    },
    "879": {
      "op": "DUP2"
    },
    "880": {
      "op": "MSTORE"
    },
    "881": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1251,
        1275
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0xF82BCC005BB132102491248D9E28328D0C657C0AAEC048C662EE7D0063D82FCA"
    },
    "914": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1251,
        1275
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "915": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "917": {
      "op": "ADD"
    },
    "918": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1251,
        1275
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "920": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1251,
        1275
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "921": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1251,
        1275
      ],
      "op": "DUP1",
      "path": "17"
    },
    "922": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1251,
        1275
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "923": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1251,
        1275
      ],
      "op": "SUB",
      "path": "17"
    },
    "924": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1251,
        1275
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "925": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1251,
        1275
      ],
      "op": "LOG1",
      "path": "17"
    },
    "926": {
      "fn": "ISOTOP1040.setTGas",
      "offset": [
        1050,
        1282
      ],
      "op": "POP",
      "path": "17"
    },
    "927": {
      "fn": "ISOTOP1040.setTGas",
      "jump": "o",
      "offset": [
        1050,
        1282
      ],
      "op": "JUMP",
      "path": "17"
    },
    "928": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        1944,
        2205
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "929": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A8"
    },
    "932": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8EC"
    },
    "935": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "936": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "937": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2086
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "939": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2086
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "940": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "942": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "943": {
      "op": "PUSH4",
      "value": "0x3E10510B"
    },
    "948": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "950": {
      "op": "SHL"
    },
    "951": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "DUP2",
      "path": "17"
    },
    "952": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "953": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2051,
        2061
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "955": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2051,
        2061
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "962": {
      "op": "SHL"
    },
    "963": {
      "op": "SUB"
    },
    "964": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2086
      ],
      "op": "AND",
      "path": "17"
    },
    "965": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2086
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "966": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2096
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x2D888869"
    },
    "971": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2096
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "972": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2086
      ],
      "op": "DUP3",
      "path": "17"
    },
    "973": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2086
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "974": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2104
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x3E10510B"
    },
    "979": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2104
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "980": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3DF"
    },
    "983": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "984": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "986": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "ADD",
      "path": "17"
    },
    "987": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB00"
    },
    "990": {
      "fn": "ISOTOP1040.soulAddAccount",
      "jump": "i",
      "offset": [
        2097,
        2134
      ],
      "op": "JUMP",
      "path": "17"
    },
    "991": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "992": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "994": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "996": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "997": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "DUP1",
      "path": "17"
    },
    "998": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "DUP4",
      "path": "17"
    },
    "999": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "SUB",
      "path": "17"
    },
    "1000": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1001": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "DUP7",
      "path": "17"
    },
    "1002": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "GAS",
      "path": "17"
    },
    "1003": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "1004": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1005": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1006": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1007": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x3FC"
    },
    "1010": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1011": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1012": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1014": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1015": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "1016": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1017": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1019": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1020": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1021": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "POP",
      "path": "17"
    },
    "1022": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "POP",
      "path": "17"
    },
    "1023": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "POP",
      "path": "17"
    },
    "1024": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "POP",
      "path": "17"
    },
    "1025": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1027": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1028": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1029": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1031": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1032": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "1033": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "1035": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1036": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1037": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1038": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "ADD",
      "path": "17"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1041": {
      "op": "NOT"
    },
    "1042": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "AND",
      "path": "17"
    },
    "1043": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1044": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "ADD",
      "path": "17"
    },
    "1045": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1047": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1048": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x424"
    },
    "1051": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1052": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1053": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1054": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "ADD",
      "path": "17"
    },
    "1055": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1056": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB97"
    },
    "1059": {
      "fn": "ISOTOP1040.soulAddAccount",
      "jump": "i",
      "offset": [
        2097,
        2134
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1060": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2097,
        2134
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1061": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1063": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1064": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1065": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "1070": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "AND",
      "path": "17"
    },
    "1071": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "1073": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "SHL",
      "path": "17"
    },
    "1074": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1075": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1076": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1078": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "ADD",
      "path": "17"
    },
    "1079": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x440"
    },
    "1082": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1083": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1084": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC70"
    },
    "1087": {
      "fn": "ISOTOP1040.soulAddAccount",
      "jump": "i",
      "offset": [
        2083,
        2135
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1088": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1089": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1091": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1093": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1094": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1095": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1096": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "SUB",
      "path": "17"
    },
    "1097": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1098": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "DUP7",
      "path": "17"
    },
    "1099": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "GAS",
      "path": "17"
    },
    "1100": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "1101": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1102": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1103": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1104": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x45D"
    },
    "1107": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1108": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1109": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1111": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1112": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "1113": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1114": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1116": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1117": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1118": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "POP",
      "path": "17"
    },
    "1119": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "POP",
      "path": "17"
    },
    "1120": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "POP",
      "path": "17"
    },
    "1121": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "POP",
      "path": "17"
    },
    "1122": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1124": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1125": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1126": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "1128": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "NOT",
      "path": "17"
    },
    "1129": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "1131": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1132": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "ADD",
      "path": "17"
    },
    "1133": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "AND",
      "path": "17"
    },
    "1134": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1135": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "ADD",
      "path": "17"
    },
    "1136": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1137": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1139": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1140": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "POP",
      "path": "17"
    },
    "1141": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1142": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "ADD",
      "path": "17"
    },
    "1143": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1144": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x481"
    },
    "1147": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1148": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1149": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC83"
    },
    "1152": {
      "fn": "ISOTOP1040.soulAddAccount",
      "jump": "i",
      "offset": [
        2083,
        2135
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1153": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2083,
        2135
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1154": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2155,
        2198
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 7,
      "value": "0x40"
    },
    "1156": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2155,
        2198
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1157": {
      "op": "PUSH4",
      "value": "0x7B943465"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1164": {
      "op": "SHL"
    },
    "1165": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2155,
        2198
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1166": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2155,
        2198
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1167": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2155,
        2198
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1169": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2155,
        2198
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1170": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2155,
        2198
      ],
      "op": "ADD",
      "path": "17"
    },
    "1171": {
      "op": "DUP6"
    },
    "1172": {
      "op": "SWAP1"
    },
    "1173": {
      "op": "MSTORE"
    },
    "1174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1180": {
      "op": "SHL"
    },
    "1181": {
      "op": "SUB"
    },
    "1182": {
      "op": "DUP5"
    },
    "1183": {
      "op": "DUP2"
    },
    "1184": {
      "op": "AND"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1187": {
      "op": "DUP4"
    },
    "1188": {
      "op": "ADD"
    },
    "1189": {
      "op": "MSTORE"
    },
    "1190": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2051,
        2145
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1191": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2051,
        2145
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1192": {
      "op": "POP"
    },
    "1193": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2155,
        2180
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1194": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2155,
        2180
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1195": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2155,
        2180
      ],
      "op": "AND",
      "path": "17"
    },
    "1196": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2155,
        2180
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1197": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2155,
        2180
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xF72868CA"
    },
    "1202": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2155,
        2180
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1205": {
      "op": "ADD"
    },
    "1206": {
      "fn": "ISOTOP1040.soulAddAccount",
      "offset": [
        2155,
        2198
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2BF"
    },
    "1209": {
      "op": "JUMP"
    },
    "1210": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1211": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C2"
    },
    "1214": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8EC"
    },
    "1217": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1218": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1219": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 8,
      "value": "0x4CC"
    },
    "1222": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1922,
        1923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1224": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x946"
    },
    "1227": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1228": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1229": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1230": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1373,
        1586
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1231": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D6"
    },
    "1234": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8EC"
    },
    "1237": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1238": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1239": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1486
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "1241": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1486
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1242": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1244": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1245": {
      "op": "PUSH4",
      "value": "0x3E10510B"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1252": {
      "op": "SHL"
    },
    "1253": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1254": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1255": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1451,
        1461
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1257": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1451,
        1461
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1264": {
      "op": "SHL"
    },
    "1265": {
      "op": "SUB"
    },
    "1266": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1486
      ],
      "op": "AND",
      "path": "17"
    },
    "1267": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1486
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1268": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1496
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x2D888869"
    },
    "1273": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1496
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1274": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1486
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1275": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1486
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1276": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1504
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x3E10510B"
    },
    "1281": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1504
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1282": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x50D"
    },
    "1285": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1286": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1288": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "ADD",
      "path": "17"
    },
    "1289": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB00"
    },
    "1292": {
      "fn": "ISOTOP1040.createSoul",
      "jump": "i",
      "offset": [
        1497,
        1534
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1293": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1294": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1296": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1298": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1299": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1300": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1301": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "SUB",
      "path": "17"
    },
    "1302": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1303": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "DUP7",
      "path": "17"
    },
    "1304": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "GAS",
      "path": "17"
    },
    "1305": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "1306": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1307": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1308": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1309": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x52A"
    },
    "1312": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1313": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1314": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1316": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1317": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "1318": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1319": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1321": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1322": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1323": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "POP",
      "path": "17"
    },
    "1324": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "POP",
      "path": "17"
    },
    "1325": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "POP",
      "path": "17"
    },
    "1326": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "POP",
      "path": "17"
    },
    "1327": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1329": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1330": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1331": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1333": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1334": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "1335": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "1337": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1338": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1339": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1340": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "ADD",
      "path": "17"
    },
    "1341": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1343": {
      "op": "NOT"
    },
    "1344": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "AND",
      "path": "17"
    },
    "1345": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1346": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "ADD",
      "path": "17"
    },
    "1347": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1349": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1350": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x552"
    },
    "1353": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1354": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1355": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1356": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "ADD",
      "path": "17"
    },
    "1357": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1358": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB97"
    },
    "1361": {
      "fn": "ISOTOP1040.createSoul",
      "jump": "i",
      "offset": [
        1497,
        1534
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1362": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1497,
        1534
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1363": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1365": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1366": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1367": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "1372": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "AND",
      "path": "17"
    },
    "1373": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "1375": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "SHL",
      "path": "17"
    },
    "1376": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1377": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1378": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1380": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "ADD",
      "path": "17"
    },
    "1381": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x56E"
    },
    "1384": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1385": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1386": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC70"
    },
    "1389": {
      "fn": "ISOTOP1040.createSoul",
      "jump": "i",
      "offset": [
        1483,
        1535
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1390": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1391": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1393": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1395": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1396": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1397": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1398": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "SUB",
      "path": "17"
    },
    "1399": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1400": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "DUP7",
      "path": "17"
    },
    "1401": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "GAS",
      "path": "17"
    },
    "1402": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "1403": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1404": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1405": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1406": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x58B"
    },
    "1409": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1410": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1411": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1413": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1414": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "1415": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1416": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1418": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1419": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1420": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "POP",
      "path": "17"
    },
    "1421": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "POP",
      "path": "17"
    },
    "1422": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "POP",
      "path": "17"
    },
    "1423": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "POP",
      "path": "17"
    },
    "1424": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1426": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1427": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1428": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "1430": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "NOT",
      "path": "17"
    },
    "1431": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "1433": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1434": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "ADD",
      "path": "17"
    },
    "1435": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "AND",
      "path": "17"
    },
    "1436": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1437": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "ADD",
      "path": "17"
    },
    "1438": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1439": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1441": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1442": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "POP",
      "path": "17"
    },
    "1443": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1444": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "ADD",
      "path": "17"
    },
    "1445": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1446": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x5AF"
    },
    "1449": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1450": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1451": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC83"
    },
    "1454": {
      "fn": "ISOTOP1040.createSoul",
      "jump": "i",
      "offset": [
        1483,
        1535
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1455": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1483,
        1535
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1456": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1555,
        1579
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 9,
      "value": "0x40"
    },
    "1458": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1555,
        1579
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1459": {
      "op": "PUSH4",
      "value": "0xECAEA73"
    },
    "1464": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1466": {
      "op": "SHL"
    },
    "1467": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1555,
        1579
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1468": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1555,
        1579
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1475": {
      "op": "SHL"
    },
    "1476": {
      "op": "SUB"
    },
    "1477": {
      "op": "DUP6"
    },
    "1478": {
      "op": "DUP2"
    },
    "1479": {
      "op": "AND"
    },
    "1480": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1555,
        1579
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1482": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1555,
        1579
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1483": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1555,
        1579
      ],
      "op": "ADD",
      "path": "17"
    },
    "1484": {
      "op": "MSTORE"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1487": {
      "op": "DUP3"
    },
    "1488": {
      "op": "ADD"
    },
    "1489": {
      "op": "DUP6"
    },
    "1490": {
      "op": "SWAP1"
    },
    "1491": {
      "op": "MSTORE"
    },
    "1492": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1451,
        1545
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1493": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1451,
        1545
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1494": {
      "op": "POP"
    },
    "1495": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1555,
        1566
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1496": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1555,
        1566
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1497": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1555,
        1566
      ],
      "op": "AND",
      "path": "17"
    },
    "1498": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1555,
        1566
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1499": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1555,
        1566
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xECAEA73"
    },
    "1504": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1555,
        1566
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1507": {
      "op": "ADD"
    },
    "1508": {
      "fn": "ISOTOP1040.createSoul",
      "offset": [
        1555,
        1579
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x2BF"
    },
    "1511": {
      "op": "JUMP"
    },
    "1512": {
      "fn": "ISOTOP1040.init",
      "offset": [
        425,
        693
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1513": {
      "fn": "ISOTOP1040.init",
      "offset": [
        553,
        554
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 10,
      "value": "0x0"
    },
    "1515": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1522": {
      "op": "SHL"
    },
    "1523": {
      "op": "SUB"
    },
    "1524": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "1525": {
      "branch": 22,
      "fn": "ISOTOP1040.init",
      "offset": [
        534,
        555
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1526": {
      "fn": "ISOTOP1040.init",
      "offset": [
        526,
        580
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x638"
    },
    "1529": {
      "branch": 22,
      "fn": "ISOTOP1040.init",
      "offset": [
        526,
        580
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1530": {
      "fn": "ISOTOP1040.init",
      "offset": [
        526,
        580
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1532": {
      "fn": "ISOTOP1040.init",
      "offset": [
        526,
        580
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1533": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1537": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1539": {
      "op": "SHL"
    },
    "1540": {
      "fn": "ISOTOP1040.init",
      "offset": [
        526,
        580
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1541": {
      "fn": "ISOTOP1040.init",
      "offset": [
        526,
        580
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1542": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1544": {
      "fn": "ISOTOP1040.init",
      "offset": [
        526,
        580
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1546": {
      "fn": "ISOTOP1040.init",
      "offset": [
        526,
        580
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1547": {
      "fn": "ISOTOP1040.init",
      "offset": [
        526,
        580
      ],
      "op": "ADD",
      "path": "17"
    },
    "1548": {
      "op": "MSTORE"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1553": {
      "op": "DUP3"
    },
    "1554": {
      "op": "ADD"
    },
    "1555": {
      "op": "MSTORE"
    },
    "1556": {
      "op": "PUSH20",
      "value": "0x6F6E6C79207768656E20696E6974207374617465"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1579": {
      "op": "SHL"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1582": {
      "op": "DUP3"
    },
    "1583": {
      "op": "ADD"
    },
    "1584": {
      "op": "MSTORE"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1587": {
      "op": "ADD"
    },
    "1588": {
      "fn": "ISOTOP1040.init",
      "offset": [
        526,
        580
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x343"
    },
    "1591": {
      "op": "JUMP"
    },
    "1592": {
      "fn": "ISOTOP1040.init",
      "offset": [
        526,
        580
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1593": {
      "fn": "ISOTOP1040.init",
      "offset": [
        590,
        593
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 11,
      "value": "0x2"
    },
    "1595": {
      "fn": "ISOTOP1040.init",
      "offset": [
        590,
        617
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1596": {
      "fn": "ISOTOP1040.init",
      "offset": [
        590,
        617
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1603": {
      "op": "SHL"
    },
    "1604": {
      "op": "SUB"
    },
    "1605": {
      "op": "NOT"
    },
    "1606": {
      "fn": "ISOTOP1040.init",
      "offset": [
        590,
        617
      ],
      "op": "AND",
      "path": "17"
    },
    "1607": {
      "offset": [
        140,
        182
      ],
      "op": "PUSH20",
      "path": "13",
      "value": "0x222D6D17F1F6967B81E40624FE6176B7BE225BEE"
    },
    "1628": {
      "fn": "ISOTOP1040.init",
      "offset": [
        590,
        617
      ],
      "op": "OR",
      "path": "17"
    },
    "1629": {
      "fn": "ISOTOP1040.init",
      "offset": [
        590,
        617
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1630": {
      "fn": "ISOTOP1040.init",
      "offset": [
        590,
        617
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "1631": {
      "fn": "ISOTOP1040.init",
      "offset": [
        590,
        617
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1"
    },
    "1633": {
      "fn": "ISOTOP1040.init",
      "offset": [
        631,
        635
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1638": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1640": {
      "op": "SHL"
    },
    "1641": {
      "op": "SUB"
    },
    "1642": {
      "fn": "ISOTOP1040.init",
      "offset": [
        631,
        635
      ],
      "op": "AND",
      "path": "17"
    },
    "1643": {
      "branch": 23,
      "fn": "ISOTOP1040.init",
      "offset": [
        631,
        649
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1644": {
      "fn": "ISOTOP1040.init",
      "offset": [
        627,
        686
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4CC"
    },
    "1647": {
      "branch": 23,
      "fn": "ISOTOP1040.init",
      "offset": [
        627,
        686
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1648": {
      "fn": "ISOTOP1040.init",
      "offset": [
        668,
        672
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 12,
      "value": "0x1"
    },
    "1650": {
      "fn": "ISOTOP1040.init",
      "offset": [
        668,
        672
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1651": {
      "fn": "ISOTOP1040.init",
      "offset": [
        679,
        685
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1653": {
      "fn": "ISOTOP1040.init",
      "offset": [
        679,
        685
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1654": {
      "fn": "ISOTOP1040.init",
      "offset": [
        679,
        685
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1655": {
      "fn": "ISOTOP1040.init",
      "offset": [
        679,
        685
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1656": {
      "fn": "ISOTOP1040.init",
      "offset": [
        679,
        685
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1657": {
      "fn": "ISOTOP1040.init",
      "offset": [
        679,
        685
      ],
      "op": "ADD",
      "path": "17"
    },
    "1658": {
      "fn": "ISOTOP1040.init",
      "offset": [
        679,
        685
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1659": {
      "fn": "ISOTOP1040.init",
      "offset": [
        679,
        685
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1660": {
      "fn": "ISOTOP1040.init",
      "offset": [
        679,
        685
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x6"
    },
    "1662": {
      "fn": "ISOTOP1040.init",
      "offset": [
        679,
        685
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1663": {
      "fn": "ISOTOP1040.init",
      "offset": [
        679,
        685
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1664": {
      "op": "PUSH6",
      "value": "0x6465706C6F79"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1673": {
      "op": "SHL"
    },
    "1674": {
      "fn": "ISOTOP1040.init",
      "offset": [
        679,
        685
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1676": {
      "fn": "ISOTOP1040.init",
      "offset": [
        679,
        685
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1677": {
      "fn": "ISOTOP1040.init",
      "offset": [
        679,
        685
      ],
      "op": "ADD",
      "path": "17"
    },
    "1678": {
      "fn": "ISOTOP1040.init",
      "offset": [
        679,
        685
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1679": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1680": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1681": {
      "op": "PUSH4",
      "value": "0x25B11429"
    },
    "1686": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1688": {
      "op": "SHL"
    },
    "1689": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1690": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1697": {
      "op": "SHL"
    },
    "1698": {
      "op": "SUB"
    },
    "1699": {
      "fn": "ISOTOP1040.init",
      "offset": [
        668,
        672
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1700": {
      "fn": "ISOTOP1040.init",
      "offset": [
        668,
        672
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1701": {
      "fn": "ISOTOP1040.init",
      "offset": [
        668,
        672
      ],
      "op": "AND",
      "path": "17"
    },
    "1702": {
      "fn": "ISOTOP1040.init",
      "offset": [
        668,
        672
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1703": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        678
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x25B11429"
    },
    "1708": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        678
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1709": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x6B8"
    },
    "1712": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1713": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1715": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "ADD",
      "path": "17"
    },
    "1716": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC70"
    },
    "1719": {
      "fn": "ISOTOP1040.init",
      "jump": "i",
      "offset": [
        651,
        686
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1720": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1721": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1723": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1725": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1726": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1727": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1728": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "SUB",
      "path": "17"
    },
    "1729": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1730": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1732": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "DUP8",
      "path": "17"
    },
    "1733": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1734": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "EXTCODESIZE",
      "path": "17"
    },
    "1735": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1736": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1737": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1738": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x6D2"
    },
    "1741": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1742": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1744": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1745": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1746": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1747": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "POP",
      "path": "17"
    },
    "1748": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "GAS",
      "path": "17"
    },
    "1749": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "CALL",
      "path": "17"
    },
    "1750": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1751": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1752": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1753": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x6E6"
    },
    "1756": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1757": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1758": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1760": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1761": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "1762": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "1763": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1765": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1766": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1767": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "POP",
      "path": "17"
    },
    "1768": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "POP",
      "path": "17"
    },
    "1769": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "POP",
      "path": "17"
    },
    "1770": {
      "fn": "ISOTOP1040.init",
      "offset": [
        651,
        686
      ],
      "op": "POP",
      "path": "17"
    },
    "1771": {
      "fn": "ISOTOP1040.init",
      "jump": "o",
      "offset": [
        425,
        693
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1772": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        699,
        950
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1773": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        805,
        806
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 13,
      "value": "0x0"
    },
    "1775": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1782": {
      "op": "SHL"
    },
    "1783": {
      "op": "SUB"
    },
    "1784": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "1785": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        786,
        807
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "1786": {
      "branch": 24,
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        786,
        807
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1787": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        786,
        834
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x70E"
    },
    "1790": {
      "branch": 24,
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        786,
        834
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1791": {
      "op": "POP"
    },
    "1792": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1794": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1799": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1801": {
      "op": "SHL"
    },
    "1802": {
      "op": "SUB"
    },
    "1803": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "1804": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9",
      "statement": 14
    },
    "1805": {
      "branch": 25,
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        811,
        834
      ],
      "op": "EQ",
      "path": "17"
    },
    "1806": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        786,
        834
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1807": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        778,
        849
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x747"
    },
    "1810": {
      "branch": 25,
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        778,
        849
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1811": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        778,
        849
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1813": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        778,
        849
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1814": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1820": {
      "op": "SHL"
    },
    "1821": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        778,
        849
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1822": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        778,
        849
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1825": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        778,
        849
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1827": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        778,
        849
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1828": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        778,
        849
      ],
      "op": "ADD",
      "path": "17"
    },
    "1829": {
      "op": "MSTORE"
    },
    "1830": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1834": {
      "op": "DUP3"
    },
    "1835": {
      "op": "ADD"
    },
    "1836": {
      "op": "MSTORE"
    },
    "1837": {
      "op": "PUSH10",
      "value": "0x27B7363C9027B73BB2B9"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "1850": {
      "op": "SHL"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1853": {
      "op": "DUP3"
    },
    "1854": {
      "op": "ADD"
    },
    "1855": {
      "op": "MSTORE"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1858": {
      "op": "ADD"
    },
    "1859": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        778,
        849
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x343"
    },
    "1862": {
      "op": "JUMP"
    },
    "1863": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        778,
        849
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1868": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1870": {
      "op": "SHL"
    },
    "1871": {
      "op": "SUB"
    },
    "1872": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        867,
        889
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 15
    },
    "1873": {
      "branch": 26,
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        867,
        889
      ],
      "op": "AND",
      "path": "17"
    },
    "1874": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        859,
        905
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x78B"
    },
    "1877": {
      "branch": 26,
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        859,
        905
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1878": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        859,
        905
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1880": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        859,
        905
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1881": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1885": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1887": {
      "op": "SHL"
    },
    "1888": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        859,
        905
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1889": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        859,
        905
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1890": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1892": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        859,
        905
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1894": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        859,
        905
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1895": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        859,
        905
      ],
      "op": "ADD",
      "path": "17"
    },
    "1896": {
      "op": "MSTORE"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1901": {
      "op": "DUP3"
    },
    "1902": {
      "op": "ADD"
    },
    "1903": {
      "op": "MSTORE"
    },
    "1904": {
      "op": "PUSH11",
      "value": "0x4E6577206F776E6572203"
    },
    "1916": {
      "op": "PUSH1",
      "value": "0xAC"
    },
    "1918": {
      "op": "SHL"
    },
    "1919": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1921": {
      "op": "DUP3"
    },
    "1922": {
      "op": "ADD"
    },
    "1923": {
      "op": "MSTORE"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1926": {
      "op": "ADD"
    },
    "1927": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        859,
        905
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x343"
    },
    "1930": {
      "op": "JUMP"
    },
    "1931": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        859,
        905
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1932": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        915,
        943
      ],
      "op": "PUSH2",
      "path": "17",
      "statement": 16,
      "value": "0x794"
    },
    "1935": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        934,
        942
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1936": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        915,
        933
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x946"
    },
    "1939": {
      "fn": "ISOTOP1040.transferOwnership",
      "jump": "i",
      "offset": [
        915,
        943
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1940": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        915,
        943
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1941": {
      "fn": "ISOTOP1040.transferOwnership",
      "offset": [
        699,
        950
      ],
      "op": "POP",
      "path": "17"
    },
    "1942": {
      "fn": "ISOTOP1040.transferOwnership",
      "jump": "o",
      "offset": [
        699,
        950
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1943": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1592,
        1938
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1944": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x79F"
    },
    "1947": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8EC"
    },
    "1950": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1951": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1952": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1814
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x2"
    },
    "1954": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1814
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1955": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1957": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1958": {
      "op": "PUSH4",
      "value": "0x3E10510B"
    },
    "1963": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1965": {
      "op": "SHL"
    },
    "1966": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1967": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1968": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1762,
        1780
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1970": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1762,
        1780
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1975": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1977": {
      "op": "SHL"
    },
    "1978": {
      "op": "SUB"
    },
    "1979": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1814
      ],
      "op": "AND",
      "path": "17"
    },
    "1980": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1814
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1981": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x2D888869"
    },
    "1986": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1987": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1814
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1988": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1814
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1989": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1832
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0x3E10510B"
    },
    "1994": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1832
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1995": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7D6"
    },
    "1998": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1999": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2001": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "ADD",
      "path": "17"
    },
    "2002": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xCA0"
    },
    "2005": {
      "fn": "ISOTOP1040.assign",
      "jump": "i",
      "offset": [
        1825,
        1861
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2006": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2007": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2009": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2011": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2012": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2013": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2014": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "SUB",
      "path": "17"
    },
    "2015": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2016": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "DUP7",
      "path": "17"
    },
    "2017": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "GAS",
      "path": "17"
    },
    "2018": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "2019": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2020": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2021": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2022": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x7F3"
    },
    "2025": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2026": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2027": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2029": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2030": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "2031": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2032": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2034": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "REVERT",
      "path": "17"
    },
    "2035": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2036": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "POP",
      "path": "17"
    },
    "2037": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "POP",
      "path": "17"
    },
    "2038": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "POP",
      "path": "17"
    },
    "2039": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "POP",
      "path": "17"
    },
    "2040": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2042": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2043": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2044": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2046": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2047": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "2048": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "2050": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2051": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2052": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2053": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "ADD",
      "path": "17"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2056": {
      "op": "NOT"
    },
    "2057": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "AND",
      "path": "17"
    },
    "2058": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2059": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "ADD",
      "path": "17"
    },
    "2060": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2062": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2063": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x81B"
    },
    "2066": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2067": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2068": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2069": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "ADD",
      "path": "17"
    },
    "2070": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2071": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xB97"
    },
    "2074": {
      "fn": "ISOTOP1040.assign",
      "jump": "i",
      "offset": [
        1825,
        1861
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2075": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1825,
        1861
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2076": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2078": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2079": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2080": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xFFFFFFFF"
    },
    "2085": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "AND",
      "path": "17"
    },
    "2086": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0xE0"
    },
    "2088": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "SHL",
      "path": "17"
    },
    "2089": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2090": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2091": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2093": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "ADD",
      "path": "17"
    },
    "2094": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x837"
    },
    "2097": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2098": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2099": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC70"
    },
    "2102": {
      "fn": "ISOTOP1040.assign",
      "jump": "i",
      "offset": [
        1811,
        1862
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2103": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2104": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "2106": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2108": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2109": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2110": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2111": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "SUB",
      "path": "17"
    },
    "2112": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2113": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "DUP7",
      "path": "17"
    },
    "2114": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "GAS",
      "path": "17"
    },
    "2115": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "STATICCALL",
      "path": "17"
    },
    "2116": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2117": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2118": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2119": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x854"
    },
    "2122": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2123": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2124": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2126": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2127": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "2128": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2129": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2131": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "REVERT",
      "path": "17"
    },
    "2132": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2133": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "POP",
      "path": "17"
    },
    "2134": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "POP",
      "path": "17"
    },
    "2135": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "POP",
      "path": "17"
    },
    "2136": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "POP",
      "path": "17"
    },
    "2137": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2139": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2140": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2141": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "2143": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "NOT",
      "path": "17"
    },
    "2144": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x1F"
    },
    "2146": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2147": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "ADD",
      "path": "17"
    },
    "2148": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "AND",
      "path": "17"
    },
    "2149": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2150": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "ADD",
      "path": "17"
    },
    "2151": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2152": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2154": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2155": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "POP",
      "path": "17"
    },
    "2156": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2157": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "ADD",
      "path": "17"
    },
    "2158": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2159": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x878"
    },
    "2162": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2163": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2164": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xC83"
    },
    "2167": {
      "fn": "ISOTOP1040.assign",
      "jump": "i",
      "offset": [
        1811,
        1862
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2168": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1811,
        1862
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2169": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 17,
      "value": "0x40"
    },
    "2171": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2172": {
      "op": "PUSH4",
      "value": "0xF4E99281"
    },
    "2177": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2179": {
      "op": "SHL"
    },
    "2180": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2181": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "2182": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1762,
        1872
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2183": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1762,
        1872
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "2184": {
      "op": "POP"
    },
    "2185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2189": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2191": {
      "op": "SHL"
    },
    "2192": {
      "op": "SUB"
    },
    "2193": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1892
      ],
      "op": "DUP3",
      "path": "17"
    },
    "2194": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1892
      ],
      "op": "AND",
      "path": "17"
    },
    "2195": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1892
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2196": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1892
      ],
      "op": "PUSH4",
      "path": "17",
      "value": "0xF4E99281"
    },
    "2201": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1892
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2202": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x8B1"
    },
    "2205": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2206": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1893,
        1896
      ],
      "op": "DUP11",
      "path": "17"
    },
    "2207": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1893,
        1896
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2208": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1898,
        1905
      ],
      "op": "DUP11",
      "path": "17"
    },
    "2209": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1898,
        1905
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2210": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1907,
        1914
      ],
      "op": "DUP11",
      "path": "17"
    },
    "2211": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1907,
        1914
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2212": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1907,
        1914
      ],
      "op": "DUP11",
      "path": "17"
    },
    "2213": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1907,
        1914
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2214": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1916,
        1930
      ],
      "op": "DUP11",
      "path": "17"
    },
    "2215": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1916,
        1930
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2216": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1916,
        1930
      ],
      "op": "DUP11",
      "path": "17"
    },
    "2217": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1916,
        1930
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2218": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "2220": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "ADD",
      "path": "17"
    },
    "2221": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0xD1D"
    },
    "2224": {
      "fn": "ISOTOP1040.assign",
      "jump": "i",
      "offset": [
        1882,
        1931
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2225": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2226": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2228": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "2230": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "2231": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2232": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "DUP4",
      "path": "17"
    },
    "2233": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "SUB",
      "path": "17"
    },
    "2234": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "DUP2",
      "path": "17"
    },
    "2235": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2237": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "DUP8",
      "path": "17"
    },
    "2238": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2239": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "EXTCODESIZE",
      "path": "17"
    },
    "2240": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2241": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2242": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2243": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x8CB"
    },
    "2246": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2247": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2249": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2250": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "REVERT",
      "path": "17"
    },
    "2251": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2252": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "POP",
      "path": "17"
    },
    "2253": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "GAS",
      "path": "17"
    },
    "2254": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "CALL",
      "path": "17"
    },
    "2255": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2256": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2257": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "2258": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x8DF"
    },
    "2261": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "2262": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2263": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2265": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "DUP1",
      "path": "17"
    },
    "2266": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "RETURNDATACOPY",
      "path": "17"
    },
    "2267": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "RETURNDATASIZE",
      "path": "17"
    },
    "2268": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "2270": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "REVERT",
      "path": "17"
    },
    "2271": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "2272": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "POP",
      "path": "17"
    },
    "2273": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "POP",
      "path": "17"
    },
    "2274": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "POP",
      "path": "17"
    },
    "2275": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1882,
        1931
      ],
      "op": "POP",
      "path": "17"
    },
    "2276": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1752,
        1938
      ],
      "op": "POP",
      "path": "17"
    },
    "2277": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1592,
        1938
      ],
      "op": "POP",
      "path": "17"
    },
    "2278": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1592,
        1938
      ],
      "op": "POP",
      "path": "17"
    },
    "2279": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1592,
        1938
      ],
      "op": "POP",
      "path": "17"
    },
    "2280": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1592,
        1938
      ],
      "op": "POP",
      "path": "17"
    },
    "2281": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1592,
        1938
      ],
      "op": "POP",
      "path": "17"
    },
    "2282": {
      "fn": "ISOTOP1040.assign",
      "offset": [
        1592,
        1938
      ],
      "op": "POP",
      "path": "17"
    },
    "2283": {
      "fn": "ISOTOP1040.assign",
      "jump": "o",
      "offset": [
        1592,
        1938
      ],
      "op": "JUMP",
      "path": "17"
    },
    "2284": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1359,
        1489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2285": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2287": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2294": {
      "op": "SHL"
    },
    "2295": {
      "op": "SUB"
    },
    "2296": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "2297": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "2298": {
      "branch": 27,
      "fn": "Ownable._checkOwner",
      "offset": [
        1422,
        1445
      ],
      "op": "EQ",
      "path": "0",
      "statement": 18
    },
    "2299": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4CC"
    },
    "2302": {
      "branch": 27,
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2303": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2305": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2306": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2310": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2312": {
      "op": "SHL"
    },
    "2313": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2314": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2315": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2317": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2319": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2320": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "ADD",
      "path": "0"
    },
    "2321": {
      "op": "DUP2"
    },
    "2322": {
      "op": "SWAP1"
    },
    "2323": {
      "op": "MSTORE"
    },
    "2324": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2326": {
      "op": "DUP3"
    },
    "2327": {
      "op": "ADD"
    },
    "2328": {
      "op": "MSTORE"
    },
    "2329": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2364": {
      "op": "DUP3"
    },
    "2365": {
      "op": "ADD"
    },
    "2366": {
      "op": "MSTORE"
    },
    "2367": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2369": {
      "op": "ADD"
    },
    "2370": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x343"
    },
    "2373": {
      "op": "JUMP"
    },
    "2374": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2375": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2377": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2378": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2383": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2385": {
      "op": "SHL"
    },
    "2386": {
      "op": "SUB"
    },
    "2387": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 19
    },
    "2388": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2389": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2396": {
      "op": "SHL"
    },
    "2397": {
      "op": "SUB"
    },
    "2398": {
      "op": "NOT"
    },
    "2399": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2400": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "2401": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2402": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "OR",
      "path": "0"
    },
    "2403": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2404": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2405": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 20,
      "value": "0x40"
    },
    "2407": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2408": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2409": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2410": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2411": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "AND",
      "path": "0"
    },
    "2412": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2413": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2414": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2415": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2448": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2449": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2450": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2451": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2496,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "2452": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "2453": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2454": {
      "op": "JUMPDEST"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2461": {
      "op": "SHL"
    },
    "2462": {
      "op": "SUB"
    },
    "2463": {
      "op": "DUP2"
    },
    "2464": {
      "op": "AND"
    },
    "2465": {
      "op": "DUP2"
    },
    "2466": {
      "op": "EQ"
    },
    "2467": {
      "op": "PUSH2",
      "value": "0x794"
    },
    "2470": {
      "op": "JUMPI"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2473": {
      "op": "DUP1"
    },
    "2474": {
      "op": "REVERT"
    },
    "2475": {
      "op": "JUMPDEST"
    },
    "2476": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2478": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2480": {
      "op": "DUP3"
    },
    "2481": {
      "op": "DUP5"
    },
    "2482": {
      "op": "SUB"
    },
    "2483": {
      "op": "SLT"
    },
    "2484": {
      "op": "ISZERO"
    },
    "2485": {
      "op": "PUSH2",
      "value": "0x9BD"
    },
    "2488": {
      "op": "JUMPI"
    },
    "2489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2491": {
      "op": "DUP1"
    },
    "2492": {
      "op": "REVERT"
    },
    "2493": {
      "op": "JUMPDEST"
    },
    "2494": {
      "op": "DUP2"
    },
    "2495": {
      "op": "CALLDATALOAD"
    },
    "2496": {
      "op": "PUSH2",
      "value": "0x9C8"
    },
    "2499": {
      "op": "DUP2"
    },
    "2500": {
      "op": "PUSH2",
      "value": "0x996"
    },
    "2503": {
      "jump": "i",
      "op": "JUMP"
    },
    "2504": {
      "op": "JUMPDEST"
    },
    "2505": {
      "op": "SWAP4"
    },
    "2506": {
      "op": "SWAP3"
    },
    "2507": {
      "op": "POP"
    },
    "2508": {
      "op": "POP"
    },
    "2509": {
      "op": "POP"
    },
    "2510": {
      "jump": "o",
      "op": "JUMP"
    },
    "2511": {
      "op": "JUMPDEST"
    },
    "2512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2514": {
      "op": "DUP1"
    },
    "2515": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2517": {
      "op": "DUP4"
    },
    "2518": {
      "op": "DUP6"
    },
    "2519": {
      "op": "SUB"
    },
    "2520": {
      "op": "SLT"
    },
    "2521": {
      "op": "ISZERO"
    },
    "2522": {
      "op": "PUSH2",
      "value": "0x9E2"
    },
    "2525": {
      "op": "JUMPI"
    },
    "2526": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2528": {
      "op": "DUP1"
    },
    "2529": {
      "op": "REVERT"
    },
    "2530": {
      "op": "JUMPDEST"
    },
    "2531": {
      "op": "DUP3"
    },
    "2532": {
      "op": "CALLDATALOAD"
    },
    "2533": {
      "op": "SWAP2"
    },
    "2534": {
      "op": "POP"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2537": {
      "op": "DUP4"
    },
    "2538": {
      "op": "ADD"
    },
    "2539": {
      "op": "CALLDATALOAD"
    },
    "2540": {
      "op": "PUSH2",
      "value": "0x9F4"
    },
    "2543": {
      "op": "DUP2"
    },
    "2544": {
      "op": "PUSH2",
      "value": "0x996"
    },
    "2547": {
      "jump": "i",
      "op": "JUMP"
    },
    "2548": {
      "op": "JUMPDEST"
    },
    "2549": {
      "op": "DUP1"
    },
    "2550": {
      "op": "SWAP2"
    },
    "2551": {
      "op": "POP"
    },
    "2552": {
      "op": "POP"
    },
    "2553": {
      "op": "SWAP3"
    },
    "2554": {
      "op": "POP"
    },
    "2555": {
      "op": "SWAP3"
    },
    "2556": {
      "op": "SWAP1"
    },
    "2557": {
      "op": "POP"
    },
    "2558": {
      "jump": "o",
      "op": "JUMP"
    },
    "2559": {
      "op": "JUMPDEST"
    },
    "2560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2562": {
      "op": "DUP1"
    },
    "2563": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2565": {
      "op": "DUP4"
    },
    "2566": {
      "op": "DUP6"
    },
    "2567": {
      "op": "SUB"
    },
    "2568": {
      "op": "SLT"
    },
    "2569": {
      "op": "ISZERO"
    },
    "2570": {
      "op": "PUSH2",
      "value": "0xA12"
    },
    "2573": {
      "op": "JUMPI"
    },
    "2574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2576": {
      "op": "DUP1"
    },
    "2577": {
      "op": "REVERT"
    },
    "2578": {
      "op": "JUMPDEST"
    },
    "2579": {
      "op": "DUP3"
    },
    "2580": {
      "op": "CALLDATALOAD"
    },
    "2581": {
      "op": "PUSH2",
      "value": "0xA1D"
    },
    "2584": {
      "op": "DUP2"
    },
    "2585": {
      "op": "PUSH2",
      "value": "0x996"
    },
    "2588": {
      "jump": "i",
      "op": "JUMP"
    },
    "2589": {
      "op": "JUMPDEST"
    },
    "2590": {
      "op": "SWAP5"
    },
    "2591": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2593": {
      "op": "SWAP4"
    },
    "2594": {
      "op": "SWAP1"
    },
    "2595": {
      "op": "SWAP4"
    },
    "2596": {
      "op": "ADD"
    },
    "2597": {
      "op": "CALLDATALOAD"
    },
    "2598": {
      "op": "SWAP4"
    },
    "2599": {
      "op": "POP"
    },
    "2600": {
      "op": "POP"
    },
    "2601": {
      "op": "POP"
    },
    "2602": {
      "jump": "o",
      "op": "JUMP"
    },
    "2603": {
      "op": "JUMPDEST"
    },
    "2604": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2606": {
      "op": "DUP1"
    },
    "2607": {
      "op": "DUP4"
    },
    "2608": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2610": {
      "op": "DUP5"
    },
    "2611": {
      "op": "ADD"
    },
    "2612": {
      "op": "SLT"
    },
    "2613": {
      "op": "PUSH2",
      "value": "0xA3D"
    },
    "2616": {
      "op": "JUMPI"
    },
    "2617": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2619": {
      "op": "DUP1"
    },
    "2620": {
      "op": "REVERT"
    },
    "2621": {
      "op": "JUMPDEST"
    },
    "2622": {
      "op": "POP"
    },
    "2623": {
      "op": "DUP2"
    },
    "2624": {
      "op": "CALLDATALOAD"
    },
    "2625": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2634": {
      "op": "DUP2"
    },
    "2635": {
      "op": "GT"
    },
    "2636": {
      "op": "ISZERO"
    },
    "2637": {
      "op": "PUSH2",
      "value": "0xA55"
    },
    "2640": {
      "op": "JUMPI"
    },
    "2641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2643": {
      "op": "DUP1"
    },
    "2644": {
      "op": "REVERT"
    },
    "2645": {
      "op": "JUMPDEST"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2648": {
      "op": "DUP4"
    },
    "2649": {
      "op": "ADD"
    },
    "2650": {
      "op": "SWAP2"
    },
    "2651": {
      "op": "POP"
    },
    "2652": {
      "op": "DUP4"
    },
    "2653": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2655": {
      "op": "DUP3"
    },
    "2656": {
      "op": "DUP6"
    },
    "2657": {
      "op": "ADD"
    },
    "2658": {
      "op": "ADD"
    },
    "2659": {
      "op": "GT"
    },
    "2660": {
      "op": "ISZERO"
    },
    "2661": {
      "op": "PUSH2",
      "value": "0xA6D"
    },
    "2664": {
      "op": "JUMPI"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2667": {
      "op": "DUP1"
    },
    "2668": {
      "op": "REVERT"
    },
    "2669": {
      "op": "JUMPDEST"
    },
    "2670": {
      "op": "SWAP3"
    },
    "2671": {
      "op": "POP"
    },
    "2672": {
      "op": "SWAP3"
    },
    "2673": {
      "op": "SWAP1"
    },
    "2674": {
      "op": "POP"
    },
    "2675": {
      "jump": "o",
      "op": "JUMP"
    },
    "2676": {
      "op": "JUMPDEST"
    },
    "2677": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2679": {
      "op": "DUP1"
    },
    "2680": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2682": {
      "op": "DUP1"
    },
    "2683": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2685": {
      "op": "DUP1"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2688": {
      "op": "DUP8"
    },
    "2689": {
      "op": "DUP10"
    },
    "2690": {
      "op": "SUB"
    },
    "2691": {
      "op": "SLT"
    },
    "2692": {
      "op": "ISZERO"
    },
    "2693": {
      "op": "PUSH2",
      "value": "0xA8D"
    },
    "2696": {
      "op": "JUMPI"
    },
    "2697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2699": {
      "op": "DUP1"
    },
    "2700": {
      "op": "REVERT"
    },
    "2701": {
      "op": "JUMPDEST"
    },
    "2702": {
      "op": "DUP7"
    },
    "2703": {
      "op": "CALLDATALOAD"
    },
    "2704": {
      "op": "PUSH2",
      "value": "0xA98"
    },
    "2707": {
      "op": "DUP2"
    },
    "2708": {
      "op": "PUSH2",
      "value": "0x996"
    },
    "2711": {
      "jump": "i",
      "op": "JUMP"
    },
    "2712": {
      "op": "JUMPDEST"
    },
    "2713": {
      "op": "SWAP6"
    },
    "2714": {
      "op": "POP"
    },
    "2715": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2717": {
      "op": "DUP8"
    },
    "2718": {
      "op": "ADD"
    },
    "2719": {
      "op": "CALLDATALOAD"
    },
    "2720": {
      "op": "SWAP5"
    },
    "2721": {
      "op": "POP"
    },
    "2722": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2724": {
      "op": "DUP8"
    },
    "2725": {
      "op": "ADD"
    },
    "2726": {
      "op": "CALLDATALOAD"
    },
    "2727": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2736": {
      "op": "DUP1"
    },
    "2737": {
      "op": "DUP3"
    },
    "2738": {
      "op": "GT"
    },
    "2739": {
      "op": "ISZERO"
    },
    "2740": {
      "op": "PUSH2",
      "value": "0xABC"
    },
    "2743": {
      "op": "JUMPI"
    },
    "2744": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2746": {
      "op": "DUP1"
    },
    "2747": {
      "op": "REVERT"
    },
    "2748": {
      "op": "JUMPDEST"
    },
    "2749": {
      "op": "PUSH2",
      "value": "0xAC8"
    },
    "2752": {
      "op": "DUP11"
    },
    "2753": {
      "op": "DUP4"
    },
    "2754": {
      "op": "DUP12"
    },
    "2755": {
      "op": "ADD"
    },
    "2756": {
      "op": "PUSH2",
      "value": "0xA2B"
    },
    "2759": {
      "jump": "i",
      "op": "JUMP"
    },
    "2760": {
      "op": "JUMPDEST"
    },
    "2761": {
      "op": "SWAP1"
    },
    "2762": {
      "op": "SWAP7"
    },
    "2763": {
      "op": "POP"
    },
    "2764": {
      "op": "SWAP5"
    },
    "2765": {
      "op": "POP"
    },
    "2766": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2768": {
      "op": "DUP10"
    },
    "2769": {
      "op": "ADD"
    },
    "2770": {
      "op": "CALLDATALOAD"
    },
    "2771": {
      "op": "SWAP2"
    },
    "2772": {
      "op": "POP"
    },
    "2773": {
      "op": "DUP1"
    },
    "2774": {
      "op": "DUP3"
    },
    "2775": {
      "op": "GT"
    },
    "2776": {
      "op": "ISZERO"
    },
    "2777": {
      "op": "PUSH2",
      "value": "0xAE1"
    },
    "2780": {
      "op": "JUMPI"
    },
    "2781": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2783": {
      "op": "DUP1"
    },
    "2784": {
      "op": "REVERT"
    },
    "2785": {
      "op": "JUMPDEST"
    },
    "2786": {
      "op": "POP"
    },
    "2787": {
      "op": "PUSH2",
      "value": "0xAEE"
    },
    "2790": {
      "op": "DUP10"
    },
    "2791": {
      "op": "DUP3"
    },
    "2792": {
      "op": "DUP11"
    },
    "2793": {
      "op": "ADD"
    },
    "2794": {
      "op": "PUSH2",
      "value": "0xA2B"
    },
    "2797": {
      "jump": "i",
      "op": "JUMP"
    },
    "2798": {
      "op": "JUMPDEST"
    },
    "2799": {
      "op": "SWAP8"
    },
    "2800": {
      "op": "SWAP11"
    },
    "2801": {
      "op": "SWAP7"
    },
    "2802": {
      "op": "SWAP10"
    },
    "2803": {
      "op": "POP"
    },
    "2804": {
      "op": "SWAP5"
    },
    "2805": {
      "op": "SWAP8"
    },
    "2806": {
      "op": "POP"
    },
    "2807": {
      "op": "SWAP3"
    },
    "2808": {
      "op": "SWAP6"
    },
    "2809": {
      "op": "SWAP4"
    },
    "2810": {
      "op": "SWAP5"
    },
    "2811": {
      "op": "SWAP3"
    },
    "2812": {
      "op": "POP"
    },
    "2813": {
      "op": "POP"
    },
    "2814": {
      "op": "POP"
    },
    "2815": {
      "jump": "o",
      "op": "JUMP"
    },
    "2816": {
      "op": "JUMPDEST"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2819": {
      "op": "DUP2"
    },
    "2820": {
      "op": "MSTORE"
    },
    "2821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2823": {
      "op": "PUSH2",
      "value": "0xB26"
    },
    "2826": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2828": {
      "op": "DUP4"
    },
    "2829": {
      "op": "ADD"
    },
    "2830": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "2832": {
      "op": "DUP2"
    },
    "2833": {
      "op": "MSTORE"
    },
    "2834": {
      "op": "PUSH6",
      "value": "0x49534F544F5"
    },
    "2841": {
      "op": "PUSH1",
      "value": "0xD4"
    },
    "2843": {
      "op": "SHL"
    },
    "2844": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2846": {
      "op": "DUP3"
    },
    "2847": {
      "op": "ADD"
    },
    "2848": {
      "op": "MSTORE"
    },
    "2849": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2851": {
      "op": "ADD"
    },
    "2852": {
      "op": "SWAP1"
    },
    "2853": {
      "op": "JUMP"
    },
    "2854": {
      "op": "JUMPDEST"
    },
    "2855": {
      "op": "DUP3"
    },
    "2856": {
      "op": "DUP2"
    },
    "2857": {
      "op": "SUB"
    },
    "2858": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2860": {
      "op": "SWAP4"
    },
    "2861": {
      "op": "DUP5"
    },
    "2862": {
      "op": "ADD"
    },
    "2863": {
      "op": "MSTORE"
    },
    "2864": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "2866": {
      "op": "DUP2"
    },
    "2867": {
      "op": "MSTORE"
    },
    "2868": {
      "op": "PUSH16",
      "value": "0x4245455F534F554C5F41444452455353"
    },
    "2885": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2887": {
      "op": "SHL"
    },
    "2888": {
      "op": "SWAP3"
    },
    "2889": {
      "op": "DUP2"
    },
    "2890": {
      "op": "ADD"
    },
    "2891": {
      "op": "SWAP3"
    },
    "2892": {
      "op": "SWAP1"
    },
    "2893": {
      "op": "SWAP3"
    },
    "2894": {
      "op": "MSTORE"
    },
    "2895": {
      "op": "POP"
    },
    "2896": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2898": {
      "op": "ADD"
    },
    "2899": {
      "op": "SWAP1"
    },
    "2900": {
      "jump": "o",
      "op": "JUMP"
    },
    "2901": {
      "op": "JUMPDEST"
    },
    "2902": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2907": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2909": {
      "op": "SHL"
    },
    "2910": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2912": {
      "op": "MSTORE"
    },
    "2913": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2915": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2917": {
      "op": "MSTORE"
    },
    "2918": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2920": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2922": {
      "op": "REVERT"
    },
    "2923": {
      "op": "JUMPDEST"
    },
    "2924": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2926": {
      "op": "JUMPDEST"
    },
    "2927": {
      "op": "DUP4"
    },
    "2928": {
      "op": "DUP2"
    },
    "2929": {
      "op": "LT"
    },
    "2930": {
      "op": "ISZERO"
    },
    "2931": {
      "op": "PUSH2",
      "value": "0xB86"
    },
    "2934": {
      "op": "JUMPI"
    },
    "2935": {
      "op": "DUP2"
    },
    "2936": {
      "op": "DUP2"
    },
    "2937": {
      "op": "ADD"
    },
    "2938": {
      "op": "MLOAD"
    },
    "2939": {
      "op": "DUP4"
    },
    "2940": {
      "op": "DUP3"
    },
    "2941": {
      "op": "ADD"
    },
    "2942": {
      "op": "MSTORE"
    },
    "2943": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2945": {
      "op": "ADD"
    },
    "2946": {
      "op": "PUSH2",
      "value": "0xB6E"
    },
    "2949": {
      "op": "JUMP"
    },
    "2950": {
      "op": "JUMPDEST"
    },
    "2951": {
      "op": "DUP4"
    },
    "2952": {
      "op": "DUP2"
    },
    "2953": {
      "op": "GT"
    },
    "2954": {
      "op": "ISZERO"
    },
    "2955": {
      "op": "PUSH2",
      "value": "0x6E6"
    },
    "2958": {
      "op": "JUMPI"
    },
    "2959": {
      "op": "POP"
    },
    "2960": {
      "op": "POP"
    },
    "2961": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2963": {
      "op": "SWAP2"
    },
    "2964": {
      "op": "ADD"
    },
    "2965": {
      "op": "MSTORE"
    },
    "2966": {
      "jump": "o",
      "op": "JUMP"
    },
    "2967": {
      "op": "JUMPDEST"
    },
    "2968": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2972": {
      "op": "DUP3"
    },
    "2973": {
      "op": "DUP5"
    },
    "2974": {
      "op": "SUB"
    },
    "2975": {
      "op": "SLT"
    },
    "2976": {
      "op": "ISZERO"
    },
    "2977": {
      "op": "PUSH2",
      "value": "0xBA9"
    },
    "2980": {
      "op": "JUMPI"
    },
    "2981": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2983": {
      "op": "DUP1"
    },
    "2984": {
      "op": "REVERT"
    },
    "2985": {
      "op": "JUMPDEST"
    },
    "2986": {
      "op": "DUP2"
    },
    "2987": {
      "op": "MLOAD"
    },
    "2988": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2997": {
      "op": "DUP1"
    },
    "2998": {
      "op": "DUP3"
    },
    "2999": {
      "op": "GT"
    },
    "3000": {
      "op": "ISZERO"
    },
    "3001": {
      "op": "PUSH2",
      "value": "0xBC1"
    },
    "3004": {
      "op": "JUMPI"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3007": {
      "op": "DUP1"
    },
    "3008": {
      "op": "REVERT"
    },
    "3009": {
      "op": "JUMPDEST"
    },
    "3010": {
      "op": "DUP2"
    },
    "3011": {
      "op": "DUP5"
    },
    "3012": {
      "op": "ADD"
    },
    "3013": {
      "op": "SWAP2"
    },
    "3014": {
      "op": "POP"
    },
    "3015": {
      "op": "DUP5"
    },
    "3016": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3018": {
      "op": "DUP4"
    },
    "3019": {
      "op": "ADD"
    },
    "3020": {
      "op": "SLT"
    },
    "3021": {
      "op": "PUSH2",
      "value": "0xBD5"
    },
    "3024": {
      "op": "JUMPI"
    },
    "3025": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3027": {
      "op": "DUP1"
    },
    "3028": {
      "op": "REVERT"
    },
    "3029": {
      "op": "JUMPDEST"
    },
    "3030": {
      "op": "DUP2"
    },
    "3031": {
      "op": "MLOAD"
    },
    "3032": {
      "op": "DUP2"
    },
    "3033": {
      "op": "DUP2"
    },
    "3034": {
      "op": "GT"
    },
    "3035": {
      "op": "ISZERO"
    },
    "3036": {
      "op": "PUSH2",
      "value": "0xBE7"
    },
    "3039": {
      "op": "JUMPI"
    },
    "3040": {
      "op": "PUSH2",
      "value": "0xBE7"
    },
    "3043": {
      "op": "PUSH2",
      "value": "0xB55"
    },
    "3046": {
      "jump": "i",
      "op": "JUMP"
    },
    "3047": {
      "op": "JUMPDEST"
    },
    "3048": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3050": {
      "op": "MLOAD"
    },
    "3051": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3053": {
      "op": "DUP3"
    },
    "3054": {
      "op": "ADD"
    },
    "3055": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3057": {
      "op": "NOT"
    },
    "3058": {
      "op": "SWAP1"
    },
    "3059": {
      "op": "DUP2"
    },
    "3060": {
      "op": "AND"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3063": {
      "op": "ADD"
    },
    "3064": {
      "op": "AND"
    },
    "3065": {
      "op": "DUP2"
    },
    "3066": {
      "op": "ADD"
    },
    "3067": {
      "op": "SWAP1"
    },
    "3068": {
      "op": "DUP4"
    },
    "3069": {
      "op": "DUP3"
    },
    "3070": {
      "op": "GT"
    },
    "3071": {
      "op": "DUP2"
    },
    "3072": {
      "op": "DUP4"
    },
    "3073": {
      "op": "LT"
    },
    "3074": {
      "op": "OR"
    },
    "3075": {
      "op": "ISZERO"
    },
    "3076": {
      "op": "PUSH2",
      "value": "0xC0F"
    },
    "3079": {
      "op": "JUMPI"
    },
    "3080": {
      "op": "PUSH2",
      "value": "0xC0F"
    },
    "3083": {
      "op": "PUSH2",
      "value": "0xB55"
    },
    "3086": {
      "jump": "i",
      "op": "JUMP"
    },
    "3087": {
      "op": "JUMPDEST"
    },
    "3088": {
      "op": "DUP2"
    },
    "3089": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3091": {
      "op": "MSTORE"
    },
    "3092": {
      "op": "DUP3"
    },
    "3093": {
      "op": "DUP2"
    },
    "3094": {
      "op": "MSTORE"
    },
    "3095": {
      "op": "DUP8"
    },
    "3096": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3098": {
      "op": "DUP5"
    },
    "3099": {
      "op": "DUP8"
    },
    "3100": {
      "op": "ADD"
    },
    "3101": {
      "op": "ADD"
    },
    "3102": {
      "op": "GT"
    },
    "3103": {
      "op": "ISZERO"
    },
    "3104": {
      "op": "PUSH2",
      "value": "0xC28"
    },
    "3107": {
      "op": "JUMPI"
    },
    "3108": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3110": {
      "op": "DUP1"
    },
    "3111": {
      "op": "REVERT"
    },
    "3112": {
      "op": "JUMPDEST"
    },
    "3113": {
      "op": "PUSH2",
      "value": "0xC39"
    },
    "3116": {
      "op": "DUP4"
    },
    "3117": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3119": {
      "op": "DUP4"
    },
    "3120": {
      "op": "ADD"
    },
    "3121": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3123": {
      "op": "DUP9"
    },
    "3124": {
      "op": "ADD"
    },
    "3125": {
      "op": "PUSH2",
      "value": "0xB6B"
    },
    "3128": {
      "jump": "i",
      "op": "JUMP"
    },
    "3129": {
      "op": "JUMPDEST"
    },
    "3130": {
      "op": "SWAP8"
    },
    "3131": {
      "op": "SWAP7"
    },
    "3132": {
      "op": "POP"
    },
    "3133": {
      "op": "POP"
    },
    "3134": {
      "op": "POP"
    },
    "3135": {
      "op": "POP"
    },
    "3136": {
      "op": "POP"
    },
    "3137": {
      "op": "POP"
    },
    "3138": {
      "op": "POP"
    },
    "3139": {
      "jump": "o",
      "op": "JUMP"
    },
    "3140": {
      "op": "JUMPDEST"
    },
    "3141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3143": {
      "op": "DUP2"
    },
    "3144": {
      "op": "MLOAD"
    },
    "3145": {
      "op": "DUP1"
    },
    "3146": {
      "op": "DUP5"
    },
    "3147": {
      "op": "MSTORE"
    },
    "3148": {
      "op": "PUSH2",
      "value": "0xC5C"
    },
    "3151": {
      "op": "DUP2"
    },
    "3152": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3154": {
      "op": "DUP7"
    },
    "3155": {
      "op": "ADD"
    },
    "3156": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3158": {
      "op": "DUP7"
    },
    "3159": {
      "op": "ADD"
    },
    "3160": {
      "op": "PUSH2",
      "value": "0xB6B"
    },
    "3163": {
      "jump": "i",
      "op": "JUMP"
    },
    "3164": {
      "op": "JUMPDEST"
    },
    "3165": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3167": {
      "op": "ADD"
    },
    "3168": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3170": {
      "op": "NOT"
    },
    "3171": {
      "op": "AND"
    },
    "3172": {
      "op": "SWAP3"
    },
    "3173": {
      "op": "SWAP1"
    },
    "3174": {
      "op": "SWAP3"
    },
    "3175": {
      "op": "ADD"
    },
    "3176": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3178": {
      "op": "ADD"
    },
    "3179": {
      "op": "SWAP3"
    },
    "3180": {
      "op": "SWAP2"
    },
    "3181": {
      "op": "POP"
    },
    "3182": {
      "op": "POP"
    },
    "3183": {
      "jump": "o",
      "op": "JUMP"
    },
    "3184": {
      "op": "JUMPDEST"
    },
    "3185": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3187": {
      "op": "DUP2"
    },
    "3188": {
      "op": "MSTORE"
    },
    "3189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3191": {
      "op": "PUSH2",
      "value": "0x9C8"
    },
    "3194": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3196": {
      "op": "DUP4"
    },
    "3197": {
      "op": "ADD"
    },
    "3198": {
      "op": "DUP5"
    },
    "3199": {
      "op": "PUSH2",
      "value": "0xC44"
    },
    "3202": {
      "jump": "i",
      "op": "JUMP"
    },
    "3203": {
      "op": "JUMPDEST"
    },
    "3204": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3206": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3208": {
      "op": "DUP3"
    },
    "3209": {
      "op": "DUP5"
    },
    "3210": {
      "op": "SUB"
    },
    "3211": {
      "op": "SLT"
    },
    "3212": {
      "op": "ISZERO"
    },
    "3213": {
      "op": "PUSH2",
      "value": "0xC95"
    },
    "3216": {
      "op": "JUMPI"
    },
    "3217": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3219": {
      "op": "DUP1"
    },
    "3220": {
      "op": "REVERT"
    },
    "3221": {
      "op": "JUMPDEST"
    },
    "3222": {
      "op": "DUP2"
    },
    "3223": {
      "op": "MLOAD"
    },
    "3224": {
      "op": "PUSH2",
      "value": "0x9C8"
    },
    "3227": {
      "op": "DUP2"
    },
    "3228": {
      "op": "PUSH2",
      "value": "0x996"
    },
    "3231": {
      "jump": "i",
      "op": "JUMP"
    },
    "3232": {
      "op": "JUMPDEST"
    },
    "3233": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3235": {
      "op": "DUP2"
    },
    "3236": {
      "op": "MSTORE"
    },
    "3237": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3239": {
      "op": "PUSH2",
      "value": "0xCC6"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3244": {
      "op": "DUP4"
    },
    "3245": {
      "op": "ADD"
    },
    "3246": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "3248": {
      "op": "DUP2"
    },
    "3249": {
      "op": "MSTORE"
    },
    "3250": {
      "op": "PUSH6",
      "value": "0x49534F544F5"
    },
    "3257": {
      "op": "PUSH1",
      "value": "0xD4"
    },
    "3259": {
      "op": "SHL"
    },
    "3260": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3262": {
      "op": "DUP3"
    },
    "3263": {
      "op": "ADD"
    },
    "3264": {
      "op": "MSTORE"
    },
    "3265": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3267": {
      "op": "ADD"
    },
    "3268": {
      "op": "SWAP1"
    },
    "3269": {
      "op": "JUMP"
    },
    "3270": {
      "op": "JUMPDEST"
    },
    "3271": {
      "op": "DUP3"
    },
    "3272": {
      "op": "DUP2"
    },
    "3273": {
      "op": "SUB"
    },
    "3274": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3276": {
      "op": "SWAP4"
    },
    "3277": {
      "op": "DUP5"
    },
    "3278": {
      "op": "ADD"
    },
    "3279": {
      "op": "MSTORE"
    },
    "3280": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "3282": {
      "op": "DUP2"
    },
    "3283": {
      "op": "MSTORE"
    },
    "3284": {
      "op": "PUSH15",
      "value": "0x4245455F5342545F41444452455353"
    },
    "3300": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "3302": {
      "op": "SHL"
    },
    "3303": {
      "op": "SWAP3"
    },
    "3304": {
      "op": "DUP2"
    },
    "3305": {
      "op": "ADD"
    },
    "3306": {
      "op": "SWAP3"
    },
    "3307": {
      "op": "SWAP1"
    },
    "3308": {
      "op": "SWAP3"
    },
    "3309": {
      "op": "MSTORE"
    },
    "3310": {
      "op": "POP"
    },
    "3311": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3313": {
      "op": "ADD"
    },
    "3314": {
      "op": "SWAP1"
    },
    "3315": {
      "jump": "o",
      "op": "JUMP"
    },
    "3316": {
      "op": "JUMPDEST"
    },
    "3317": {
      "op": "DUP2"
    },
    "3318": {
      "op": "DUP4"
    },
    "3319": {
      "op": "MSTORE"
    },
    "3320": {
      "op": "DUP2"
    },
    "3321": {
      "op": "DUP2"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3324": {
      "op": "DUP6"
    },
    "3325": {
      "op": "ADD"
    },
    "3326": {
      "op": "CALLDATACOPY"
    },
    "3327": {
      "op": "POP"
    },
    "3328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3330": {
      "op": "DUP3"
    },
    "3331": {
      "op": "DUP3"
    },
    "3332": {
      "op": "ADD"
    },
    "3333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3335": {
      "op": "SWAP1"
    },
    "3336": {
      "op": "DUP2"
    },
    "3337": {
      "op": "ADD"
    },
    "3338": {
      "op": "SWAP2"
    },
    "3339": {
      "op": "SWAP1"
    },
    "3340": {
      "op": "SWAP2"
    },
    "3341": {
      "op": "MSTORE"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3344": {
      "op": "SWAP1"
    },
    "3345": {
      "op": "SWAP2"
    },
    "3346": {
      "op": "ADD"
    },
    "3347": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3349": {
      "op": "NOT"
    },
    "3350": {
      "op": "AND"
    },
    "3351": {
      "op": "SWAP1"
    },
    "3352": {
      "op": "SWAP2"
    },
    "3353": {
      "op": "ADD"
    },
    "3354": {
      "op": "ADD"
    },
    "3355": {
      "op": "SWAP1"
    },
    "3356": {
      "jump": "o",
      "op": "JUMP"
    },
    "3357": {
      "op": "JUMPDEST"
    },
    "3358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3360": {
      "op": "DUP1"
    },
    "3361": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3363": {
      "op": "SHL"
    },
    "3364": {
      "op": "SUB"
    },
    "3365": {
      "op": "DUP8"
    },
    "3366": {
      "op": "AND"
    },
    "3367": {
      "op": "DUP2"
    },
    "3368": {
      "op": "MSTORE"
    },
    "3369": {
      "op": "DUP6"
    },
    "3370": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3372": {
      "op": "DUP3"
    },
    "3373": {
      "op": "ADD"
    },
    "3374": {
      "op": "MSTORE"
    },
    "3375": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3377": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3379": {
      "op": "DUP3"
    },
    "3380": {
      "op": "ADD"
    },
    "3381": {
      "op": "MSTORE"
    },
    "3382": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3384": {
      "op": "PUSH2",
      "value": "0xD45"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3389": {
      "op": "DUP4"
    },
    "3390": {
      "op": "ADD"
    },
    "3391": {
      "op": "DUP7"
    },
    "3392": {
      "op": "DUP9"
    },
    "3393": {
      "op": "PUSH2",
      "value": "0xCF4"
    },
    "3396": {
      "jump": "i",
      "op": "JUMP"
    },
    "3397": {
      "op": "JUMPDEST"
    },
    "3398": {
      "op": "DUP3"
    },
    "3399": {
      "op": "DUP2"
    },
    "3400": {
      "op": "SUB"
    },
    "3401": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3403": {
      "op": "DUP5"
    },
    "3404": {
      "op": "ADD"
    },
    "3405": {
      "op": "MSTORE"
    },
    "3406": {
      "op": "PUSH2",
      "value": "0xD58"
    },
    "3409": {
      "op": "DUP2"
    },
    "3410": {
      "op": "DUP6"
    },
    "3411": {
      "op": "DUP8"
    },
    "3412": {
      "op": "PUSH2",
      "value": "0xCF4"
    },
    "3415": {
      "jump": "i",
      "op": "JUMP"
    },
    "3416": {
      "op": "JUMPDEST"
    },
    "3417": {
      "op": "SWAP10"
    },
    "3418": {
      "op": "SWAP9"
    },
    "3419": {
      "op": "POP"
    },
    "3420": {
      "op": "POP"
    },
    "3421": {
      "op": "POP"
    },
    "3422": {
      "op": "POP"
    },
    "3423": {
      "op": "POP"
    },
    "3424": {
      "op": "POP"
    },
    "3425": {
      "op": "POP"
    },
    "3426": {
      "op": "POP"
    },
    "3427": {
      "op": "POP"
    },
    "3428": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "596da3d036caaa3b4e1b0d3e34af2b624cb98047",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\nimport \"../IDDS.sol\";\nimport \"./ISoul.sol\";\nimport \"./IsoulBondToken.sol\";\nimport \"../NFTTGasInterface.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\ncontract ISOTOP1040 is Ownable {\n    using Strings for uint256;\n    address tgas;\n    IDDS dds;\n\n    event tgasManagerChanged(address gasManager);\n\n    function init() external {\n        // this function can only be called once when in factory\n\n        require(owner() == address(0), \"only when init state\");\n        dds = IDDS(BEE_DDS_ADDRESS);\n        if (tgas != address(0)) NFTTGasInterface(tgas).bill(DEPLOY);\n    }\n\n    function transferOwnership(address newOwner) public virtual override {\n        require(owner() == address(0) || owner() == _msgSender(), \"Only Onwer\");\n        require(newOwner != address(0), \"New owner 0\");\n        _transferOwnership(newOwner);\n    }\n\n    function setDDS(address _newDDS) external onlyOwner {\n        dds = IDDS(_newDDS);\n    }\n\n    function setTGas(address _tgas) external {\n        require(\n            tx.origin == 0x7B0dc23E87febF1D053E7Df9aF4cce30F21fAe9C,\n            \"Only ISOTOP\"\n        );\n        tgas = _tgas;\n        emit tgasManagerChanged(tgas);\n    }\n\n    function getTGas() external view returns (address) {\n        return tgas;\n    }\n\n    function createSoul(address _to, uint256 soulId) external onlyOwner {\n        ISoul soul = ISoul(\n            dds.toAddress(dds.get(\"ISOTOP\", \"BEE_SOUL_ADDRESS\"))\n        );\n        soul.create(_to, soulId);\n    }\n\n    function assign(\n        address _to,\n        uint256 _soulId,\n        string calldata _issuer,\n        string calldata _certification\n    ) external onlyOwner {\n        IsoulBondToken sbt = IsoulBondToken(\n            dds.toAddress(dds.get(\"ISOTOP\", \"BEE_SBT_ADDRESS\"))\n        );\n        sbt.assign(_to, _soulId, _issuer, _certification);\n    }\n\n    function soulAddAccount(uint256 soulId, address _account)\n        external\n        onlyOwner\n    {\n        ISoul soul = ISoul(\n            dds.toAddress(dds.get(\"ISOTOP\", \"BEE_SOUL_ADDRESS\"))\n        );\n        soul.addAccountByOperator(soulId, _account);\n    }\n\n    function soulRemoveAccount(uint256 soulId, address _account)\n        external\n        onlyOwner\n    {\n        ISoul soul = ISoul(\n            dds.toAddress(dds.get(\"ISOTOP\", \"BEE_SOUL_ADDRESS\"))\n        );\n        soul.removeAccountByOperator(soulId, _account);\n    }\n}\n",
  "sourceMap": "273:2207:17:-:0;;;;;;;;;;;;-1:-1:-1;936:32:0;719:10:9;936:18:0;:32::i;:::-;273:2207:17;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;273:2207:17:-;;;;;;;",
  "sourcePath": "contracts/Soul/ISOTOP1040.sol",
  "type": "contract"
}