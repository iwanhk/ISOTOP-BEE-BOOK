{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "salt",
          "type": "uint256"
        }
      ],
      "name": "Deployed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "bytecode",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_salt",
          "type": "uint256"
        }
      ],
      "name": "Deploy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "bytecode",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_salt",
          "type": "uint256"
        }
      ],
      "name": "getAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "18": "contracts/Deployer.sol"
  },
  "ast": {
    "absolutePath": "contracts/Deployer.sol",
    "exportedSymbols": {
      "Deployer": [
        731
      ],
      "Ownable": [
        626
      ]
    },
    "id": 732,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 619,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:18"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Ownable",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 620,
          "nodeType": "StructuredDocumentation",
          "src": "58:334:18",
          "text": "@title PLAN-BEE Deployer \u5408\u7ea6\u90e8\u7f72\u5668\uff0c\u786e\u4fdd\u5408\u7ea6\u90e8\u7f72\u7684\u5730\u5740\u53ef\u4ee5\u901a\u8fc7create2\u8ba1\u7b97\n @author Iwan Cao\n @notice \u5f00\u653e\u4f7f\u7528\u5408\u7ea6\uff0c\u4efb\u4f55\u4eba\u53ef\u4ee5\u90e8\u7f72\u5408\u7ea6\u5e76\u4e14\u8ba1\u7b97\u5730\u5740\n @dev \u5730\u5740\u8ba1\u7b97\u4f9d\u8d56\uff1a\u90e8\u7f72\u5408\u7ea6\u5730\u5740\uff0c\u5408\u7ea6bytecode\uff0c\u76d0\n @custom:planbee \u8fd9\u662f\u4e00\u4e2aPLAN-BEE\u8ba1\u5212\u8ba4\u8bc1\u7684\u5408\u7ea6"
        },
        "fullyImplemented": false,
        "id": 626,
        "linearizedBaseContracts": [
          626
        ],
        "name": "Ownable",
        "nameLocation": "403:7:18",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "f2fde38b",
            "id": 625,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nameLocation": "426:17:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 622,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 625,
                  "src": "444:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "444:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "443:9:18"
            },
            "returnParameters": {
              "id": 624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "461:0:18"
            },
            "scope": 626,
            "src": "417:45:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 732,
        "src": "393:71:18",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Deployer",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 731,
        "linearizedBaseContracts": [
          731
        ],
        "name": "Deployer",
        "nameLocation": "475:8:18",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "eventSelector": "78c9d1e385f0bb7d4dd0237eb7ab708b0780c73031080977cd5469bab04ed690",
            "id": 634,
            "name": "Deployed",
            "nameLocation": "496:8:18",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 628,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "513:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "505:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 627,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "505:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 630,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "535:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "519:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 629,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "519:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 632,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "550:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "542:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 631,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "542:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "504:51:18"
            },
            "src": "490:66:18"
          },
          {
            "constant": false,
            "id": 638,
            "mutability": "mutable",
            "name": "deployed",
            "nameLocation": "590:8:18",
            "nodeType": "VariableDeclaration",
            "scope": 731,
            "src": "562:36:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 637,
              "keyType": {
                "id": 635,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "570:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "562:27:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 636,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "581:7:18",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 678,
              "nodeType": "Block",
              "src": "1138:335:18",
              "statements": [
                {
                  "assignments": [
                    648
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 648,
                      "mutability": "mutable",
                      "name": "hash",
                      "nameLocation": "1156:4:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 678,
                      "src": "1148:12:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 647,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1148:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 666,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30786666",
                                "id": 654,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1227:4:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_255_by_1",
                                  "typeString": "int_const 255"
                                },
                                "value": "0xff"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_255_by_1",
                                  "typeString": "int_const 255"
                                }
                              ],
                              "id": 653,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1220:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes1_$",
                                "typeString": "type(bytes1)"
                              },
                              "typeName": {
                                "id": 652,
                                "name": "bytes1",
                                "nodeType": "ElementaryTypeName",
                                "src": "1220:6:18",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1220:12:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 658,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1258:4:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Deployer_$731",
                                  "typeString": "contract Deployer"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Deployer_$731",
                                  "typeString": "contract Deployer"
                                }
                              ],
                              "id": 657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1250:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 656,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1250:7:18",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1250:13:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 660,
                            "name": "_salt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 642,
                            "src": "1281:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 662,
                                "name": "bytecode",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 640,
                                "src": "1314:8:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 661,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "1304:9:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1304:19:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 650,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1186:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1186:16:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1186:151:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 649,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1163:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1163:184:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1148:199:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 673,
                                "name": "hash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 648,
                                "src": "1459:4:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 672,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1451:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 671,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1451:7:18",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 674,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1451:13:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1443:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint160_$",
                            "typeString": "type(uint160)"
                          },
                          "typeName": {
                            "id": 669,
                            "name": "uint160",
                            "nodeType": "ElementaryTypeName",
                            "src": "1443:7:18",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1443:22:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      ],
                      "id": 668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1435:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 667,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1435:7:18",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1435:31:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 646,
                  "id": 677,
                  "nodeType": "Return",
                  "src": "1428:38:18"
                }
              ]
            },
            "functionSelector": "94ca2cb5",
            "id": 679,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddress",
            "nameLocation": "1031:10:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 640,
                  "mutability": "mutable",
                  "name": "bytecode",
                  "nameLocation": "1055:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 679,
                  "src": "1042:21:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 639,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1042:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 642,
                  "mutability": "mutable",
                  "name": "_salt",
                  "nameLocation": "1073:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 679,
                  "src": "1065:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1065:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1041:38:18"
            },
            "returnParameters": {
              "id": 646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 645,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 679,
                  "src": "1125:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 644,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1125:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1124:9:18"
            },
            "scope": 731,
            "src": "1022:451:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 704,
              "nodeType": "Block",
              "src": "1735:1000:18",
              "statements": [
                {
                  "assignments": [
                    687
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 687,
                      "mutability": "mutable",
                      "name": "addr",
                      "nameLocation": "1753:4:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 704,
                      "src": "1745:12:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 686,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1745:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 688,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1745:12:18"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2190:453:18",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2204:342:18",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "callvalue",
                                "nodeType": "YulIdentifier",
                                "src": "2237:9:18"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2237:11:18"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "2372:8:18"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2382:4:18",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2368:3:18"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2368:19:18"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "2411:8:18"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2405:5:18"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2405:15:18"
                            },
                            {
                              "name": "_salt",
                              "nodeType": "YulIdentifier",
                              "src": "2495:5:18"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "2212:7:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2212:334:18"
                        },
                        "variableNames": [
                          {
                            "name": "addr",
                            "nodeType": "YulIdentifier",
                            "src": "2204:4:18"
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2589:44:18",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2614:1:18",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2617:1:18",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2607:6:18"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2607:12:18"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2607:12:18"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "addr",
                                  "nodeType": "YulIdentifier",
                                  "src": "2582:4:18"
                                }
                              ],
                              "functionName": {
                                "name": "extcodesize",
                                "nodeType": "YulIdentifier",
                                "src": "2570:11:18"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2570:17:18"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "2563:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2563:25:18"
                        },
                        "nodeType": "YulIf",
                        "src": "2560:73:18"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 683,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2495:5:18",
                      "valueSize": 1
                    },
                    {
                      "declaration": 687,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2204:4:18",
                      "valueSize": 1
                    },
                    {
                      "declaration": 687,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2582:4:18",
                      "valueSize": 1
                    },
                    {
                      "declaration": 681,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2372:8:18",
                      "valueSize": 1
                    },
                    {
                      "declaration": 681,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2411:8:18",
                      "valueSize": 1
                    }
                  ],
                  "id": 689,
                  "nodeType": "InlineAssembly",
                  "src": "2181:462:18"
                },
                {
                  "expression": {
                    "id": 695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 690,
                        "name": "deployed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "2653:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 692,
                      "indexExpression": {
                        "id": 691,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 687,
                        "src": "2662:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2653:14:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 693,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2670:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2670:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2653:27:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 696,
                  "nodeType": "ExpressionStatement",
                  "src": "2653:27:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 698,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 687,
                        "src": "2704:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 699,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2710:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2710:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 701,
                        "name": "_salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 683,
                        "src": "2722:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 697,
                      "name": "Deployed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 634,
                      "src": "2695:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2695:33:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 703,
                  "nodeType": "EmitStatement",
                  "src": "2690:38:18"
                }
              ]
            },
            "functionSelector": "420cd4bf",
            "id": 705,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "Deploy",
            "nameLocation": "1681:6:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 681,
                  "mutability": "mutable",
                  "name": "bytecode",
                  "nameLocation": "1701:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 705,
                  "src": "1688:21:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 680,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1688:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 683,
                  "mutability": "mutable",
                  "name": "_salt",
                  "nameLocation": "1719:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 705,
                  "src": "1711:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 682,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1711:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1687:38:18"
            },
            "returnParameters": {
              "id": 685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1735:0:18"
            },
            "scope": 731,
            "src": "1672:1063:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 729,
              "nodeType": "Block",
              "src": "2811:122:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 713,
                            "name": "deployed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 638,
                            "src": "2829:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 715,
                          "indexExpression": {
                            "id": 714,
                            "name": "_addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 707,
                            "src": "2838:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2829:15:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 716,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2848:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2848:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2829:29:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f776e6572",
                        "id": 719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2860:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17d9f114efaa93d67eedad749dd7fd16a6895ff93e28b7a30c667a069f2ed42d",
                          "typeString": "literal_string \"Only owner\""
                        },
                        "value": "Only owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17d9f114efaa93d67eedad749dd7fd16a6895ff93e28b7a30c667a069f2ed42d",
                          "typeString": "literal_string \"Only owner\""
                        }
                      ],
                      "id": 712,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2821:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2821:52:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 721,
                  "nodeType": "ExpressionStatement",
                  "src": "2821:52:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 726,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 709,
                        "src": "2916:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 723,
                            "name": "_addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 707,
                            "src": "2891:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 722,
                          "name": "Ownable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 626,
                          "src": "2883:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Ownable_$626_$",
                            "typeString": "type(contract Ownable)"
                          }
                        },
                        "id": 724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2883:14:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ownable_$626",
                          "typeString": "contract Ownable"
                        }
                      },
                      "id": 725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 625,
                      "src": "2883:32:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2883:43:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 728,
                  "nodeType": "ExpressionStatement",
                  "src": "2883:43:18"
                }
              ]
            },
            "functionSelector": "6d435421",
            "id": 730,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nameLocation": "2750:17:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 707,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "2776:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 730,
                  "src": "2768:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 706,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2768:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 709,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "2791:9:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 730,
                  "src": "2783:17:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 708,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2783:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2767:34:18"
            },
            "returnParameters": {
              "id": 711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2811:0:18"
            },
            "scope": 731,
            "src": "2741:192:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 732,
        "src": "466:2469:18",
        "usedErrors": []
      }
    ],
    "src": "32:2904:18"
  },
  "bytecode": "608060405234801561001057600080fd5b5061037e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063420cd4bf146100465780636d4354211461005b57806394ca2cb51461006e575b600080fd5b610059610054366004610244565b6100f4565b005b610059610069366004610315565b610175565b6100d861007c366004610244565b8151602092830120604080516001600160f81b0319818601523060601b6bffffffffffffffffffffffff191660218201526035810193909352605580840192909252805180840390920182526075909201909152805191012090565b6040516001600160a01b03909116815260200160405180910390f35b60008183516020850134f59050803b61010c57600080fd5b6001600160a01b0381166000818152602081815260409182902080546001600160a01b031916339081179091558251938452908301859052917f78c9d1e385f0bb7d4dd0237eb7ab708b0780c73031080977cd5469bab04ed690910160405180910390a2505050565b6001600160a01b038281166000908152602081905260409020541633146101cf5760405162461bcd60e51b815260206004820152600a60248201526927b7363c9037bbb732b960b11b604482015260640160405180910390fd5b60405163f2fde38b60e01b81526001600160a01b03828116600483015283169063f2fde38b90602401600060405180830381600087803b15801561021257600080fd5b505af1158015610226573d6000803e3d6000fd5b505050505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561025757600080fd5b823567ffffffffffffffff8082111561026f57600080fd5b818501915085601f83011261028357600080fd5b8135818111156102955761029561022e565b604051601f8201601f19908116603f011681019083821181831017156102bd576102bd61022e565b816040528281528860208487010111156102d657600080fd5b826020860160208301376000602093820184015298969091013596505050505050565b80356001600160a01b038116811461031057600080fd5b919050565b6000806040838503121561032857600080fd5b610331836102f9565b915061033f602084016102f9565b9050925092905056fea264697066735822122011a98a5a0ec7b9761e06c940c0b69d7c60aff9eab2779c095e6601229155b05364736f6c634300080d0033",
  "bytecodeSha1": "6b225dde4f0122364f144d9b119249755480ef67",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "Deployer",
  "coverageMap": {
    "branches": {
      "18": {
        "Deployer.transferOwnership": {
          "4": [
            2829,
            2858,
            true
          ]
        }
      }
    },
    "statements": {
      "18": {
        "Deployer.Deploy": {
          "0": [
            2653,
            2680
          ],
          "1": [
            2690,
            2728
          ]
        },
        "Deployer.transferOwnership": {
          "2": [
            2821,
            2873
          ],
          "3": [
            2883,
            2926
          ]
        }
      }
    }
  },
  "dependencies": [
    "Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063420cd4bf146100465780636d4354211461005b57806394ca2cb51461006e575b600080fd5b610059610054366004610244565b6100f4565b005b610059610069366004610315565b610175565b6100d861007c366004610244565b8151602092830120604080516001600160f81b0319818601523060601b6bffffffffffffffffffffffff191660218201526035810193909352605580840192909252805180840390920182526075909201909152805191012090565b6040516001600160a01b03909116815260200160405180910390f35b60008183516020850134f59050803b61010c57600080fd5b6001600160a01b0381166000818152602081815260409182902080546001600160a01b031916339081179091558251938452908301859052917f78c9d1e385f0bb7d4dd0237eb7ab708b0780c73031080977cd5469bab04ed690910160405180910390a2505050565b6001600160a01b038281166000908152602081905260409020541633146101cf5760405162461bcd60e51b815260206004820152600a60248201526927b7363c9037bbb732b960b11b604482015260640160405180910390fd5b60405163f2fde38b60e01b81526001600160a01b03828116600483015283169063f2fde38b90602401600060405180830381600087803b15801561021257600080fd5b505af1158015610226573d6000803e3d6000fd5b505050505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561025757600080fd5b823567ffffffffffffffff8082111561026f57600080fd5b818501915085601f83011261028357600080fd5b8135818111156102955761029561022e565b604051601f8201601f19908116603f011681019083821181831017156102bd576102bd61022e565b816040528281528860208487010111156102d657600080fd5b826020860160208301376000602093820184015298969091013596505050505050565b80356001600160a01b038116811461031057600080fd5b919050565b6000806040838503121561032857600080fd5b610331836102f9565b915061033f602084016102f9565b9050925092905056fea264697066735822122011a98a5a0ec7b9761e06c940c0b69d7c60aff9eab2779c095e6601229155b05364736f6c634300080d0033",
  "deployedSourceMap": "466:2469:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1672:1063;;;;;;:::i;:::-;;:::i;:::-;;2741:192;;;;;;:::i;:::-;;:::i;1022:451::-;;;;;;:::i;:::-;1304:19;;;;;;;1186:151;;;-1:-1:-1;;;;;;1186:151:18;;;2630:39:41;1258:4:18;2706:2:41;2702:15;-1:-1:-1;;2698:53:41;2685:11;;;2678:74;2768:12;;;2761:28;;;;2805:12;;;;2798:28;;;;1186:151:18;;;;;;;;;;2842:12:41;;;;1186:151:18;;;1163:184;;;;;;1022:451;;;;-1:-1:-1;;;;;1757:32:41;;;1739:51;;1727:2;1712:18;1022:451:18;;;;;;;1672:1063;1745:12;2495:5;2411:8;2405:15;2382:4;2372:8;2368:19;2237:11;2212:334;2204:342;;2582:4;2570:17;2560:73;;2617:1;2614;2607:12;2560:73;-1:-1:-1;;;;;2653:14:18;;:8;:14;;;;;;;;;;;;:27;;-1:-1:-1;;;;;;2653:27:18;2670:10;2653:27;;;;;;2695:33;;1975:51:41;;;2042:18;;;2035:34;;;2670:10:18;2695:33;;1948:18:41;2695:33:18;;;;;;;1735:1000;1672:1063;;:::o;2741:192::-;-1:-1:-1;;;;;2829:15:18;;;:8;:15;;;;;;;;;;;;2848:10;2829:29;2821:52;;;;-1:-1:-1;;;2821:52:18;;2282:2:41;2821:52:18;;;2264:21:41;2321:2;2301:18;;;2294:30;-1:-1:-1;;;2340:18:41;;;2333:40;2390:18;;2821:52:18;;;;;;;;2883:43;;-1:-1:-1;;;2883:43:18;;-1:-1:-1;;;;;1757:32:41;;;2883:43:18;;;1739:51:41;2883:32:18;;;;;1712:18:41;;2883:43:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2741:192;;:::o;14:127:41:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:999;223:6;231;284:2;272:9;263:7;259:23;255:32;252:52;;;300:1;297;290:12;252:52;340:9;327:23;369:18;410:2;402:6;399:14;396:34;;;426:1;423;416:12;396:34;464:6;453:9;449:22;439:32;;509:7;502:4;498:2;494:13;490:27;480:55;;531:1;528;521:12;480:55;567:2;554:16;589:2;585;582:10;579:36;;;595:18;;:::i;:::-;670:2;664:9;638:2;724:13;;-1:-1:-1;;720:22:41;;;744:2;716:31;712:40;700:53;;;768:18;;;788:22;;;765:46;762:72;;;814:18;;:::i;:::-;854:10;850:2;843:22;889:2;881:6;874:18;931:7;924:4;919:2;915;911:11;907:22;904:35;901:55;;;952:1;949;942:12;901:55;1012:2;1005:4;1001:2;997:13;990:4;982:6;978:17;965:50;1059:1;1052:4;1035:15;;;1031:26;;1024:37;1035:15;1118:20;;;;1105:34;;-1:-1:-1;;;;;;146:999:41:o;1150:173::-;1218:20;;-1:-1:-1;;;;;1267:31:41;;1257:42;;1247:70;;1313:1;1310;1303:12;1247:70;1150:173;;;:::o;1328:260::-;1396:6;1404;1457:2;1445:9;1436:7;1432:23;1428:32;1425:52;;;1473:1;1470;1463:12;1425:52;1496:29;1515:9;1496:29;:::i;:::-;1486:39;;1544:38;1578:2;1567:9;1563:18;1544:38;:::i;:::-;1534:48;;1328:260;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    466,
    2935
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x420CD4BF EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x6D435421 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x94CA2CB5 EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x244 JUMP JUMPDEST PUSH2 0xF4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59 PUSH2 0x69 CALLDATASIZE PUSH1 0x4 PUSH2 0x315 JUMP JUMPDEST PUSH2 0x175 JUMP JUMPDEST PUSH2 0xD8 PUSH2 0x7C CALLDATASIZE PUSH1 0x4 PUSH2 0x244 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP2 DUP7 ADD MSTORE ADDRESS PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x21 DUP3 ADD MSTORE PUSH1 0x35 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x55 DUP1 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP5 SUB SWAP1 SWAP3 ADD DUP3 MSTORE PUSH1 0x75 SWAP1 SWAP3 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 DUP4 MLOAD PUSH1 0x20 DUP6 ADD CALLVALUE CREATE2 SWAP1 POP DUP1 EXTCODESIZE PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD DUP6 SWAP1 MSTORE SWAP2 PUSH32 0x78C9D1E385F0BB7D4DD0237EB7AB708B0780C73031080977CD5469BAB04ED690 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND CALLER EQ PUSH2 0x1CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF2FDE38B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 AND SWAP1 PUSH4 0xF2FDE38B SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x226 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x295 JUMPI PUSH2 0x295 PUSH2 0x22E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2BD JUMPI PUSH2 0x2BD PUSH2 0x22E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 SWAP4 DUP3 ADD DUP5 ADD MSTORE SWAP9 SWAP7 SWAP1 SWAP2 ADD CALLDATALOAD SWAP7 POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x328 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x331 DUP4 PUSH2 0x2F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x33F PUSH1 0x20 DUP5 ADD PUSH2 0x2F9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT 0xA9 DUP11 GAS 0xE 0xC7 0xB9 PUSH23 0x1E06C940C0B69D7C60AFF9EAB2779C095E6601229155B0 MSTORE8 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        466,
        2935
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "5": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "6": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "DUP1",
      "path": "18"
    },
    "7": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "8": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "12": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "DUP1",
      "path": "18"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "REVERT",
      "path": "18"
    },
    "16": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "17": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "POP",
      "path": "18"
    },
    "18": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "21": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "LT",
      "path": "18"
    },
    "22": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x41"
    },
    "25": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "26": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "CALLDATALOAD",
      "path": "18"
    },
    "29": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "SHR",
      "path": "18"
    },
    "32": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "DUP1",
      "path": "18"
    },
    "33": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x420CD4BF"
    },
    "38": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "EQ",
      "path": "18"
    },
    "39": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x46"
    },
    "42": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "43": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "DUP1",
      "path": "18"
    },
    "44": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x6D435421"
    },
    "49": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "EQ",
      "path": "18"
    },
    "50": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x5B"
    },
    "53": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "54": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "DUP1",
      "path": "18"
    },
    "55": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0x94CA2CB5"
    },
    "60": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "EQ",
      "path": "18"
    },
    "61": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x6E"
    },
    "64": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "65": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "66": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "68": {
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "DUP1",
      "path": "18"
    },
    "69": {
      "first_revert": true,
      "fn": null,
      "offset": [
        466,
        2935
      ],
      "op": "REVERT",
      "path": "18"
    },
    "70": {
      "fn": "Deployer.Deploy",
      "offset": [
        1672,
        2735
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "71": {
      "fn": "Deployer.Deploy",
      "offset": [
        1672,
        2735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x59"
    },
    "74": {
      "fn": "Deployer.Deploy",
      "offset": [
        1672,
        2735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x54"
    },
    "77": {
      "fn": "Deployer.Deploy",
      "offset": [
        1672,
        2735
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "78": {
      "fn": "Deployer.Deploy",
      "offset": [
        1672,
        2735
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "80": {
      "fn": "Deployer.Deploy",
      "offset": [
        1672,
        2735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x244"
    },
    "83": {
      "fn": "Deployer.Deploy",
      "jump": "i",
      "offset": [
        1672,
        2735
      ],
      "op": "JUMP",
      "path": "18"
    },
    "84": {
      "fn": "Deployer.Deploy",
      "offset": [
        1672,
        2735
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "85": {
      "fn": "Deployer.Deploy",
      "offset": [
        1672,
        2735
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xF4"
    },
    "88": {
      "fn": "Deployer.Deploy",
      "jump": "i",
      "offset": [
        1672,
        2735
      ],
      "op": "JUMP",
      "path": "18"
    },
    "89": {
      "fn": "Deployer.Deploy",
      "offset": [
        1672,
        2735
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "90": {
      "fn": "Deployer.Deploy",
      "offset": [
        1672,
        2735
      ],
      "op": "STOP",
      "path": "18"
    },
    "91": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2741,
        2933
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "92": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2741,
        2933
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x59"
    },
    "95": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2741,
        2933
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x69"
    },
    "98": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2741,
        2933
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "99": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2741,
        2933
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "101": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2741,
        2933
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x315"
    },
    "104": {
      "fn": "Deployer.transferOwnership",
      "jump": "i",
      "offset": [
        2741,
        2933
      ],
      "op": "JUMP",
      "path": "18"
    },
    "105": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2741,
        2933
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "106": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2741,
        2933
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x175"
    },
    "109": {
      "fn": "Deployer.transferOwnership",
      "jump": "i",
      "offset": [
        2741,
        2933
      ],
      "op": "JUMP",
      "path": "18"
    },
    "110": {
      "fn": "Deployer.getAddress",
      "offset": [
        1022,
        1473
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "111": {
      "fn": "Deployer.getAddress",
      "offset": [
        1022,
        1473
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xD8"
    },
    "114": {
      "fn": "Deployer.getAddress",
      "offset": [
        1022,
        1473
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x7C"
    },
    "117": {
      "fn": "Deployer.getAddress",
      "offset": [
        1022,
        1473
      ],
      "op": "CALLDATASIZE",
      "path": "18"
    },
    "118": {
      "fn": "Deployer.getAddress",
      "offset": [
        1022,
        1473
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "120": {
      "fn": "Deployer.getAddress",
      "offset": [
        1022,
        1473
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x244"
    },
    "123": {
      "fn": "Deployer.getAddress",
      "jump": "i",
      "offset": [
        1022,
        1473
      ],
      "op": "JUMP",
      "path": "18"
    },
    "124": {
      "fn": "Deployer.getAddress",
      "offset": [
        1022,
        1473
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "125": {
      "fn": "Deployer.getAddress",
      "offset": [
        1304,
        1323
      ],
      "op": "DUP2",
      "path": "18"
    },
    "126": {
      "fn": "Deployer.getAddress",
      "offset": [
        1304,
        1323
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "127": {
      "fn": "Deployer.getAddress",
      "offset": [
        1304,
        1323
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "129": {
      "fn": "Deployer.getAddress",
      "offset": [
        1304,
        1323
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "130": {
      "fn": "Deployer.getAddress",
      "offset": [
        1304,
        1323
      ],
      "op": "DUP4",
      "path": "18"
    },
    "131": {
      "fn": "Deployer.getAddress",
      "offset": [
        1304,
        1323
      ],
      "op": "ADD",
      "path": "18"
    },
    "132": {
      "fn": "Deployer.getAddress",
      "offset": [
        1304,
        1323
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "133": {
      "fn": "Deployer.getAddress",
      "offset": [
        1186,
        1337
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "135": {
      "fn": "Deployer.getAddress",
      "offset": [
        1186,
        1337
      ],
      "op": "DUP1",
      "path": "18"
    },
    "136": {
      "fn": "Deployer.getAddress",
      "offset": [
        1186,
        1337
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "141": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "143": {
      "op": "SHL"
    },
    "144": {
      "op": "SUB"
    },
    "145": {
      "op": "NOT"
    },
    "146": {
      "fn": "Deployer.getAddress",
      "offset": [
        1186,
        1337
      ],
      "op": "DUP2",
      "path": "18"
    },
    "147": {
      "fn": "Deployer.getAddress",
      "offset": [
        1186,
        1337
      ],
      "op": "DUP7",
      "path": "18"
    },
    "148": {
      "fn": "Deployer.getAddress",
      "offset": [
        1186,
        1337
      ],
      "op": "ADD",
      "path": "18"
    },
    "149": {
      "op": "MSTORE"
    },
    "150": {
      "fn": "Deployer.getAddress",
      "offset": [
        1258,
        1262
      ],
      "op": "ADDRESS",
      "path": "18"
    },
    "151": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "153": {
      "op": "SHL"
    },
    "154": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "167": {
      "op": "NOT"
    },
    "168": {
      "op": "AND"
    },
    "169": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "171": {
      "op": "DUP3"
    },
    "172": {
      "op": "ADD"
    },
    "173": {
      "op": "MSTORE"
    },
    "174": {
      "op": "PUSH1",
      "value": "0x35"
    },
    "176": {
      "op": "DUP2"
    },
    "177": {
      "op": "ADD"
    },
    "178": {
      "op": "SWAP4"
    },
    "179": {
      "op": "SWAP1"
    },
    "180": {
      "op": "SWAP4"
    },
    "181": {
      "op": "MSTORE"
    },
    "182": {
      "op": "PUSH1",
      "value": "0x55"
    },
    "184": {
      "op": "DUP1"
    },
    "185": {
      "op": "DUP5"
    },
    "186": {
      "op": "ADD"
    },
    "187": {
      "op": "SWAP3"
    },
    "188": {
      "op": "SWAP1"
    },
    "189": {
      "op": "SWAP3"
    },
    "190": {
      "op": "MSTORE"
    },
    "191": {
      "fn": "Deployer.getAddress",
      "offset": [
        1186,
        1337
      ],
      "op": "DUP1",
      "path": "18"
    },
    "192": {
      "fn": "Deployer.getAddress",
      "offset": [
        1186,
        1337
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "193": {
      "fn": "Deployer.getAddress",
      "offset": [
        1186,
        1337
      ],
      "op": "DUP1",
      "path": "18"
    },
    "194": {
      "fn": "Deployer.getAddress",
      "offset": [
        1186,
        1337
      ],
      "op": "DUP5",
      "path": "18"
    },
    "195": {
      "fn": "Deployer.getAddress",
      "offset": [
        1186,
        1337
      ],
      "op": "SUB",
      "path": "18"
    },
    "196": {
      "fn": "Deployer.getAddress",
      "offset": [
        1186,
        1337
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "197": {
      "fn": "Deployer.getAddress",
      "offset": [
        1186,
        1337
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "198": {
      "fn": "Deployer.getAddress",
      "offset": [
        1186,
        1337
      ],
      "op": "ADD",
      "path": "18"
    },
    "199": {
      "fn": "Deployer.getAddress",
      "offset": [
        1186,
        1337
      ],
      "op": "DUP3",
      "path": "18"
    },
    "200": {
      "fn": "Deployer.getAddress",
      "offset": [
        1186,
        1337
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "201": {
      "op": "PUSH1",
      "value": "0x75"
    },
    "203": {
      "op": "SWAP1"
    },
    "204": {
      "op": "SWAP3"
    },
    "205": {
      "op": "ADD"
    },
    "206": {
      "fn": "Deployer.getAddress",
      "offset": [
        1186,
        1337
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "207": {
      "fn": "Deployer.getAddress",
      "offset": [
        1186,
        1337
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "208": {
      "fn": "Deployer.getAddress",
      "offset": [
        1186,
        1337
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "209": {
      "fn": "Deployer.getAddress",
      "offset": [
        1163,
        1347
      ],
      "op": "DUP1",
      "path": "18"
    },
    "210": {
      "fn": "Deployer.getAddress",
      "offset": [
        1163,
        1347
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "211": {
      "fn": "Deployer.getAddress",
      "offset": [
        1163,
        1347
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "212": {
      "fn": "Deployer.getAddress",
      "offset": [
        1163,
        1347
      ],
      "op": "ADD",
      "path": "18"
    },
    "213": {
      "fn": "Deployer.getAddress",
      "offset": [
        1163,
        1347
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "214": {
      "fn": "Deployer.getAddress",
      "offset": [
        1163,
        1347
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "215": {
      "fn": "Deployer.getAddress",
      "offset": [
        1022,
        1473
      ],
      "op": "JUMP",
      "path": "18"
    },
    "216": {
      "fn": "Deployer.getAddress",
      "offset": [
        1022,
        1473
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "217": {
      "fn": "Deployer.getAddress",
      "offset": [
        1022,
        1473
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "219": {
      "fn": "Deployer.getAddress",
      "offset": [
        1022,
        1473
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "224": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "226": {
      "op": "SHL"
    },
    "227": {
      "op": "SUB"
    },
    "228": {
      "op": "SWAP1"
    },
    "229": {
      "op": "SWAP2"
    },
    "230": {
      "op": "AND"
    },
    "231": {
      "op": "DUP2"
    },
    "232": {
      "op": "MSTORE"
    },
    "233": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "235": {
      "op": "ADD"
    },
    "236": {
      "fn": "Deployer.getAddress",
      "offset": [
        1022,
        1473
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "238": {
      "fn": "Deployer.getAddress",
      "offset": [
        1022,
        1473
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "239": {
      "fn": "Deployer.getAddress",
      "offset": [
        1022,
        1473
      ],
      "op": "DUP1",
      "path": "18"
    },
    "240": {
      "fn": "Deployer.getAddress",
      "offset": [
        1022,
        1473
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "241": {
      "fn": "Deployer.getAddress",
      "offset": [
        1022,
        1473
      ],
      "op": "SUB",
      "path": "18"
    },
    "242": {
      "fn": "Deployer.getAddress",
      "offset": [
        1022,
        1473
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "243": {
      "fn": "Deployer.getAddress",
      "offset": [
        1022,
        1473
      ],
      "op": "RETURN",
      "path": "18"
    },
    "244": {
      "fn": "Deployer.Deploy",
      "offset": [
        1672,
        2735
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "245": {
      "fn": "Deployer.Deploy",
      "offset": [
        1745,
        1757
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "247": {
      "fn": "Deployer.Deploy",
      "offset": [
        2495,
        2500
      ],
      "op": "DUP2",
      "path": "18"
    },
    "248": {
      "fn": "Deployer.Deploy",
      "offset": [
        2411,
        2419
      ],
      "op": "DUP4",
      "path": "18"
    },
    "249": {
      "fn": "Deployer.Deploy",
      "offset": [
        2405,
        2420
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "250": {
      "fn": "Deployer.Deploy",
      "offset": [
        2382,
        2386
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "252": {
      "fn": "Deployer.Deploy",
      "offset": [
        2372,
        2380
      ],
      "op": "DUP6",
      "path": "18"
    },
    "253": {
      "fn": "Deployer.Deploy",
      "offset": [
        2368,
        2387
      ],
      "op": "ADD",
      "path": "18"
    },
    "254": {
      "fn": "Deployer.Deploy",
      "offset": [
        2237,
        2248
      ],
      "op": "CALLVALUE",
      "path": "18"
    },
    "255": {
      "fn": "Deployer.Deploy",
      "offset": [
        2212,
        2546
      ],
      "op": "CREATE2",
      "path": "18"
    },
    "256": {
      "fn": "Deployer.Deploy",
      "offset": [
        2204,
        2546
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "257": {
      "fn": "Deployer.Deploy",
      "offset": [
        2204,
        2546
      ],
      "op": "POP",
      "path": "18"
    },
    "258": {
      "fn": "Deployer.Deploy",
      "offset": [
        2582,
        2586
      ],
      "op": "DUP1",
      "path": "18"
    },
    "259": {
      "fn": "Deployer.Deploy",
      "offset": [
        2570,
        2587
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "260": {
      "fn": "Deployer.Deploy",
      "offset": [
        2560,
        2633
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10C"
    },
    "263": {
      "fn": "Deployer.Deploy",
      "offset": [
        2560,
        2633
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "264": {
      "fn": "Deployer.Deploy",
      "offset": [
        2617,
        2618
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "266": {
      "fn": "Deployer.Deploy",
      "offset": [
        2614,
        2615
      ],
      "op": "DUP1",
      "path": "18"
    },
    "267": {
      "fn": "Deployer.Deploy",
      "offset": [
        2607,
        2619
      ],
      "op": "REVERT",
      "path": "18"
    },
    "268": {
      "fn": "Deployer.Deploy",
      "offset": [
        2560,
        2633
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "273": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "275": {
      "op": "SHL"
    },
    "276": {
      "op": "SUB"
    },
    "277": {
      "fn": "Deployer.Deploy",
      "offset": [
        2653,
        2667
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 0
    },
    "278": {
      "fn": "Deployer.Deploy",
      "offset": [
        2653,
        2667
      ],
      "op": "AND",
      "path": "18"
    },
    "279": {
      "fn": "Deployer.Deploy",
      "offset": [
        2653,
        2661
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "281": {
      "fn": "Deployer.Deploy",
      "offset": [
        2653,
        2667
      ],
      "op": "DUP2",
      "path": "18"
    },
    "282": {
      "fn": "Deployer.Deploy",
      "offset": [
        2653,
        2667
      ],
      "op": "DUP2",
      "path": "18"
    },
    "283": {
      "fn": "Deployer.Deploy",
      "offset": [
        2653,
        2667
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "284": {
      "fn": "Deployer.Deploy",
      "offset": [
        2653,
        2667
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "286": {
      "fn": "Deployer.Deploy",
      "offset": [
        2653,
        2667
      ],
      "op": "DUP2",
      "path": "18"
    },
    "287": {
      "fn": "Deployer.Deploy",
      "offset": [
        2653,
        2667
      ],
      "op": "DUP2",
      "path": "18"
    },
    "288": {
      "fn": "Deployer.Deploy",
      "offset": [
        2653,
        2667
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "289": {
      "fn": "Deployer.Deploy",
      "offset": [
        2653,
        2667
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "291": {
      "fn": "Deployer.Deploy",
      "offset": [
        2653,
        2667
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "292": {
      "fn": "Deployer.Deploy",
      "offset": [
        2653,
        2667
      ],
      "op": "DUP3",
      "path": "18"
    },
    "293": {
      "fn": "Deployer.Deploy",
      "offset": [
        2653,
        2667
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "294": {
      "fn": "Deployer.Deploy",
      "offset": [
        2653,
        2667
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "295": {
      "fn": "Deployer.Deploy",
      "offset": [
        2653,
        2680
      ],
      "op": "DUP1",
      "path": "18"
    },
    "296": {
      "fn": "Deployer.Deploy",
      "offset": [
        2653,
        2680
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "301": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "303": {
      "op": "SHL"
    },
    "304": {
      "op": "SUB"
    },
    "305": {
      "op": "NOT"
    },
    "306": {
      "fn": "Deployer.Deploy",
      "offset": [
        2653,
        2680
      ],
      "op": "AND",
      "path": "18"
    },
    "307": {
      "fn": "Deployer.Deploy",
      "offset": [
        2670,
        2680
      ],
      "op": "CALLER",
      "path": "18"
    },
    "308": {
      "fn": "Deployer.Deploy",
      "offset": [
        2653,
        2680
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "309": {
      "fn": "Deployer.Deploy",
      "offset": [
        2653,
        2680
      ],
      "op": "DUP2",
      "path": "18"
    },
    "310": {
      "fn": "Deployer.Deploy",
      "offset": [
        2653,
        2680
      ],
      "op": "OR",
      "path": "18"
    },
    "311": {
      "fn": "Deployer.Deploy",
      "offset": [
        2653,
        2680
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "312": {
      "fn": "Deployer.Deploy",
      "offset": [
        2653,
        2680
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "313": {
      "fn": "Deployer.Deploy",
      "offset": [
        2653,
        2680
      ],
      "op": "SSTORE",
      "path": "18"
    },
    "314": {
      "fn": "Deployer.Deploy",
      "offset": [
        2695,
        2728
      ],
      "op": "DUP3",
      "path": "18",
      "statement": 1
    },
    "315": {
      "fn": "Deployer.Deploy",
      "offset": [
        2695,
        2728
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "316": {
      "op": "SWAP4"
    },
    "317": {
      "op": "DUP5"
    },
    "318": {
      "op": "MSTORE"
    },
    "319": {
      "op": "SWAP1"
    },
    "320": {
      "op": "DUP4"
    },
    "321": {
      "op": "ADD"
    },
    "322": {
      "op": "DUP6"
    },
    "323": {
      "op": "SWAP1"
    },
    "324": {
      "op": "MSTORE"
    },
    "325": {
      "fn": "Deployer.Deploy",
      "offset": [
        2670,
        2680
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "326": {
      "fn": "Deployer.Deploy",
      "offset": [
        2695,
        2728
      ],
      "op": "PUSH32",
      "path": "18",
      "value": "0x78C9D1E385F0BB7D4DD0237EB7AB708B0780C73031080977CD5469BAB04ED690"
    },
    "359": {
      "fn": "Deployer.Deploy",
      "offset": [
        2695,
        2728
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "360": {
      "op": "ADD"
    },
    "361": {
      "fn": "Deployer.Deploy",
      "offset": [
        2695,
        2728
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "363": {
      "fn": "Deployer.Deploy",
      "offset": [
        2695,
        2728
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "364": {
      "fn": "Deployer.Deploy",
      "offset": [
        2695,
        2728
      ],
      "op": "DUP1",
      "path": "18"
    },
    "365": {
      "fn": "Deployer.Deploy",
      "offset": [
        2695,
        2728
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "366": {
      "fn": "Deployer.Deploy",
      "offset": [
        2695,
        2728
      ],
      "op": "SUB",
      "path": "18"
    },
    "367": {
      "fn": "Deployer.Deploy",
      "offset": [
        2695,
        2728
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "368": {
      "fn": "Deployer.Deploy",
      "offset": [
        2695,
        2728
      ],
      "op": "LOG2",
      "path": "18"
    },
    "369": {
      "fn": "Deployer.Deploy",
      "offset": [
        1735,
        2735
      ],
      "op": "POP",
      "path": "18"
    },
    "370": {
      "fn": "Deployer.Deploy",
      "offset": [
        1672,
        2735
      ],
      "op": "POP",
      "path": "18"
    },
    "371": {
      "fn": "Deployer.Deploy",
      "offset": [
        1672,
        2735
      ],
      "op": "POP",
      "path": "18"
    },
    "372": {
      "fn": "Deployer.Deploy",
      "jump": "o",
      "offset": [
        1672,
        2735
      ],
      "op": "JUMP",
      "path": "18"
    },
    "373": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2741,
        2933
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "378": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "380": {
      "op": "SHL"
    },
    "381": {
      "op": "SUB"
    },
    "382": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2829,
        2844
      ],
      "op": "DUP3",
      "path": "18",
      "statement": 2
    },
    "383": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2829,
        2844
      ],
      "op": "DUP2",
      "path": "18"
    },
    "384": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2829,
        2844
      ],
      "op": "AND",
      "path": "18"
    },
    "385": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2829,
        2837
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "387": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2829,
        2844
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "388": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2829,
        2844
      ],
      "op": "DUP2",
      "path": "18"
    },
    "389": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2829,
        2844
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "390": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2829,
        2844
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x20"
    },
    "392": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2829,
        2844
      ],
      "op": "DUP2",
      "path": "18"
    },
    "393": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2829,
        2844
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "394": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2829,
        2844
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "395": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2829,
        2844
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "397": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2829,
        2844
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "398": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2829,
        2844
      ],
      "op": "KECCAK256",
      "path": "18"
    },
    "399": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2829,
        2844
      ],
      "op": "SLOAD",
      "path": "18"
    },
    "400": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2829,
        2844
      ],
      "op": "AND",
      "path": "18"
    },
    "401": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2848,
        2858
      ],
      "op": "CALLER",
      "path": "18"
    },
    "402": {
      "branch": 4,
      "fn": "Deployer.transferOwnership",
      "offset": [
        2829,
        2858
      ],
      "op": "EQ",
      "path": "18"
    },
    "403": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2821,
        2873
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x1CF"
    },
    "406": {
      "branch": 4,
      "fn": "Deployer.transferOwnership",
      "offset": [
        2821,
        2873
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "407": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2821,
        2873
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "409": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2821,
        2873
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "410": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "414": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "416": {
      "op": "SHL"
    },
    "417": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2821,
        2873
      ],
      "op": "DUP2",
      "path": "18"
    },
    "418": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2821,
        2873
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "419": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "421": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2821,
        2873
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "423": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2821,
        2873
      ],
      "op": "DUP3",
      "path": "18"
    },
    "424": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2821,
        2873
      ],
      "op": "ADD",
      "path": "18"
    },
    "425": {
      "op": "MSTORE"
    },
    "426": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "428": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "430": {
      "op": "DUP3"
    },
    "431": {
      "op": "ADD"
    },
    "432": {
      "op": "MSTORE"
    },
    "433": {
      "op": "PUSH10",
      "value": "0x27B7363C9037BBB732B9"
    },
    "444": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "446": {
      "op": "SHL"
    },
    "447": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "449": {
      "op": "DUP3"
    },
    "450": {
      "op": "ADD"
    },
    "451": {
      "op": "MSTORE"
    },
    "452": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "454": {
      "op": "ADD"
    },
    "455": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2821,
        2873
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "457": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2821,
        2873
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "458": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2821,
        2873
      ],
      "op": "DUP1",
      "path": "18"
    },
    "459": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2821,
        2873
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "460": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2821,
        2873
      ],
      "op": "SUB",
      "path": "18"
    },
    "461": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2821,
        2873
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "462": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2821,
        2873
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "18"
    },
    "463": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2821,
        2873
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "464": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "PUSH1",
      "path": "18",
      "statement": 3,
      "value": "0x40"
    },
    "466": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "467": {
      "op": "PUSH4",
      "value": "0xF2FDE38B"
    },
    "472": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "474": {
      "op": "SHL"
    },
    "475": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "DUP2",
      "path": "18"
    },
    "476": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "MSTORE",
      "path": "18"
    },
    "477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "481": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "483": {
      "op": "SHL"
    },
    "484": {
      "op": "SUB"
    },
    "485": {
      "op": "DUP3"
    },
    "486": {
      "op": "DUP2"
    },
    "487": {
      "op": "AND"
    },
    "488": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x4"
    },
    "490": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "DUP4",
      "path": "18"
    },
    "491": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "ADD",
      "path": "18"
    },
    "492": {
      "op": "MSTORE"
    },
    "493": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2915
      ],
      "op": "DUP4",
      "path": "18"
    },
    "494": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2915
      ],
      "op": "AND",
      "path": "18"
    },
    "495": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2915
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "496": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2915
      ],
      "op": "PUSH4",
      "path": "18",
      "value": "0xF2FDE38B"
    },
    "501": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2915
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "502": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "504": {
      "op": "ADD"
    },
    "505": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "507": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x40"
    },
    "509": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "MLOAD",
      "path": "18"
    },
    "510": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "DUP1",
      "path": "18"
    },
    "511": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "DUP4",
      "path": "18"
    },
    "512": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "SUB",
      "path": "18"
    },
    "513": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "DUP2",
      "path": "18"
    },
    "514": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "516": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "DUP8",
      "path": "18"
    },
    "517": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "DUP1",
      "path": "18"
    },
    "518": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "EXTCODESIZE",
      "path": "18"
    },
    "519": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "520": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "DUP1",
      "path": "18"
    },
    "521": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "522": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x212"
    },
    "525": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "526": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "528": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "DUP1",
      "path": "18"
    },
    "529": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "REVERT",
      "path": "18"
    },
    "530": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "531": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "POP",
      "path": "18"
    },
    "532": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "GAS",
      "path": "18"
    },
    "533": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "CALL",
      "path": "18"
    },
    "534": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "535": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "DUP1",
      "path": "18"
    },
    "536": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "537": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x226"
    },
    "540": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "541": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "542": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "544": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "DUP1",
      "path": "18"
    },
    "545": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "RETURNDATACOPY",
      "path": "18"
    },
    "546": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "RETURNDATASIZE",
      "path": "18"
    },
    "547": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "549": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "REVERT",
      "path": "18"
    },
    "550": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "551": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "POP",
      "path": "18"
    },
    "552": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "POP",
      "path": "18"
    },
    "553": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "POP",
      "path": "18"
    },
    "554": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2883,
        2926
      ],
      "op": "POP",
      "path": "18"
    },
    "555": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2741,
        2933
      ],
      "op": "POP",
      "path": "18"
    },
    "556": {
      "fn": "Deployer.transferOwnership",
      "offset": [
        2741,
        2933
      ],
      "op": "POP",
      "path": "18"
    },
    "557": {
      "fn": "Deployer.transferOwnership",
      "jump": "o",
      "offset": [
        2741,
        2933
      ],
      "op": "JUMP",
      "path": "18"
    },
    "558": {
      "op": "JUMPDEST"
    },
    "559": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "564": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "566": {
      "op": "SHL"
    },
    "567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "569": {
      "op": "MSTORE"
    },
    "570": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "572": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "574": {
      "op": "MSTORE"
    },
    "575": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "579": {
      "op": "REVERT"
    },
    "580": {
      "op": "JUMPDEST"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "583": {
      "op": "DUP1"
    },
    "584": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "586": {
      "op": "DUP4"
    },
    "587": {
      "op": "DUP6"
    },
    "588": {
      "op": "SUB"
    },
    "589": {
      "op": "SLT"
    },
    "590": {
      "op": "ISZERO"
    },
    "591": {
      "op": "PUSH2",
      "value": "0x257"
    },
    "594": {
      "op": "JUMPI"
    },
    "595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "597": {
      "op": "DUP1"
    },
    "598": {
      "op": "REVERT"
    },
    "599": {
      "op": "JUMPDEST"
    },
    "600": {
      "op": "DUP3"
    },
    "601": {
      "op": "CALLDATALOAD"
    },
    "602": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "611": {
      "op": "DUP1"
    },
    "612": {
      "op": "DUP3"
    },
    "613": {
      "op": "GT"
    },
    "614": {
      "op": "ISZERO"
    },
    "615": {
      "op": "PUSH2",
      "value": "0x26F"
    },
    "618": {
      "op": "JUMPI"
    },
    "619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "621": {
      "op": "DUP1"
    },
    "622": {
      "op": "REVERT"
    },
    "623": {
      "op": "JUMPDEST"
    },
    "624": {
      "op": "DUP2"
    },
    "625": {
      "op": "DUP6"
    },
    "626": {
      "op": "ADD"
    },
    "627": {
      "op": "SWAP2"
    },
    "628": {
      "op": "POP"
    },
    "629": {
      "op": "DUP6"
    },
    "630": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "632": {
      "op": "DUP4"
    },
    "633": {
      "op": "ADD"
    },
    "634": {
      "op": "SLT"
    },
    "635": {
      "op": "PUSH2",
      "value": "0x283"
    },
    "638": {
      "op": "JUMPI"
    },
    "639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "641": {
      "op": "DUP1"
    },
    "642": {
      "op": "REVERT"
    },
    "643": {
      "op": "JUMPDEST"
    },
    "644": {
      "op": "DUP2"
    },
    "645": {
      "op": "CALLDATALOAD"
    },
    "646": {
      "op": "DUP2"
    },
    "647": {
      "op": "DUP2"
    },
    "648": {
      "op": "GT"
    },
    "649": {
      "op": "ISZERO"
    },
    "650": {
      "op": "PUSH2",
      "value": "0x295"
    },
    "653": {
      "op": "JUMPI"
    },
    "654": {
      "op": "PUSH2",
      "value": "0x295"
    },
    "657": {
      "op": "PUSH2",
      "value": "0x22E"
    },
    "660": {
      "jump": "i",
      "op": "JUMP"
    },
    "661": {
      "op": "JUMPDEST"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "664": {
      "op": "MLOAD"
    },
    "665": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "667": {
      "op": "DUP3"
    },
    "668": {
      "op": "ADD"
    },
    "669": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "671": {
      "op": "NOT"
    },
    "672": {
      "op": "SWAP1"
    },
    "673": {
      "op": "DUP2"
    },
    "674": {
      "op": "AND"
    },
    "675": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "677": {
      "op": "ADD"
    },
    "678": {
      "op": "AND"
    },
    "679": {
      "op": "DUP2"
    },
    "680": {
      "op": "ADD"
    },
    "681": {
      "op": "SWAP1"
    },
    "682": {
      "op": "DUP4"
    },
    "683": {
      "op": "DUP3"
    },
    "684": {
      "op": "GT"
    },
    "685": {
      "op": "DUP2"
    },
    "686": {
      "op": "DUP4"
    },
    "687": {
      "op": "LT"
    },
    "688": {
      "op": "OR"
    },
    "689": {
      "op": "ISZERO"
    },
    "690": {
      "op": "PUSH2",
      "value": "0x2BD"
    },
    "693": {
      "op": "JUMPI"
    },
    "694": {
      "op": "PUSH2",
      "value": "0x2BD"
    },
    "697": {
      "op": "PUSH2",
      "value": "0x22E"
    },
    "700": {
      "jump": "i",
      "op": "JUMP"
    },
    "701": {
      "op": "JUMPDEST"
    },
    "702": {
      "op": "DUP2"
    },
    "703": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "705": {
      "op": "MSTORE"
    },
    "706": {
      "op": "DUP3"
    },
    "707": {
      "op": "DUP2"
    },
    "708": {
      "op": "MSTORE"
    },
    "709": {
      "op": "DUP9"
    },
    "710": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "712": {
      "op": "DUP5"
    },
    "713": {
      "op": "DUP8"
    },
    "714": {
      "op": "ADD"
    },
    "715": {
      "op": "ADD"
    },
    "716": {
      "op": "GT"
    },
    "717": {
      "op": "ISZERO"
    },
    "718": {
      "op": "PUSH2",
      "value": "0x2D6"
    },
    "721": {
      "op": "JUMPI"
    },
    "722": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "724": {
      "op": "DUP1"
    },
    "725": {
      "op": "REVERT"
    },
    "726": {
      "op": "JUMPDEST"
    },
    "727": {
      "op": "DUP3"
    },
    "728": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "730": {
      "op": "DUP7"
    },
    "731": {
      "op": "ADD"
    },
    "732": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "734": {
      "op": "DUP4"
    },
    "735": {
      "op": "ADD"
    },
    "736": {
      "op": "CALLDATACOPY"
    },
    "737": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "741": {
      "op": "SWAP4"
    },
    "742": {
      "op": "DUP3"
    },
    "743": {
      "op": "ADD"
    },
    "744": {
      "op": "DUP5"
    },
    "745": {
      "op": "ADD"
    },
    "746": {
      "op": "MSTORE"
    },
    "747": {
      "op": "SWAP9"
    },
    "748": {
      "op": "SWAP7"
    },
    "749": {
      "op": "SWAP1"
    },
    "750": {
      "op": "SWAP2"
    },
    "751": {
      "op": "ADD"
    },
    "752": {
      "op": "CALLDATALOAD"
    },
    "753": {
      "op": "SWAP7"
    },
    "754": {
      "op": "POP"
    },
    "755": {
      "op": "POP"
    },
    "756": {
      "op": "POP"
    },
    "757": {
      "op": "POP"
    },
    "758": {
      "op": "POP"
    },
    "759": {
      "op": "POP"
    },
    "760": {
      "jump": "o",
      "op": "JUMP"
    },
    "761": {
      "op": "JUMPDEST"
    },
    "762": {
      "op": "DUP1"
    },
    "763": {
      "op": "CALLDATALOAD"
    },
    "764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "770": {
      "op": "SHL"
    },
    "771": {
      "op": "SUB"
    },
    "772": {
      "op": "DUP2"
    },
    "773": {
      "op": "AND"
    },
    "774": {
      "op": "DUP2"
    },
    "775": {
      "op": "EQ"
    },
    "776": {
      "op": "PUSH2",
      "value": "0x310"
    },
    "779": {
      "op": "JUMPI"
    },
    "780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "782": {
      "op": "DUP1"
    },
    "783": {
      "op": "REVERT"
    },
    "784": {
      "op": "JUMPDEST"
    },
    "785": {
      "op": "SWAP2"
    },
    "786": {
      "op": "SWAP1"
    },
    "787": {
      "op": "POP"
    },
    "788": {
      "jump": "o",
      "op": "JUMP"
    },
    "789": {
      "op": "JUMPDEST"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "792": {
      "op": "DUP1"
    },
    "793": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "795": {
      "op": "DUP4"
    },
    "796": {
      "op": "DUP6"
    },
    "797": {
      "op": "SUB"
    },
    "798": {
      "op": "SLT"
    },
    "799": {
      "op": "ISZERO"
    },
    "800": {
      "op": "PUSH2",
      "value": "0x328"
    },
    "803": {
      "op": "JUMPI"
    },
    "804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "806": {
      "op": "DUP1"
    },
    "807": {
      "op": "REVERT"
    },
    "808": {
      "op": "JUMPDEST"
    },
    "809": {
      "op": "PUSH2",
      "value": "0x331"
    },
    "812": {
      "op": "DUP4"
    },
    "813": {
      "op": "PUSH2",
      "value": "0x2F9"
    },
    "816": {
      "jump": "i",
      "op": "JUMP"
    },
    "817": {
      "op": "JUMPDEST"
    },
    "818": {
      "op": "SWAP2"
    },
    "819": {
      "op": "POP"
    },
    "820": {
      "op": "PUSH2",
      "value": "0x33F"
    },
    "823": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "825": {
      "op": "DUP5"
    },
    "826": {
      "op": "ADD"
    },
    "827": {
      "op": "PUSH2",
      "value": "0x2F9"
    },
    "830": {
      "jump": "i",
      "op": "JUMP"
    },
    "831": {
      "op": "JUMPDEST"
    },
    "832": {
      "op": "SWAP1"
    },
    "833": {
      "op": "POP"
    },
    "834": {
      "op": "SWAP3"
    },
    "835": {
      "op": "POP"
    },
    "836": {
      "op": "SWAP3"
    },
    "837": {
      "op": "SWAP1"
    },
    "838": {
      "op": "POP"
    },
    "839": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "15a92c748f58808ef81c3cf9d2a68dbe555500a0",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\n/// @title PLAN-BEE Deployer \u5408\u7ea6\u90e8\u7f72\u5668\uff0c\u786e\u4fdd\u5408\u7ea6\u90e8\u7f72\u7684\u5730\u5740\u53ef\u4ee5\u901a\u8fc7create2\u8ba1\u7b97\n/// @author Iwan Cao\n/// @notice \u5f00\u653e\u4f7f\u7528\u5408\u7ea6\uff0c\u4efb\u4f55\u4eba\u53ef\u4ee5\u90e8\u7f72\u5408\u7ea6\u5e76\u4e14\u8ba1\u7b97\u5730\u5740\n/// @dev \u5730\u5740\u8ba1\u7b97\u4f9d\u8d56\uff1a\u90e8\u7f72\u5408\u7ea6\u5730\u5740\uff0c\u5408\u7ea6bytecode\uff0c\u76d0\n/// @custom:planbee \u8fd9\u662f\u4e00\u4e2aPLAN-BEE\u8ba1\u5212\u8ba4\u8bc1\u7684\u5408\u7ea6\n\ninterface Ownable {\n    function transferOwnership(address) external;\n}\n\ncontract Deployer {\n    event Deployed(address addr, address indexed owner, uint256 salt);\n\n    mapping(address => address) deployed;\n\n    // 1. \u83b7\u53d6\u8981\u90e8\u7f72\u7684\u5408\u7ea6\u5b57\u8282\u7801\n    // // \u6ce8\u610f\uff1a_owner \u548c _foo \u662f TestContract \u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\n    // function getBytecode() public pure returns (bytes memory) {\n    //     bytes memory bytecode = type(Registry).creationCode;\n\n    //     return abi.encodePacked(bytecode, abi.encode());\n    // }\n\n    // 2. \u8ba1\u7b97\u8981\u90e8\u7f72\u7684\u5408\u7ea6\u5730\u5740\n    // \u6ce8\u610f\uff1a_salt \u662f\u7528\u4e8e\u521b\u5efa\u5730\u5740\u7684\u968f\u673a\u6570\n    function getAddress(bytes memory bytecode, uint256 _salt)\n        public\n        view\n        returns (address)\n    {\n        bytes32 hash = keccak256(\n            abi.encodePacked(\n                bytes1(0xff),\n                address(this),\n                _salt,\n                keccak256(bytecode)\n            )\n        );\n\n        // \u6ce8\u610f\uff1a\u5c06\u6700\u540e 20 \u4e2a\u5b57\u8282\u7684\u54c8\u5e0c\u503c\u8f6c\u6362\u4e3a\u5730\u5740\n        return address(uint160(uint256(hash)));\n    }\n\n    // 3. \u90e8\u7f72\u5408\u7ea6\n    // \u6ce8\u610f\uff1a\n    // \u68c0\u67e5\u4e8b\u4ef6\u65e5\u5fd7 Deployed\uff0c\u5176\u4e2d\u5305\u542b\u5df2\u90e8\u7f72\u7684 TestContract \u7684\u5730\u5740\u3002\n    // \u65e5\u5fd7\u4e2d\u7684\u5730\u5740\u5e94\u8be5\u7b49\u4e8e\u4ece\u4e0a\u9762\u8ba1\u7b97\u7684\u5730\u5740\u3002\n    function Deploy(bytes memory bytecode, uint256 _salt) external {\n        address addr;\n        // bytes memory bytecode = getBytecode();\n\n        /*\n        \u6ce8\u610f: \u5982\u4f55\u8c03\u7528 create2 ? \n\n        create2(v, p, n, s)\n        \u4f7f\u7528\u5185\u5b58 p \u5230 p + n \u7684\u4ee3\u7801\u521b\u5efa\u65b0\u5408\u7ea6\n        \u5e76\u53d1\u9001 v wei\n        \u5e76\u8fd4\u56de\u65b0\u5730\u5740\n        where new address = \u524d 20 bytes of hash\n        hash= keccak256(0xff + address(this) + s + keccak256(mem[p\u2026(p+n)))\n        s = big-endian 256-bit value\n        */\n        assembly {\n            addr := create2(\n                callvalue(), // wei sent with current call\n                // Actual code starts after skipping the first 32 bytes\n                add(bytecode, 0x20),\n                mload(bytecode), // Load the size of code contained in the first 32 bytes\n                _salt // Salt from function arguments\n            )\n\n            if iszero(extcodesize(addr)) {\n                revert(0, 0)\n            }\n        }\n\n        deployed[addr] = msg.sender;\n        emit Deployed(addr, msg.sender, _salt);\n    }\n\n    function transferOwnership(address _addr, address _newOwner) external {\n        require(deployed[_addr] == msg.sender, \"Only owner\");\n        Ownable(_addr).transferOwnership(_newOwner);\n    }\n}\n",
  "sourceMap": "466:2469:18:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Deployer.sol",
  "type": "contract"
}