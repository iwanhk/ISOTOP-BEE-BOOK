{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "addressAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "addressRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "soulCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "addAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "addAccountByOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "create",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "create",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getOperator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "removeAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "removeAccountByOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newDDS",
          "type": "address"
        }
      ],
      "name": "setDDS",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        }
      ],
      "name": "validateAddress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/access/Ownable.sol",
    "1": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/token/ERC721/ERC721.sol",
    "10": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/Strings.sol",
    "11": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/introspection/ERC165.sol",
    "12": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/introspection/IERC165.sol",
    "13": "contracts/IDDS.sol",
    "14": "contracts/Soul/Soul.sol",
    "15": "interfaces/IFactory.sol",
    "2": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/token/ERC721/IERC721.sol",
    "4": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
    "5": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
    "6": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "8": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/Base64.sol",
    "9": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/Soul/Soul.sol",
    "exportedSymbols": {
      "Address": [
        2807
      ],
      "BEE_DDS_ADDRESS": [
        1250
      ],
      "Base64": [
        1019
      ],
      "Context": [
        1453
      ],
      "ERC165": [
        2831
      ],
      "ERC721": [
        2320
      ],
      "ERC721Enumerable": [
        972
      ],
      "IDDS": [
        1355
      ],
      "IERC165": [
        2843
      ],
      "IERC721": [
        2467
      ],
      "IERC721Enumerable": [
        2351
      ],
      "IERC721Metadata": [
        2512
      ],
      "IERC721Receiver": [
        2485
      ],
      "IFactory": [
        1431
      ],
      "Ownable": [
        634
      ],
      "Soul": [
        521
      ],
      "Strings": [
        1245
      ]
    },
    "id": 522,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:14"
      },
      {
        "absolutePath": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 522,
        "sourceUnit": 1246,
        "src": "58:51:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 522,
        "sourceUnit": 635,
        "src": "110:52:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 522,
        "sourceUnit": 973,
        "src": "163:78:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/iwan/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/Base64.sol",
        "file": "@openzeppelin/contracts/utils/Base64.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 522,
        "sourceUnit": 1020,
        "src": "242:50:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/IDDS.sol",
        "file": "../IDDS.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 522,
        "sourceUnit": 1356,
        "src": "293:21:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IFactory.sol",
        "file": "../../interfaces/IFactory.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 522,
        "sourceUnit": 1432,
        "src": "315:39:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8,
              "name": "ERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 972,
              "src": "373:16:14"
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "373:16:14"
          },
          {
            "baseName": {
              "id": 10,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 634,
              "src": "391:7:14"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "391:7:14"
          }
        ],
        "canonicalName": "Soul",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 521,
        "linearizedBaseContracts": [
          521,
          634,
          972,
          2351,
          2320,
          2512,
          2467,
          2831,
          2843,
          1453
        ],
        "name": "Soul",
        "nameLocation": "365:4:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 14,
            "libraryName": {
              "id": 12,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1245,
              "src": "411:7:14"
            },
            "nodeType": "UsingForDirective",
            "src": "405:26:14",
            "typeName": {
              "id": 13,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "423:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "global": false,
            "id": 17,
            "libraryName": {
              "id": 15,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1245,
              "src": "442:7:14"
            },
            "nodeType": "UsingForDirective",
            "src": "436:26:14",
            "typeName": {
              "id": 16,
              "name": "uint160",
              "nodeType": "ElementaryTypeName",
              "src": "454:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint160",
                "typeString": "uint160"
              }
            }
          },
          {
            "anonymous": false,
            "eventSelector": "cad03a9101bd852b136d161a1b16b7ba008655decd17a2faec9259b23b5045ba",
            "id": 23,
            "name": "soulCreated",
            "nameLocation": "474:11:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "502:2:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "486:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "486:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "514:4:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "506:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "506:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "485:34:14"
            },
            "src": "468:52:14"
          },
          {
            "anonymous": false,
            "eventSelector": "90bcc508602ce6509afae3103f5fa4bd917ecdd0ffa791ef4ffb51bbaf190822",
            "id": 29,
            "name": "addressAdded",
            "nameLocation": "531:12:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "560:2:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "544:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "544:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "572:4:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "564:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "564:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "543:34:14"
            },
            "src": "525:53:14"
          },
          {
            "anonymous": false,
            "eventSelector": "cb55b9c460a26528d8133448da62fe50f8b555cbf7b6851f38aee64ac07c9782",
            "id": 35,
            "name": "addressRemoved",
            "nameLocation": "589:14:14",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "620:2:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "604:18:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "604:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "632:4:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "624:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "624:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "603:34:14"
            },
            "src": "583:55:14"
          },
          {
            "constant": false,
            "id": 38,
            "mutability": "mutable",
            "name": "dds",
            "nameLocation": "649:3:14",
            "nodeType": "VariableDeclaration",
            "scope": 521,
            "src": "644:8:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IDDS_$1355",
              "typeString": "contract IDDS"
            },
            "typeName": {
              "id": 37,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 36,
                "name": "IDDS",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1355,
                "src": "644:4:14"
              },
              "referencedDeclaration": 1355,
              "src": "644:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDDS_$1355",
                "typeString": "contract IDDS"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 42,
            "mutability": "mutable",
            "name": "owners",
            "nameLocation": "686:6:14",
            "nodeType": "VariableDeclaration",
            "scope": 521,
            "src": "658:34:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 41,
              "keyType": {
                "id": 39,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "666:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "658:27:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 40,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "677:7:14",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 48,
            "mutability": "mutable",
            "name": "accounts",
            "nameLocation": "743:8:14",
            "nodeType": "VariableDeclaration",
            "scope": 521,
            "src": "698:53:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(address => bool))"
            },
            "typeName": {
              "id": 47,
              "keyType": {
                "id": 43,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "706:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "698:44:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(address => bool))"
              },
              "valueType": {
                "id": 46,
                "keyType": {
                  "id": 44,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "725:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "717:24:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 45,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "736:4:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 61,
              "nodeType": "Block",
              "src": "798:44:14",
              "statements": [
                {
                  "expression": {
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 55,
                      "name": "dds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "808:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDDS_$1355",
                        "typeString": "contract IDDS"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 57,
                          "name": "BEE_DDS_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1250,
                          "src": "819:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 56,
                        "name": "IDDS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1355,
                        "src": "814:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IDDS_$1355_$",
                          "typeString": "type(contract IDDS)"
                        }
                      },
                      "id": 58,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "814:21:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDDS_$1355",
                        "typeString": "contract IDDS"
                      }
                    },
                    "src": "808:27:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDDS_$1355",
                      "typeString": "contract IDDS"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "808:27:14"
                }
              ]
            },
            "id": 62,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "536f756c4e4654",
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "779:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a19d9259bc5330cda92090d56b4592e9fd9b27b3790e3d33f266b94e8754bfa5",
                      "typeString": "literal_string \"SoulNFT\""
                    },
                    "value": "SoulNFT"
                  },
                  {
                    "hexValue": "534f554c",
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "790:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b656f7946f488f9150b580390f27b66833dd180ccc62efd12c3d89380c37a987",
                      "typeString": "literal_string \"SOUL\""
                    },
                    "value": "SOUL"
                  }
                ],
                "id": 53,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 50,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2320,
                  "src": "772:6:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "772:25:14"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "769:2:14"
            },
            "returnParameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "798:0:14"
            },
            "scope": 521,
            "src": "758:84:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 75,
              "nodeType": "Block",
              "src": "900:36:14",
              "statements": [
                {
                  "expression": {
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 69,
                      "name": "dds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "910:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDDS_$1355",
                        "typeString": "contract IDDS"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 71,
                          "name": "_newDDS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "921:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 70,
                        "name": "IDDS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1355,
                        "src": "916:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IDDS_$1355_$",
                          "typeString": "type(contract IDDS)"
                        }
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "916:13:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDDS_$1355",
                        "typeString": "contract IDDS"
                      }
                    },
                    "src": "910:19:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDDS_$1355",
                      "typeString": "contract IDDS"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "910:19:14"
                }
              ]
            },
            "functionSelector": "0d6752b0",
            "id": 76,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 67,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 66,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 553,
                  "src": "890:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "890:9:14"
              }
            ],
            "name": "setDDS",
            "nameLocation": "857:6:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "mutability": "mutable",
                  "name": "_newDDS",
                  "nameLocation": "872:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "864:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "864:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "863:17:14"
            },
            "returnParameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "900:0:14"
            },
            "scope": 521,
            "src": "848:88:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 87,
              "nodeType": "Block",
              "src": "984:96:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 82,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "1054:2:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "1054:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 84,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "1065:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 81,
                      "name": "_mintTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "1046:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1046:27:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "1046:27:14"
                }
              ]
            },
            "functionSelector": "780900dc",
            "id": 88,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "create",
            "nameLocation": "951:6:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "966:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "958:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "958:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "957:17:14"
            },
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "984:0:14"
            },
            "scope": 521,
            "src": "942:138:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 157,
              "nodeType": "Block",
              "src": "1141:553:14",
              "statements": [
                {
                  "assignments": [
                    97
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97,
                      "mutability": "mutable",
                      "name": "factory",
                      "nameLocation": "1225:7:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 157,
                      "src": "1216:16:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFactory_$1431",
                        "typeString": "contract IFactory"
                      },
                      "typeName": {
                        "id": 96,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 95,
                          "name": "IFactory",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1431,
                          "src": "1216:8:14"
                        },
                        "referencedDeclaration": 1431,
                        "src": "1216:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFactory_$1431",
                          "typeString": "contract IFactory"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 108,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "49534f544f50",
                                "id": 103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1279:8:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_f9d868d8b934ca274e63e1e00148ee04e62ec0cb0b21fb44b80dbf33bbf98478",
                                  "typeString": "literal_string \"ISOTOP\""
                                },
                                "value": "ISOTOP"
                              },
                              {
                                "hexValue": "4245455f464143544f52595f41444452455353",
                                "id": 104,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1289:21:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c059a418a2377e428ef20eb4490ad6cb300ed74bd050b8a5b9506adeaf07f1a8",
                                  "typeString": "literal_string \"BEE_FACTORY_ADDRESS\""
                                },
                                "value": "BEE_FACTORY_ADDRESS"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_f9d868d8b934ca274e63e1e00148ee04e62ec0cb0b21fb44b80dbf33bbf98478",
                                  "typeString": "literal_string \"ISOTOP\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c059a418a2377e428ef20eb4490ad6cb300ed74bd050b8a5b9506adeaf07f1a8",
                                  "typeString": "literal_string \"BEE_FACTORY_ADDRESS\""
                                }
                              ],
                              "expression": {
                                "id": 101,
                                "name": "dds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38,
                                "src": "1271:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IDDS_$1355",
                                  "typeString": "contract IDDS"
                                }
                              },
                              "id": 102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "get",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1293,
                              "src": "1271:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (string memory,string memory) view external returns (bytes memory)"
                              }
                            },
                            "id": 105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1271:40:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 99,
                            "name": "dds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "1257:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDDS_$1355",
                              "typeString": "contract IDDS"
                            }
                          },
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "toAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1340,
                          "src": "1257:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_address_$",
                            "typeString": "function (bytes memory) pure external returns (address)"
                          }
                        },
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1257:55:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 98,
                      "name": "IFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1431,
                      "src": "1235:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IFactory_$1431_$",
                        "typeString": "type(contract IFactory)"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1235:87:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFactory_$1431",
                      "typeString": "contract IFactory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1216:106:14"
                },
                {
                  "assignments": [
                    113
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 113,
                      "mutability": "mutable",
                      "name": "allowList",
                      "nameLocation": "1349:9:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 157,
                      "src": "1332:26:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 111,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1332:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 112,
                        "nodeType": "ArrayTypeName",
                        "src": "1332:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 118,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "49534f544f5031303430",
                        "id": 116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1390:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5bb25d89213feb0b4c84219036fd7e60c3551626bf8bf0ff8b768efafec77bdf",
                          "typeString": "literal_string \"ISOTOP1040\""
                        },
                        "value": "ISOTOP1040"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5bb25d89213feb0b4c84219036fd7e60c3551626bf8bf0ff8b768efafec77bdf",
                          "typeString": "literal_string \"ISOTOP1040\""
                        }
                      ],
                      "expression": {
                        "id": 114,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "1361:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFactory_$1431",
                          "typeString": "contract IFactory"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getContractsDeployed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1430,
                      "src": "1361:28:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (string memory) view external returns (address[] memory)"
                      }
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1361:42:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1332:71:14"
                },
                {
                  "body": {
                    "id": 151,
                    "nodeType": "Block",
                    "src": "1461:180:14",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 130,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1479:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1479:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 132,
                              "name": "allowList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 113,
                              "src": "1493:9:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 134,
                            "indexExpression": {
                              "id": 133,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 120,
                              "src": "1503:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1493:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1479:26:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 150,
                        "nodeType": "IfStatement",
                        "src": "1475:156:14",
                        "trueBody": {
                          "id": 149,
                          "nodeType": "Block",
                          "src": "1507:124:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 137,
                                    "name": "_to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 90,
                                    "src": "1533:3:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 138,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 92,
                                    "src": "1538:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 136,
                                  "name": "_mintTo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 184,
                                  "src": "1525:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 139,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1525:21:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 140,
                              "nodeType": "ExpressionStatement",
                              "src": "1525:21:14"
                            },
                            {
                              "expression": {
                                "id": 146,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 141,
                                    "name": "owners",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 42,
                                    "src": "1564:6:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                      "typeString": "mapping(uint256 => address)"
                                    }
                                  },
                                  "id": 143,
                                  "indexExpression": {
                                    "id": 142,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 92,
                                    "src": "1571:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "1564:15:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 144,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1582:3:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 145,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1582:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "1564:28:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 147,
                              "nodeType": "ExpressionStatement",
                              "src": "1564:28:14"
                            },
                            {
                              "functionReturnParameters": 94,
                              "id": 148,
                              "nodeType": "Return",
                              "src": "1610:7:14"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 123,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 120,
                      "src": "1434:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 124,
                        "name": "allowList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "1438:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1438:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1434:20:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 152,
                  "initializationExpression": {
                    "assignments": [
                      120
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 120,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1427:1:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 152,
                        "src": "1419:9:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 119,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1419:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 122,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1431:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1419:13:14"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1456:3:14",
                      "subExpression": {
                        "id": 127,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "1456:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 129,
                    "nodeType": "ExpressionStatement",
                    "src": "1456:3:14"
                  },
                  "nodeType": "ForStatement",
                  "src": "1414:227:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "63616c6c6572206e6f7420696e206f70657261746f72206c697374",
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1657:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d28da408af0977e058cc84f96697af66a1f38ad4cb354a4336af41f8a3c4e833",
                          "typeString": "literal_string \"caller not in operator list\""
                        },
                        "value": "caller not in operator list"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d28da408af0977e058cc84f96697af66a1f38ad4cb354a4336af41f8a3c4e833",
                          "typeString": "literal_string \"caller not in operator list\""
                        }
                      ],
                      "id": 153,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "1650:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1650:37:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "1650:37:14"
                }
              ]
            },
            "functionSelector": "0ecaea73",
            "id": 158,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "create",
            "nameLocation": "1095:6:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1110:3:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "1102:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1102:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1123:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "1115:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1115:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1101:30:14"
            },
            "returnParameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1141:0:14"
            },
            "scope": 521,
            "src": "1086:608:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 183,
              "nodeType": "Block",
              "src": "1756:115:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 166,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "1772:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 167,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 162,
                        "src": "1777:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 165,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2030,
                      "src": "1766:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1766:19:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "1766:19:14"
                },
                {
                  "expression": {
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 170,
                          "name": "accounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "1795:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(uint256 => mapping(address => bool))"
                          }
                        },
                        "id": 173,
                        "indexExpression": {
                          "id": 171,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 162,
                          "src": "1804:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1795:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 174,
                      "indexExpression": {
                        "id": 172,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "1813:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1795:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1820:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1795:29:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "1795:29:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 179,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 162,
                        "src": "1851:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 180,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "1860:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 178,
                      "name": "soulCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "1839:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1839:25:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 182,
                  "nodeType": "EmitStatement",
                  "src": "1834:30:14"
                }
              ]
            },
            "id": 184,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintTo",
            "nameLocation": "1709:7:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 160,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1725:3:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "1717:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1717:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 162,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1738:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "1730:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1730:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1716:30:14"
            },
            "returnParameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1756:0:14"
            },
            "scope": 521,
            "src": "1700:171:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 213,
              "nodeType": "Block",
              "src": "1989:136:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 195,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 186,
                            "src": "2015:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 194,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1886,
                          "src": "2007:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2007:16:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f6e6578697374656e7420746f6b656e",
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2025:19:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_92f9e08ca9f4940db78443fe8b05b28dd97a65f97dd0cd6312a15bd070d61d04",
                          "typeString": "literal_string \"nonexistent token\""
                        },
                        "value": "nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_92f9e08ca9f4940db78443fe8b05b28dd97a65f97dd0cd6312a15bd070d61d04",
                          "typeString": "literal_string \"nonexistent token\""
                        }
                      ],
                      "id": 193,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1999:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1999:46:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 199,
                  "nodeType": "ExpressionStatement",
                  "src": "1999:46:14"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 200,
                              "name": "accounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "2064:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(uint256 => mapping(address => bool))"
                              }
                            },
                            "id": 202,
                            "indexExpression": {
                              "id": 201,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 186,
                              "src": "2073:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2064:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 204,
                          "indexExpression": {
                            "id": 203,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 188,
                            "src": "2082:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2064:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 206,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 186,
                                "src": "2100:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 205,
                              "name": "ownerOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1599,
                              "src": "2092:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2092:16:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 208,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 188,
                            "src": "2112:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2092:25:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2064:53:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 211,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2063:55:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 192,
                  "id": 212,
                  "nodeType": "Return",
                  "src": "2056:62:14"
                }
              ]
            },
            "functionSelector": "baf0d49e",
            "id": 214,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateAddress",
            "nameLocation": "1886:15:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 186,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1910:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "1902:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1902:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 188,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "1927:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "1919:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1919:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1901:32:14"
            },
            "returnParameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "1979:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1979:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1978:6:14"
            },
            "scope": 521,
            "src": "1877:248:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 235,
              "nodeType": "Block",
              "src": "2195:122:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 223,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 216,
                            "src": "2229:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 224,
                              "name": "tx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -26,
                              "src": "2238:2:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_transaction",
                                "typeString": "tx"
                              }
                            },
                            "id": 225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "origin",
                            "nodeType": "MemberAccess",
                            "src": "2238:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 222,
                          "name": "validateAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 214,
                          "src": "2213:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (uint256,address) view returns (bool)"
                          }
                        },
                        "id": 226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2213:35:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206f776e6572206f6620736f756c",
                        "id": 227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2250:19:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_34c8c3df1cbeb5cc04f65c01905989a20f93d75cd2f20af7218b82f79c76b01e",
                          "typeString": "literal_string \"not owner of soul\""
                        },
                        "value": "not owner of soul"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_34c8c3df1cbeb5cc04f65c01905989a20f93d75cd2f20af7218b82f79c76b01e",
                          "typeString": "literal_string \"not owner of soul\""
                        }
                      ],
                      "id": 221,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2205:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2205:65:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "2205:65:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 231,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 216,
                        "src": "2292:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 232,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 218,
                        "src": "2301:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 230,
                      "name": "_addAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 327,
                      "src": "2280:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2280:30:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 234,
                  "nodeType": "ExpressionStatement",
                  "src": "2280:30:14"
                }
              ]
            },
            "functionSelector": "ba3d0dec",
            "id": 236,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addAccount",
            "nameLocation": "2140:10:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 216,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2159:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "2151:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 215,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2151:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 218,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "2176:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "2168:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2168:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2150:35:14"
            },
            "returnParameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2195:0:14"
            },
            "scope": 521,
            "src": "2131:186:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 305,
              "nodeType": "Block",
              "src": "2397:549:14",
              "statements": [
                {
                  "assignments": [
                    245
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 245,
                      "mutability": "mutable",
                      "name": "factory",
                      "nameLocation": "2481:7:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 305,
                      "src": "2472:16:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFactory_$1431",
                        "typeString": "contract IFactory"
                      },
                      "typeName": {
                        "id": 244,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 243,
                          "name": "IFactory",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1431,
                          "src": "2472:8:14"
                        },
                        "referencedDeclaration": 1431,
                        "src": "2472:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFactory_$1431",
                          "typeString": "contract IFactory"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 256,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "49534f544f50",
                                "id": 251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2535:8:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_f9d868d8b934ca274e63e1e00148ee04e62ec0cb0b21fb44b80dbf33bbf98478",
                                  "typeString": "literal_string \"ISOTOP\""
                                },
                                "value": "ISOTOP"
                              },
                              {
                                "hexValue": "4245455f464143544f52595f41444452455353",
                                "id": 252,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2545:21:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c059a418a2377e428ef20eb4490ad6cb300ed74bd050b8a5b9506adeaf07f1a8",
                                  "typeString": "literal_string \"BEE_FACTORY_ADDRESS\""
                                },
                                "value": "BEE_FACTORY_ADDRESS"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_f9d868d8b934ca274e63e1e00148ee04e62ec0cb0b21fb44b80dbf33bbf98478",
                                  "typeString": "literal_string \"ISOTOP\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c059a418a2377e428ef20eb4490ad6cb300ed74bd050b8a5b9506adeaf07f1a8",
                                  "typeString": "literal_string \"BEE_FACTORY_ADDRESS\""
                                }
                              ],
                              "expression": {
                                "id": 249,
                                "name": "dds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38,
                                "src": "2527:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IDDS_$1355",
                                  "typeString": "contract IDDS"
                                }
                              },
                              "id": 250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "get",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1293,
                              "src": "2527:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (string memory,string memory) view external returns (bytes memory)"
                              }
                            },
                            "id": 253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2527:40:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 247,
                            "name": "dds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "2513:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDDS_$1355",
                              "typeString": "contract IDDS"
                            }
                          },
                          "id": 248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "toAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1340,
                          "src": "2513:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_address_$",
                            "typeString": "function (bytes memory) pure external returns (address)"
                          }
                        },
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2513:55:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 246,
                      "name": "IFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1431,
                      "src": "2491:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IFactory_$1431_$",
                        "typeString": "type(contract IFactory)"
                      }
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2491:87:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFactory_$1431",
                      "typeString": "contract IFactory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2472:106:14"
                },
                {
                  "assignments": [
                    261
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 261,
                      "mutability": "mutable",
                      "name": "allowList",
                      "nameLocation": "2605:9:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 305,
                      "src": "2588:26:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 259,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2588:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 260,
                        "nodeType": "ArrayTypeName",
                        "src": "2588:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 266,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "49534f544f5031303430",
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2646:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5bb25d89213feb0b4c84219036fd7e60c3551626bf8bf0ff8b768efafec77bdf",
                          "typeString": "literal_string \"ISOTOP1040\""
                        },
                        "value": "ISOTOP1040"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5bb25d89213feb0b4c84219036fd7e60c3551626bf8bf0ff8b768efafec77bdf",
                          "typeString": "literal_string \"ISOTOP1040\""
                        }
                      ],
                      "expression": {
                        "id": 262,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 245,
                        "src": "2617:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFactory_$1431",
                          "typeString": "contract IFactory"
                        }
                      },
                      "id": 263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getContractsDeployed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1430,
                      "src": "2617:28:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (string memory) view external returns (address[] memory)"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2617:42:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2588:71:14"
                },
                {
                  "body": {
                    "id": 299,
                    "nodeType": "Block",
                    "src": "2717:176:14",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 278,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2735:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2735:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 280,
                                "name": "allowList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 261,
                                "src": "2749:9:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 282,
                              "indexExpression": {
                                "id": 281,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 268,
                                "src": "2759:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2749:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "2735:26:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 289,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 284,
                                "name": "owners",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42,
                                "src": "2765:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                  "typeString": "mapping(uint256 => address)"
                                }
                              },
                              "id": 286,
                              "indexExpression": {
                                "id": 285,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 238,
                                "src": "2772:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2765:15:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 287,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2784:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2784:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "2765:29:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2735:59:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 298,
                        "nodeType": "IfStatement",
                        "src": "2731:152:14",
                        "trueBody": {
                          "id": 297,
                          "nodeType": "Block",
                          "src": "2796:87:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 292,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 238,
                                    "src": "2826:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 293,
                                    "name": "_account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 240,
                                    "src": "2835:8:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 291,
                                  "name": "_addAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 327,
                                  "src": "2814:11:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                                    "typeString": "function (uint256,address)"
                                  }
                                },
                                "id": 294,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2814:30:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 295,
                              "nodeType": "ExpressionStatement",
                              "src": "2814:30:14"
                            },
                            {
                              "functionReturnParameters": 242,
                              "id": 296,
                              "nodeType": "Return",
                              "src": "2862:7:14"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 271,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 268,
                      "src": "2690:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 272,
                        "name": "allowList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 261,
                        "src": "2694:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2694:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2690:20:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 300,
                  "initializationExpression": {
                    "assignments": [
                      268
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 268,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2683:1:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 300,
                        "src": "2675:9:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 267,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2675:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 270,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2687:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2675:13:14"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2712:3:14",
                      "subExpression": {
                        "id": 275,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "2712:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 277,
                    "nodeType": "ExpressionStatement",
                    "src": "2712:3:14"
                  },
                  "nodeType": "ForStatement",
                  "src": "2670:223:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "63616c6c6572206e6f7420696e206f70657261746f72206c697374",
                        "id": 302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2909:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d28da408af0977e058cc84f96697af66a1f38ad4cb354a4336af41f8a3c4e833",
                          "typeString": "literal_string \"caller not in operator list\""
                        },
                        "value": "caller not in operator list"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d28da408af0977e058cc84f96697af66a1f38ad4cb354a4336af41f8a3c4e833",
                          "typeString": "literal_string \"caller not in operator list\""
                        }
                      ],
                      "id": 301,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "2902:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2902:37:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 304,
                  "nodeType": "ExpressionStatement",
                  "src": "2902:37:14"
                }
              ]
            },
            "functionSelector": "f72868ca",
            "id": 306,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addAccountByOperator",
            "nameLocation": "2332:20:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 238,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2361:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 306,
                  "src": "2353:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2353:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 240,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "2378:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 306,
                  "src": "2370:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 239,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2370:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2352:35:14"
            },
            "returnParameters": {
              "id": 242,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2397:0:14"
            },
            "scope": 521,
            "src": "2323:623:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 326,
              "nodeType": "Block",
              "src": "3017:98:14",
              "statements": [
                {
                  "expression": {
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 313,
                          "name": "accounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "3027:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(uint256 => mapping(address => bool))"
                          }
                        },
                        "id": 316,
                        "indexExpression": {
                          "id": 314,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 308,
                          "src": "3036:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3027:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 317,
                      "indexExpression": {
                        "id": 315,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 310,
                        "src": "3045:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3027:27:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3057:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3027:34:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 320,
                  "nodeType": "ExpressionStatement",
                  "src": "3027:34:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 322,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 308,
                        "src": "3090:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 323,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 310,
                        "src": "3099:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 321,
                      "name": "addressAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "3077:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3077:31:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 325,
                  "nodeType": "EmitStatement",
                  "src": "3072:36:14"
                }
              ]
            },
            "id": 327,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addAccount",
            "nameLocation": "2961:11:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 308,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2981:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "2973:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 307,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2973:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 310,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "2998:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 327,
                  "src": "2990:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2990:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2972:35:14"
            },
            "returnParameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3017:0:14"
            },
            "scope": 521,
            "src": "2952:163:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 348,
              "nodeType": "Block",
              "src": "3188:125:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 336,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 329,
                            "src": "3222:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 337,
                              "name": "tx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -26,
                              "src": "3231:2:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_transaction",
                                "typeString": "tx"
                              }
                            },
                            "id": 338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "origin",
                            "nodeType": "MemberAccess",
                            "src": "3231:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 335,
                          "name": "validateAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 214,
                          "src": "3206:15:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (uint256,address) view returns (bool)"
                          }
                        },
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3206:35:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f74206f776e6572206f6620736f756c",
                        "id": 340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3243:19:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_34c8c3df1cbeb5cc04f65c01905989a20f93d75cd2f20af7218b82f79c76b01e",
                          "typeString": "literal_string \"not owner of soul\""
                        },
                        "value": "not owner of soul"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_34c8c3df1cbeb5cc04f65c01905989a20f93d75cd2f20af7218b82f79c76b01e",
                          "typeString": "literal_string \"not owner of soul\""
                        }
                      ],
                      "id": 334,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3198:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3198:65:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "3198:65:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 344,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 329,
                        "src": "3288:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 345,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 331,
                        "src": "3297:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 343,
                      "name": "_removeAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 448,
                      "src": "3273:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3273:33:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 347,
                  "nodeType": "ExpressionStatement",
                  "src": "3273:33:14"
                }
              ]
            },
            "functionSelector": "c3d7e350",
            "id": 349,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeAccount",
            "nameLocation": "3130:13:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 329,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3152:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 349,
                  "src": "3144:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 328,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3144:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 331,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "3169:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 349,
                  "src": "3161:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 330,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3161:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3143:35:14"
            },
            "returnParameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3188:0:14"
            },
            "scope": 521,
            "src": "3121:192:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 418,
              "nodeType": "Block",
              "src": "3408:552:14",
              "statements": [
                {
                  "assignments": [
                    358
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 358,
                      "mutability": "mutable",
                      "name": "factory",
                      "nameLocation": "3492:7:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 418,
                      "src": "3483:16:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFactory_$1431",
                        "typeString": "contract IFactory"
                      },
                      "typeName": {
                        "id": 357,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 356,
                          "name": "IFactory",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1431,
                          "src": "3483:8:14"
                        },
                        "referencedDeclaration": 1431,
                        "src": "3483:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFactory_$1431",
                          "typeString": "contract IFactory"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 369,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "49534f544f50",
                                "id": 364,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3546:8:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_f9d868d8b934ca274e63e1e00148ee04e62ec0cb0b21fb44b80dbf33bbf98478",
                                  "typeString": "literal_string \"ISOTOP\""
                                },
                                "value": "ISOTOP"
                              },
                              {
                                "hexValue": "4245455f464143544f52595f41444452455353",
                                "id": 365,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3556:21:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c059a418a2377e428ef20eb4490ad6cb300ed74bd050b8a5b9506adeaf07f1a8",
                                  "typeString": "literal_string \"BEE_FACTORY_ADDRESS\""
                                },
                                "value": "BEE_FACTORY_ADDRESS"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_f9d868d8b934ca274e63e1e00148ee04e62ec0cb0b21fb44b80dbf33bbf98478",
                                  "typeString": "literal_string \"ISOTOP\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c059a418a2377e428ef20eb4490ad6cb300ed74bd050b8a5b9506adeaf07f1a8",
                                  "typeString": "literal_string \"BEE_FACTORY_ADDRESS\""
                                }
                              ],
                              "expression": {
                                "id": 362,
                                "name": "dds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38,
                                "src": "3538:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IDDS_$1355",
                                  "typeString": "contract IDDS"
                                }
                              },
                              "id": 363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "get",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1293,
                              "src": "3538:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (string memory,string memory) view external returns (bytes memory)"
                              }
                            },
                            "id": 366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3538:40:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 360,
                            "name": "dds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "3524:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDDS_$1355",
                              "typeString": "contract IDDS"
                            }
                          },
                          "id": 361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "toAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1340,
                          "src": "3524:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_address_$",
                            "typeString": "function (bytes memory) pure external returns (address)"
                          }
                        },
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3524:55:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 359,
                      "name": "IFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1431,
                      "src": "3502:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IFactory_$1431_$",
                        "typeString": "type(contract IFactory)"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3502:87:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFactory_$1431",
                      "typeString": "contract IFactory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3483:106:14"
                },
                {
                  "assignments": [
                    374
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 374,
                      "mutability": "mutable",
                      "name": "allowList",
                      "nameLocation": "3616:9:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 418,
                      "src": "3599:26:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 372,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3599:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 373,
                        "nodeType": "ArrayTypeName",
                        "src": "3599:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 379,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "49534f544f5031303430",
                        "id": 377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3657:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5bb25d89213feb0b4c84219036fd7e60c3551626bf8bf0ff8b768efafec77bdf",
                          "typeString": "literal_string \"ISOTOP1040\""
                        },
                        "value": "ISOTOP1040"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5bb25d89213feb0b4c84219036fd7e60c3551626bf8bf0ff8b768efafec77bdf",
                          "typeString": "literal_string \"ISOTOP1040\""
                        }
                      ],
                      "expression": {
                        "id": 375,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 358,
                        "src": "3628:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFactory_$1431",
                          "typeString": "contract IFactory"
                        }
                      },
                      "id": 376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getContractsDeployed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1430,
                      "src": "3628:28:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (string memory) view external returns (address[] memory)"
                      }
                    },
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3628:42:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3599:71:14"
                },
                {
                  "body": {
                    "id": 412,
                    "nodeType": "Block",
                    "src": "3728:179:14",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 391,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3746:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 392,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3746:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 393,
                                "name": "allowList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 374,
                                "src": "3760:9:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 395,
                              "indexExpression": {
                                "id": 394,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 381,
                                "src": "3770:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3760:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "3746:26:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 397,
                                "name": "owners",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42,
                                "src": "3776:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                  "typeString": "mapping(uint256 => address)"
                                }
                              },
                              "id": 399,
                              "indexExpression": {
                                "id": 398,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 351,
                                "src": "3783:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3776:15:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 400,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3795:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 401,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3795:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "3776:29:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3746:59:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 411,
                        "nodeType": "IfStatement",
                        "src": "3742:155:14",
                        "trueBody": {
                          "id": 410,
                          "nodeType": "Block",
                          "src": "3807:90:14",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 405,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 351,
                                    "src": "3840:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 406,
                                    "name": "_account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 353,
                                    "src": "3849:8:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 404,
                                  "name": "_removeAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 448,
                                  "src": "3825:14:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                                    "typeString": "function (uint256,address)"
                                  }
                                },
                                "id": 407,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3825:33:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 408,
                              "nodeType": "ExpressionStatement",
                              "src": "3825:33:14"
                            },
                            {
                              "functionReturnParameters": 355,
                              "id": 409,
                              "nodeType": "Return",
                              "src": "3876:7:14"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 384,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 381,
                      "src": "3701:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 385,
                        "name": "allowList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 374,
                        "src": "3705:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3705:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3701:20:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 413,
                  "initializationExpression": {
                    "assignments": [
                      381
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 381,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3694:1:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 413,
                        "src": "3686:9:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 380,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3686:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 383,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3698:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3686:13:14"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3723:3:14",
                      "subExpression": {
                        "id": 388,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 381,
                        "src": "3723:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 390,
                    "nodeType": "ExpressionStatement",
                    "src": "3723:3:14"
                  },
                  "nodeType": "ForStatement",
                  "src": "3681:226:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "63616c6c6572206e6f7420696e206f70657261746f72206c697374",
                        "id": 415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3923:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d28da408af0977e058cc84f96697af66a1f38ad4cb354a4336af41f8a3c4e833",
                          "typeString": "literal_string \"caller not in operator list\""
                        },
                        "value": "caller not in operator list"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d28da408af0977e058cc84f96697af66a1f38ad4cb354a4336af41f8a3c4e833",
                          "typeString": "literal_string \"caller not in operator list\""
                        }
                      ],
                      "id": 414,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "3916:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3916:37:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 417,
                  "nodeType": "ExpressionStatement",
                  "src": "3916:37:14"
                }
              ]
            },
            "functionSelector": "5af0de07",
            "id": 419,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeAccountByOperator",
            "nameLocation": "3328:23:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 351,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3360:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 419,
                  "src": "3352:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3352:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 353,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "3377:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 419,
                  "src": "3369:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 352,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3369:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3351:35:14"
            },
            "returnParameters": {
              "id": 355,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3408:0:14"
            },
            "scope": 521,
            "src": "3319:641:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 447,
              "nodeType": "Block",
              "src": "4034:180:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 428,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 421,
                              "src": "4060:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 427,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1599,
                            "src": "4052:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4052:16:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 430,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 423,
                          "src": "4072:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4052:28:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e6e6f742072656d6f7665206f776e6572206f6620746f6b656e",
                        "id": 432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4082:30:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2e54a90c03ef7fc911274c1bf786506226c49e6f7808152ac486e86329e9d244",
                          "typeString": "literal_string \"cannot remove owner of token\""
                        },
                        "value": "cannot remove owner of token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2e54a90c03ef7fc911274c1bf786506226c49e6f7808152ac486e86329e9d244",
                          "typeString": "literal_string \"cannot remove owner of token\""
                        }
                      ],
                      "id": 426,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4044:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4044:69:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 434,
                  "nodeType": "ExpressionStatement",
                  "src": "4044:69:14"
                },
                {
                  "expression": {
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "4124:34:14",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 435,
                          "name": "accounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "4131:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(uint256 => mapping(address => bool))"
                          }
                        },
                        "id": 437,
                        "indexExpression": {
                          "id": 436,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 421,
                          "src": "4140:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4131:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 439,
                      "indexExpression": {
                        "id": 438,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "4149:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4131:27:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 441,
                  "nodeType": "ExpressionStatement",
                  "src": "4124:34:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 443,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 421,
                        "src": "4189:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 444,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "4198:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 442,
                      "name": "addressRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "4174:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4174:33:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 446,
                  "nodeType": "EmitStatement",
                  "src": "4169:38:14"
                }
              ]
            },
            "id": 448,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_removeAccount",
            "nameLocation": "3975:14:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 421,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3998:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 448,
                  "src": "3990:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 420,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3990:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 423,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "4015:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 448,
                  "src": "4007:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4007:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3989:35:14"
            },
            "returnParameters": {
              "id": 425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4034:0:14"
            },
            "scope": 521,
            "src": "3966:248:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 459,
              "nodeType": "Block",
              "src": "4290:39:14",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 455,
                      "name": "owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "4307:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 457,
                    "indexExpression": {
                      "id": 456,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 450,
                      "src": "4314:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4307:15:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 454,
                  "id": 458,
                  "nodeType": "Return",
                  "src": "4300:22:14"
                }
              ]
            },
            "functionSelector": "05f63c8a",
            "id": 460,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOperator",
            "nameLocation": "4229:11:14",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 450,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4249:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 460,
                  "src": "4241:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 449,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4241:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4240:17:14"
            },
            "returnParameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 453,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 460,
                  "src": "4281:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 452,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4281:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4280:9:14"
            },
            "scope": 521,
            "src": "4220:109:14",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1658
            ],
            "body": {
              "id": 519,
              "nodeType": "Block",
              "src": "4467:1362:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 470,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 462,
                            "src": "4493:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 469,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1886,
                          "src": "4485:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4485:16:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f6e6578697374656e7420746f6b656e",
                        "id": 472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4503:19:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_92f9e08ca9f4940db78443fe8b05b28dd97a65f97dd0cd6312a15bd070d61d04",
                          "typeString": "literal_string \"nonexistent token\""
                        },
                        "value": "nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_92f9e08ca9f4940db78443fe8b05b28dd97a65f97dd0cd6312a15bd070d61d04",
                          "typeString": "literal_string \"nonexistent token\""
                        }
                      ],
                      "id": 468,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4477:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4477:46:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 474,
                  "nodeType": "ExpressionStatement",
                  "src": "4477:46:14"
                },
                {
                  "assignments": [
                    476
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 476,
                      "mutability": "mutable",
                      "name": "meta",
                      "nameLocation": "4547:4:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 519,
                      "src": "4534:17:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 475,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4534:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 506,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "7b226e616d65223a2022536f756c2023",
                        "id": 479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4584:18:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_78b274939203ddb02c88dc3faa1e6a6937768ae5786623d12c21fc58f8c0705a",
                          "typeString": "literal_string \"{\"name\": \"Soul #\""
                        },
                        "value": "{\"name\": \"Soul #"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 480,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 462,
                            "src": "4616:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "toString",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1107,
                          "src": "4616:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256) pure returns (string memory)"
                          }
                        },
                        "id": 482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4616:18:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "222c20226465736372697074696f6e223a2022536f756c204e4654222c2022696d616765223a2022646174613a696d6167652f7376672b786d6c3b6261736536342c",
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4648:68:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_92b72c020fe8c1e6d193630fa5d287a056f7849b814f581fba6e34845143de15",
                          "typeString": "literal_string \"\", \"description\": \"Soul NFT\", \"image\": \"data:image/svg+xml;base64,\""
                        },
                        "value": "\", \"description\": \"Soul NFT\", \"image\": \"data:image/svg+xml;base64,"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "3c7376672077696474683d2235303022206865696768743d22353030222076696577426f783d2230203020353030203530302220",
                                "id": 488,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4799:54:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_2e3d2848d3d337b073e9466e1793a8d2bcd40eaf1682204f053f9387d9de33b6",
                                  "typeString": "literal_string \"<svg width=\"500\" height=\"500\" viewBox=\"0 0 500 500\" \""
                                },
                                "value": "<svg width=\"500\" height=\"500\" viewBox=\"0 0 500 500\" "
                              },
                              {
                                "hexValue": "20786d6c3a73706163653d2270726573657276652220786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f737667223e",
                                "id": 489,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4936:59:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_2e4d230cd09c3091066d3ab8090886b3cf076dd4f866e888694c01ae7aff1cff",
                                  "typeString": "literal_string \" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\">\""
                                },
                                "value": " xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\">"
                              },
                              {
                                "hexValue": "3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f7376672220786d6c6e733a786c696e6b3d22687474703a2f2f7777772e77332e6f72672f313939392f786c696e6b22207374796c653d226d617267696e3a206175746f3b206261636b67726f756e643a20726762283235352c203235352c20323535293b20646973706c61793a20626c6f636b3b2073686170652d72656e646572696e673a206175746f3b222077696474683d22353030707822206865696768743d223530307078222076696577426f783d222d3530202d3230203230302032303022207072657365727665417370656374526174696f3d22784d6964594d6964223e",
                                "id": 490,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5017:264:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_fe9a500fb24950263016f803d44b8e3c3de065276b781c48e3618e056845a7cb",
                                  "typeString": "literal_string \"<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"margin: auto; background: rgb(255, 255, 255); display: block; shape-rendering: auto;\" width=\"500px\" height=\"500px\" viewBox=\"-50 -20 200 200\" preserveAspectRatio=\"xMidYMid\">\""
                                },
                                "value": "<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"margin: auto; background: rgb(255, 255, 255); display: block; shape-rendering: auto;\" width=\"500px\" height=\"500px\" viewBox=\"-50 -20 200 200\" preserveAspectRatio=\"xMidYMid\">"
                              },
                              {
                                "arguments": [
                                  {
                                    "hexValue": "49534f544f50",
                                    "id": 493,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5311:8:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_f9d868d8b934ca274e63e1e00148ee04e62ec0cb0b21fb44b80dbf33bbf98478",
                                      "typeString": "literal_string \"ISOTOP\""
                                    },
                                    "value": "ISOTOP"
                                  },
                                  {
                                    "hexValue": "736f756c2e737667",
                                    "id": 494,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5321:10:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_3a6b6448117cca2a4a3f7f5127317d42d3450f702e15048fb5afb4c551bd8d93",
                                      "typeString": "literal_string \"soul.svg\""
                                    },
                                    "value": "soul.svg"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_f9d868d8b934ca274e63e1e00148ee04e62ec0cb0b21fb44b80dbf33bbf98478",
                                      "typeString": "literal_string \"ISOTOP\""
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_3a6b6448117cca2a4a3f7f5127317d42d3450f702e15048fb5afb4c551bd8d93",
                                      "typeString": "literal_string \"soul.svg\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 491,
                                    "name": "dds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 38,
                                    "src": "5303:3:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IDDS_$1355",
                                      "typeString": "contract IDDS"
                                    }
                                  },
                                  "id": 492,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "get",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1293,
                                  "src": "5303:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function (string memory,string memory) view external returns (bytes memory)"
                                  }
                                },
                                "id": 495,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5303:29:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "hexValue": "3c7465787420783d223235302220793d2233353022207374796c653d22746578742d616e63686f723a6d6964646c653b66696c6c3a626c61636b3b666f6e742d73697a653a32347078223e",
                                "id": 496,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5354:77:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_21f80836580493095832f84ab00d48402b2f5d5b4f0099181b698f70d4993f23",
                                  "typeString": "literal_string \"<text x=\"250\" y=\"350\" style=\"text-anchor:middle;fill:black;font-size:24px\">\""
                                },
                                "value": "<text x=\"250\" y=\"350\" style=\"text-anchor:middle;fill:black;font-size:24px\">"
                              },
                              {
                                "hexValue": "536f756c2023",
                                "id": 497,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5453:8:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_3e9966d7752914025c0f91fed2035973073183aa251af401e8a667c868197b0c",
                                  "typeString": "literal_string \"Soul #\""
                                },
                                "value": "Soul #"
                              },
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 498,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 462,
                                    "src": "5483:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 499,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "toString",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1107,
                                  "src": "5483:16:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256) pure returns (string memory)"
                                  }
                                },
                                "id": 500,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5483:18:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "hexValue": "3c2f746578743e3c2f7376673e",
                                "id": 501,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5523:15:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5df2eac721c34a044fddade0db4a2fa0a23894f242f8b8ab9056c3dcb3736e8a",
                                  "typeString": "literal_string \"</text></svg>\""
                                },
                                "value": "</text></svg>"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_2e3d2848d3d337b073e9466e1793a8d2bcd40eaf1682204f053f9387d9de33b6",
                                  "typeString": "literal_string \"<svg width=\"500\" height=\"500\" viewBox=\"0 0 500 500\" \""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_2e4d230cd09c3091066d3ab8090886b3cf076dd4f866e888694c01ae7aff1cff",
                                  "typeString": "literal_string \" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\">\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_fe9a500fb24950263016f803d44b8e3c3de065276b781c48e3618e056845a7cb",
                                  "typeString": "literal_string \"<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"margin: auto; background: rgb(255, 255, 255); display: block; shape-rendering: auto;\" width=\"500px\" height=\"500px\" viewBox=\"-50 -20 200 200\" preserveAspectRatio=\"xMidYMid\">\""
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_21f80836580493095832f84ab00d48402b2f5d5b4f0099181b698f70d4993f23",
                                  "typeString": "literal_string \"<text x=\"250\" y=\"350\" style=\"text-anchor:middle;fill:black;font-size:24px\">\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_3e9966d7752914025c0f91fed2035973073183aa251af401e8a667c868197b0c",
                                  "typeString": "literal_string \"Soul #\""
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_5df2eac721c34a044fddade0db4a2fa0a23894f242f8b8ab9056c3dcb3736e8a",
                                  "typeString": "literal_string \"</text></svg>\""
                                }
                              ],
                              "expression": {
                                "id": 486,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4761:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "4761:16:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4761:795:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 484,
                            "name": "Base64",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1019,
                            "src": "4730:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Base64_$1019_$",
                              "typeString": "type(library Base64)"
                            }
                          },
                          "id": 485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1018,
                          "src": "4730:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (bytes memory) pure returns (string memory)"
                          }
                        },
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4730:840:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "222c202264657369676e6572223a2022696f73746f702e746f70222c207d",
                        "id": 504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5584:32:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc0923e60dfac8b404c54121f37f2a62d27d15968799c778d898b992a87855e6",
                          "typeString": "literal_string \"\", \"designer\": \"iostop.top\", }\""
                        },
                        "value": "\", \"designer\": \"iostop.top\", }"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_78b274939203ddb02c88dc3faa1e6a6937768ae5786623d12c21fc58f8c0705a",
                          "typeString": "literal_string \"{\"name\": \"Soul #\""
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_92b72c020fe8c1e6d193630fa5d287a056f7849b814f581fba6e34845143de15",
                          "typeString": "literal_string \"\", \"description\": \"Soul NFT\", \"image\": \"data:image/svg+xml;base64,\""
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dc0923e60dfac8b404c54121f37f2a62d27d15968799c778d898b992a87855e6",
                          "typeString": "literal_string \"\", \"designer\": \"iostop.top\", }\""
                        }
                      ],
                      "expression": {
                        "id": 477,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4554:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "4554:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4554:1072:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4534:1092:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c",
                            "id": 511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5718:31:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
                              "typeString": "literal_string \"data:application/json;base64,\""
                            },
                            "value": "data:application/json;base64,"
                          },
                          {
                            "arguments": [
                              {
                                "id": 514,
                                "name": "meta",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 476,
                                "src": "5785:4:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 512,
                                "name": "Base64",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1019,
                                "src": "5771:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Base64_$1019_$",
                                  "typeString": "type(library Base64)"
                                }
                              },
                              "id": 513,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1018,
                              "src": "5771:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (bytes memory) pure returns (string memory)"
                              }
                            },
                            "id": 515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5771:19:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
                              "typeString": "literal_string \"data:application/json;base64,\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 509,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5680:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "5680:16:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5680:128:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5656:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 507,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "5656:6:14",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5656:166:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 467,
                  "id": 518,
                  "nodeType": "Return",
                  "src": "5637:185:14"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 520,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "4344:8:14",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 464,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4422:8:14"
            },
            "parameters": {
              "id": 463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 462,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4361:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 520,
                  "src": "4353:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 461,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4353:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4352:17:14"
            },
            "returnParameters": {
              "id": 467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 466,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 520,
                  "src": "4448:13:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 465,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4448:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4447:15:14"
            },
            "scope": 521,
            "src": "4335:1494:14",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 522,
        "src": "356:5475:14",
        "usedErrors": []
      }
    ],
    "src": "33:5799:14"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604080518082018252600781526614dbdd5b13919560ca1b60208083019182528351808501909452600484526314d3d55360e21b9084015281519192916200005d9160009162000112565b5080516200007390600190602084019062000112565b505050620000906200008a620000bc60201b60201c565b620000c0565b600b80546001600160a01b03191673222d6d17f1f6967b81e40624fe6176b7be225bee179055620001f4565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200012090620001b8565b90600052602060002090601f0160209004810192826200014457600085556200018f565b82601f106200015f57805160ff19168380011785556200018f565b828001600101855582156200018f579182015b828111156200018f57825182559160200191906001019062000172565b506200019d929150620001a1565b5090565b5b808211156200019d5760008155600101620001a2565b600181811c90821680620001cd57607f821691505b602082108103620001ee57634e487b7160e01b600052602260045260246000fd5b50919050565b612ac480620002046000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063ba3d0dec11610097578063c87b56dd11610071578063c87b56dd146103bf578063e985e9c5146103d2578063f2fde38b1461040e578063f72868ca1461042157600080fd5b8063ba3d0dec14610386578063baf0d49e14610399578063c3d7e350146103ac57600080fd5b80638da5cb5b116100d35780638da5cb5b1461034757806395d89b4114610358578063a22cb46514610360578063b88d4fde1461037357600080fd5b806370a0823114610319578063715018a61461032c578063780900dc1461033457600080fd5b806318160ddd1161016657806342842e0e1161014057806342842e0e146102cd5780634f6ccce7146102e05780635af0de07146102f35780636352211e1461030657600080fd5b806318160ddd1461029557806323b872dd146102a75780632f745c59146102ba57600080fd5b8063081812fc116101a2578063081812fc14610247578063095ea7b31461025a5780630d6752b01461026f5780630ecaea731461028257600080fd5b806301ffc9a7146101c957806305f63c8a146101f157806306fdde0314610232575b600080fd5b6101dc6101d7366004611f85565b610434565b60405190151581526020015b60405180910390f35b61021a6101ff366004611fa2565b6000908152600c60205260409020546001600160a01b031690565b6040516001600160a01b0390911681526020016101e8565b61023a61045f565b6040516101e89190612013565b61021a610255366004611fa2565b6104f1565b61026d61026836600461203b565b610518565b005b61026d61027d366004612067565b610632565b61026d61029036600461203b565b61065c565b6008545b6040519081526020016101e8565b61026d6102b5366004612084565b610871565b6102996102c836600461203b565b6108a2565b61026d6102db366004612084565b610938565b6102996102ee366004611fa2565b610953565b61026d6103013660046120c5565b6109e6565b61021a610314366004611fa2565b610bb8565b610299610327366004612067565b610c18565b61026d610c9e565b61026d610342366004611fa2565b610cb2565b600a546001600160a01b031661021a565b61023a610cbf565b61026d61036e3660046120f5565b610cce565b61026d610381366004612197565b610cdd565b61026d6103943660046120c5565b610d15565b6101dc6103a73660046120c5565b610d69565b61026d6103ba3660046120c5565b610e12565b61023a6103cd366004611fa2565b610e66565b6101dc6103e0366004612246565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61026d61041c366004612067565b610fc1565b61026d61042f3660046120c5565b611037565b60006001600160e01b0319821663780e9d6360e01b1480610459575061045982611202565b92915050565b60606000805461046e90612274565b80601f016020809104026020016040519081016040528092919081815260200182805461049a90612274565b80156104e75780601f106104bc576101008083540402835291602001916104e7565b820191906000526020600020905b8154815290600101906020018083116104ca57829003601f168201915b5050505050905090565b60006104fc82611252565b506000908152600460205260409020546001600160a01b031690565b600061052382610bb8565b9050806001600160a01b0316836001600160a01b0316036105955760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806105b157506105b181336103e0565b6106235760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000606482015260840161058c565b61062d83836112b1565b505050565b61063a61131f565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b600b54604051633e10510b60e01b81526000916001600160a01b031690632d888869908290633e10510b90610693906004016122ae565b600060405180830381865afa1580156106b0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106d89190810190612306565b6040518263ffffffff1660e01b81526004016106f49190612013565b602060405180830381865afa158015610711573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610735919061237d565b90506000816001600160a01b031663c3bb1a576040518163ffffffff1660e01b81526004016107639061239a565b600060405180830381865afa158015610780573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107a891908101906123be565b905060005b8151811015610828578181815181106107c8576107c8612470565b60200260200101516001600160a01b0316336001600160a01b031603610816576107f28585611379565b5050506000908152600c6020526040902080546001600160a01b0319163317905550565b806108208161249c565b9150506107ad565b5060405162461bcd60e51b815260206004820152601b60248201527f63616c6c6572206e6f7420696e206f70657261746f72206c6973740000000000604482015260640161058c565b61087b33826113e9565b6108975760405162461bcd60e51b815260040161058c906124b5565b61062d838383611468565b60006108ad83610c18565b821061090f5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b606482015260840161058c565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61062d83838360405180602001604052806000815250610cdd565b600061095e60085490565b82106109c15760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b606482015260840161058c565b600882815481106109d4576109d4612470565b90600052602060002001549050919050565b600b54604051633e10510b60e01b81526000916001600160a01b031690632d888869908290633e10510b90610a1d906004016122ae565b600060405180830381865afa158015610a3a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a629190810190612306565b6040518263ffffffff1660e01b8152600401610a7e9190612013565b602060405180830381865afa158015610a9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abf919061237d565b90506000816001600160a01b031663c3bb1a576040518163ffffffff1660e01b8152600401610aed9061239a565b600060405180830381865afa158015610b0a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b3291908101906123be565b905060005b815181101561082857818181518110610b5257610b52612470565b60200260200101516001600160a01b0316336001600160a01b0316148015610b9057506000858152600c60205260409020546001600160a01b031633145b15610ba657610b9f858561160f565b5050505050565b80610bb08161249c565b915050610b37565b6000818152600260205260408120546001600160a01b0316806104595760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161058c565b60006001600160a01b038216610c825760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161058c565b506001600160a01b031660009081526003602052604090205490565b610ca661131f565b610cb060006116d3565b565b610cbc3282611379565b50565b60606001805461046e90612274565b610cd9338383611725565b5050565b610ce733836113e9565b610d035760405162461bcd60e51b815260040161058c906124b5565b610d0f848484846117f3565b50505050565b610d1f8232610d69565b610d5f5760405162461bcd60e51b81526020600482015260116024820152701b9bdd081bdddb995c881bd9881cdbdd5b607a1b604482015260640161058c565b610cd98282611826565b6000828152600260205260408120546001600160a01b0316610dc15760405162461bcd60e51b81526020600482015260116024820152703737b732bc34b9ba32b73a103a37b5b2b760791b604482015260640161058c565b6000838152600d602090815260408083206001600160a01b038616845290915290205460ff1680610e0b5750816001600160a01b0316610e0084610bb8565b6001600160a01b0316145b9392505050565b610e1c8232610d69565b610e5c5760405162461bcd60e51b81526020600482015260116024820152701b9bdd081bdddb995c881bd9881cdbdd5b607a1b604482015260640161058c565b610cd9828261160f565b6000818152600260205260409020546060906001600160a01b0316610ec15760405162461bcd60e51b81526020600482015260116024820152703737b732bc34b9ba32b73a103a37b5b2b760791b604482015260640161058c565b6000610ecc83611884565b600b54604051633e10510b60e01b8152610f6f916001600160a01b031690633e10510b90610efc90600401612503565b600060405180830381865afa158015610f19573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f419190810190612306565b610f4a86611884565b604051602001610f5b92919061256c565b604051602081830303815290604052611985565b604051602001610f809291906127eb565b6040516020818303038152906040529050610f9a81611985565b604051602001610faa91906128bb565b604051602081830303815290604052915050919050565b610fc961131f565b6001600160a01b03811661102e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161058c565b610cbc816116d3565b600b54604051633e10510b60e01b81526000916001600160a01b031690632d888869908290633e10510b9061106e906004016122ae565b600060405180830381865afa15801561108b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110b39190810190612306565b6040518263ffffffff1660e01b81526004016110cf9190612013565b602060405180830381865afa1580156110ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611110919061237d565b90506000816001600160a01b031663c3bb1a576040518163ffffffff1660e01b815260040161113e9061239a565b600060405180830381865afa15801561115b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261118391908101906123be565b905060005b8151811015610828578181815181106111a3576111a3612470565b60200260200101516001600160a01b0316336001600160a01b03161480156111e157506000858152600c60205260409020546001600160a01b031633145b156111f057610b9f8585611826565b806111fa8161249c565b915050611188565b60006001600160e01b031982166380ac58cd60e01b148061123357506001600160e01b03198216635b5e139f60e01b145b8061045957506301ffc9a760e01b6001600160e01b0319831614610459565b6000818152600260205260409020546001600160a01b0316610cbc5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161058c565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906112e682610bb8565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600a546001600160a01b03163314610cb05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161058c565b6113838282611ad8565b6000818152600d602090815260408083206001600160a01b03861680855290835292819020805460ff191660011790555191825282917fcad03a9101bd852b136d161a1b16b7ba008655decd17a2faec9259b23b5045ba91015b60405180910390a25050565b6000806113f583610bb8565b9050806001600160a01b0316846001600160a01b0316148061143c57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806114605750836001600160a01b0316611455846104f1565b6001600160a01b0316145b949350505050565b826001600160a01b031661147b82610bb8565b6001600160a01b0316146114df5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161058c565b6001600160a01b0382166115415760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161058c565b61154c838383611c26565b6115576000826112b1565b6001600160a01b0383166000908152600360205260408120805460019290611580908490612900565b90915550506001600160a01b03821660009081526003602052604081208054600192906115ae908490612917565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b806001600160a01b031661162283610bb8565b6001600160a01b0316036116785760405162461bcd60e51b815260206004820152601c60248201527f63616e6e6f742072656d6f7665206f776e6572206f6620746f6b656e00000000604482015260640161058c565b6000828152600d602090815260408083206001600160a01b03851680855290835292819020805460ff191690555191825283917fcb55b9c460a26528d8133448da62fe50f8b555cbf7b6851f38aee64ac07c978291016113dd565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316036117865760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161058c565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6117fe848484611468565b61180a84848484611cde565b610d0f5760405162461bcd60e51b815260040161058c9061292f565b6000828152600d602090815260408083206001600160a01b03851680855290835292819020805460ff191660011790555191825283917f90bcc508602ce6509afae3103f5fa4bd917ecdd0ffa791ef4ffb51bbaf19082291016113dd565b6060816000036118ab5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156118d557806118bf8161249c565b91506118ce9050600a83612997565b91506118af565b60008167ffffffffffffffff8111156118f0576118f0612128565b6040519080825280601f01601f19166020018201604052801561191a576020820181803683370190505b5090505b84156114605761192f600183612900565b915061193c600a866129ab565b611947906030612917565b60f81b81838151811061195c5761195c612470565b60200101906001600160f81b031916908160001a90535061197e600a86612997565b945061191e565b606081516000036119a457505060408051602081019091526000815290565b6000604051806060016040528060408152602001612a4f60409139905060006003845160026119d39190612917565b6119dd9190612997565b6119e89060046129bf565b67ffffffffffffffff811115611a0057611a00612128565b6040519080825280601f01601f191660200182016040528015611a2a576020820181803683370190505b509050600182016020820185865187015b80821015611a96576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845350600183019250611a3b565b5050600386510660018114611ab25760028114611ac557611acd565b603d6001830353603d6002830353611acd565b603d60018303535b509195945050505050565b6001600160a01b038216611b2e5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161058c565b6000818152600260205260409020546001600160a01b031615611b935760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161058c565b611b9f60008383611c26565b6001600160a01b0382166000908152600360205260408120805460019290611bc8908490612917565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160a01b038316611c8157611c7c81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611ca4565b816001600160a01b0316836001600160a01b031614611ca457611ca48382611ddf565b6001600160a01b038216611cbb5761062d81611e7c565b826001600160a01b0316826001600160a01b03161461062d5761062d8282611f2b565b60006001600160a01b0384163b15611dd457604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611d229033908990889088906004016129de565b6020604051808303816000875af1925050508015611d5d575060408051601f3d908101601f19168201909252611d5a91810190612a1b565b60015b611dba573d808015611d8b576040519150601f19603f3d011682016040523d82523d6000602084013e611d90565b606091505b508051600003611db25760405162461bcd60e51b815260040161058c9061292f565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611460565b506001949350505050565b60006001611dec84610c18565b611df69190612900565b600083815260076020526040902054909150808214611e49576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611e8e90600190612900565b60008381526009602052604081205460088054939450909284908110611eb657611eb6612470565b906000526020600020015490508060088381548110611ed757611ed7612470565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611f0f57611f0f612a38565b6001900381819060005260206000200160009055905550505050565b6000611f3683610c18565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160e01b031981168114610cbc57600080fd5b600060208284031215611f9757600080fd5b8135610e0b81611f6f565b600060208284031215611fb457600080fd5b5035919050565b60005b83811015611fd6578181015183820152602001611fbe565b83811115610d0f5750506000910152565b60008151808452611fff816020860160208601611fbb565b601f01601f19169290920160200192915050565b602081526000610e0b6020830184611fe7565b6001600160a01b0381168114610cbc57600080fd5b6000806040838503121561204e57600080fd5b823561205981612026565b946020939093013593505050565b60006020828403121561207957600080fd5b8135610e0b81612026565b60008060006060848603121561209957600080fd5b83356120a481612026565b925060208401356120b481612026565b929592945050506040919091013590565b600080604083850312156120d857600080fd5b8235915060208301356120ea81612026565b809150509250929050565b6000806040838503121561210857600080fd5b823561211381612026565b9150602083013580151581146120ea57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561216757612167612128565b604052919050565b600067ffffffffffffffff82111561218957612189612128565b50601f01601f191660200190565b600080600080608085870312156121ad57600080fd5b84356121b881612026565b935060208501356121c881612026565b925060408501359150606085013567ffffffffffffffff8111156121eb57600080fd5b8501601f810187136121fc57600080fd5b803561220f61220a8261216f565b61213e565b81815288602083850101111561222457600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b6000806040838503121561225957600080fd5b823561226481612026565b915060208301356120ea81612026565b600181811c9082168061228857607f821691505b6020821081036122a857634e487b7160e01b600052602260045260246000fd5b50919050565b6040815260006122d4604083016006815265049534f544f560d41b602082015260400190565b82810360209384015260138152724245455f464143544f52595f4144445245535360681b928101929092525060400190565b60006020828403121561231857600080fd5b815167ffffffffffffffff81111561232f57600080fd5b8201601f8101841361234057600080fd5b805161234e61220a8261216f565b81815285602083850101111561236357600080fd5b612374826020830160208601611fbb565b95945050505050565b60006020828403121561238f57600080fd5b8151610e0b81612026565b6020808252600a9082015269049534f544f50313034360b41b604082015260600190565b600060208083850312156123d157600080fd5b825167ffffffffffffffff808211156123e957600080fd5b818501915085601f8301126123fd57600080fd5b81518181111561240f5761240f612128565b8060051b915061242084830161213e565b818152918301840191848101908884111561243a57600080fd5b938501935b83851015612464578451925061245483612026565b828252938501939085019061243f565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016124ae576124ae612486565b5060010190565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b604081526000612529604083016006815265049534f544f560d41b602082015260400190565b8281036020938401526008815267736f756c2e73766760c01b928101929092525060400190565b60008151612562818560208601611fbb565b9290920192915050565b7f3c7376672077696474683d2235303022206865696768743d2235303022207669815273032bba137bc1e91181018101a9818101a981811160651b60208201527f20786d6c3a73706163653d2270726573657276652220786d6c6e733d2268747460348201527f703a2f2f7777772e77332e6f72672f323030302f737667223e0000000000000060548201527f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f3230606d8201527f30302f7376672220786d6c6e733a786c696e6b3d22687474703a2f2f7777772e608d8201527f77332e6f72672f313939392f786c696e6b22207374796c653d226d617267696e60ad8201527f3a206175746f3b206261636b67726f756e643a20726762283235352c2032353560cd8201527f2c20323535293b20646973706c61793a20626c6f636b3b2073686170652d726560ed8201527f6e646572696e673a206175746f3b222077696474683d2235303070782220686561010d8201527f696768743d223530307078222076696577426f783d222d3530202d323020323061012d8201527f302032303022207072657365727665417370656374526174696f3d22784d696461014d820152652ca6b4b2111f60d11b61016d82015260006114606127d26127cc6127ba612757610173870189612550565b7f3c7465787420783d223235302220793d2233353022207374796c653d2274657881527f742d616e63686f723a6d6964646c653b66696c6c3a626c61636b3b666f6e742d60208201526a39b4bd329d191a383c111f60a91b6040820152604b0190565b65536f756c202360d01b815260060190565b85612550565b6c1e17ba32bc3a1f1e17b9bb339f60991b8152600d0190565b6f7b226e616d65223a2022536f756c202360801b81528251600090612817816010850160208801611fbb565b7f222c20226465736372697074696f6e223a2022536f756c204e4654222c2022696010918401918201527f6d616765223a2022646174613a696d6167652f7376672b786d6c3b62617365366030820152610d0b60f21b60508201528351612885816052840160208801611fbb565b7f222c202264657369676e6572223a2022696f73746f702e746f70222c207d000060529290910191820152607001949350505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c0000008152600082516128f381601d850160208701611fbb565b91909101601d0192915050565b60008282101561291257612912612486565b500390565b6000821982111561292a5761292a612486565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6000826129a6576129a6612981565b500490565b6000826129ba576129ba612981565b500690565b60008160001904831182151516156129d9576129d9612486565b500290565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612a1190830184611fe7565b9695505050505050565b600060208284031215612a2d57600080fd5b8151610e0b81611f6f565b634e487b7160e01b600052603160045260246000fdfe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa264697066735822122026c68f12a9d7cd9ed8ab52cfb0f4896b09f1d8cee854dd9d8636fa3f9a711fb564736f6c634300080d0033",
  "bytecodeSha1": "46a1b607040af9b9f0f45b150ad0b7a911773047",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "Soul",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable._checkOwner": {
          "141": [
            1422,
            1445,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "140": [
            2169,
            2191,
            true
          ]
        }
      },
      "1": {
        "ERC721._checkOnERC721Received": {
          "132": [
            12784,
            12802,
            false
          ]
        },
        "ERC721._mint": {
          "131": [
            8947,
            8963,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "130": [
            6622,
            6669,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "129": [
            11407,
            11424,
            true
          ]
        },
        "ERC721._transfer": {
          "127": [
            10369,
            10400,
            true
          ],
          "128": [
            10460,
            10476,
            true
          ]
        },
        "ERC721.approve": {
          "121": [
            3604,
            3615,
            true
          ],
          "122": [
            3685,
            3706,
            true
          ],
          "123": [
            3710,
            3747,
            true
          ]
        },
        "ERC721.balanceOf": {
          "125": [
            2028,
            2047,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "126": [
            5418,
            5459,
            true
          ]
        },
        "ERC721.transferFrom": {
          "124": [
            4801,
            4842,
            true
          ]
        }
      },
      "10": {
        "Strings.toString": {
          "142": [
            665,
            675,
            false
          ]
        }
      },
      "11": {},
      "12": {},
      "13": {},
      "14": {
        "Soul._removeAccount": {
          "119": [
            4052,
            4080,
            true
          ]
        },
        "Soul.addAccount": {
          "115": [
            2213,
            2248,
            true
          ]
        },
        "Soul.addAccountByOperator": {
          "117": [
            2735,
            2761,
            false
          ],
          "118": [
            2765,
            2794,
            false
          ]
        },
        "Soul.create": {
          "112": [
            1479,
            1505,
            false
          ]
        },
        "Soul.removeAccount": {
          "116": [
            3206,
            3241,
            true
          ]
        },
        "Soul.removeAccountByOperator": {
          "113": [
            3746,
            3772,
            false
          ],
          "114": [
            3776,
            3805,
            false
          ]
        }
      },
      "15": {},
      "2": {},
      "4": {
        "ERC721Enumerable._beforeTokenTransfer": {
          "135": [
            2823,
            2841,
            false
          ],
          "136": [
            2918,
            2928,
            false
          ],
          "137": [
            3015,
            3031,
            false
          ],
          "138": [
            3113,
            3123,
            false
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "139": [
            5154,
            5182,
            false
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "134": [
            1900,
            1938,
            true
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "133": [
            1415,
            1446,
            true
          ]
        }
      },
      "5": {},
      "6": {},
      "8": {
        "Base64.encode": {
          "120": [
            795,
            811,
            false
          ]
        }
      },
      "9": {}
    },
    "statements": {
      "0": {
        "Ownable._checkOwner": {
          "54": [
            1414,
            1482
          ]
        },
        "Ownable._transferOwnership": {
          "70": [
            2541,
            2558
          ],
          "71": [
            2568,
            2613
          ]
        },
        "Ownable.owner": {
          "2": [
            1266,
            1279
          ]
        },
        "Ownable.renounceOwnership": {
          "30": [
            1895,
            1925
          ]
        },
        "Ownable.transferOwnership": {
          "45": [
            2161,
            2234
          ],
          "46": [
            2244,
            2272
          ]
        }
      },
      "1": {
        "ERC721._approve": {
          "52": [
            11033,
            11062
          ],
          "53": [
            11072,
            11123
          ]
        },
        "ERC721._checkOnERC721Received": {
          "99": [
            12826,
            12886
          ],
          "100": [
            12660,
            12718
          ],
          "101": [
            13145,
            13156
          ]
        },
        "ERC721._exists": {
          "38": [
            7115,
            7152
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "58": [
            7475,
            7571
          ]
        },
        "ERC721._mint": {
          "87": [
            8939,
            9000
          ],
          "88": [
            9010,
            9068
          ],
          "89": [
            9079,
            9124
          ],
          "90": [
            9135,
            9153
          ],
          "91": [
            9163,
            9184
          ],
          "92": [
            9195,
            9233
          ]
        },
        "ERC721._requireMinted": {
          "51": [
            11730,
            11783
          ]
        },
        "ERC721._safeTransfer": {
          "75": [
            6576,
            6604
          ],
          "76": [
            6614,
            6724
          ]
        },
        "ERC721._setApprovalForAll": {
          "72": [
            11399,
            11454
          ],
          "73": [
            11464,
            11510
          ],
          "74": [
            11520,
            11566
          ]
        },
        "ERC721._transfer": {
          "59": [
            10361,
            10442
          ],
          "60": [
            10452,
            10517
          ],
          "61": [
            10528,
            10567
          ],
          "62": [
            10629,
            10658
          ],
          "63": [
            10669,
            10689
          ],
          "64": [
            10699,
            10717
          ],
          "65": [
            10727,
            10748
          ],
          "66": [
            10759,
            10791
          ]
        },
        "ERC721.approve": {
          "8": [
            3596,
            3653
          ],
          "10": [
            3664,
            3835
          ],
          "11": [
            3846,
            3867
          ]
        },
        "ERC721.balanceOf": {
          "28": [
            2020,
            2093
          ],
          "29": [
            2103,
            2126
          ]
        },
        "ERC721.getApproved": {
          "6": [
            4030,
            4053
          ],
          "7": [
            4064,
            4095
          ]
        },
        "ERC721.isApprovedForAll": {
          "3": [
            4501,
            4543
          ]
        },
        "ERC721.name": {
          "5": [
            2549,
            2561
          ]
        },
        "ERC721.ownerOf": {
          "27": [
            2323,
            2379
          ]
        },
        "ERC721.safeTransferFrom": {
          "21": [
            5138,
            5177
          ],
          "34": [
            5410,
            5510
          ],
          "35": [
            5520,
            5558
          ]
        },
        "ERC721.setApprovalForAll": {
          "33": [
            4263,
            4315
          ]
        },
        "ERC721.supportsInterface": {
          "49": [
            1688,
            1863
          ]
        },
        "ERC721.symbol": {
          "32": [
            2713,
            2727
          ]
        },
        "ERC721.transferFrom": {
          "17": [
            4793,
            4893
          ],
          "18": [
            4904,
            4932
          ]
        }
      },
      "10": {
        "Strings.toString": {
          "79": [
            691,
            701
          ],
          "80": [
            807,
            815
          ],
          "81": [
            829,
            839
          ],
          "82": [
            941,
            952
          ],
          "83": [
            966,
            1022
          ],
          "84": [
            1036,
            1047
          ]
        }
      },
      "11": {
        "ERC165.supportsInterface": {
          "50": [
            930,
            977
          ]
        }
      },
      "12": {},
      "13": {},
      "14": {
        "Soul._addAccount": {
          "77": [
            3027,
            3061
          ],
          "78": [
            3072,
            3108
          ]
        },
        "Soul._mintTo": {
          "55": [
            1766,
            1785
          ],
          "56": [
            1795,
            1824
          ],
          "57": [
            1834,
            1864
          ]
        },
        "Soul._removeAccount": {
          "67": [
            4044,
            4113
          ],
          "68": [
            4124,
            4158
          ],
          "69": [
            4169,
            4207
          ]
        },
        "Soul.addAccount": {
          "36": [
            2205,
            2270
          ],
          "37": [
            2280,
            2310
          ]
        },
        "Soul.addAccountByOperator": {
          "47": [
            2814,
            2844
          ],
          "48": [
            2712,
            2715
          ]
        },
        "Soul.create": {
          "13": [
            1525,
            1546
          ],
          "14": [
            1564,
            1592
          ],
          "15": [
            1456,
            1459
          ],
          "16": [
            1650,
            1687
          ],
          "31": [
            1046,
            1073
          ]
        },
        "Soul.getOperator": {
          "0": [
            4300,
            4322
          ]
        },
        "Soul.removeAccount": {
          "41": [
            3198,
            3263
          ],
          "42": [
            3273,
            3306
          ]
        },
        "Soul.removeAccountByOperator": {
          "24": [
            3825,
            3858
          ],
          "25": [
            3876,
            3883
          ],
          "26": [
            3723,
            3726
          ]
        },
        "Soul.setDDS": {
          "12": [
            910,
            929
          ]
        },
        "Soul.tokenURI": {
          "43": [
            4477,
            4523
          ],
          "44": [
            5637,
            5822
          ]
        },
        "Soul.validateAddress": {
          "39": [
            1999,
            2045
          ],
          "40": [
            2056,
            2118
          ]
        }
      },
      "15": {},
      "2": {},
      "4": {
        "ERC721Enumerable._addTokenToAllTokensEnumeration": {
          "94": [
            3978,
            4022
          ],
          "95": [
            4032,
            4056
          ]
        },
        "ERC721Enumerable._addTokenToOwnerEnumeration": {
          "110": [
            3621,
            3655
          ],
          "111": [
            3665,
            3700
          ]
        },
        "ERC721Enumerable._beforeTokenTransfer": {
          "93": [
            2857,
            2897
          ],
          "96": [
            2944,
            2991
          ],
          "97": [
            3047,
            3092
          ],
          "98": [
            3139,
            3179
          ]
        },
        "ERC721Enumerable._removeTokenFromAllTokensEnumeration": {
          "106": [
            6669,
            6705
          ],
          "107": [
            6773,
            6814
          ],
          "108": [
            6935,
            6966
          ],
          "109": [
            6976,
            6992
          ]
        },
        "ERC721Enumerable._removeTokenFromOwnerEnumeration": {
          "102": [
            5269,
            5313
          ],
          "103": [
            5385,
            5428
          ],
          "104": [
            5559,
            5592
          ],
          "105": [
            5602,
            5643
          ]
        },
        "ERC721Enumerable.supportsInterface": {
          "4": [
            1108,
            1205
          ]
        },
        "ERC721Enumerable.tokenByIndex": {
          "22": [
            1892,
            1987
          ],
          "23": [
            1997,
            2021
          ]
        },
        "ERC721Enumerable.tokenOfOwnerByIndex": {
          "19": [
            1407,
            1494
          ],
          "20": [
            1504,
            1537
          ]
        },
        "ERC721Enumerable.totalSupply": {
          "1": [
            1695,
            1719
          ]
        }
      },
      "5": {},
      "6": {},
      "8": {
        "Base64.encode": {
          "85": [
            813,
            822
          ],
          "86": [
            3511,
            3524
          ]
        }
      },
      "9": {
        "Context._msgSender": {
          "9": [
            712,
            729
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.7.3/Base64",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/Context",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/ERC721",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/ERC721Enumerable",
    "IDDS",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/IERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/IERC721Metadata",
    "IFactory",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063ba3d0dec11610097578063c87b56dd11610071578063c87b56dd146103bf578063e985e9c5146103d2578063f2fde38b1461040e578063f72868ca1461042157600080fd5b8063ba3d0dec14610386578063baf0d49e14610399578063c3d7e350146103ac57600080fd5b80638da5cb5b116100d35780638da5cb5b1461034757806395d89b4114610358578063a22cb46514610360578063b88d4fde1461037357600080fd5b806370a0823114610319578063715018a61461032c578063780900dc1461033457600080fd5b806318160ddd1161016657806342842e0e1161014057806342842e0e146102cd5780634f6ccce7146102e05780635af0de07146102f35780636352211e1461030657600080fd5b806318160ddd1461029557806323b872dd146102a75780632f745c59146102ba57600080fd5b8063081812fc116101a2578063081812fc14610247578063095ea7b31461025a5780630d6752b01461026f5780630ecaea731461028257600080fd5b806301ffc9a7146101c957806305f63c8a146101f157806306fdde0314610232575b600080fd5b6101dc6101d7366004611f85565b610434565b60405190151581526020015b60405180910390f35b61021a6101ff366004611fa2565b6000908152600c60205260409020546001600160a01b031690565b6040516001600160a01b0390911681526020016101e8565b61023a61045f565b6040516101e89190612013565b61021a610255366004611fa2565b6104f1565b61026d61026836600461203b565b610518565b005b61026d61027d366004612067565b610632565b61026d61029036600461203b565b61065c565b6008545b6040519081526020016101e8565b61026d6102b5366004612084565b610871565b6102996102c836600461203b565b6108a2565b61026d6102db366004612084565b610938565b6102996102ee366004611fa2565b610953565b61026d6103013660046120c5565b6109e6565b61021a610314366004611fa2565b610bb8565b610299610327366004612067565b610c18565b61026d610c9e565b61026d610342366004611fa2565b610cb2565b600a546001600160a01b031661021a565b61023a610cbf565b61026d61036e3660046120f5565b610cce565b61026d610381366004612197565b610cdd565b61026d6103943660046120c5565b610d15565b6101dc6103a73660046120c5565b610d69565b61026d6103ba3660046120c5565b610e12565b61023a6103cd366004611fa2565b610e66565b6101dc6103e0366004612246565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61026d61041c366004612067565b610fc1565b61026d61042f3660046120c5565b611037565b60006001600160e01b0319821663780e9d6360e01b1480610459575061045982611202565b92915050565b60606000805461046e90612274565b80601f016020809104026020016040519081016040528092919081815260200182805461049a90612274565b80156104e75780601f106104bc576101008083540402835291602001916104e7565b820191906000526020600020905b8154815290600101906020018083116104ca57829003601f168201915b5050505050905090565b60006104fc82611252565b506000908152600460205260409020546001600160a01b031690565b600061052382610bb8565b9050806001600160a01b0316836001600160a01b0316036105955760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806105b157506105b181336103e0565b6106235760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000606482015260840161058c565b61062d83836112b1565b505050565b61063a61131f565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b600b54604051633e10510b60e01b81526000916001600160a01b031690632d888869908290633e10510b90610693906004016122ae565b600060405180830381865afa1580156106b0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106d89190810190612306565b6040518263ffffffff1660e01b81526004016106f49190612013565b602060405180830381865afa158015610711573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610735919061237d565b90506000816001600160a01b031663c3bb1a576040518163ffffffff1660e01b81526004016107639061239a565b600060405180830381865afa158015610780573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107a891908101906123be565b905060005b8151811015610828578181815181106107c8576107c8612470565b60200260200101516001600160a01b0316336001600160a01b031603610816576107f28585611379565b5050506000908152600c6020526040902080546001600160a01b0319163317905550565b806108208161249c565b9150506107ad565b5060405162461bcd60e51b815260206004820152601b60248201527f63616c6c6572206e6f7420696e206f70657261746f72206c6973740000000000604482015260640161058c565b61087b33826113e9565b6108975760405162461bcd60e51b815260040161058c906124b5565b61062d838383611468565b60006108ad83610c18565b821061090f5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b606482015260840161058c565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61062d83838360405180602001604052806000815250610cdd565b600061095e60085490565b82106109c15760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b606482015260840161058c565b600882815481106109d4576109d4612470565b90600052602060002001549050919050565b600b54604051633e10510b60e01b81526000916001600160a01b031690632d888869908290633e10510b90610a1d906004016122ae565b600060405180830381865afa158015610a3a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a629190810190612306565b6040518263ffffffff1660e01b8152600401610a7e9190612013565b602060405180830381865afa158015610a9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abf919061237d565b90506000816001600160a01b031663c3bb1a576040518163ffffffff1660e01b8152600401610aed9061239a565b600060405180830381865afa158015610b0a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b3291908101906123be565b905060005b815181101561082857818181518110610b5257610b52612470565b60200260200101516001600160a01b0316336001600160a01b0316148015610b9057506000858152600c60205260409020546001600160a01b031633145b15610ba657610b9f858561160f565b5050505050565b80610bb08161249c565b915050610b37565b6000818152600260205260408120546001600160a01b0316806104595760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161058c565b60006001600160a01b038216610c825760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161058c565b506001600160a01b031660009081526003602052604090205490565b610ca661131f565b610cb060006116d3565b565b610cbc3282611379565b50565b60606001805461046e90612274565b610cd9338383611725565b5050565b610ce733836113e9565b610d035760405162461bcd60e51b815260040161058c906124b5565b610d0f848484846117f3565b50505050565b610d1f8232610d69565b610d5f5760405162461bcd60e51b81526020600482015260116024820152701b9bdd081bdddb995c881bd9881cdbdd5b607a1b604482015260640161058c565b610cd98282611826565b6000828152600260205260408120546001600160a01b0316610dc15760405162461bcd60e51b81526020600482015260116024820152703737b732bc34b9ba32b73a103a37b5b2b760791b604482015260640161058c565b6000838152600d602090815260408083206001600160a01b038616845290915290205460ff1680610e0b5750816001600160a01b0316610e0084610bb8565b6001600160a01b0316145b9392505050565b610e1c8232610d69565b610e5c5760405162461bcd60e51b81526020600482015260116024820152701b9bdd081bdddb995c881bd9881cdbdd5b607a1b604482015260640161058c565b610cd9828261160f565b6000818152600260205260409020546060906001600160a01b0316610ec15760405162461bcd60e51b81526020600482015260116024820152703737b732bc34b9ba32b73a103a37b5b2b760791b604482015260640161058c565b6000610ecc83611884565b600b54604051633e10510b60e01b8152610f6f916001600160a01b031690633e10510b90610efc90600401612503565b600060405180830381865afa158015610f19573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f419190810190612306565b610f4a86611884565b604051602001610f5b92919061256c565b604051602081830303815290604052611985565b604051602001610f809291906127eb565b6040516020818303038152906040529050610f9a81611985565b604051602001610faa91906128bb565b604051602081830303815290604052915050919050565b610fc961131f565b6001600160a01b03811661102e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161058c565b610cbc816116d3565b600b54604051633e10510b60e01b81526000916001600160a01b031690632d888869908290633e10510b9061106e906004016122ae565b600060405180830381865afa15801561108b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110b39190810190612306565b6040518263ffffffff1660e01b81526004016110cf9190612013565b602060405180830381865afa1580156110ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611110919061237d565b90506000816001600160a01b031663c3bb1a576040518163ffffffff1660e01b815260040161113e9061239a565b600060405180830381865afa15801561115b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261118391908101906123be565b905060005b8151811015610828578181815181106111a3576111a3612470565b60200260200101516001600160a01b0316336001600160a01b03161480156111e157506000858152600c60205260409020546001600160a01b031633145b156111f057610b9f8585611826565b806111fa8161249c565b915050611188565b60006001600160e01b031982166380ac58cd60e01b148061123357506001600160e01b03198216635b5e139f60e01b145b8061045957506301ffc9a760e01b6001600160e01b0319831614610459565b6000818152600260205260409020546001600160a01b0316610cbc5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161058c565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906112e682610bb8565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600a546001600160a01b03163314610cb05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161058c565b6113838282611ad8565b6000818152600d602090815260408083206001600160a01b03861680855290835292819020805460ff191660011790555191825282917fcad03a9101bd852b136d161a1b16b7ba008655decd17a2faec9259b23b5045ba91015b60405180910390a25050565b6000806113f583610bb8565b9050806001600160a01b0316846001600160a01b0316148061143c57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806114605750836001600160a01b0316611455846104f1565b6001600160a01b0316145b949350505050565b826001600160a01b031661147b82610bb8565b6001600160a01b0316146114df5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161058c565b6001600160a01b0382166115415760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161058c565b61154c838383611c26565b6115576000826112b1565b6001600160a01b0383166000908152600360205260408120805460019290611580908490612900565b90915550506001600160a01b03821660009081526003602052604081208054600192906115ae908490612917565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b806001600160a01b031661162283610bb8565b6001600160a01b0316036116785760405162461bcd60e51b815260206004820152601c60248201527f63616e6e6f742072656d6f7665206f776e6572206f6620746f6b656e00000000604482015260640161058c565b6000828152600d602090815260408083206001600160a01b03851680855290835292819020805460ff191690555191825283917fcb55b9c460a26528d8133448da62fe50f8b555cbf7b6851f38aee64ac07c978291016113dd565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316036117865760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161058c565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6117fe848484611468565b61180a84848484611cde565b610d0f5760405162461bcd60e51b815260040161058c9061292f565b6000828152600d602090815260408083206001600160a01b03851680855290835292819020805460ff191660011790555191825283917f90bcc508602ce6509afae3103f5fa4bd917ecdd0ffa791ef4ffb51bbaf19082291016113dd565b6060816000036118ab5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156118d557806118bf8161249c565b91506118ce9050600a83612997565b91506118af565b60008167ffffffffffffffff8111156118f0576118f0612128565b6040519080825280601f01601f19166020018201604052801561191a576020820181803683370190505b5090505b84156114605761192f600183612900565b915061193c600a866129ab565b611947906030612917565b60f81b81838151811061195c5761195c612470565b60200101906001600160f81b031916908160001a90535061197e600a86612997565b945061191e565b606081516000036119a457505060408051602081019091526000815290565b6000604051806060016040528060408152602001612a4f60409139905060006003845160026119d39190612917565b6119dd9190612997565b6119e89060046129bf565b67ffffffffffffffff811115611a0057611a00612128565b6040519080825280601f01601f191660200182016040528015611a2a576020820181803683370190505b509050600182016020820185865187015b80821015611a96576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845350600183019250611a3b565b5050600386510660018114611ab25760028114611ac557611acd565b603d6001830353603d6002830353611acd565b603d60018303535b509195945050505050565b6001600160a01b038216611b2e5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161058c565b6000818152600260205260409020546001600160a01b031615611b935760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161058c565b611b9f60008383611c26565b6001600160a01b0382166000908152600360205260408120805460019290611bc8908490612917565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160a01b038316611c8157611c7c81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611ca4565b816001600160a01b0316836001600160a01b031614611ca457611ca48382611ddf565b6001600160a01b038216611cbb5761062d81611e7c565b826001600160a01b0316826001600160a01b03161461062d5761062d8282611f2b565b60006001600160a01b0384163b15611dd457604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611d229033908990889088906004016129de565b6020604051808303816000875af1925050508015611d5d575060408051601f3d908101601f19168201909252611d5a91810190612a1b565b60015b611dba573d808015611d8b576040519150601f19603f3d011682016040523d82523d6000602084013e611d90565b606091505b508051600003611db25760405162461bcd60e51b815260040161058c9061292f565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611460565b506001949350505050565b60006001611dec84610c18565b611df69190612900565b600083815260076020526040902054909150808214611e49576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611e8e90600190612900565b60008381526009602052604081205460088054939450909284908110611eb657611eb6612470565b906000526020600020015490508060088381548110611ed757611ed7612470565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611f0f57611f0f612a38565b6001900381819060005260206000200160009055905550505050565b6000611f3683610c18565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160e01b031981168114610cbc57600080fd5b600060208284031215611f9757600080fd5b8135610e0b81611f6f565b600060208284031215611fb457600080fd5b5035919050565b60005b83811015611fd6578181015183820152602001611fbe565b83811115610d0f5750506000910152565b60008151808452611fff816020860160208601611fbb565b601f01601f19169290920160200192915050565b602081526000610e0b6020830184611fe7565b6001600160a01b0381168114610cbc57600080fd5b6000806040838503121561204e57600080fd5b823561205981612026565b946020939093013593505050565b60006020828403121561207957600080fd5b8135610e0b81612026565b60008060006060848603121561209957600080fd5b83356120a481612026565b925060208401356120b481612026565b929592945050506040919091013590565b600080604083850312156120d857600080fd5b8235915060208301356120ea81612026565b809150509250929050565b6000806040838503121561210857600080fd5b823561211381612026565b9150602083013580151581146120ea57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561216757612167612128565b604052919050565b600067ffffffffffffffff82111561218957612189612128565b50601f01601f191660200190565b600080600080608085870312156121ad57600080fd5b84356121b881612026565b935060208501356121c881612026565b925060408501359150606085013567ffffffffffffffff8111156121eb57600080fd5b8501601f810187136121fc57600080fd5b803561220f61220a8261216f565b61213e565b81815288602083850101111561222457600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b6000806040838503121561225957600080fd5b823561226481612026565b915060208301356120ea81612026565b600181811c9082168061228857607f821691505b6020821081036122a857634e487b7160e01b600052602260045260246000fd5b50919050565b6040815260006122d4604083016006815265049534f544f560d41b602082015260400190565b82810360209384015260138152724245455f464143544f52595f4144445245535360681b928101929092525060400190565b60006020828403121561231857600080fd5b815167ffffffffffffffff81111561232f57600080fd5b8201601f8101841361234057600080fd5b805161234e61220a8261216f565b81815285602083850101111561236357600080fd5b612374826020830160208601611fbb565b95945050505050565b60006020828403121561238f57600080fd5b8151610e0b81612026565b6020808252600a9082015269049534f544f50313034360b41b604082015260600190565b600060208083850312156123d157600080fd5b825167ffffffffffffffff808211156123e957600080fd5b818501915085601f8301126123fd57600080fd5b81518181111561240f5761240f612128565b8060051b915061242084830161213e565b818152918301840191848101908884111561243a57600080fd5b938501935b83851015612464578451925061245483612026565b828252938501939085019061243f565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016124ae576124ae612486565b5060010190565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b604081526000612529604083016006815265049534f544f560d41b602082015260400190565b8281036020938401526008815267736f756c2e73766760c01b928101929092525060400190565b60008151612562818560208601611fbb565b9290920192915050565b7f3c7376672077696474683d2235303022206865696768743d2235303022207669815273032bba137bc1e91181018101a9818101a981811160651b60208201527f20786d6c3a73706163653d2270726573657276652220786d6c6e733d2268747460348201527f703a2f2f7777772e77332e6f72672f323030302f737667223e0000000000000060548201527f3c73766720786d6c6e733d22687474703a2f2f7777772e77332e6f72672f3230606d8201527f30302f7376672220786d6c6e733a786c696e6b3d22687474703a2f2f7777772e608d8201527f77332e6f72672f313939392f786c696e6b22207374796c653d226d617267696e60ad8201527f3a206175746f3b206261636b67726f756e643a20726762283235352c2032353560cd8201527f2c20323535293b20646973706c61793a20626c6f636b3b2073686170652d726560ed8201527f6e646572696e673a206175746f3b222077696474683d2235303070782220686561010d8201527f696768743d223530307078222076696577426f783d222d3530202d323020323061012d8201527f302032303022207072657365727665417370656374526174696f3d22784d696461014d820152652ca6b4b2111f60d11b61016d82015260006114606127d26127cc6127ba612757610173870189612550565b7f3c7465787420783d223235302220793d2233353022207374796c653d2274657881527f742d616e63686f723a6d6964646c653b66696c6c3a626c61636b3b666f6e742d60208201526a39b4bd329d191a383c111f60a91b6040820152604b0190565b65536f756c202360d01b815260060190565b85612550565b6c1e17ba32bc3a1f1e17b9bb339f60991b8152600d0190565b6f7b226e616d65223a2022536f756c202360801b81528251600090612817816010850160208801611fbb565b7f222c20226465736372697074696f6e223a2022536f756c204e4654222c2022696010918401918201527f6d616765223a2022646174613a696d6167652f7376672b786d6c3b62617365366030820152610d0b60f21b60508201528351612885816052840160208801611fbb565b7f222c202264657369676e6572223a2022696f73746f702e746f70222c207d000060529290910191820152607001949350505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c0000008152600082516128f381601d850160208701611fbb565b91909101601d0192915050565b60008282101561291257612912612486565b500390565b6000821982111561292a5761292a612486565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b6000826129a6576129a6612981565b500490565b6000826129ba576129ba612981565b500690565b60008160001904831182151516156129d9576129d9612486565b500290565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612a1190830184611fe7565b9695505050505050565b600060208284031215612a2d57600080fd5b8151610e0b81611f6f565b634e487b7160e01b600052603160045260246000fdfe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa264697066735822122026c68f12a9d7cd9ed8ab52cfb0f4896b09f1d8cee854dd9d8636fa3f9a711fb564736f6c634300080d0033",
  "deployedSourceMap": "356:5475:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;990:222:4;;;;;;:::i;:::-;;:::i;:::-;;;565:14:16;;558:22;540:41;;528:2;513:18;990:222:4;;;;;;;;4220:109:14;;;;;;:::i;:::-;4281:7;4307:15;;;:6;:15;;;;;;-1:-1:-1;;;;;4307:15:14;;4220:109;;;;-1:-1:-1;;;;;941:32:16;;;923:51;;911:2;896:18;4220:109:14;777:203:16;2470:98:1;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;3467:407::-;;;;;;:::i;:::-;;:::i;:::-;;848:88:14;;;;;;:::i;:::-;;:::i;1086:608::-;;;;;;:::i;:::-;;:::i;1615:111:4:-;1702:10;:17;1615:111;;;2590:25:16;;;2578:2;2563:18;1615:111:4;2444:177:16;4612:327:1;;;;;;:::i;:::-;;:::i;1291:253:4:-;;;;;;:::i;:::-;;:::i;5005:179:1:-;;;;;;:::i;:::-;;:::i;1798:230:4:-;;;;;;:::i;:::-;;:::i;3319:641:14:-;;;;;;:::i;:::-;;:::i;2190:218:1:-;;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;:::i;:::-;;:::i;1831:101:0:-;;;:::i;942:138:14:-;;;;;;:::i;:::-;;:::i;1201:85:0:-;1273:6;;-1:-1:-1;;;;;1273:6:0;1201:85;;2632:102:1;;;:::i;4169:153::-;;;;;;:::i;:::-;;:::i;5250:315::-;;;;;;:::i;:::-;;:::i;2131:186:14:-;;;;;;:::i;:::-;;:::i;1877:248::-;;;;;;:::i;:::-;;:::i;3121:192::-;;;;;;:::i;:::-;;:::i;4335:1494::-;;;;;;:::i;:::-;;:::i;4388:162:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4508:25:1;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162;2081:198:0;;;;;;:::i;:::-;;:::i;2323:623:14:-;;;;;;:::i;:::-;;:::i;990:222:4:-;1092:4;-1:-1:-1;;;;;;1115:50:4;;-1:-1:-1;;;1115:50:4;;:90;;;1169:36;1193:11;1169:23;:36::i;:::-;1108:97;990:222;-1:-1:-1;;990:222:4:o;2470:98:1:-;2524:13;2556:5;2549:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2470:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:1;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:1;;3935:167::o;3467:407::-;3547:13;3563:23;3578:7;3563:14;:23::i;:::-;3547:39;;3610:5;-1:-1:-1;;;;;3604:11:1;:2;-1:-1:-1;;;;;3604:11:1;;3596:57;;;;-1:-1:-1;;;3596:57:1;;6432:2:16;3596:57:1;;;6414:21:16;6471:2;6451:18;;;6444:30;6510:34;6490:18;;;6483:62;-1:-1:-1;;;6561:18:16;;;6554:31;6602:19;;3596:57:1;;;;;;;;;719:10:9;-1:-1:-1;;;;;3685:21:1;;;;:62;;-1:-1:-1;3710:37:1;3727:5;719:10:9;4388:162:1;:::i;3710:37::-;3664:171;;;;-1:-1:-1;;;3664:171:1;;6834:2:16;3664:171:1;;;6816:21:16;6873:2;6853:18;;;6846:30;6912:34;6892:18;;;6885:62;6983:32;6963:18;;;6956:60;7033:19;;3664:171:1;6632:426:16;3664:171:1;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3537:337;3467:407;;:::o;848:88:14:-;1094:13:0;:11;:13::i;:::-;910:3:14::1;:19:::0;;-1:-1:-1;;;;;;910:19:14::1;-1:-1:-1::0;;;;;910:19:14;;;::::1;::::0;;;::::1;::::0;;848:88::o;1086:608::-;1257:3;;1271:40;;-1:-1:-1;;;1271:40:14;;1216:16;;-1:-1:-1;;;;;1257:3:14;;:13;;:3;;1271:7;;:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1271:40:14;;;;;;;;;;;;:::i;:::-;1257:55;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1216:106;;1332:26;1361:7;-1:-1:-1;;;;;1361:28:14;;:42;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1361:42:14;;;;;;;;;;;;:::i;:::-;1332:71;;1419:9;1414:227;1438:9;:16;1434:1;:20;1414:227;;;1493:9;1503:1;1493:12;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1479:26:14;:10;-1:-1:-1;;;;;1479:26:14;;1475:156;;1525:21;1533:3;1538:7;1525;:21::i;:::-;-1:-1:-1;;;1564:15:14;;;;:6;:15;;;;;:28;;-1:-1:-1;;;;;;1564:28:14;1582:10;1564:28;;;-1:-1:-1;1086:608:14:o;1475:156::-;1456:3;;;;:::i;:::-;;;;1414:227;;;-1:-1:-1;1650:37:14;;-1:-1:-1;;;1650:37:14;;10863:2:16;1650:37:14;;;10845:21:16;10902:2;10882:18;;;10875:30;10941:29;10921:18;;;10914:57;10988:18;;1650:37:14;10661:351:16;4612:327:1;4801:41;719:10:9;4834:7:1;4801:18;:41::i;:::-;4793:100;;;;-1:-1:-1;;;4793:100:1;;;;;;;:::i;:::-;4904:28;4914:4;4920:2;4924:7;4904:9;:28::i;1291:253:4:-;1388:7;1423:23;1440:5;1423:16;:23::i;:::-;1415:5;:31;1407:87;;;;-1:-1:-1;;;1407:87:4;;11634:2:16;1407:87:4;;;11616:21:16;11673:2;11653:18;;;11646:30;11712:34;11692:18;;;11685:62;-1:-1:-1;;;11763:18:16;;;11756:41;11814:19;;1407:87:4;11432:407:16;1407:87:4;-1:-1:-1;;;;;;1511:19:4;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1291:253::o;5005:179:1:-;5138:39;5155:4;5161:2;5165:7;5138:39;;;;;;;;;;;;:16;:39::i;1798:230:4:-;1873:7;1908:30;1702:10;:17;;1615:111;1908:30;1900:5;:38;1892:95;;;;-1:-1:-1;;;1892:95:4;;12046:2:16;1892:95:4;;;12028:21:16;12085:2;12065:18;;;12058:30;12124:34;12104:18;;;12097:62;-1:-1:-1;;;12175:18:16;;;12168:42;12227:19;;1892:95:4;11844:408:16;1892:95:4;2004:10;2015:5;2004:17;;;;;;;;:::i;:::-;;;;;;;;;1997:24;;1798:230;;;:::o;3319:641:14:-;3524:3;;3538:40;;-1:-1:-1;;;3538:40:14;;3483:16;;-1:-1:-1;;;;;3524:3:14;;:13;;:3;;3538:7;;:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3538:40:14;;;;;;;;;;;;:::i;:::-;3524:55;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3483:106;;3599:26;3628:7;-1:-1:-1;;;;;3628:28:14;;:42;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3628:42:14;;;;;;;;;;;;:::i;:::-;3599:71;;3686:9;3681:226;3705:9;:16;3701:1;:20;3681:226;;;3760:9;3770:1;3760:12;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3746:26:14;:10;-1:-1:-1;;;;;3746:26:14;;:59;;;;-1:-1:-1;3776:15:14;;;;:6;:15;;;;;;-1:-1:-1;;;;;3776:15:14;3795:10;3776:29;3746:59;3742:155;;;3825:33;3840:7;3849:8;3825:14;:33::i;:::-;3876:7;;;3319:641;;:::o;3742:155::-;3723:3;;;;:::i;:::-;;;;3681:226;;2190:218:1;2262:7;2297:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2297:16:1;;2323:56;;;;-1:-1:-1;;;2323:56:1;;12459:2:16;2323:56:1;;;12441:21:16;12498:2;12478:18;;;12471:30;-1:-1:-1;;;12517:18:16;;;12510:54;12581:18;;2323:56:1;12257:348:16;1929:204:1;2001:7;-1:-1:-1;;;;;2028:19:1;;2020:73;;;;-1:-1:-1;;;2020:73:1;;12812:2:16;2020:73:1;;;12794:21:16;12851:2;12831:18;;;12824:30;12890:34;12870:18;;;12863:62;-1:-1:-1;;;12941:18:16;;;12934:39;12990:19;;2020:73:1;12610:405:16;2020:73:1;-1:-1:-1;;;;;;2110:16:1;;;;;:9;:16;;;;;;;1929:204::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;942:138:14:-;1046:27;1054:9;1065:7;1046;:27::i;:::-;942:138;:::o;2632:102:1:-;2688:13;2720:7;2713:14;;;;;:::i;4169:153::-;4263:52;719:10:9;4296:8:1;4306;4263:18;:52::i;:::-;4169:153;;:::o;5250:315::-;5418:41;719:10:9;5451:7:1;5418:18;:41::i;:::-;5410:100;;;;-1:-1:-1;;;5410:100:1;;;;;;;:::i;:::-;5520:38;5534:4;5540:2;5544:7;5553:4;5520:13;:38::i;:::-;5250:315;;;;:::o;2131:186:14:-;2213:35;2229:7;2238:9;2213:15;:35::i;:::-;2205:65;;;;-1:-1:-1;;;2205:65:14;;13222:2:16;2205:65:14;;;13204:21:16;13261:2;13241:18;;;13234:30;-1:-1:-1;;;13280:18:16;;;13273:47;13337:18;;2205:65:14;13020:341:16;2205:65:14;2280:30;2292:7;2301:8;2280:11;:30::i;1877:248::-;1979:4;7122:16:1;;;:7;:16;;;;;;-1:-1:-1;;;;;7122:16:1;1999:46:14;;;;-1:-1:-1;;;1999:46:14;;13568:2:16;1999:46:14;;;13550:21:16;13607:2;13587:18;;;13580:30;-1:-1:-1;;;13626:18:16;;;13619:47;13683:18;;1999:46:14;13366:341:16;1999:46:14;2064:17;;;;:8;:17;;;;;;;;-1:-1:-1;;;;;2064:24:14;;;;;;;;;;;;;:53;;;2112:5;-1:-1:-1;;;;;2092:25:14;:16;2100:7;2092;:16::i;:::-;-1:-1:-1;;;;;2092:25:14;;2064:53;2056:62;1877:248;-1:-1:-1;;;1877:248:14:o;3121:192::-;3206:35;3222:7;3231:9;3206:15;:35::i;:::-;3198:65;;;;-1:-1:-1;;;3198:65:14;;13222:2:16;3198:65:14;;;13204:21:16;13261:2;13241:18;;;13234:30;-1:-1:-1;;;13280:18:16;;;13273:47;13337:18;;3198:65:14;13020:341:16;3198:65:14;3273:33;3288:7;3297:8;3273:14;:33::i;4335:1494::-;7099:4:1;7122:16;;;:7;:16;;;;;;4448:13:14;;-1:-1:-1;;;;;7122:16:1;4477:46:14;;;;-1:-1:-1;;;4477:46:14;;13568:2:16;4477:46:14;;;13550:21:16;13607:2;13587:18;;;13580:30;-1:-1:-1;;;13626:18:16;;;13619:47;13683:18;;4477:46:14;13366:341:16;4477:46:14;4534:17;4616:18;:7;:16;:18::i;:::-;5303:3;;:29;;-1:-1:-1;;;5303:29:14;;4730:840;;-1:-1:-1;;;;;5303:3:14;;:7;;:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5303:29:14;;;;;;;;;;;;:::i;:::-;5483:18;:7;:16;:18::i;:::-;4761:795;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4730:13;:840::i;:::-;4554:1072;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4534:1092;;5771:19;5785:4;5771:13;:19::i;:::-;5680:128;;;;;;;;:::i;:::-;;;;;;;;;;;;;5637:185;;;4335:1494;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;18999:2:16;2161:73:0::1;::::0;::::1;18981:21:16::0;19038:2;19018:18;;;19011:30;19077:34;19057:18;;;19050:62;-1:-1:-1;;;19128:18:16;;;19121:36;19174:19;;2161:73:0::1;18797:402:16::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;2323:623:14:-:0;2513:3;;2527:40;;-1:-1:-1;;;2527:40:14;;2472:16;;-1:-1:-1;;;;;2513:3:14;;:13;;:3;;2527:7;;:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2527:40:14;;;;;;;;;;;;:::i;:::-;2513:55;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2472:106;;2588:26;2617:7;-1:-1:-1;;;;;2617:28:14;;:42;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2617:42:14;;;;;;;;;;;;:::i;:::-;2588:71;;2675:9;2670:223;2694:9;:16;2690:1;:20;2670:223;;;2749:9;2759:1;2749:12;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2735:26:14;:10;-1:-1:-1;;;;;2735:26:14;;:59;;;;-1:-1:-1;2765:15:14;;;;:6;:15;;;;;;-1:-1:-1;;;;;2765:15:14;2784:10;2765:29;2735:59;2731:152;;;2814:30;2826:7;2835:8;2814:11;:30::i;2731:152::-;2712:3;;;;:::i;:::-;;;;2670:223;;1570:300:1;1672:4;-1:-1:-1;;;;;;1707:40:1;;-1:-1:-1;;;1707:40:1;;:104;;-1:-1:-1;;;;;;;1763:48:1;;-1:-1:-1;;;1763:48:1;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:11;;;1827:36:1;829:155:11;11657:133:1;7099:4;7122:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7122:16:1;11730:53;;;;-1:-1:-1;;;11730:53:1;;12459:2:16;11730:53:1;;;12441:21:16;12498:2;12478:18;;;12471:30;-1:-1:-1;;;12517:18:16;;;12510:54;12581:18;;11730:53:1;12257:348:16;10959:171:1;11033:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11033:29:1;-1:-1:-1;;;;;11033:29:1;;;;;;;;:24;;11086:23;11033:24;11086:14;:23::i;:::-;-1:-1:-1;;;;;11077:46:1;;;;;;;;;;;10959:171;;:::o;1359:130:0:-;1273:6;;-1:-1:-1;;;;;1273:6:0;719:10:9;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;19406:2:16;1414:68:0;;;19388:21:16;;;19425:18;;;19418:30;19484:34;19464:18;;;19457:62;19536:18;;1414:68:0;19204:356:16;1700:171:14;1766:19;1772:3;1777:7;1766:5;:19::i;:::-;1795:17;;;;:8;:17;;;;;;;;-1:-1:-1;;;;;1795:22:14;;;;;;;;;;;;:29;;-1:-1:-1;;1795:29:14;1820:4;1795:29;;;1839:25;923:51:16;;;1795:17:14;;1839:25;;896:18:16;1839:25:14;;;;;;;;1700:171;;:::o;7317:261:1:-;7410:4;7426:13;7442:23;7457:7;7442:14;:23::i;:::-;7426:39;;7494:5;-1:-1:-1;;;;;7483:16:1;:7;-1:-1:-1;;;;;7483:16:1;;:52;;;-1:-1:-1;;;;;;4508:25:1;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7503:32;7483:87;;;;7563:7;-1:-1:-1;;;;;7539:31:1;:20;7551:7;7539:11;:20::i;:::-;-1:-1:-1;;;;;7539:31:1;;7483:87;7475:96;7317:261;-1:-1:-1;;;;7317:261:1:o;10242:605::-;10396:4;-1:-1:-1;;;;;10369:31:1;:23;10384:7;10369:14;:23::i;:::-;-1:-1:-1;;;;;10369:31:1;;10361:81;;;;-1:-1:-1;;;10361:81:1;;19767:2:16;10361:81:1;;;19749:21:16;19806:2;19786:18;;;19779:30;19845:34;19825:18;;;19818:62;-1:-1:-1;;;19896:18:16;;;19889:35;19941:19;;10361:81:1;19565:401:16;10361:81:1;-1:-1:-1;;;;;10460:16:1;;10452:65;;;;-1:-1:-1;;;10452:65:1;;20173:2:16;10452:65:1;;;20155:21:16;20212:2;20192:18;;;20185:30;20251:34;20231:18;;;20224:62;-1:-1:-1;;;20302:18:16;;;20295:34;20346:19;;10452:65:1;19971:400:16;10452:65:1;10528:39;10549:4;10555:2;10559:7;10528:20;:39::i;:::-;10629:29;10646:1;10650:7;10629:8;:29::i;:::-;-1:-1:-1;;;;;10669:15:1;;;;;;:9;:15;;;;;:20;;10688:1;;10669:15;:20;;10688:1;;10669:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10699:13:1;;;;;;:9;:13;;;;;:18;;10716:1;;10699:13;:18;;10716:1;;10699:18;:::i;:::-;;;;-1:-1:-1;;10727:16:1;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10727:21:1;-1:-1:-1;;;;;10727:21:1;;;;;;;;;10764:27;;10727:16;;10764:27;;;;;;;3537:337;3467:407;;:::o;3966:248:14:-;4072:8;-1:-1:-1;;;;;4052:28:14;:16;4060:7;4052;:16::i;:::-;-1:-1:-1;;;;;4052:28:14;;4044:69;;;;-1:-1:-1;;;4044:69:14;;20841:2:16;4044:69:14;;;20823:21:16;20880:2;20860:18;;;20853:30;20919;20899:18;;;20892:58;20967:18;;4044:69:14;20639:352:16;4044:69:14;4131:17;;;;:8;:17;;;;;;;;-1:-1:-1;;;;;4131:27:14;;;;;;;;;;;;4124:34;;-1:-1:-1;;4124:34:14;;;4174:33;923:51:16;;;4131:17:14;;4174:33;;896:18:16;4174:33:14;777:203:16;2433:187:0;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;11266:307:1:-;11416:8;-1:-1:-1;;;;;11407:17:1;:5;-1:-1:-1;;;;;11407:17:1;;11399:55;;;;-1:-1:-1;;;11399:55:1;;21198:2:16;11399:55:1;;;21180:21:16;21237:2;21217:18;;;21210:30;21276:27;21256:18;;;21249:55;21321:18;;11399:55:1;20996:349:16;11399:55:1;-1:-1:-1;;;;;11464:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11464:46:1;;;;;;;;;;11525:41;;540::16;;;11525::1;;513:18:16;11525:41:1;;;;;;;11266:307;;;:::o;6426:305::-;6576:28;6586:4;6592:2;6596:7;6576:9;:28::i;:::-;6622:47;6645:4;6651:2;6655:7;6664:4;6622:22;:47::i;:::-;6614:110;;;;-1:-1:-1;;;6614:110:1;;;;;;;:::i;2952:163:14:-;3027:17;;;;:8;:17;;;;;;;;-1:-1:-1;;;;;3027:27:14;;;;;;;;;;;;:34;;-1:-1:-1;;3027:34:14;3057:4;3027:34;;;3077:31;923:51:16;;;3027:17:14;;3077:31;;896:18:16;3077:31:14;777:203:16;392:703:10;448:13;665:5;674:1;665:10;661:51;;-1:-1:-1;;691:10:10;;;;;;;;;;;;-1:-1:-1;;;691:10:10;;;;;392:703::o;661:51::-;736:5;721:12;775:75;782:9;;775:75;;807:8;;;;:::i;:::-;;-1:-1:-1;829:10:10;;-1:-1:-1;837:2:10;829:10;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;881:17:10;;859:39;;908:150;915:10;;908:150;;941:11;951:1;941:11;;:::i;:::-;;-1:-1:-1;1009:10:10;1017:2;1009:5;:10;:::i;:::-;996:24;;:2;:24;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;966:56:10;;;;;;;;-1:-1:-1;1036:11:10;1045:2;1036:11;;:::i;:::-;;;908:150;;505:3026:8;563:13;795:4;:11;810:1;795:16;791:31;;-1:-1:-1;;813:9:8;;;;;;;;;-1:-1:-1;813:9:8;;;505:3026::o;791:31::-;872:19;894:6;;;;;;;;;;;;;;;;;872:28;;1303:20;1362:1;1343:4;:11;1357:1;1343:15;;;;:::i;:::-;1342:21;;;;:::i;:::-;1337:27;;:1;:27;:::i;:::-;1326:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1326:39:8;;1303:62;;1540:1;1533:5;1529:13;1641:2;1633:6;1629:15;1748:4;1799;1793:11;1787:4;1783:22;1711:1403;1832:6;1823:7;1820:19;1711:1403;;;1934:1;1925:7;1921:15;1910:26;;1972:7;1966:14;2615:4;2607:5;2603:2;2599:14;2595:25;2585:8;2581:40;2575:47;2564:9;2556:67;2668:1;2657:9;2653:17;2640:30;;2758:4;2750:5;2746:2;2742:14;2738:25;2728:8;2724:40;2718:47;2707:9;2699:67;2811:1;2800:9;2796:17;2783:30;;2900:4;2892:5;2889:1;2885:13;2881:24;2871:8;2867:39;2861:46;2850:9;2842:66;2953:1;2942:9;2938:17;2925:30;;3034:4;3027:5;3023:16;3013:8;3009:31;3003:38;2992:9;2984:58;;3087:1;3076:9;3072:17;3059:30;;1711:1403;;;1715:104;;3272:1;3265:4;3259:11;3255:19;3292:1;3287:120;;;;3425:1;3420:71;;;;3248:243;;3287:120;3339:4;3335:1;3324:9;3320:17;3312:32;3388:4;3384:1;3373:9;3369:17;3361:32;3287:120;;3420:71;3472:4;3468:1;3457:9;3453:17;3445:32;3248:243;-1:-1:-1;3518:6:8;;505:3026;-1:-1:-1;;;;;505:3026:8:o;8868:427:1:-;-1:-1:-1;;;;;8947:16:1;;8939:61;;;;-1:-1:-1;;;8939:61:1;;22518:2:16;8939:61:1;;;22500:21:16;;;22537:18;;;22530:30;22596:34;22576:18;;;22569:62;22648:18;;8939:61:1;22316:356:16;8939:61:1;7099:4;7122:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7122:16:1;:30;9010:58;;;;-1:-1:-1;;;9010:58:1;;22879:2:16;9010:58:1;;;22861:21:16;22918:2;22898:18;;;22891:30;22957;22937:18;;;22930:58;23005:18;;9010:58:1;22677:352:16;9010:58:1;9079:45;9108:1;9112:2;9116:7;9079:20;:45::i;:::-;-1:-1:-1;;;;;9135:13:1;;;;;;:9;:13;;;;;:18;;9152:1;;9135:13;:18;;9152:1;;9135:18;:::i;:::-;;;;-1:-1:-1;;9163:16:1;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9163:21:1;-1:-1:-1;;;;;9163:21:1;;;;;;;;9200:33;;9163:16;;;9200:33;;9163:16;;9200:33;4169:153;;:::o;2624:572:4:-;-1:-1:-1;;;;;2823:18:4;;2819:183;;2857:40;2889:7;4005:10;:17;;3978:24;;;;:15;:24;;;;;:44;;;4032:24;;;;;;;;;;;;3902:161;2857:40;2819:183;;;2926:2;-1:-1:-1;;;;;2918:10:4;:4;-1:-1:-1;;;;;2918:10:4;;2914:88;;2944:47;2977:4;2983:7;2944:32;:47::i;:::-;-1:-1:-1;;;;;3015:16:4;;3011:179;;3047:45;3084:7;3047:36;:45::i;3011:179::-;3119:4;-1:-1:-1;;;;;3113:10:4;:2;-1:-1:-1;;;;;3113:10:4;;3109:81;;3139:40;3167:2;3171:7;3139:27;:40::i;12342:831:1:-;12491:4;-1:-1:-1;;;;;12511:13:1;;1465:19:7;:23;12507:660:1;;12546:71;;-1:-1:-1;;;12546:71:1;;-1:-1:-1;;;;;12546:36:1;;;;;:71;;719:10:9;;12597:4:1;;12603:7;;12612:4;;12546:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12546:71:1;;;;;;;;-1:-1:-1;;12546:71:1;;;;;;;;;;;;:::i;:::-;;;12542:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12784:6;:13;12801:1;12784:18;12780:321;;12826:60;;-1:-1:-1;;;12826:60:1;;;;;;;:::i;12780:321::-;13053:6;13047:13;13038:6;13034:2;13030:15;13023:38;12542:573;-1:-1:-1;;;;;;12667:51:1;-1:-1:-1;;;12667:51:1;;-1:-1:-1;12660:58:1;;12507:660;-1:-1:-1;13152:4:1;12342:831;;;;;;:::o;4680:970:4:-;4942:22;4992:1;4967:22;4984:4;4967:16;:22::i;:::-;:26;;;;:::i;:::-;5003:18;5024:26;;;:17;:26;;;;;;4942:51;;-1:-1:-1;5154:28:4;;;5150:323;;-1:-1:-1;;;;;5220:18:4;;5198:19;5220:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5269:30;;;;;;:44;;;5385:30;;:17;:30;;;;;:43;;;5150:323;-1:-1:-1;5566:26:4;;;;:17;:26;;;;;;;;5559:33;;;-1:-1:-1;;;;;5609:18:4;;;;;:12;:18;;;;;:34;;;;;;;5602:41;4680:970::o;5938:1061::-;6212:10;:17;6187:22;;6212:21;;6232:1;;6212:21;:::i;:::-;6243:18;6264:24;;;:15;:24;;;;;;6632:10;:26;;6187:46;;-1:-1:-1;6264:24:4;;6187:46;;6632:26;;;;;;:::i;:::-;;;;;;;;;6610:48;;6694:11;6669:10;6680;6669:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6773:28;;;:15;:28;;;;;;;:41;;;6942:24;;;;;6935:31;6976:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6009:990;;;5938:1061;:::o;3490:217::-;3574:14;3591:20;3608:2;3591:16;:20::i;:::-;-1:-1:-1;;;;;3621:16:4;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3665:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3490:217:4:o;14:131:16:-;-1:-1:-1;;;;;;88:32:16;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:180::-;651:6;704:2;692:9;683:7;679:23;675:32;672:52;;;720:1;717;710:12;672:52;-1:-1:-1;743:23:16;;592:180;-1:-1:-1;592:180:16:o;985:258::-;1057:1;1067:113;1081:6;1078:1;1075:13;1067:113;;;1157:11;;;1151:18;1138:11;;;1131:39;1103:2;1096:10;1067:113;;;1198:6;1195:1;1192:13;1189:48;;;-1:-1:-1;;1233:1:16;1215:16;;1208:27;985:258::o;1248:::-;1290:3;1328:5;1322:12;1355:6;1350:3;1343:19;1371:63;1427:6;1420:4;1415:3;1411:14;1404:4;1397:5;1393:16;1371:63;:::i;:::-;1488:2;1467:15;-1:-1:-1;;1463:29:16;1454:39;;;;1495:4;1450:50;;1248:258;-1:-1:-1;;1248:258:16:o;1511:220::-;1660:2;1649:9;1642:21;1623:4;1680:45;1721:2;1710:9;1706:18;1698:6;1680:45;:::i;1736:131::-;-1:-1:-1;;;;;1811:31:16;;1801:42;;1791:70;;1857:1;1854;1847:12;1872:315;1940:6;1948;2001:2;1989:9;1980:7;1976:23;1972:32;1969:52;;;2017:1;2014;2007:12;1969:52;2056:9;2043:23;2075:31;2100:5;2075:31;:::i;:::-;2125:5;2177:2;2162:18;;;;2149:32;;-1:-1:-1;;;1872:315:16:o;2192:247::-;2251:6;2304:2;2292:9;2283:7;2279:23;2275:32;2272:52;;;2320:1;2317;2310:12;2272:52;2359:9;2346:23;2378:31;2403:5;2378:31;:::i;2626:456::-;2703:6;2711;2719;2772:2;2760:9;2751:7;2747:23;2743:32;2740:52;;;2788:1;2785;2778:12;2740:52;2827:9;2814:23;2846:31;2871:5;2846:31;:::i;:::-;2896:5;-1:-1:-1;2953:2:16;2938:18;;2925:32;2966:33;2925:32;2966:33;:::i;:::-;2626:456;;3018:7;;-1:-1:-1;;;3072:2:16;3057:18;;;;3044:32;;2626:456::o;3087:315::-;3155:6;3163;3216:2;3204:9;3195:7;3191:23;3187:32;3184:52;;;3232:1;3229;3222:12;3184:52;3268:9;3255:23;3245:33;;3328:2;3317:9;3313:18;3300:32;3341:31;3366:5;3341:31;:::i;:::-;3391:5;3381:15;;;3087:315;;;;;:::o;3407:416::-;3472:6;3480;3533:2;3521:9;3512:7;3508:23;3504:32;3501:52;;;3549:1;3546;3539:12;3501:52;3588:9;3575:23;3607:31;3632:5;3607:31;:::i;:::-;3657:5;-1:-1:-1;3714:2:16;3699:18;;3686:32;3756:15;;3749:23;3737:36;;3727:64;;3787:1;3784;3777:12;3828:127;3889:10;3884:3;3880:20;3877:1;3870:31;3920:4;3917:1;3910:15;3944:4;3941:1;3934:15;3960:275;4031:2;4025:9;4096:2;4077:13;;-1:-1:-1;;4073:27:16;4061:40;;4131:18;4116:34;;4152:22;;;4113:62;4110:88;;;4178:18;;:::i;:::-;4214:2;4207:22;3960:275;;-1:-1:-1;3960:275:16:o;4240:186::-;4288:4;4321:18;4313:6;4310:30;4307:56;;;4343:18;;:::i;:::-;-1:-1:-1;4409:2:16;4388:15;-1:-1:-1;;4384:29:16;4415:4;4380:40;;4240:186::o;4431:1016::-;4526:6;4534;4542;4550;4603:3;4591:9;4582:7;4578:23;4574:33;4571:53;;;4620:1;4617;4610:12;4571:53;4659:9;4646:23;4678:31;4703:5;4678:31;:::i;:::-;4728:5;-1:-1:-1;4785:2:16;4770:18;;4757:32;4798:33;4757:32;4798:33;:::i;:::-;4850:7;-1:-1:-1;4904:2:16;4889:18;;4876:32;;-1:-1:-1;4959:2:16;4944:18;;4931:32;4986:18;4975:30;;4972:50;;;5018:1;5015;5008:12;4972:50;5041:22;;5094:4;5086:13;;5082:27;-1:-1:-1;5072:55:16;;5123:1;5120;5113:12;5072:55;5159:2;5146:16;5184:48;5200:31;5228:2;5200:31;:::i;:::-;5184:48;:::i;:::-;5255:2;5248:5;5241:17;5295:7;5290:2;5285;5281;5277:11;5273:20;5270:33;5267:53;;;5316:1;5313;5306:12;5267:53;5371:2;5366;5362;5358:11;5353:2;5346:5;5342:14;5329:45;5415:1;5410:2;5405;5398:5;5394:14;5390:23;5383:34;5436:5;5426:15;;;;;4431:1016;;;;;;;:::o;5452:388::-;5520:6;5528;5581:2;5569:9;5560:7;5556:23;5552:32;5549:52;;;5597:1;5594;5587:12;5549:52;5636:9;5623:23;5655:31;5680:5;5655:31;:::i;:::-;5705:5;-1:-1:-1;5762:2:16;5747:18;;5734:32;5775:33;5734:32;5775:33;:::i;5845:380::-;5924:1;5920:12;;;;5967;;;5988:61;;6042:4;6034:6;6030:17;6020:27;;5988:61;6095:2;6087:6;6084:14;6064:18;6061:38;6058:161;;6141:10;6136:3;6132:20;6129:1;6122:31;6176:4;6173:1;6166:15;6204:4;6201:1;6194:15;6058:161;;5845:380;;;:::o;7222:557::-;7525:2;7514:9;7507:21;7488:4;7551:49;7596:2;7585:9;7581:18;7140:1;7128:14;;-1:-1:-1;;;7167:4:16;7158:14;;7151:32;7208:2;7199:12;;7063:154;7551:49;7636:22;;;7631:2;7616:18;;;7609:50;7683:2;7668:18;;-1:-1:-1;;;7702:15:16;;;7695:46;;;;-1:-1:-1;7770:2:16;7758:15;;7222:557::o;7784:634::-;7863:6;7916:2;7904:9;7895:7;7891:23;7887:32;7884:52;;;7932:1;7929;7922:12;7884:52;7965:9;7959:16;7998:18;7990:6;7987:30;7984:50;;;8030:1;8027;8020:12;7984:50;8053:22;;8106:4;8098:13;;8094:27;-1:-1:-1;8084:55:16;;8135:1;8132;8125:12;8084:55;8164:2;8158:9;8189:48;8205:31;8233:2;8205:31;:::i;8189:48::-;8260:2;8253:5;8246:17;8300:7;8295:2;8290;8286;8282:11;8278:20;8275:33;8272:53;;;8321:1;8318;8311:12;8272:53;8334:54;8385:2;8380;8373:5;8369:14;8364:2;8360;8356:11;8334:54;:::i;:::-;8407:5;7784:634;-1:-1:-1;;;;;7784:634:16:o;8646:251::-;8716:6;8769:2;8757:9;8748:7;8744:23;8740:32;8737:52;;;8785:1;8782;8775:12;8737:52;8817:9;8811:16;8836:31;8861:5;8836:31;:::i;8902:334::-;9104:2;9086:21;;;9143:2;9123:18;;;9116:30;-1:-1:-1;;;9177:2:16;9162:18;;9155:40;9227:2;9212:18;;8902:334::o;9241:1011::-;9336:6;9367:2;9410;9398:9;9389:7;9385:23;9381:32;9378:52;;;9426:1;9423;9416:12;9378:52;9459:9;9453:16;9488:18;9529:2;9521:6;9518:14;9515:34;;;9545:1;9542;9535:12;9515:34;9583:6;9572:9;9568:22;9558:32;;9628:7;9621:4;9617:2;9613:13;9609:27;9599:55;;9650:1;9647;9640:12;9599:55;9679:2;9673:9;9701:2;9697;9694:10;9691:36;;;9707:18;;:::i;:::-;9753:2;9750:1;9746:10;9736:20;;9776:28;9800:2;9796;9792:11;9776:28;:::i;:::-;9838:15;;;9908:11;;;9904:20;;;9869:12;;;;9936:19;;;9933:39;;;9968:1;9965;9958:12;9933:39;9992:11;;;;10012:210;10028:6;10023:3;10020:15;10012:210;;;10101:3;10095:10;10082:23;;10118:31;10143:5;10118:31;:::i;:::-;10162:18;;;10045:12;;;;10200;;;;10012:210;;;10241:5;9241:1011;-1:-1:-1;;;;;;;;9241:1011:16:o;10257:127::-;10318:10;10313:3;10309:20;10306:1;10299:31;10349:4;10346:1;10339:15;10373:4;10370:1;10363:15;10389:127;10450:10;10445:3;10441:20;10438:1;10431:31;10481:4;10478:1;10471:15;10505:4;10502:1;10495:15;10521:135;10560:3;10581:17;;;10578:43;;10601:18;;:::i;:::-;-1:-1:-1;10648:1:16;10637:13;;10521:135::o;11017:410::-;11219:2;11201:21;;;11258:2;11238:18;;;11231:30;11297:34;11292:2;11277:18;;11270:62;-1:-1:-1;;;11363:2:16;11348:18;;11341:44;11417:3;11402:19;;11017:410::o;13712:545::-;14015:2;14004:9;13997:21;13978:4;14041:49;14086:2;14075:9;14071:18;7140:1;7128:14;;-1:-1:-1;;;7167:4:16;7158:14;;7151:32;7208:2;7199:12;;7063:154;14041:49;14126:22;;;14121:2;14106:18;;;14099:50;14173:1;14158:17;;-1:-1:-1;;;14191:15:16;;;14184:35;;;;-1:-1:-1;14248:2:16;14236:15;;13712:545::o;14262:184::-;14303:3;14341:5;14335:12;14356:52;14401:6;14396:3;14389:4;14382:5;14378:16;14356:52;:::i;:::-;14424:16;;;;;14262:184;-1:-1:-1;;14262:184:16:o;15020:2113::-;15833:66;15821:79;;-1:-1:-1;;;15925:2:16;15916:12;;15909:74;16013:66;16008:2;15999:12;;15992:88;16110:66;16105:2;16096:12;;16089:88;16208:66;16202:3;16193:13;;16186:89;16306:66;16300:3;16291:13;;16284:89;16404:66;16398:3;16389:13;;16382:89;16502:34;16496:3;16487:13;;16480:57;16568:34;16562:3;16553:13;;16546:57;16634:66;16628:3;16619:13;;16612:89;16732:66;16726:3;16717:13;;16710:89;16830:66;16824:3;16815:13;;16808:89;-1:-1:-1;;;16922:3:16;16913:13;;16906:47;-1:-1:-1;16969:158:16;16999:127;17024:101;17054:70;17084:39;17118:3;17109:13;;17101:6;17084:39;:::i;:::-;14528:66;14516:79;;14625:34;14620:2;14611:12;;14604:56;-1:-1:-1;;;14685:2:16;14676:12;;14669:56;14750:2;14741:12;;14451:308;17054:70;-1:-1:-1;;;14829:21:16;;14875:1;14866:11;;14764:119;17024:101;17016:6;16999:127;:::i;:::-;-1:-1:-1;;;14953:28:16;;15006:2;14997:12;;14888:127;17138:1201;-1:-1:-1;;;17638:57:16;;17718:13;;17620:3;;17740:62;17718:13;17790:2;17781:12;;17774:4;17762:17;;17740:62;:::i;:::-;17866:66;17861:2;17821:16;;;17853:11;;;17846:87;17962:66;17957:2;17949:11;;17942:87;-1:-1:-1;;;18053:2:16;18045:11;;18038:25;18088:13;;18110:63;18088:13;18159:2;18151:11;;18144:4;18132:17;;18110:63;:::i;:::-;18238:66;18233:2;18192:17;;;;18225:11;;;18218:87;18329:3;18321:12;;17138:1201;-1:-1:-1;;;;17138:1201:16:o;18344:448::-;18606:31;18601:3;18594:44;18576:3;18667:6;18661:13;18683:62;18738:6;18733:2;18728:3;18724:12;18717:4;18709:6;18705:17;18683:62;:::i;:::-;18765:16;;;;18783:2;18761:25;;18344:448;-1:-1:-1;;18344:448:16:o;20376:125::-;20416:4;20444:1;20441;20438:8;20435:34;;;20449:18;;:::i;:::-;-1:-1:-1;20486:9:16;;20376:125::o;20506:128::-;20546:3;20577:1;20573:6;20570:1;20567:13;20564:39;;;20583:18;;:::i;:::-;-1:-1:-1;20619:9:16;;20506:128::o;21350:414::-;21552:2;21534:21;;;21591:2;21571:18;;;21564:30;21630:34;21625:2;21610:18;;21603:62;-1:-1:-1;;;21696:2:16;21681:18;;21674:48;21754:3;21739:19;;21350:414::o;21769:127::-;21830:10;21825:3;21821:20;21818:1;21811:31;21861:4;21858:1;21851:15;21885:4;21882:1;21875:15;21901:120;21941:1;21967;21957:35;;21972:18;;:::i;:::-;-1:-1:-1;22006:9:16;;21901:120::o;22026:112::-;22058:1;22084;22074:35;;22089:18;;:::i;:::-;-1:-1:-1;22123:9:16;;22026:112::o;22143:168::-;22183:7;22249:1;22245;22241:6;22237:14;22234:1;22231:21;22226:1;22219:9;22212:17;22208:45;22205:71;;;22256:18;;:::i;:::-;-1:-1:-1;22296:9:16;;22143:168::o;23034:489::-;-1:-1:-1;;;;;23303:15:16;;;23285:34;;23355:15;;23350:2;23335:18;;23328:43;23402:2;23387:18;;23380:34;;;23450:3;23445:2;23430:18;;23423:31;;;23228:4;;23471:46;;23497:19;;23489:6;23471:46;:::i;:::-;23463:54;23034:489;-1:-1:-1;;;;;;23034:489:16:o;23528:249::-;23597:6;23650:2;23638:9;23629:7;23625:23;23621:32;23618:52;;;23666:1;23663;23656:12;23618:52;23698:9;23692:16;23717:30;23741:5;23717:30;:::i;23782:127::-;23843:10;23838:3;23834:20;23831:1;23824:31;23874:4;23871:1;23864:15;23898:4;23895:1;23888:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    356,
    5831
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xBA3D0DEC GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0xF72868CA EQ PUSH2 0x421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBA3D0DEC EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0xBAF0D49E EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0xC3D7E350 EQ PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x780900DC EQ PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x5AF0DE07 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x81812FC GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xD6752B0 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xECAEA73 EQ PUSH2 0x282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x5F63C8A EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x232 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F85 JUMP JUMPDEST PUSH2 0x434 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21A PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0x1FA2 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x23A PUSH2 0x45F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH2 0x21A PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FA2 JUMP JUMPDEST PUSH2 0x4F1 JUMP JUMPDEST PUSH2 0x26D PUSH2 0x268 CALLDATASIZE PUSH1 0x4 PUSH2 0x203B JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26D PUSH2 0x27D CALLDATASIZE PUSH1 0x4 PUSH2 0x2067 JUMP JUMPDEST PUSH2 0x632 JUMP JUMPDEST PUSH2 0x26D PUSH2 0x290 CALLDATASIZE PUSH1 0x4 PUSH2 0x203B JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x26D PUSH2 0x2B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2084 JUMP JUMPDEST PUSH2 0x871 JUMP JUMPDEST PUSH2 0x299 PUSH2 0x2C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x203B JUMP JUMPDEST PUSH2 0x8A2 JUMP JUMPDEST PUSH2 0x26D PUSH2 0x2DB CALLDATASIZE PUSH1 0x4 PUSH2 0x2084 JUMP JUMPDEST PUSH2 0x938 JUMP JUMPDEST PUSH2 0x299 PUSH2 0x2EE CALLDATASIZE PUSH1 0x4 PUSH2 0x1FA2 JUMP JUMPDEST PUSH2 0x953 JUMP JUMPDEST PUSH2 0x26D PUSH2 0x301 CALLDATASIZE PUSH1 0x4 PUSH2 0x20C5 JUMP JUMPDEST PUSH2 0x9E6 JUMP JUMPDEST PUSH2 0x21A PUSH2 0x314 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FA2 JUMP JUMPDEST PUSH2 0xBB8 JUMP JUMPDEST PUSH2 0x299 PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0x2067 JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x26D PUSH2 0xC9E JUMP JUMPDEST PUSH2 0x26D PUSH2 0x342 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FA2 JUMP JUMPDEST PUSH2 0xCB2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x21A JUMP JUMPDEST PUSH2 0x23A PUSH2 0xCBF JUMP JUMPDEST PUSH2 0x26D PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x20F5 JUMP JUMPDEST PUSH2 0xCCE JUMP JUMPDEST PUSH2 0x26D PUSH2 0x381 CALLDATASIZE PUSH1 0x4 PUSH2 0x2197 JUMP JUMPDEST PUSH2 0xCDD JUMP JUMPDEST PUSH2 0x26D PUSH2 0x394 CALLDATASIZE PUSH1 0x4 PUSH2 0x20C5 JUMP JUMPDEST PUSH2 0xD15 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x3A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x20C5 JUMP JUMPDEST PUSH2 0xD69 JUMP JUMPDEST PUSH2 0x26D PUSH2 0x3BA CALLDATASIZE PUSH1 0x4 PUSH2 0x20C5 JUMP JUMPDEST PUSH2 0xE12 JUMP JUMPDEST PUSH2 0x23A PUSH2 0x3CD CALLDATASIZE PUSH1 0x4 PUSH2 0x1FA2 JUMP JUMPDEST PUSH2 0xE66 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x3E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x26D PUSH2 0x41C CALLDATASIZE PUSH1 0x4 PUSH2 0x2067 JUMP JUMPDEST PUSH2 0xFC1 JUMP JUMPDEST PUSH2 0x26D PUSH2 0x42F CALLDATASIZE PUSH1 0x4 PUSH2 0x20C5 JUMP JUMPDEST PUSH2 0x1037 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x459 JUMPI POP PUSH2 0x459 DUP3 PUSH2 0x1202 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x46E SWAP1 PUSH2 0x2274 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x49A SWAP1 PUSH2 0x2274 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4BC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4FC DUP3 PUSH2 0x1252 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x523 DUP3 PUSH2 0xBB8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x595 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x5B1 JUMPI POP PUSH2 0x5B1 DUP2 CALLER PUSH2 0x3E0 JUMP JUMPDEST PUSH2 0x623 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x58C JUMP JUMPDEST PUSH2 0x62D DUP4 DUP4 PUSH2 0x12B1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x63A PUSH2 0x131F JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x3E10510B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2D888869 SWAP1 DUP3 SWAP1 PUSH4 0x3E10510B SWAP1 PUSH2 0x693 SWAP1 PUSH1 0x4 ADD PUSH2 0x22AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x6D8 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2306 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F4 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x711 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x735 SWAP2 SWAP1 PUSH2 0x237D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC3BB1A57 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0x239A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x780 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x7A8 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x23BE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x828 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x7C8 JUMPI PUSH2 0x7C8 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x816 JUMPI PUSH2 0x7F2 DUP6 DUP6 PUSH2 0x1379 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE POP JUMP JUMPDEST DUP1 PUSH2 0x820 DUP2 PUSH2 0x249C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7AD JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616C6C6572206E6F7420696E206F70657261746F72206C6973740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x58C JUMP JUMPDEST PUSH2 0x87B CALLER DUP3 PUSH2 0x13E9 JUMP JUMPDEST PUSH2 0x897 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58C SWAP1 PUSH2 0x24B5 JUMP JUMPDEST PUSH2 0x62D DUP4 DUP4 DUP4 PUSH2 0x1468 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8AD DUP4 PUSH2 0xC18 JUMP JUMPDEST DUP3 LT PUSH2 0x90F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x58C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x62D DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x95E PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x9C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x58C JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9D4 JUMPI PUSH2 0x9D4 PUSH2 0x2470 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x3E10510B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2D888869 SWAP1 DUP3 SWAP1 PUSH4 0x3E10510B SWAP1 PUSH2 0xA1D SWAP1 PUSH1 0x4 ADD PUSH2 0x22AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA3A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xA62 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2306 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7E SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA9B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xABF SWAP2 SWAP1 PUSH2 0x237D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC3BB1A57 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAED SWAP1 PUSH2 0x239A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB0A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xB32 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x23BE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x828 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xB52 JUMPI PUSH2 0xB52 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0xB90 JUMPI POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST ISZERO PUSH2 0xBA6 JUMPI PUSH2 0xB9F DUP6 DUP6 PUSH2 0x160F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0xBB0 DUP2 PUSH2 0x249C JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB37 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x459 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x58C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC82 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x58C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xCA6 PUSH2 0x131F JUMP JUMPDEST PUSH2 0xCB0 PUSH1 0x0 PUSH2 0x16D3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xCBC ORIGIN DUP3 PUSH2 0x1379 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x46E SWAP1 PUSH2 0x2274 JUMP JUMPDEST PUSH2 0xCD9 CALLER DUP4 DUP4 PUSH2 0x1725 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xCE7 CALLER DUP4 PUSH2 0x13E9 JUMP JUMPDEST PUSH2 0xD03 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58C SWAP1 PUSH2 0x24B5 JUMP JUMPDEST PUSH2 0xD0F DUP5 DUP5 DUP5 DUP5 PUSH2 0x17F3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xD1F DUP3 ORIGIN PUSH2 0xD69 JUMP JUMPDEST PUSH2 0xD5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x1B9BDD081BDDDB995C881BD9881CDBDD5B PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x58C JUMP JUMPDEST PUSH2 0xCD9 DUP3 DUP3 PUSH2 0x1826 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x3737B732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x58C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xE0B JUMPI POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE00 DUP5 PUSH2 0xBB8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xE1C DUP3 ORIGIN PUSH2 0xD69 JUMP JUMPDEST PUSH2 0xE5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x1B9BDD081BDDDB995C881BD9881CDBDD5B PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x58C JUMP JUMPDEST PUSH2 0xCD9 DUP3 DUP3 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x3737B732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x58C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xECC DUP4 PUSH2 0x1884 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x3E10510B PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xF6F SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x3E10510B SWAP1 PUSH2 0xEFC SWAP1 PUSH1 0x4 ADD PUSH2 0x2503 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF19 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xF41 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2306 JUMP JUMPDEST PUSH2 0xF4A DUP7 PUSH2 0x1884 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF5B SWAP3 SWAP2 SWAP1 PUSH2 0x256C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x1985 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF80 SWAP3 SWAP2 SWAP1 PUSH2 0x27EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0xF9A DUP2 PUSH2 0x1985 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFAA SWAP2 SWAP1 PUSH2 0x28BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC9 PUSH2 0x131F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x102E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x58C JUMP JUMPDEST PUSH2 0xCBC DUP2 PUSH2 0x16D3 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x3E10510B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2D888869 SWAP1 DUP3 SWAP1 PUSH4 0x3E10510B SWAP1 PUSH2 0x106E SWAP1 PUSH1 0x4 ADD PUSH2 0x22AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x108B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x10B3 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2306 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10CF SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1110 SWAP2 SWAP1 PUSH2 0x237D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC3BB1A57 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113E SWAP1 PUSH2 0x239A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x115B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1183 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x23BE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x828 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x11A3 JUMPI PUSH2 0x11A3 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x11E1 JUMPI POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST ISZERO PUSH2 0x11F0 JUMPI PUSH2 0xB9F DUP6 DUP6 PUSH2 0x1826 JUMP JUMPDEST DUP1 PUSH2 0x11FA DUP2 PUSH2 0x249C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x1233 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x459 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x459 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCBC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x58C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x12E6 DUP3 PUSH2 0xBB8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x58C JUMP JUMPDEST PUSH2 0x1383 DUP3 DUP3 PUSH2 0x1AD8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP2 DUP3 MSTORE DUP3 SWAP2 PUSH32 0xCAD03A9101BD852B136D161A1B16B7BA008655DECD17A2FAEC9259B23B5045BA SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x13F5 DUP4 PUSH2 0xBB8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x143C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x1460 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1455 DUP5 PUSH2 0x4F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x147B DUP3 PUSH2 0xBB8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x14DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x58C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1541 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x58C JUMP JUMPDEST PUSH2 0x154C DUP4 DUP4 DUP4 PUSH2 0x1C26 JUMP JUMPDEST PUSH2 0x1557 PUSH1 0x0 DUP3 PUSH2 0x12B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1580 SWAP1 DUP5 SWAP1 PUSH2 0x2900 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x15AE SWAP1 DUP5 SWAP1 PUSH2 0x2917 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1622 DUP4 PUSH2 0xBB8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1678 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F742072656D6F7665206F776E6572206F6620746F6B656E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x58C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD SWAP2 DUP3 MSTORE DUP4 SWAP2 PUSH32 0xCB55B9C460A26528D8133448DA62FE50F8B555CBF7B6851F38AEE64AC07C9782 SWAP2 ADD PUSH2 0x13DD JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1786 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x58C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x17FE DUP5 DUP5 DUP5 PUSH2 0x1468 JUMP JUMPDEST PUSH2 0x180A DUP5 DUP5 DUP5 DUP5 PUSH2 0x1CDE JUMP JUMPDEST PUSH2 0xD0F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58C SWAP1 PUSH2 0x292F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP2 DUP3 MSTORE DUP4 SWAP2 PUSH32 0x90BCC508602CE6509AFAE3103F5FA4BD917ECDD0FFA791EF4FFB51BBAF190822 SWAP2 ADD PUSH2 0x13DD JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x18AB JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x18D5 JUMPI DUP1 PUSH2 0x18BF DUP2 PUSH2 0x249C JUMP JUMPDEST SWAP2 POP PUSH2 0x18CE SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x2997 JUMP JUMPDEST SWAP2 POP PUSH2 0x18AF JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18F0 JUMPI PUSH2 0x18F0 PUSH2 0x2128 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x191A JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x1460 JUMPI PUSH2 0x192F PUSH1 0x1 DUP4 PUSH2 0x2900 JUMP JUMPDEST SWAP2 POP PUSH2 0x193C PUSH1 0xA DUP7 PUSH2 0x29AB JUMP JUMPDEST PUSH2 0x1947 SWAP1 PUSH1 0x30 PUSH2 0x2917 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x195C JUMPI PUSH2 0x195C PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x197E PUSH1 0xA DUP7 PUSH2 0x2997 JUMP JUMPDEST SWAP5 POP PUSH2 0x191E JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH1 0x0 SUB PUSH2 0x19A4 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A4F PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP5 MLOAD PUSH1 0x2 PUSH2 0x19D3 SWAP2 SWAP1 PUSH2 0x2917 JUMP JUMPDEST PUSH2 0x19DD SWAP2 SWAP1 PUSH2 0x2997 JUMP JUMPDEST PUSH2 0x19E8 SWAP1 PUSH1 0x4 PUSH2 0x29BF JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A00 JUMPI PUSH2 0x1A00 PUSH2 0x2128 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A2A JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP3 ADD PUSH1 0x20 DUP3 ADD DUP6 DUP7 MLOAD DUP8 ADD JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x1A96 JUMPI PUSH1 0x3 DUP3 ADD SWAP2 POP DUP2 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD DUP5 MSTORE8 PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD DUP5 MSTORE8 POP PUSH1 0x1 DUP4 ADD SWAP3 POP PUSH2 0x1A3B JUMP JUMPDEST POP POP PUSH1 0x3 DUP7 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0x1AB2 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1AC5 JUMPI PUSH2 0x1ACD JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 PUSH1 0x3D PUSH1 0x2 DUP4 SUB MSTORE8 PUSH2 0x1ACD JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1B2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x58C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1B93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x58C JUMP JUMPDEST PUSH2 0x1B9F PUSH1 0x0 DUP4 DUP4 PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1BC8 SWAP1 DUP5 SWAP1 PUSH2 0x2917 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1C81 JUMPI PUSH2 0x1C7C DUP2 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x1CA4 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1CA4 JUMPI PUSH2 0x1CA4 DUP4 DUP3 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1CBB JUMPI PUSH2 0x62D DUP2 PUSH2 0x1E7C JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x62D JUMPI PUSH2 0x62D DUP3 DUP3 PUSH2 0x1F2B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x1DD4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1D22 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x29DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1D5D JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1D5A SWAP2 DUP2 ADD SWAP1 PUSH2 0x2A1B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1DBA JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1D8B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D90 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1DB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58C SWAP1 PUSH2 0x292F JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x1460 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1DEC DUP5 PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x1DF6 SWAP2 SWAP1 PUSH2 0x2900 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x1E49 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1E8E SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2900 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x1EB6 JUMPI PUSH2 0x1EB6 PUSH2 0x2470 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1ED7 JUMPI PUSH2 0x1ED7 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x1F0F JUMPI PUSH2 0x1F0F PUSH2 0x2A38 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F36 DUP4 PUSH2 0xC18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xCBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE0B DUP2 PUSH2 0x1F6F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1FD6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1FBE JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xD0F JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1FFF DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1FBB JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xE0B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1FE7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x204E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2059 DUP2 PUSH2 0x2026 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2079 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE0B DUP2 PUSH2 0x2026 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2099 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x20A4 DUP2 PUSH2 0x2026 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x20B4 DUP2 PUSH2 0x2026 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x20EA DUP2 PUSH2 0x2026 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2113 DUP2 PUSH2 0x2026 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x20EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2167 JUMPI PUSH2 0x2167 PUSH2 0x2128 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2189 JUMPI PUSH2 0x2189 PUSH2 0x2128 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x21AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x21B8 DUP2 PUSH2 0x2026 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x21C8 DUP2 PUSH2 0x2026 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x21FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x220F PUSH2 0x220A DUP3 PUSH2 0x216F JUMP JUMPDEST PUSH2 0x213E JUMP JUMPDEST DUP2 DUP2 MSTORE DUP9 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x2224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2264 DUP2 PUSH2 0x2026 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x20EA DUP2 PUSH2 0x2026 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2288 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x22A8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x22D4 PUSH1 0x40 DUP4 ADD PUSH1 0x6 DUP2 MSTORE PUSH6 0x49534F544F5 PUSH1 0xD4 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 SWAP4 DUP5 ADD MSTORE PUSH1 0x13 DUP2 MSTORE PUSH19 0x4245455F464143544F52595F41444452455353 PUSH1 0x68 SHL SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x232F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x2340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x234E PUSH2 0x220A DUP3 PUSH2 0x216F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP6 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x2363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2374 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1FBB JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x238F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xE0B DUP2 PUSH2 0x2026 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xA SWAP1 DUP3 ADD MSTORE PUSH10 0x49534F544F503130343 PUSH1 0xB4 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x23E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x23FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x240F JUMPI PUSH2 0x240F PUSH2 0x2128 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0x2420 DUP5 DUP4 ADD PUSH2 0x213E JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 DUP4 ADD DUP5 ADD SWAP2 DUP5 DUP2 ADD SWAP1 DUP9 DUP5 GT ISZERO PUSH2 0x243A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x2464 JUMPI DUP5 MLOAD SWAP3 POP PUSH2 0x2454 DUP4 PUSH2 0x2026 JUMP JUMPDEST DUP3 DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x243F JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x24AE JUMPI PUSH2 0x24AE PUSH2 0x2486 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x1C881B9BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2529 PUSH1 0x40 DUP4 ADD PUSH1 0x6 DUP2 MSTORE PUSH6 0x49534F544F5 PUSH1 0xD4 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 SWAP4 DUP5 ADD MSTORE PUSH1 0x8 DUP2 MSTORE PUSH8 0x736F756C2E737667 PUSH1 0xC0 SHL SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH2 0x2562 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1FBB JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x3C7376672077696474683D2235303022206865696768743D2235303022207669 DUP2 MSTORE PUSH20 0x32BBA137BC1E91181018101A9818101A9818111 PUSH1 0x65 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x20786D6C3A73706163653D2270726573657276652220786D6C6E733D22687474 PUSH1 0x34 DUP3 ADD MSTORE PUSH32 0x703A2F2F7777772E77332E6F72672F323030302F737667223E00000000000000 PUSH1 0x54 DUP3 ADD MSTORE PUSH32 0x3C73766720786D6C6E733D22687474703A2F2F7777772E77332E6F72672F3230 PUSH1 0x6D DUP3 ADD MSTORE PUSH32 0x30302F7376672220786D6C6E733A786C696E6B3D22687474703A2F2F7777772E PUSH1 0x8D DUP3 ADD MSTORE PUSH32 0x77332E6F72672F313939392F786C696E6B22207374796C653D226D617267696E PUSH1 0xAD DUP3 ADD MSTORE PUSH32 0x3A206175746F3B206261636B67726F756E643A20726762283235352C20323535 PUSH1 0xCD DUP3 ADD MSTORE PUSH32 0x2C20323535293B20646973706C61793A20626C6F636B3B2073686170652D7265 PUSH1 0xED DUP3 ADD MSTORE PUSH32 0x6E646572696E673A206175746F3B222077696474683D22353030707822206865 PUSH2 0x10D DUP3 ADD MSTORE PUSH32 0x696768743D223530307078222076696577426F783D222D3530202D3230203230 PUSH2 0x12D DUP3 ADD MSTORE PUSH32 0x302032303022207072657365727665417370656374526174696F3D22784D6964 PUSH2 0x14D DUP3 ADD MSTORE PUSH6 0x2CA6B4B2111F PUSH1 0xD1 SHL PUSH2 0x16D DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1460 PUSH2 0x27D2 PUSH2 0x27CC PUSH2 0x27BA PUSH2 0x2757 PUSH2 0x173 DUP8 ADD DUP10 PUSH2 0x2550 JUMP JUMPDEST PUSH32 0x3C7465787420783D223235302220793D2233353022207374796C653D22746578 DUP2 MSTORE PUSH32 0x742D616E63686F723A6D6964646C653B66696C6C3A626C61636B3B666F6E742D PUSH1 0x20 DUP3 ADD MSTORE PUSH11 0x39B4BD329D191A383C111F PUSH1 0xA9 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x4B ADD SWAP1 JUMP JUMPDEST PUSH6 0x536F756C2023 PUSH1 0xD0 SHL DUP2 MSTORE PUSH1 0x6 ADD SWAP1 JUMP JUMPDEST DUP6 PUSH2 0x2550 JUMP JUMPDEST PUSH13 0x1E17BA32BC3A1F1E17B9BB339F PUSH1 0x99 SHL DUP2 MSTORE PUSH1 0xD ADD SWAP1 JUMP JUMPDEST PUSH16 0x7B226E616D65223A2022536F756C2023 PUSH1 0x80 SHL DUP2 MSTORE DUP3 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x2817 DUP2 PUSH1 0x10 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1FBB JUMP JUMPDEST PUSH32 0x222C20226465736372697074696F6E223A2022536F756C204E4654222C202269 PUSH1 0x10 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE PUSH32 0x6D616765223A2022646174613A696D6167652F7376672B786D6C3B6261736536 PUSH1 0x30 DUP3 ADD MSTORE PUSH2 0xD0B PUSH1 0xF2 SHL PUSH1 0x50 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x2885 DUP2 PUSH1 0x52 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1FBB JUMP JUMPDEST PUSH32 0x222C202264657369676E6572223A2022696F73746F702E746F70222C207D0000 PUSH1 0x52 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH1 0x70 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x28F3 DUP2 PUSH1 0x1D DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1FBB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1D ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2912 JUMPI PUSH2 0x2912 PUSH2 0x2486 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x292A JUMPI PUSH2 0x292A PUSH2 0x2486 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x29A6 JUMPI PUSH2 0x29A6 PUSH2 0x2981 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x29BA JUMPI PUSH2 0x29BA PUSH2 0x2981 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x29D9 JUMPI PUSH2 0x29D9 PUSH2 0x2486 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2A11 SWAP1 DUP4 ADD DUP5 PUSH2 0x1FE7 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xE0B DUP2 PUSH2 0x1F6F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID COINBASE TIMESTAMP NUMBER DIFFICULTY GASLIMIT CHAINID SELFBALANCE BASEFEE 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2FA2646970667358 0x22 SLT KECCAK256 0x26 0xC6 DUP16 SLT 0xA9 0xD7 0xCD SWAP15 0xD8 0xAB MSTORE 0xCF 0xB0 DELEGATECALL DUP10 PUSH12 0x9F1D8CEE854DD9D8636FA3F SWAP11 PUSH18 0x1FB564736F6C634300080D00330000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        356,
        5831
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "6": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "7": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "8": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "12": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "REVERT",
      "path": "14"
    },
    "16": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "17": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "POP",
      "path": "14"
    },
    "18": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "21": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "LT",
      "path": "14"
    },
    "22": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C4"
    },
    "25": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "26": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "29": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "SHR",
      "path": "14"
    },
    "32": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "33": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70A08231"
    },
    "38": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "GT",
      "path": "14"
    },
    "39": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF9"
    },
    "42": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "43": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "44": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xBA3D0DEC"
    },
    "49": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "GT",
      "path": "14"
    },
    "50": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x97"
    },
    "53": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "54": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "55": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xC87B56DD"
    },
    "60": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "GT",
      "path": "14"
    },
    "61": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x71"
    },
    "64": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "65": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "66": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xC87B56DD"
    },
    "71": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "EQ",
      "path": "14"
    },
    "72": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3BF"
    },
    "75": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "76": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "77": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xE985E9C5"
    },
    "82": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "EQ",
      "path": "14"
    },
    "83": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3D2"
    },
    "86": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "87": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "88": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "EQ",
      "path": "14"
    },
    "94": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x40E"
    },
    "97": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "98": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "99": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xF72868CA"
    },
    "104": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "EQ",
      "path": "14"
    },
    "105": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x421"
    },
    "108": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "109": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "112": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "REVERT",
      "path": "14"
    },
    "113": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "114": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "115": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xBA3D0DEC"
    },
    "120": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "EQ",
      "path": "14"
    },
    "121": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x386"
    },
    "124": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "125": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "126": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xBAF0D49E"
    },
    "131": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "EQ",
      "path": "14"
    },
    "132": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x399"
    },
    "135": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "136": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "137": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xC3D7E350"
    },
    "142": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "EQ",
      "path": "14"
    },
    "143": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3AC"
    },
    "146": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "147": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "149": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "150": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "REVERT",
      "path": "14"
    },
    "151": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "152": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "153": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x8DA5CB5B"
    },
    "158": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "GT",
      "path": "14"
    },
    "159": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "163": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "164": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x8DA5CB5B"
    },
    "169": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "EQ",
      "path": "14"
    },
    "170": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x347"
    },
    "173": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "174": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "175": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x95D89B41"
    },
    "180": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "EQ",
      "path": "14"
    },
    "181": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x358"
    },
    "184": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "185": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "186": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xA22CB465"
    },
    "191": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "EQ",
      "path": "14"
    },
    "192": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x360"
    },
    "195": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "196": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "197": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xB88D4FDE"
    },
    "202": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "EQ",
      "path": "14"
    },
    "203": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x373"
    },
    "206": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "207": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "209": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "210": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "REVERT",
      "path": "14"
    },
    "211": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "212": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "213": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70A08231"
    },
    "218": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "EQ",
      "path": "14"
    },
    "219": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x319"
    },
    "222": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "223": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "224": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x715018A6"
    },
    "229": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "EQ",
      "path": "14"
    },
    "230": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x32C"
    },
    "233": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "234": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "235": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x780900DC"
    },
    "240": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "EQ",
      "path": "14"
    },
    "241": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x334"
    },
    "244": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "245": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "247": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "248": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "REVERT",
      "path": "14"
    },
    "249": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "250": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "251": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x18160DDD"
    },
    "256": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "GT",
      "path": "14"
    },
    "257": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x166"
    },
    "260": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "261": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "262": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x42842E0E"
    },
    "267": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "GT",
      "path": "14"
    },
    "268": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x140"
    },
    "271": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "272": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "273": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x42842E0E"
    },
    "278": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "EQ",
      "path": "14"
    },
    "279": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2CD"
    },
    "282": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "283": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "284": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x4F6CCCE7"
    },
    "289": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "EQ",
      "path": "14"
    },
    "290": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2E0"
    },
    "293": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "294": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "295": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x5AF0DE07"
    },
    "300": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "EQ",
      "path": "14"
    },
    "301": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2F3"
    },
    "304": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "305": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "306": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6352211E"
    },
    "311": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "EQ",
      "path": "14"
    },
    "312": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x306"
    },
    "315": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "316": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "318": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "319": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "REVERT",
      "path": "14"
    },
    "320": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "321": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "322": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x18160DDD"
    },
    "327": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "EQ",
      "path": "14"
    },
    "328": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x295"
    },
    "331": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "332": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "333": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x23B872DD"
    },
    "338": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "EQ",
      "path": "14"
    },
    "339": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2A7"
    },
    "342": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "343": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "344": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x2F745C59"
    },
    "349": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "EQ",
      "path": "14"
    },
    "350": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2BA"
    },
    "353": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "354": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "356": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "357": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "REVERT",
      "path": "14"
    },
    "358": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "359": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "360": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x81812FC"
    },
    "365": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "GT",
      "path": "14"
    },
    "366": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1A2"
    },
    "369": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "370": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "371": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x81812FC"
    },
    "376": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "EQ",
      "path": "14"
    },
    "377": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x247"
    },
    "380": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "381": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "382": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x95EA7B3"
    },
    "387": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "EQ",
      "path": "14"
    },
    "388": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x25A"
    },
    "391": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "392": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "393": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xD6752B0"
    },
    "398": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "EQ",
      "path": "14"
    },
    "399": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x26F"
    },
    "402": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "403": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "404": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xECAEA73"
    },
    "409": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "EQ",
      "path": "14"
    },
    "410": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x282"
    },
    "413": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "414": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "416": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "417": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "REVERT",
      "path": "14"
    },
    "418": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "419": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "420": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x1FFC9A7"
    },
    "425": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "EQ",
      "path": "14"
    },
    "426": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C9"
    },
    "429": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "430": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "431": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x5F63C8A"
    },
    "436": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "EQ",
      "path": "14"
    },
    "437": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F1"
    },
    "440": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "441": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "442": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6FDDE03"
    },
    "447": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "EQ",
      "path": "14"
    },
    "448": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x232"
    },
    "451": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "452": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "453": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "455": {
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "DUP1",
      "path": "14"
    },
    "456": {
      "first_revert": true,
      "fn": null,
      "offset": [
        356,
        5831
      ],
      "op": "REVERT",
      "path": "14"
    },
    "457": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "458": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1DC"
    },
    "461": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D7"
    },
    "464": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "465": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "467": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F85"
    },
    "470": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        990,
        1212
      ],
      "op": "JUMP",
      "path": "4"
    },
    "471": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "472": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x434"
    },
    "475": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        990,
        1212
      ],
      "op": "JUMP",
      "path": "4"
    },
    "476": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "477": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "479": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "480": {
      "op": "SWAP1"
    },
    "481": {
      "op": "ISZERO"
    },
    "482": {
      "op": "ISZERO"
    },
    "483": {
      "op": "DUP2"
    },
    "484": {
      "op": "MSTORE"
    },
    "485": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "487": {
      "op": "ADD"
    },
    "488": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "489": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "491": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "492": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "DUP1",
      "path": "4"
    },
    "493": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "494": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "SUB",
      "path": "4"
    },
    "495": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "496": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "RETURN",
      "path": "4"
    },
    "497": {
      "fn": "Soul.getOperator",
      "offset": [
        4220,
        4329
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "498": {
      "fn": "Soul.getOperator",
      "offset": [
        4220,
        4329
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x21A"
    },
    "501": {
      "fn": "Soul.getOperator",
      "offset": [
        4220,
        4329
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FF"
    },
    "504": {
      "fn": "Soul.getOperator",
      "offset": [
        4220,
        4329
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "505": {
      "fn": "Soul.getOperator",
      "offset": [
        4220,
        4329
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "507": {
      "fn": "Soul.getOperator",
      "offset": [
        4220,
        4329
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FA2"
    },
    "510": {
      "fn": "Soul.getOperator",
      "jump": "i",
      "offset": [
        4220,
        4329
      ],
      "op": "JUMP",
      "path": "14"
    },
    "511": {
      "fn": "Soul.getOperator",
      "offset": [
        4220,
        4329
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "512": {
      "fn": "Soul.getOperator",
      "offset": [
        4281,
        4288
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "514": {
      "fn": "Soul.getOperator",
      "offset": [
        4307,
        4322
      ],
      "op": "SWAP1",
      "path": "14",
      "statement": 0
    },
    "515": {
      "fn": "Soul.getOperator",
      "offset": [
        4307,
        4322
      ],
      "op": "DUP2",
      "path": "14"
    },
    "516": {
      "fn": "Soul.getOperator",
      "offset": [
        4307,
        4322
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "517": {
      "fn": "Soul.getOperator",
      "offset": [
        4307,
        4313
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xC"
    },
    "519": {
      "fn": "Soul.getOperator",
      "offset": [
        4307,
        4322
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "521": {
      "fn": "Soul.getOperator",
      "offset": [
        4307,
        4322
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "522": {
      "fn": "Soul.getOperator",
      "offset": [
        4307,
        4322
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "524": {
      "fn": "Soul.getOperator",
      "offset": [
        4307,
        4322
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "525": {
      "fn": "Soul.getOperator",
      "offset": [
        4307,
        4322
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "526": {
      "fn": "Soul.getOperator",
      "offset": [
        4307,
        4322
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "531": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "533": {
      "op": "SHL"
    },
    "534": {
      "op": "SUB"
    },
    "535": {
      "fn": "Soul.getOperator",
      "offset": [
        4307,
        4322
      ],
      "op": "AND",
      "path": "14"
    },
    "536": {
      "fn": "Soul.getOperator",
      "offset": [
        4307,
        4322
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "537": {
      "fn": "Soul.getOperator",
      "offset": [
        4220,
        4329
      ],
      "op": "JUMP",
      "path": "14"
    },
    "538": {
      "fn": "Soul.getOperator",
      "offset": [
        4220,
        4329
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "539": {
      "fn": "Soul.getOperator",
      "offset": [
        4220,
        4329
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "541": {
      "fn": "Soul.getOperator",
      "offset": [
        4220,
        4329
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "546": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "548": {
      "op": "SHL"
    },
    "549": {
      "op": "SUB"
    },
    "550": {
      "op": "SWAP1"
    },
    "551": {
      "op": "SWAP2"
    },
    "552": {
      "op": "AND"
    },
    "553": {
      "op": "DUP2"
    },
    "554": {
      "op": "MSTORE"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "557": {
      "op": "ADD"
    },
    "558": {
      "fn": "Soul.getOperator",
      "offset": [
        4220,
        4329
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E8"
    },
    "561": {
      "op": "JUMP"
    },
    "562": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "563": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x23A"
    },
    "566": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x45F"
    },
    "569": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2470,
        2568
      ],
      "op": "JUMP",
      "path": "1"
    },
    "570": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "571": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "573": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "574": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E8"
    },
    "577": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "578": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "579": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2013"
    },
    "582": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2470,
        2568
      ],
      "op": "JUMP",
      "path": "1"
    },
    "583": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "584": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21A"
    },
    "587": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x255"
    },
    "590": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "591": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "593": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FA2"
    },
    "596": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMP",
      "path": "1"
    },
    "597": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "598": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4F1"
    },
    "601": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMP",
      "path": "1"
    },
    "602": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "603": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26D"
    },
    "606": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x268"
    },
    "609": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "610": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "612": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x203B"
    },
    "615": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3467,
        3874
      ],
      "op": "JUMP",
      "path": "1"
    },
    "616": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "617": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x518"
    },
    "620": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3467,
        3874
      ],
      "op": "JUMP",
      "path": "1"
    },
    "621": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "622": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "STOP",
      "path": "1"
    },
    "623": {
      "fn": "Soul.setDDS",
      "offset": [
        848,
        936
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "624": {
      "fn": "Soul.setDDS",
      "offset": [
        848,
        936
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x26D"
    },
    "627": {
      "fn": "Soul.setDDS",
      "offset": [
        848,
        936
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x27D"
    },
    "630": {
      "fn": "Soul.setDDS",
      "offset": [
        848,
        936
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "631": {
      "fn": "Soul.setDDS",
      "offset": [
        848,
        936
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "633": {
      "fn": "Soul.setDDS",
      "offset": [
        848,
        936
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2067"
    },
    "636": {
      "fn": "Soul.setDDS",
      "jump": "i",
      "offset": [
        848,
        936
      ],
      "op": "JUMP",
      "path": "14"
    },
    "637": {
      "fn": "Soul.setDDS",
      "offset": [
        848,
        936
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "638": {
      "fn": "Soul.setDDS",
      "offset": [
        848,
        936
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x632"
    },
    "641": {
      "fn": "Soul.setDDS",
      "jump": "i",
      "offset": [
        848,
        936
      ],
      "op": "JUMP",
      "path": "14"
    },
    "642": {
      "fn": "Soul.create",
      "offset": [
        1086,
        1694
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "643": {
      "fn": "Soul.create",
      "offset": [
        1086,
        1694
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x26D"
    },
    "646": {
      "fn": "Soul.create",
      "offset": [
        1086,
        1694
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x290"
    },
    "649": {
      "fn": "Soul.create",
      "offset": [
        1086,
        1694
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "650": {
      "fn": "Soul.create",
      "offset": [
        1086,
        1694
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "652": {
      "fn": "Soul.create",
      "offset": [
        1086,
        1694
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x203B"
    },
    "655": {
      "fn": "Soul.create",
      "jump": "i",
      "offset": [
        1086,
        1694
      ],
      "op": "JUMP",
      "path": "14"
    },
    "656": {
      "fn": "Soul.create",
      "offset": [
        1086,
        1694
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "657": {
      "fn": "Soul.create",
      "offset": [
        1086,
        1694
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x65C"
    },
    "660": {
      "fn": "Soul.create",
      "jump": "i",
      "offset": [
        1086,
        1694
      ],
      "op": "JUMP",
      "path": "14"
    },
    "661": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "662": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 1,
      "value": "0x8"
    },
    "664": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "665": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "666": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "668": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "669": {
      "op": "SWAP1"
    },
    "670": {
      "op": "DUP2"
    },
    "671": {
      "op": "MSTORE"
    },
    "672": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "674": {
      "op": "ADD"
    },
    "675": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E8"
    },
    "678": {
      "op": "JUMP"
    },
    "679": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4939
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "680": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4939
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26D"
    },
    "683": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4939
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B5"
    },
    "686": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4939
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "687": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4939
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "689": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4939
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2084"
    },
    "692": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4612,
        4939
      ],
      "op": "JUMP",
      "path": "1"
    },
    "693": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4939
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "694": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4939
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x871"
    },
    "697": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4612,
        4939
      ],
      "op": "JUMP",
      "path": "1"
    },
    "698": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "699": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x299"
    },
    "702": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2C8"
    },
    "705": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "706": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "708": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x203B"
    },
    "711": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMP",
      "path": "4"
    },
    "712": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "713": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8A2"
    },
    "716": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMP",
      "path": "4"
    },
    "717": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5005,
        5184
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "718": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5005,
        5184
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26D"
    },
    "721": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5005,
        5184
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2DB"
    },
    "724": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5005,
        5184
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "725": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5005,
        5184
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "727": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5005,
        5184
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2084"
    },
    "730": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5005,
        5184
      ],
      "op": "JUMP",
      "path": "1"
    },
    "731": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5005,
        5184
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "732": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5005,
        5184
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x938"
    },
    "735": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5005,
        5184
      ],
      "op": "JUMP",
      "path": "1"
    },
    "736": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "737": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x299"
    },
    "740": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2EE"
    },
    "743": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "744": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "746": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1FA2"
    },
    "749": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMP",
      "path": "4"
    },
    "750": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "751": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x953"
    },
    "754": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMP",
      "path": "4"
    },
    "755": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3319,
        3960
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "756": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3319,
        3960
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x26D"
    },
    "759": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3319,
        3960
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x301"
    },
    "762": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3319,
        3960
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "763": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3319,
        3960
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "765": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3319,
        3960
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20C5"
    },
    "768": {
      "fn": "Soul.removeAccountByOperator",
      "jump": "i",
      "offset": [
        3319,
        3960
      ],
      "op": "JUMP",
      "path": "14"
    },
    "769": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3319,
        3960
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "770": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3319,
        3960
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x9E6"
    },
    "773": {
      "fn": "Soul.removeAccountByOperator",
      "jump": "i",
      "offset": [
        3319,
        3960
      ],
      "op": "JUMP",
      "path": "14"
    },
    "774": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2408
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "775": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2408
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21A"
    },
    "778": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2408
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x314"
    },
    "781": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2408
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "782": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2408
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "784": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2408
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FA2"
    },
    "787": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2190,
        2408
      ],
      "op": "JUMP",
      "path": "1"
    },
    "788": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2408
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "789": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2408
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB8"
    },
    "792": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2190,
        2408
      ],
      "op": "JUMP",
      "path": "1"
    },
    "793": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "794": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x299"
    },
    "797": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x327"
    },
    "800": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "801": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "803": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2067"
    },
    "806": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMP",
      "path": "1"
    },
    "807": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "808": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC18"
    },
    "811": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMP",
      "path": "1"
    },
    "812": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "813": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26D"
    },
    "816": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC9E"
    },
    "819": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "820": {
      "fn": "Soul.create",
      "offset": [
        942,
        1080
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "821": {
      "fn": "Soul.create",
      "offset": [
        942,
        1080
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x26D"
    },
    "824": {
      "fn": "Soul.create",
      "offset": [
        942,
        1080
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x342"
    },
    "827": {
      "fn": "Soul.create",
      "offset": [
        942,
        1080
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "828": {
      "fn": "Soul.create",
      "offset": [
        942,
        1080
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "830": {
      "fn": "Soul.create",
      "offset": [
        942,
        1080
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FA2"
    },
    "833": {
      "fn": "Soul.create",
      "jump": "i",
      "offset": [
        942,
        1080
      ],
      "op": "JUMP",
      "path": "14"
    },
    "834": {
      "fn": "Soul.create",
      "offset": [
        942,
        1080
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "835": {
      "fn": "Soul.create",
      "offset": [
        942,
        1080
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xCB2"
    },
    "838": {
      "fn": "Soul.create",
      "jump": "i",
      "offset": [
        942,
        1080
      ],
      "op": "JUMP",
      "path": "14"
    },
    "839": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "840": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0xA"
    },
    "842": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "849": {
      "op": "SHL"
    },
    "850": {
      "op": "SUB"
    },
    "851": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "852": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21A"
    },
    "855": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "856": {
      "fn": "ERC721.symbol",
      "offset": [
        2632,
        2734
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "857": {
      "fn": "ERC721.symbol",
      "offset": [
        2632,
        2734
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x23A"
    },
    "860": {
      "fn": "ERC721.symbol",
      "offset": [
        2632,
        2734
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCBF"
    },
    "863": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2632,
        2734
      ],
      "op": "JUMP",
      "path": "1"
    },
    "864": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "865": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26D"
    },
    "868": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36E"
    },
    "871": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "872": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "874": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20F5"
    },
    "877": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMP",
      "path": "1"
    },
    "878": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "879": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCCE"
    },
    "882": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMP",
      "path": "1"
    },
    "883": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "884": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26D"
    },
    "887": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "890": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "891": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "893": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2197"
    },
    "896": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5250,
        5565
      ],
      "op": "JUMP",
      "path": "1"
    },
    "897": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "898": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCDD"
    },
    "901": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5250,
        5565
      ],
      "op": "JUMP",
      "path": "1"
    },
    "902": {
      "fn": "Soul.addAccount",
      "offset": [
        2131,
        2317
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "903": {
      "fn": "Soul.addAccount",
      "offset": [
        2131,
        2317
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x26D"
    },
    "906": {
      "fn": "Soul.addAccount",
      "offset": [
        2131,
        2317
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x394"
    },
    "909": {
      "fn": "Soul.addAccount",
      "offset": [
        2131,
        2317
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "910": {
      "fn": "Soul.addAccount",
      "offset": [
        2131,
        2317
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "912": {
      "fn": "Soul.addAccount",
      "offset": [
        2131,
        2317
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20C5"
    },
    "915": {
      "fn": "Soul.addAccount",
      "jump": "i",
      "offset": [
        2131,
        2317
      ],
      "op": "JUMP",
      "path": "14"
    },
    "916": {
      "fn": "Soul.addAccount",
      "offset": [
        2131,
        2317
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "917": {
      "fn": "Soul.addAccount",
      "offset": [
        2131,
        2317
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD15"
    },
    "920": {
      "fn": "Soul.addAccount",
      "jump": "i",
      "offset": [
        2131,
        2317
      ],
      "op": "JUMP",
      "path": "14"
    },
    "921": {
      "fn": "Soul.validateAddress",
      "offset": [
        1877,
        2125
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "922": {
      "fn": "Soul.validateAddress",
      "offset": [
        1877,
        2125
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1DC"
    },
    "925": {
      "fn": "Soul.validateAddress",
      "offset": [
        1877,
        2125
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3A7"
    },
    "928": {
      "fn": "Soul.validateAddress",
      "offset": [
        1877,
        2125
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "929": {
      "fn": "Soul.validateAddress",
      "offset": [
        1877,
        2125
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "931": {
      "fn": "Soul.validateAddress",
      "offset": [
        1877,
        2125
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20C5"
    },
    "934": {
      "fn": "Soul.validateAddress",
      "jump": "i",
      "offset": [
        1877,
        2125
      ],
      "op": "JUMP",
      "path": "14"
    },
    "935": {
      "fn": "Soul.validateAddress",
      "offset": [
        1877,
        2125
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "936": {
      "fn": "Soul.validateAddress",
      "offset": [
        1877,
        2125
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD69"
    },
    "939": {
      "fn": "Soul.validateAddress",
      "jump": "i",
      "offset": [
        1877,
        2125
      ],
      "op": "JUMP",
      "path": "14"
    },
    "940": {
      "fn": "Soul.removeAccount",
      "offset": [
        3121,
        3313
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "941": {
      "fn": "Soul.removeAccount",
      "offset": [
        3121,
        3313
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x26D"
    },
    "944": {
      "fn": "Soul.removeAccount",
      "offset": [
        3121,
        3313
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3BA"
    },
    "947": {
      "fn": "Soul.removeAccount",
      "offset": [
        3121,
        3313
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "948": {
      "fn": "Soul.removeAccount",
      "offset": [
        3121,
        3313
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "950": {
      "fn": "Soul.removeAccount",
      "offset": [
        3121,
        3313
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20C5"
    },
    "953": {
      "fn": "Soul.removeAccount",
      "jump": "i",
      "offset": [
        3121,
        3313
      ],
      "op": "JUMP",
      "path": "14"
    },
    "954": {
      "fn": "Soul.removeAccount",
      "offset": [
        3121,
        3313
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "955": {
      "fn": "Soul.removeAccount",
      "offset": [
        3121,
        3313
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE12"
    },
    "958": {
      "fn": "Soul.removeAccount",
      "jump": "i",
      "offset": [
        3121,
        3313
      ],
      "op": "JUMP",
      "path": "14"
    },
    "959": {
      "fn": "Soul.tokenURI",
      "offset": [
        4335,
        5829
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "960": {
      "fn": "Soul.tokenURI",
      "offset": [
        4335,
        5829
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x23A"
    },
    "963": {
      "fn": "Soul.tokenURI",
      "offset": [
        4335,
        5829
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3CD"
    },
    "966": {
      "fn": "Soul.tokenURI",
      "offset": [
        4335,
        5829
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "967": {
      "fn": "Soul.tokenURI",
      "offset": [
        4335,
        5829
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "969": {
      "fn": "Soul.tokenURI",
      "offset": [
        4335,
        5829
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FA2"
    },
    "972": {
      "fn": "Soul.tokenURI",
      "jump": "i",
      "offset": [
        4335,
        5829
      ],
      "op": "JUMP",
      "path": "14"
    },
    "973": {
      "fn": "Soul.tokenURI",
      "offset": [
        4335,
        5829
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "974": {
      "fn": "Soul.tokenURI",
      "offset": [
        4335,
        5829
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE66"
    },
    "977": {
      "fn": "Soul.tokenURI",
      "jump": "i",
      "offset": [
        4335,
        5829
      ],
      "op": "JUMP",
      "path": "14"
    },
    "978": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "979": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DC"
    },
    "982": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E0"
    },
    "985": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "986": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "988": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2246"
    },
    "991": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMP",
      "path": "1"
    },
    "992": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "997": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "999": {
      "op": "SHL"
    },
    "1000": {
      "op": "SUB"
    },
    "1001": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 3
    },
    "1002": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1003": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "AND",
      "path": "1"
    },
    "1004": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4485,
        4489
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1006": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1007": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1008": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1009": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4526
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "1011": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1013": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1014": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1015": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1016": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1018": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1019": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1020": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1021": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1022": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1023": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1024": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "AND",
      "path": "1"
    },
    "1025": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1026": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1027": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1028": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1029": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1030": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1031": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1032": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1033": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1035": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "AND",
      "path": "1"
    },
    "1036": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1037": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1038": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1039": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26D"
    },
    "1042": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41C"
    },
    "1045": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1046": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1048": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2067"
    },
    "1051": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1052": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1053": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFC1"
    },
    "1056": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1057": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2323,
        2946
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1058": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2323,
        2946
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x26D"
    },
    "1061": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2323,
        2946
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x42F"
    },
    "1064": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2323,
        2946
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1065": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2323,
        2946
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1067": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2323,
        2946
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x20C5"
    },
    "1070": {
      "fn": "Soul.addAccountByOperator",
      "jump": "i",
      "offset": [
        2323,
        2946
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1071": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2323,
        2946
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1072": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2323,
        2946
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1037"
    },
    "1075": {
      "fn": "Soul.addAccountByOperator",
      "jump": "i",
      "offset": [
        2323,
        2946
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1076": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1077": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1092,
        1096
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1085": {
      "op": "SHL"
    },
    "1086": {
      "op": "SUB"
    },
    "1087": {
      "op": "NOT"
    },
    "1088": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 4
    },
    "1089": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "AND",
      "path": "4"
    },
    "1090": {
      "op": "PUSH4",
      "value": "0x780E9D63"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1097": {
      "op": "SHL"
    },
    "1098": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "EQ",
      "path": "4"
    },
    "1099": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1165
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1100": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1205
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x459"
    },
    "1103": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1205
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1104": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1115,
        1205
      ],
      "op": "POP",
      "path": "4"
    },
    "1105": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1169,
        1205
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x459"
    },
    "1108": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1193,
        1204
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1109": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1169,
        1192
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1202"
    },
    "1112": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "i",
      "offset": [
        1169,
        1205
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1113": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1169,
        1205
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1114": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        1108,
        1205
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1115": {
      "fn": "ERC721Enumerable.supportsInterface",
      "offset": [
        990,
        1212
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1116": {
      "op": "POP"
    },
    "1117": {
      "op": "POP"
    },
    "1118": {
      "fn": "ERC721Enumerable.supportsInterface",
      "jump": "o",
      "offset": [
        990,
        1212
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1119": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1120": {
      "fn": "ERC721.name",
      "offset": [
        2524,
        2537
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1122": {
      "fn": "ERC721.name",
      "offset": [
        2556,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 5,
      "value": "0x0"
    },
    "1124": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1125": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1126": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x46E"
    },
    "1129": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1130": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2274"
    },
    "1133": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1134": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1135": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1136": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1138": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "ADD",
      "path": "1"
    },
    "1139": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1141": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1142": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1143": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DIV",
      "path": "1"
    },
    "1144": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "MUL",
      "path": "1"
    },
    "1145": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1147": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "ADD",
      "path": "1"
    },
    "1148": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1150": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1151": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1152": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1153": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "ADD",
      "path": "1"
    },
    "1154": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1156": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1157": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1158": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1159": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1160": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1161": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1162": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1163": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1164": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1166": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "ADD",
      "path": "1"
    },
    "1167": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1168": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1169": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1170": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x49A"
    },
    "1173": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1174": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2274"
    },
    "1177": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1178": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1179": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1180": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1181": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4E7"
    },
    "1184": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1185": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1186": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1188": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "LT",
      "path": "1"
    },
    "1189": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4BC"
    },
    "1192": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1193": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "1196": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1197": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1198": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1199": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DIV",
      "path": "1"
    },
    "1200": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "MUL",
      "path": "1"
    },
    "1201": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1202": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1203": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1204": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1206": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "ADD",
      "path": "1"
    },
    "1207": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1208": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4E7"
    },
    "1211": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1212": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1213": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1214": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "ADD",
      "path": "1"
    },
    "1215": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1216": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1217": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1219": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1220": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1222": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1224": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1225": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1226": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1227": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1228": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1229": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1230": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1231": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1232": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1234": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "ADD",
      "path": "1"
    },
    "1235": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1236": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1238": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "ADD",
      "path": "1"
    },
    "1239": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1240": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1241": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "GT",
      "path": "1"
    },
    "1242": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4CA"
    },
    "1245": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1246": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1247": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1248": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SUB",
      "path": "1"
    },
    "1249": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1251": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "AND",
      "path": "1"
    },
    "1252": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1253": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "ADD",
      "path": "1"
    },
    "1254": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1255": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1256": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "POP",
      "path": "1"
    },
    "1257": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "POP",
      "path": "1"
    },
    "1258": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "POP",
      "path": "1"
    },
    "1259": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "POP",
      "path": "1"
    },
    "1260": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "POP",
      "path": "1"
    },
    "1261": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1262": {
      "fn": "ERC721.name",
      "offset": [
        2549,
        2561
      ],
      "op": "POP",
      "path": "1"
    },
    "1263": {
      "fn": "ERC721.name",
      "offset": [
        2470,
        2568
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1264": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2470,
        2568
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1265": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1266": {
      "fn": "ERC721.getApproved",
      "offset": [
        4011,
        4018
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1268": {
      "fn": "ERC721.getApproved",
      "offset": [
        4030,
        4053
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 6,
      "value": "0x4FC"
    },
    "1271": {
      "fn": "ERC721.getApproved",
      "offset": [
        4045,
        4052
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1272": {
      "fn": "ERC721.getApproved",
      "offset": [
        4030,
        4044
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1252"
    },
    "1275": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4030,
        4053
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1276": {
      "fn": "ERC721.getApproved",
      "offset": [
        4030,
        4053
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1277": {
      "op": "POP"
    },
    "1278": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 7,
      "value": "0x0"
    },
    "1280": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1281": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1282": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1283": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4086
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1285": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1287": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1288": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1290": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1291": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1292": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1299": {
      "op": "SHL"
    },
    "1300": {
      "op": "SUB"
    },
    "1301": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "AND",
      "path": "1"
    },
    "1302": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1303": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1304": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1305": {
      "fn": "ERC721.approve",
      "offset": [
        3547,
        3560
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1307": {
      "fn": "ERC721.approve",
      "offset": [
        3563,
        3586
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x523"
    },
    "1310": {
      "fn": "ERC721.approve",
      "offset": [
        3578,
        3585
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1311": {
      "fn": "ERC721.approve",
      "offset": [
        3563,
        3577
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB8"
    },
    "1314": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3563,
        3586
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1315": {
      "fn": "ERC721.approve",
      "offset": [
        3563,
        3586
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1316": {
      "fn": "ERC721.approve",
      "offset": [
        3547,
        3586
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1317": {
      "fn": "ERC721.approve",
      "offset": [
        3547,
        3586
      ],
      "op": "POP",
      "path": "1"
    },
    "1318": {
      "fn": "ERC721.approve",
      "offset": [
        3610,
        3615
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 8
    },
    "1319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1323": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1325": {
      "op": "SHL"
    },
    "1326": {
      "op": "SUB"
    },
    "1327": {
      "fn": "ERC721.approve",
      "offset": [
        3604,
        3615
      ],
      "op": "AND",
      "path": "1"
    },
    "1328": {
      "fn": "ERC721.approve",
      "offset": [
        3604,
        3606
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1333": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1335": {
      "op": "SHL"
    },
    "1336": {
      "op": "SUB"
    },
    "1337": {
      "fn": "ERC721.approve",
      "offset": [
        3604,
        3615
      ],
      "op": "AND",
      "path": "1"
    },
    "1338": {
      "branch": 121,
      "fn": "ERC721.approve",
      "offset": [
        3604,
        3615
      ],
      "op": "SUB",
      "path": "1"
    },
    "1339": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x595"
    },
    "1342": {
      "branch": 121,
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1343": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1345": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1346": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1352": {
      "op": "SHL"
    },
    "1353": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1354": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1355": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1357": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1359": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1360": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "ADD",
      "path": "1"
    },
    "1361": {
      "op": "MSTORE"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1366": {
      "op": "DUP3"
    },
    "1367": {
      "op": "ADD"
    },
    "1368": {
      "op": "MSTORE"
    },
    "1369": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1404": {
      "op": "DUP3"
    },
    "1405": {
      "op": "ADD"
    },
    "1406": {
      "op": "MSTORE"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "1411": {
      "op": "SHL"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1414": {
      "op": "DUP3"
    },
    "1415": {
      "op": "ADD"
    },
    "1416": {
      "op": "MSTORE"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1419": {
      "op": "ADD"
    },
    "1420": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1421": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1423": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1424": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1425": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1426": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "SUB",
      "path": "1"
    },
    "1427": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1428": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "1429": {
      "fn": "ERC721.approve",
      "offset": [
        3596,
        3653
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1430": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9",
      "statement": 9
    },
    "1431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1437": {
      "op": "SHL"
    },
    "1438": {
      "op": "SUB"
    },
    "1439": {
      "fn": "ERC721.approve",
      "offset": [
        3685,
        3706
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 10
    },
    "1440": {
      "fn": "ERC721.approve",
      "offset": [
        3685,
        3706
      ],
      "op": "AND",
      "path": "1"
    },
    "1441": {
      "fn": "ERC721.approve",
      "offset": [
        3685,
        3706
      ],
      "op": "EQ",
      "path": "1"
    },
    "1442": {
      "branch": 122,
      "fn": "ERC721.approve",
      "offset": [
        3685,
        3706
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1443": {
      "fn": "ERC721.approve",
      "offset": [
        3685,
        3747
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5B1"
    },
    "1446": {
      "branch": 122,
      "fn": "ERC721.approve",
      "offset": [
        3685,
        3747
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1447": {
      "op": "POP"
    },
    "1448": {
      "fn": "ERC721.approve",
      "offset": [
        3710,
        3747
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5B1"
    },
    "1451": {
      "fn": "ERC721.approve",
      "offset": [
        3727,
        3732
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1452": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1453": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E0"
    },
    "1456": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1457": {
      "branch": 123,
      "fn": "ERC721.approve",
      "offset": [
        3710,
        3747
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1458": {
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x623"
    },
    "1461": {
      "branch": 123,
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1462": {
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1464": {
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1465": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1471": {
      "op": "SHL"
    },
    "1472": {
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1473": {
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1474": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1476": {
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1478": {
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1479": {
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "ADD",
      "path": "1"
    },
    "1480": {
      "op": "MSTORE"
    },
    "1481": {
      "op": "PUSH1",
      "value": "0x3E"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1485": {
      "op": "DUP3"
    },
    "1486": {
      "op": "ADD"
    },
    "1487": {
      "op": "MSTORE"
    },
    "1488": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1523": {
      "op": "DUP3"
    },
    "1524": {
      "op": "ADD"
    },
    "1525": {
      "op": "MSTORE"
    },
    "1526": {
      "op": "PUSH32",
      "value": "0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1561": {
      "op": "DUP3"
    },
    "1562": {
      "op": "ADD"
    },
    "1563": {
      "op": "MSTORE"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1566": {
      "op": "ADD"
    },
    "1567": {
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x58C"
    },
    "1570": {
      "op": "JUMP"
    },
    "1571": {
      "fn": "ERC721.approve",
      "offset": [
        3664,
        3835
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1572": {
      "fn": "ERC721.approve",
      "offset": [
        3846,
        3867
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 11,
      "value": "0x62D"
    },
    "1575": {
      "fn": "ERC721.approve",
      "offset": [
        3855,
        3857
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1576": {
      "fn": "ERC721.approve",
      "offset": [
        3859,
        3866
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1577": {
      "fn": "ERC721.approve",
      "offset": [
        3846,
        3854
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12B1"
    },
    "1580": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3846,
        3867
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1581": {
      "fn": "ERC721.approve",
      "offset": [
        3846,
        3867
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1582": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3874
      ],
      "op": "POP",
      "path": "1"
    },
    "1583": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "POP",
      "path": "1"
    },
    "1584": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "POP",
      "path": "1"
    },
    "1585": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3467,
        3874
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1586": {
      "fn": "Soul.setDDS",
      "offset": [
        848,
        936
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1587": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x63A"
    },
    "1590": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x131F"
    },
    "1593": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1594": {
      "fn": "Soul.setDDS",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1595": {
      "fn": "Soul.setDDS",
      "offset": [
        910,
        913
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 12,
      "value": "0xB"
    },
    "1597": {
      "fn": "Soul.setDDS",
      "offset": [
        910,
        929
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1598": {
      "fn": "Soul.setDDS",
      "offset": [
        910,
        929
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1605": {
      "op": "SHL"
    },
    "1606": {
      "op": "SUB"
    },
    "1607": {
      "op": "NOT"
    },
    "1608": {
      "fn": "Soul.setDDS",
      "offset": [
        910,
        929
      ],
      "op": "AND",
      "path": "14"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1615": {
      "op": "SHL"
    },
    "1616": {
      "op": "SUB"
    },
    "1617": {
      "fn": "Soul.setDDS",
      "offset": [
        910,
        929
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1618": {
      "fn": "Soul.setDDS",
      "offset": [
        910,
        929
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1619": {
      "fn": "Soul.setDDS",
      "offset": [
        910,
        929
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1620": {
      "fn": "Soul.setDDS",
      "offset": [
        910,
        929
      ],
      "op": "AND",
      "path": "14"
    },
    "1621": {
      "fn": "Soul.setDDS",
      "offset": [
        910,
        929
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1622": {
      "fn": "Soul.setDDS",
      "offset": [
        910,
        929
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1623": {
      "fn": "Soul.setDDS",
      "offset": [
        910,
        929
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1624": {
      "fn": "Soul.setDDS",
      "offset": [
        910,
        929
      ],
      "op": "OR",
      "path": "14"
    },
    "1625": {
      "fn": "Soul.setDDS",
      "offset": [
        910,
        929
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1626": {
      "fn": "Soul.setDDS",
      "offset": [
        910,
        929
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1627": {
      "fn": "Soul.setDDS",
      "jump": "o",
      "offset": [
        848,
        936
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1628": {
      "fn": "Soul.create",
      "offset": [
        1086,
        1694
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1629": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1260
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "1631": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1260
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1632": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1634": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1635": {
      "op": "PUSH4",
      "value": "0x3E10510B"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1642": {
      "op": "SHL"
    },
    "1643": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1644": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1645": {
      "fn": "Soul.create",
      "offset": [
        1216,
        1232
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1647": {
      "fn": "Soul.create",
      "offset": [
        1216,
        1232
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1652": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1654": {
      "op": "SHL"
    },
    "1655": {
      "op": "SUB"
    },
    "1656": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1260
      ],
      "op": "AND",
      "path": "14"
    },
    "1657": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1260
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1658": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1270
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x2D888869"
    },
    "1663": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1270
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1664": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1260
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1665": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1260
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1666": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1278
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x3E10510B"
    },
    "1671": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1278
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1672": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x693"
    },
    "1675": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1676": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1678": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "ADD",
      "path": "14"
    },
    "1679": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x22AE"
    },
    "1682": {
      "fn": "Soul.create",
      "jump": "i",
      "offset": [
        1271,
        1311
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1683": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1684": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1686": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1688": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1689": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1690": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1691": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "SUB",
      "path": "14"
    },
    "1692": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1693": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1694": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "GAS",
      "path": "14"
    },
    "1695": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "1696": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1697": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1698": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1699": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6B0"
    },
    "1702": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1703": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1704": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1706": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1707": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "1708": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1709": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1711": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1712": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1713": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "POP",
      "path": "14"
    },
    "1714": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "POP",
      "path": "14"
    },
    "1715": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "POP",
      "path": "14"
    },
    "1716": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "POP",
      "path": "14"
    },
    "1717": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1719": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1720": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1721": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1723": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1724": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "1725": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "1727": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1728": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1729": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1730": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "ADD",
      "path": "14"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1733": {
      "op": "NOT"
    },
    "1734": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "AND",
      "path": "14"
    },
    "1735": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1736": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "ADD",
      "path": "14"
    },
    "1737": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1739": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1740": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6D8"
    },
    "1743": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1744": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1745": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1746": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "ADD",
      "path": "14"
    },
    "1747": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1748": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2306"
    },
    "1751": {
      "fn": "Soul.create",
      "jump": "i",
      "offset": [
        1271,
        1311
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1752": {
      "fn": "Soul.create",
      "offset": [
        1271,
        1311
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1753": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1755": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1756": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1757": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "1762": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "AND",
      "path": "14"
    },
    "1763": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "1765": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "SHL",
      "path": "14"
    },
    "1766": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1767": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1768": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1770": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "ADD",
      "path": "14"
    },
    "1771": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6F4"
    },
    "1774": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1775": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1776": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2013"
    },
    "1779": {
      "fn": "Soul.create",
      "jump": "i",
      "offset": [
        1257,
        1312
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1780": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1781": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1783": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1785": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1786": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1787": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1788": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "SUB",
      "path": "14"
    },
    "1789": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1790": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1791": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "GAS",
      "path": "14"
    },
    "1792": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "1793": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1794": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1795": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1796": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x711"
    },
    "1799": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1800": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1801": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1803": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1804": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "1805": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1806": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1808": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1809": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1810": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "POP",
      "path": "14"
    },
    "1811": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "POP",
      "path": "14"
    },
    "1812": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "POP",
      "path": "14"
    },
    "1813": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "POP",
      "path": "14"
    },
    "1814": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1816": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1817": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1818": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "1820": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "NOT",
      "path": "14"
    },
    "1821": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "1823": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1824": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "ADD",
      "path": "14"
    },
    "1825": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "AND",
      "path": "14"
    },
    "1826": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1827": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "ADD",
      "path": "14"
    },
    "1828": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1829": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1831": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1832": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "POP",
      "path": "14"
    },
    "1833": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1834": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "ADD",
      "path": "14"
    },
    "1835": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1836": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x735"
    },
    "1839": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1840": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1841": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x237D"
    },
    "1844": {
      "fn": "Soul.create",
      "jump": "i",
      "offset": [
        1257,
        1312
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1845": {
      "fn": "Soul.create",
      "offset": [
        1257,
        1312
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1846": {
      "fn": "Soul.create",
      "offset": [
        1216,
        1322
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1847": {
      "fn": "Soul.create",
      "offset": [
        1216,
        1322
      ],
      "op": "POP",
      "path": "14"
    },
    "1848": {
      "fn": "Soul.create",
      "offset": [
        1332,
        1358
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1850": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1368
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1857": {
      "op": "SHL"
    },
    "1858": {
      "op": "SUB"
    },
    "1859": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1389
      ],
      "op": "AND",
      "path": "14"
    },
    "1860": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1389
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xC3BB1A57"
    },
    "1865": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1867": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1868": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1869": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "1874": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "AND",
      "path": "14"
    },
    "1875": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "1877": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "SHL",
      "path": "14"
    },
    "1878": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1879": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1880": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1882": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "ADD",
      "path": "14"
    },
    "1883": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x763"
    },
    "1886": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1887": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x239A"
    },
    "1890": {
      "fn": "Soul.create",
      "jump": "i",
      "offset": [
        1361,
        1403
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1891": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1892": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1894": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1896": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1897": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1898": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1899": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "SUB",
      "path": "14"
    },
    "1900": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1901": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1902": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "GAS",
      "path": "14"
    },
    "1903": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "1904": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1905": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1906": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1907": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x780"
    },
    "1910": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1911": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1912": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1914": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1915": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "1916": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1917": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1919": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1920": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1921": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "POP",
      "path": "14"
    },
    "1922": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "POP",
      "path": "14"
    },
    "1923": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "POP",
      "path": "14"
    },
    "1924": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "POP",
      "path": "14"
    },
    "1925": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1927": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1928": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1929": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1931": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1932": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "1933": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "1935": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1936": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1937": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1938": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "ADD",
      "path": "14"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1941": {
      "op": "NOT"
    },
    "1942": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "AND",
      "path": "14"
    },
    "1943": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1944": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "ADD",
      "path": "14"
    },
    "1945": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1947": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1948": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7A8"
    },
    "1951": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1952": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1953": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1954": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "ADD",
      "path": "14"
    },
    "1955": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1956": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x23BE"
    },
    "1959": {
      "fn": "Soul.create",
      "jump": "i",
      "offset": [
        1361,
        1403
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1960": {
      "fn": "Soul.create",
      "offset": [
        1361,
        1403
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1961": {
      "fn": "Soul.create",
      "offset": [
        1332,
        1403
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1962": {
      "fn": "Soul.create",
      "offset": [
        1332,
        1403
      ],
      "op": "POP",
      "path": "14"
    },
    "1963": {
      "fn": "Soul.create",
      "offset": [
        1419,
        1428
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1965": {
      "fn": "Soul.create",
      "offset": [
        1414,
        1641
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1966": {
      "fn": "Soul.create",
      "offset": [
        1438,
        1447
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1967": {
      "fn": "Soul.create",
      "offset": [
        1438,
        1454
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1968": {
      "fn": "Soul.create",
      "offset": [
        1434,
        1435
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1969": {
      "fn": "Soul.create",
      "offset": [
        1434,
        1454
      ],
      "op": "LT",
      "path": "14"
    },
    "1970": {
      "fn": "Soul.create",
      "offset": [
        1414,
        1641
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1971": {
      "fn": "Soul.create",
      "offset": [
        1414,
        1641
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x828"
    },
    "1974": {
      "fn": "Soul.create",
      "offset": [
        1414,
        1641
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1975": {
      "fn": "Soul.create",
      "offset": [
        1493,
        1502
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1976": {
      "fn": "Soul.create",
      "offset": [
        1503,
        1504
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1977": {
      "fn": "Soul.create",
      "offset": [
        1493,
        1505
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1978": {
      "fn": "Soul.create",
      "offset": [
        1493,
        1505
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1979": {
      "fn": "Soul.create",
      "offset": [
        1493,
        1505
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1980": {
      "fn": "Soul.create",
      "offset": [
        1493,
        1505
      ],
      "op": "LT",
      "path": "14"
    },
    "1981": {
      "fn": "Soul.create",
      "offset": [
        1493,
        1505
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7C8"
    },
    "1984": {
      "fn": "Soul.create",
      "offset": [
        1493,
        1505
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1985": {
      "fn": "Soul.create",
      "offset": [
        1493,
        1505
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7C8"
    },
    "1988": {
      "fn": "Soul.create",
      "offset": [
        1493,
        1505
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2470"
    },
    "1991": {
      "fn": "Soul.create",
      "jump": "i",
      "offset": [
        1493,
        1505
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1992": {
      "fn": "Soul.create",
      "offset": [
        1493,
        1505
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1993": {
      "fn": "Soul.create",
      "offset": [
        1493,
        1505
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1995": {
      "fn": "Soul.create",
      "offset": [
        1493,
        1505
      ],
      "op": "MUL",
      "path": "14"
    },
    "1996": {
      "fn": "Soul.create",
      "offset": [
        1493,
        1505
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1998": {
      "fn": "Soul.create",
      "offset": [
        1493,
        1505
      ],
      "op": "ADD",
      "path": "14"
    },
    "1999": {
      "fn": "Soul.create",
      "offset": [
        1493,
        1505
      ],
      "op": "ADD",
      "path": "14"
    },
    "2000": {
      "fn": "Soul.create",
      "offset": [
        1493,
        1505
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2005": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2007": {
      "op": "SHL"
    },
    "2008": {
      "op": "SUB"
    },
    "2009": {
      "fn": "Soul.create",
      "offset": [
        1479,
        1505
      ],
      "op": "AND",
      "path": "14"
    },
    "2010": {
      "fn": "Soul.create",
      "offset": [
        1479,
        1489
      ],
      "op": "CALLER",
      "path": "14"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2015": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2017": {
      "op": "SHL"
    },
    "2018": {
      "op": "SUB"
    },
    "2019": {
      "fn": "Soul.create",
      "offset": [
        1479,
        1505
      ],
      "op": "AND",
      "path": "14"
    },
    "2020": {
      "branch": 112,
      "fn": "Soul.create",
      "offset": [
        1479,
        1505
      ],
      "op": "SUB",
      "path": "14"
    },
    "2021": {
      "fn": "Soul.create",
      "offset": [
        1475,
        1631
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x816"
    },
    "2024": {
      "branch": 112,
      "fn": "Soul.create",
      "offset": [
        1475,
        1631
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2025": {
      "fn": "Soul.create",
      "offset": [
        1525,
        1546
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 13,
      "value": "0x7F2"
    },
    "2028": {
      "fn": "Soul.create",
      "offset": [
        1533,
        1536
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2029": {
      "fn": "Soul.create",
      "offset": [
        1538,
        1545
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2030": {
      "fn": "Soul.create",
      "offset": [
        1525,
        1532
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1379"
    },
    "2033": {
      "fn": "Soul.create",
      "jump": "i",
      "offset": [
        1525,
        1546
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2034": {
      "fn": "Soul.create",
      "offset": [
        1525,
        1546
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2035": {
      "op": "POP"
    },
    "2036": {
      "op": "POP"
    },
    "2037": {
      "op": "POP"
    },
    "2038": {
      "fn": "Soul.create",
      "offset": [
        1564,
        1579
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 14,
      "value": "0x0"
    },
    "2040": {
      "fn": "Soul.create",
      "offset": [
        1564,
        1579
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2041": {
      "fn": "Soul.create",
      "offset": [
        1564,
        1579
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2042": {
      "fn": "Soul.create",
      "offset": [
        1564,
        1579
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2043": {
      "fn": "Soul.create",
      "offset": [
        1564,
        1570
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xC"
    },
    "2045": {
      "fn": "Soul.create",
      "offset": [
        1564,
        1579
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2047": {
      "fn": "Soul.create",
      "offset": [
        1564,
        1579
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2048": {
      "fn": "Soul.create",
      "offset": [
        1564,
        1579
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2050": {
      "fn": "Soul.create",
      "offset": [
        1564,
        1579
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2051": {
      "fn": "Soul.create",
      "offset": [
        1564,
        1579
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2052": {
      "fn": "Soul.create",
      "offset": [
        1564,
        1592
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2053": {
      "fn": "Soul.create",
      "offset": [
        1564,
        1592
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2060": {
      "op": "SHL"
    },
    "2061": {
      "op": "SUB"
    },
    "2062": {
      "op": "NOT"
    },
    "2063": {
      "fn": "Soul.create",
      "offset": [
        1564,
        1592
      ],
      "op": "AND",
      "path": "14"
    },
    "2064": {
      "fn": "Soul.create",
      "offset": [
        1582,
        1592
      ],
      "op": "CALLER",
      "path": "14"
    },
    "2065": {
      "fn": "Soul.create",
      "offset": [
        1564,
        1592
      ],
      "op": "OR",
      "path": "14"
    },
    "2066": {
      "fn": "Soul.create",
      "offset": [
        1564,
        1592
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2067": {
      "fn": "Soul.create",
      "offset": [
        1564,
        1592
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2068": {
      "op": "POP"
    },
    "2069": {
      "fn": "Soul.create",
      "jump": "o",
      "offset": [
        1086,
        1694
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2070": {
      "fn": "Soul.create",
      "offset": [
        1475,
        1631
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2071": {
      "fn": "Soul.create",
      "offset": [
        1456,
        1459
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 15
    },
    "2072": {
      "fn": "Soul.create",
      "offset": [
        1456,
        1459
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x820"
    },
    "2075": {
      "fn": "Soul.create",
      "offset": [
        1456,
        1459
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2076": {
      "fn": "Soul.create",
      "offset": [
        1456,
        1459
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x249C"
    },
    "2079": {
      "fn": "Soul.create",
      "jump": "i",
      "offset": [
        1456,
        1459
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2080": {
      "fn": "Soul.create",
      "offset": [
        1456,
        1459
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2081": {
      "fn": "Soul.create",
      "offset": [
        1456,
        1459
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2082": {
      "fn": "Soul.create",
      "offset": [
        1456,
        1459
      ],
      "op": "POP",
      "path": "14"
    },
    "2083": {
      "fn": "Soul.create",
      "offset": [
        1456,
        1459
      ],
      "op": "POP",
      "path": "14"
    },
    "2084": {
      "fn": "Soul.create",
      "offset": [
        1414,
        1641
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7AD"
    },
    "2087": {
      "fn": "Soul.create",
      "offset": [
        1414,
        1641
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2088": {
      "fn": "Soul.create",
      "offset": [
        1414,
        1641
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2089": {
      "op": "POP"
    },
    "2090": {
      "fn": "Soul.create",
      "offset": [
        1650,
        1687
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 16,
      "value": "0x40"
    },
    "2092": {
      "fn": "Soul.create",
      "offset": [
        1650,
        1687
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2093": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2097": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2099": {
      "op": "SHL"
    },
    "2100": {
      "fn": "Soul.create",
      "offset": [
        1650,
        1687
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2101": {
      "fn": "Soul.create",
      "offset": [
        1650,
        1687
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2104": {
      "fn": "Soul.create",
      "offset": [
        1650,
        1687
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2106": {
      "fn": "Soul.create",
      "offset": [
        1650,
        1687
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2107": {
      "fn": "Soul.create",
      "offset": [
        1650,
        1687
      ],
      "op": "ADD",
      "path": "14"
    },
    "2108": {
      "op": "MSTORE"
    },
    "2109": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "2111": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2113": {
      "op": "DUP3"
    },
    "2114": {
      "op": "ADD"
    },
    "2115": {
      "op": "MSTORE"
    },
    "2116": {
      "op": "PUSH32",
      "value": "0x63616C6C6572206E6F7420696E206F70657261746F72206C6973740000000000"
    },
    "2149": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2151": {
      "op": "DUP3"
    },
    "2152": {
      "op": "ADD"
    },
    "2153": {
      "op": "MSTORE"
    },
    "2154": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2156": {
      "op": "ADD"
    },
    "2157": {
      "fn": "Soul.create",
      "offset": [
        1650,
        1687
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x58C"
    },
    "2160": {
      "op": "JUMP"
    },
    "2161": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4939
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2162": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4801,
        4842
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 17,
      "value": "0x87B"
    },
    "2165": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "2166": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4834,
        4841
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2167": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4801,
        4819
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13E9"
    },
    "2170": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4801,
        4842
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2171": {
      "branch": 124,
      "fn": "ERC721.transferFrom",
      "offset": [
        4801,
        4842
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2172": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x897"
    },
    "2175": {
      "branch": 124,
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2176": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2178": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2179": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2183": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2185": {
      "op": "SHL"
    },
    "2186": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2187": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2188": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2190": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "ADD",
      "path": "1"
    },
    "2191": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x58C"
    },
    "2194": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2195": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24B5"
    },
    "2198": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4793,
        4893
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2199": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4893
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2200": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4904,
        4932
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 18,
      "value": "0x62D"
    },
    "2203": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4914,
        4918
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2204": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4920,
        4922
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2205": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4924,
        4931
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2206": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4904,
        4913
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1468"
    },
    "2209": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4904,
        4932
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2210": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2211": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1388,
        1395
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2213": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1423,
        1446
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 19,
      "value": "0x8AD"
    },
    "2216": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1440,
        1445
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2217": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1423,
        1439
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC18"
    },
    "2220": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        1423,
        1446
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2221": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1423,
        1446
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2222": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1415,
        1420
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2223": {
      "branch": 133,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1415,
        1446
      ],
      "op": "LT",
      "path": "4"
    },
    "2224": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x90F"
    },
    "2227": {
      "branch": 133,
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2228": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2230": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2231": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2235": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2237": {
      "op": "SHL"
    },
    "2238": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2239": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2242": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2244": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2245": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "ADD",
      "path": "4"
    },
    "2246": {
      "op": "MSTORE"
    },
    "2247": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "2249": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2251": {
      "op": "DUP3"
    },
    "2252": {
      "op": "ADD"
    },
    "2253": {
      "op": "MSTORE"
    },
    "2254": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A206F776E657220696E646578206F75"
    },
    "2287": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2289": {
      "op": "DUP3"
    },
    "2290": {
      "op": "ADD"
    },
    "2291": {
      "op": "MSTORE"
    },
    "2292": {
      "op": "PUSH11",
      "value": "0x74206F6620626F756E6473"
    },
    "2304": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2306": {
      "op": "SHL"
    },
    "2307": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2309": {
      "op": "DUP3"
    },
    "2310": {
      "op": "ADD"
    },
    "2311": {
      "op": "MSTORE"
    },
    "2312": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2314": {
      "op": "ADD"
    },
    "2315": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x58C"
    },
    "2318": {
      "op": "JUMP"
    },
    "2319": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1407,
        1494
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2320": {
      "op": "POP"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2325": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2327": {
      "op": "SHL"
    },
    "2328": {
      "op": "SUB"
    },
    "2329": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 20
    },
    "2330": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2331": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2332": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "AND",
      "path": "4"
    },
    "2333": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2335": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2336": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2337": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2338": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1523
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "2340": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2342": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2343": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2344": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2345": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2347": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2348": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2349": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1530
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2350": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2351": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2352": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2353": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2354": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2355": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2356": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2357": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2358": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "offset": [
        1511,
        1537
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2359": {
      "fn": "ERC721Enumerable.tokenOfOwnerByIndex",
      "jump": "o",
      "offset": [
        1291,
        1544
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2360": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5005,
        5184
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2361": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 21,
      "value": "0x62D"
    },
    "2364": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5155,
        5159
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2365": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5161,
        5163
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2366": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5165,
        5172
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2367": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2369": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2370": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2371": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2373": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "ADD",
      "path": "1"
    },
    "2374": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2376": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2377": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2378": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2380": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2381": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2382": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5177
      ],
      "op": "POP",
      "path": "1"
    },
    "2383": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5138,
        5154
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCDD"
    },
    "2386": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5138,
        5177
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2387": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2388": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1873,
        1880
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2390": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1908,
        1938
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 22,
      "value": "0x95E"
    },
    "2393": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1712
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "2395": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2396": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1702,
        1719
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2397": {
      "fn": "ERC721Enumerable.totalSupply",
      "offset": [
        1615,
        1726
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2398": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1908,
        1938
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2399": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1900,
        1905
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2400": {
      "branch": 134,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1900,
        1938
      ],
      "op": "LT",
      "path": "4"
    },
    "2401": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9C1"
    },
    "2404": {
      "branch": 134,
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2405": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2407": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2408": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2414": {
      "op": "SHL"
    },
    "2415": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2416": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2419": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2421": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2422": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "ADD",
      "path": "4"
    },
    "2423": {
      "op": "MSTORE"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2426": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2428": {
      "op": "DUP3"
    },
    "2429": {
      "op": "ADD"
    },
    "2430": {
      "op": "MSTORE"
    },
    "2431": {
      "op": "PUSH32",
      "value": "0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2466": {
      "op": "DUP3"
    },
    "2467": {
      "op": "ADD"
    },
    "2468": {
      "op": "MSTORE"
    },
    "2469": {
      "op": "PUSH12",
      "value": "0x7574206F6620626F756E6473"
    },
    "2482": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2484": {
      "op": "SHL"
    },
    "2485": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2487": {
      "op": "DUP3"
    },
    "2488": {
      "op": "ADD"
    },
    "2489": {
      "op": "MSTORE"
    },
    "2490": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2492": {
      "op": "ADD"
    },
    "2493": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x58C"
    },
    "2496": {
      "op": "JUMP"
    },
    "2497": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1892,
        1987
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2498": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2014
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 23,
      "value": "0x8"
    },
    "2500": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2015,
        2020
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2501": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2502": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2503": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2504": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "LT",
      "path": "4"
    },
    "2505": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9D4"
    },
    "2508": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2509": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9D4"
    },
    "2512": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2470"
    },
    "2515": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "i",
      "offset": [
        2004,
        2021
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2516": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2517": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2518": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2520": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2521": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2523": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2525": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2526": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "ADD",
      "path": "4"
    },
    "2527": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        2004,
        2021
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2528": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1997,
        2021
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2529": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1997,
        2021
      ],
      "op": "POP",
      "path": "4"
    },
    "2530": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2531": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2532": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "offset": [
        1798,
        2028
      ],
      "op": "POP",
      "path": "4"
    },
    "2533": {
      "fn": "ERC721Enumerable.tokenByIndex",
      "jump": "o",
      "offset": [
        1798,
        2028
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2534": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3319,
        3960
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2535": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3527
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "2537": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3527
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2538": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2540": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2541": {
      "op": "PUSH4",
      "value": "0x3E10510B"
    },
    "2546": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2548": {
      "op": "SHL"
    },
    "2549": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2550": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2551": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3483,
        3499
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2553": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3483,
        3499
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2558": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2560": {
      "op": "SHL"
    },
    "2561": {
      "op": "SUB"
    },
    "2562": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3527
      ],
      "op": "AND",
      "path": "14"
    },
    "2563": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3527
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2564": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3537
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x2D888869"
    },
    "2569": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3537
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2570": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3527
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2571": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3527
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2572": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3545
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x3E10510B"
    },
    "2577": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3545
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2578": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA1D"
    },
    "2581": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2582": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2584": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "ADD",
      "path": "14"
    },
    "2585": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x22AE"
    },
    "2588": {
      "fn": "Soul.removeAccountByOperator",
      "jump": "i",
      "offset": [
        3538,
        3578
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2589": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2590": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2592": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2594": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2595": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2596": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2597": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "SUB",
      "path": "14"
    },
    "2598": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2599": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2600": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "GAS",
      "path": "14"
    },
    "2601": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "2602": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2603": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2604": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2605": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA3A"
    },
    "2608": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2609": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2610": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2612": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2613": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "2614": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2615": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2617": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2618": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2619": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "POP",
      "path": "14"
    },
    "2620": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "POP",
      "path": "14"
    },
    "2621": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "POP",
      "path": "14"
    },
    "2622": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "POP",
      "path": "14"
    },
    "2623": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2625": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2626": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2627": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2629": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2630": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "2631": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "2633": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2634": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2635": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2636": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "ADD",
      "path": "14"
    },
    "2637": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2639": {
      "op": "NOT"
    },
    "2640": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "AND",
      "path": "14"
    },
    "2641": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2642": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "ADD",
      "path": "14"
    },
    "2643": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2645": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2646": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA62"
    },
    "2649": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2650": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2651": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2652": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "ADD",
      "path": "14"
    },
    "2653": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2654": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2306"
    },
    "2657": {
      "fn": "Soul.removeAccountByOperator",
      "jump": "i",
      "offset": [
        3538,
        3578
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2658": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3538,
        3578
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2659": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2661": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2662": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2663": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "2668": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "AND",
      "path": "14"
    },
    "2669": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "2671": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "SHL",
      "path": "14"
    },
    "2672": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2673": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2674": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2676": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "ADD",
      "path": "14"
    },
    "2677": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA7E"
    },
    "2680": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2681": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2682": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2013"
    },
    "2685": {
      "fn": "Soul.removeAccountByOperator",
      "jump": "i",
      "offset": [
        3524,
        3579
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2686": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2687": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2689": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2691": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2692": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2693": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2694": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "SUB",
      "path": "14"
    },
    "2695": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2696": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2697": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "GAS",
      "path": "14"
    },
    "2698": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "2699": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2700": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2701": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2702": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA9B"
    },
    "2705": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2706": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2707": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2709": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2710": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "2711": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2712": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2714": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2715": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2716": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "POP",
      "path": "14"
    },
    "2717": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "POP",
      "path": "14"
    },
    "2718": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "POP",
      "path": "14"
    },
    "2719": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "POP",
      "path": "14"
    },
    "2720": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2722": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2723": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2724": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "2726": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "NOT",
      "path": "14"
    },
    "2727": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "2729": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2730": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "ADD",
      "path": "14"
    },
    "2731": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "AND",
      "path": "14"
    },
    "2732": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2733": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "ADD",
      "path": "14"
    },
    "2734": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2735": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2737": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2738": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "POP",
      "path": "14"
    },
    "2739": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2740": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "ADD",
      "path": "14"
    },
    "2741": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2742": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xABF"
    },
    "2745": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2746": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2747": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x237D"
    },
    "2750": {
      "fn": "Soul.removeAccountByOperator",
      "jump": "i",
      "offset": [
        3524,
        3579
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2751": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3524,
        3579
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2752": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3483,
        3589
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2753": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3483,
        3589
      ],
      "op": "POP",
      "path": "14"
    },
    "2754": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3599,
        3625
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2756": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3635
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2763": {
      "op": "SHL"
    },
    "2764": {
      "op": "SUB"
    },
    "2765": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3656
      ],
      "op": "AND",
      "path": "14"
    },
    "2766": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3656
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xC3BB1A57"
    },
    "2771": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2773": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2774": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2775": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "2780": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "AND",
      "path": "14"
    },
    "2781": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "2783": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "SHL",
      "path": "14"
    },
    "2784": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2785": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2786": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2788": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "ADD",
      "path": "14"
    },
    "2789": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAED"
    },
    "2792": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2793": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x239A"
    },
    "2796": {
      "fn": "Soul.removeAccountByOperator",
      "jump": "i",
      "offset": [
        3628,
        3670
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2797": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2798": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2800": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2802": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2803": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2804": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2805": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "SUB",
      "path": "14"
    },
    "2806": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2807": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2808": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "GAS",
      "path": "14"
    },
    "2809": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "2810": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2811": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2812": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2813": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB0A"
    },
    "2816": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2817": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2818": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2820": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2821": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "2822": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2823": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2825": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2826": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2827": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "POP",
      "path": "14"
    },
    "2828": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "POP",
      "path": "14"
    },
    "2829": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "POP",
      "path": "14"
    },
    "2830": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "POP",
      "path": "14"
    },
    "2831": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2833": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2834": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2835": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2837": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2838": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "2839": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "2841": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2842": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2843": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2844": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "ADD",
      "path": "14"
    },
    "2845": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2847": {
      "op": "NOT"
    },
    "2848": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "AND",
      "path": "14"
    },
    "2849": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2850": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "ADD",
      "path": "14"
    },
    "2851": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2853": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2854": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB32"
    },
    "2857": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2858": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2859": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2860": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "ADD",
      "path": "14"
    },
    "2861": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2862": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x23BE"
    },
    "2865": {
      "fn": "Soul.removeAccountByOperator",
      "jump": "i",
      "offset": [
        3628,
        3670
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2866": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3628,
        3670
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2867": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3599,
        3670
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2868": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3599,
        3670
      ],
      "op": "POP",
      "path": "14"
    },
    "2869": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3686,
        3695
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2871": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3681,
        3907
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2872": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3705,
        3714
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2873": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3705,
        3721
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2874": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3701,
        3702
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2875": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3701,
        3721
      ],
      "op": "LT",
      "path": "14"
    },
    "2876": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3681,
        3907
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2877": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3681,
        3907
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x828"
    },
    "2880": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3681,
        3907
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2881": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3760,
        3769
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2882": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3770,
        3771
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2883": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3760,
        3772
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2884": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3760,
        3772
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2885": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3760,
        3772
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2886": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3760,
        3772
      ],
      "op": "LT",
      "path": "14"
    },
    "2887": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3760,
        3772
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB52"
    },
    "2890": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3760,
        3772
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2891": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3760,
        3772
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB52"
    },
    "2894": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3760,
        3772
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2470"
    },
    "2897": {
      "fn": "Soul.removeAccountByOperator",
      "jump": "i",
      "offset": [
        3760,
        3772
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2898": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3760,
        3772
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2899": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3760,
        3772
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2901": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3760,
        3772
      ],
      "op": "MUL",
      "path": "14"
    },
    "2902": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3760,
        3772
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2904": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3760,
        3772
      ],
      "op": "ADD",
      "path": "14"
    },
    "2905": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3760,
        3772
      ],
      "op": "ADD",
      "path": "14"
    },
    "2906": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3760,
        3772
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2911": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2913": {
      "op": "SHL"
    },
    "2914": {
      "op": "SUB"
    },
    "2915": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3746,
        3772
      ],
      "op": "AND",
      "path": "14"
    },
    "2916": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3746,
        3756
      ],
      "op": "CALLER",
      "path": "14"
    },
    "2917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2921": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2923": {
      "op": "SHL"
    },
    "2924": {
      "op": "SUB"
    },
    "2925": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3746,
        3772
      ],
      "op": "AND",
      "path": "14"
    },
    "2926": {
      "branch": 113,
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3746,
        3772
      ],
      "op": "EQ",
      "path": "14"
    },
    "2927": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3746,
        3805
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2928": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3746,
        3805
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2929": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3746,
        3805
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB90"
    },
    "2932": {
      "branch": 113,
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3746,
        3805
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2933": {
      "op": "POP"
    },
    "2934": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3776,
        3791
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2936": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3776,
        3791
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2937": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3776,
        3791
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2938": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3776,
        3791
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2939": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3776,
        3782
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xC"
    },
    "2941": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3776,
        3791
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2943": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3776,
        3791
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2944": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3776,
        3791
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2946": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3776,
        3791
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2947": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3776,
        3791
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2948": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3776,
        3791
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2955": {
      "op": "SHL"
    },
    "2956": {
      "op": "SUB"
    },
    "2957": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3776,
        3791
      ],
      "op": "AND",
      "path": "14"
    },
    "2958": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3795,
        3805
      ],
      "op": "CALLER",
      "path": "14"
    },
    "2959": {
      "branch": 114,
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3776,
        3805
      ],
      "op": "EQ",
      "path": "14"
    },
    "2960": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3746,
        3805
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2961": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3742,
        3897
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2962": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3742,
        3897
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xBA6"
    },
    "2965": {
      "branch": 114,
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3742,
        3897
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2966": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3825,
        3858
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 24,
      "value": "0xB9F"
    },
    "2969": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3840,
        3847
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2970": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3849,
        3857
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2971": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3825,
        3839
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x160F"
    },
    "2974": {
      "fn": "Soul.removeAccountByOperator",
      "jump": "i",
      "offset": [
        3825,
        3858
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2975": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3825,
        3858
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2976": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3876,
        3883
      ],
      "op": "POP",
      "path": "14",
      "statement": 25
    },
    "2977": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3876,
        3883
      ],
      "op": "POP",
      "path": "14"
    },
    "2978": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3876,
        3883
      ],
      "op": "POP",
      "path": "14"
    },
    "2979": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3319,
        3960
      ],
      "op": "POP",
      "path": "14"
    },
    "2980": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3319,
        3960
      ],
      "op": "POP",
      "path": "14"
    },
    "2981": {
      "fn": "Soul.removeAccountByOperator",
      "jump": "o",
      "offset": [
        3319,
        3960
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2982": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3742,
        3897
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2983": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3723,
        3726
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 26
    },
    "2984": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3723,
        3726
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xBB0"
    },
    "2987": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3723,
        3726
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2988": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3723,
        3726
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x249C"
    },
    "2991": {
      "fn": "Soul.removeAccountByOperator",
      "jump": "i",
      "offset": [
        3723,
        3726
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2992": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3723,
        3726
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2993": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3723,
        3726
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2994": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3723,
        3726
      ],
      "op": "POP",
      "path": "14"
    },
    "2995": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3723,
        3726
      ],
      "op": "POP",
      "path": "14"
    },
    "2996": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3681,
        3907
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB37"
    },
    "2999": {
      "fn": "Soul.removeAccountByOperator",
      "offset": [
        3681,
        3907
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3000": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2408
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3001": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2262,
        2269
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3003": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3004": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3005": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3006": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2304
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3008": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3010": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3011": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3013": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3014": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3015": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3020": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3022": {
      "op": "SHL"
    },
    "3023": {
      "op": "SUB"
    },
    "3024": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "AND",
      "path": "1"
    },
    "3025": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2297,
        2313
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3026": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2323,
        2379
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 27,
      "value": "0x459"
    },
    "3029": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2323,
        2379
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3030": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2323,
        2379
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3032": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2323,
        2379
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3033": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3037": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3039": {
      "op": "SHL"
    },
    "3040": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2323,
        2379
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3041": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2323,
        2379
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3042": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3044": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2323,
        2379
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3046": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2323,
        2379
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3047": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2323,
        2379
      ],
      "op": "ADD",
      "path": "1"
    },
    "3048": {
      "op": "MSTORE"
    },
    "3049": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "3051": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3053": {
      "op": "DUP3"
    },
    "3054": {
      "op": "ADD"
    },
    "3055": {
      "op": "MSTORE"
    },
    "3056": {
      "op": "PUSH24",
      "value": "0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
    },
    "3081": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "3083": {
      "op": "SHL"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3086": {
      "op": "DUP3"
    },
    "3087": {
      "op": "ADD"
    },
    "3088": {
      "op": "MSTORE"
    },
    "3089": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3091": {
      "op": "ADD"
    },
    "3092": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2323,
        2379
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x58C"
    },
    "3095": {
      "op": "JUMP"
    },
    "3096": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3097": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2001,
        2008
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3105": {
      "op": "SHL"
    },
    "3106": {
      "op": "SUB"
    },
    "3107": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 28
    },
    "3108": {
      "branch": 125,
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "AND",
      "path": "1"
    },
    "3109": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC82"
    },
    "3112": {
      "branch": 125,
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3113": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3115": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3116": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3120": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3122": {
      "op": "SHL"
    },
    "3123": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3124": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3125": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3127": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3129": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3130": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "ADD",
      "path": "1"
    },
    "3131": {
      "op": "MSTORE"
    },
    "3132": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3136": {
      "op": "DUP3"
    },
    "3137": {
      "op": "ADD"
    },
    "3138": {
      "op": "MSTORE"
    },
    "3139": {
      "op": "PUSH32",
      "value": "0x4552433732313A2061646472657373207A65726F206973206E6F742061207661"
    },
    "3172": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3174": {
      "op": "DUP3"
    },
    "3175": {
      "op": "ADD"
    },
    "3176": {
      "op": "MSTORE"
    },
    "3177": {
      "op": "PUSH9",
      "value": "0x3634B21037BBB732B9"
    },
    "3187": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "3189": {
      "op": "SHL"
    },
    "3190": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3192": {
      "op": "DUP3"
    },
    "3193": {
      "op": "ADD"
    },
    "3194": {
      "op": "MSTORE"
    },
    "3195": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3197": {
      "op": "ADD"
    },
    "3198": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x58C"
    },
    "3201": {
      "op": "JUMP"
    },
    "3202": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3203": {
      "op": "POP"
    },
    "3204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3208": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3210": {
      "op": "SHL"
    },
    "3211": {
      "op": "SUB"
    },
    "3212": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "AND",
      "path": "1",
      "statement": 29
    },
    "3213": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3215": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3216": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3217": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3218": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2119
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "3220": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3222": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3223": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3225": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3226": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3227": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3228": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3229": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3230": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3231": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCA6"
    },
    "3234": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x131F"
    },
    "3237": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3238": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3239": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 30,
      "value": "0xCB0"
    },
    "3242": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1922,
        1923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3244": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16D3"
    },
    "3247": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3248": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3249": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3250": {
      "fn": "Soul.create",
      "offset": [
        942,
        1080
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3251": {
      "fn": "Soul.create",
      "offset": [
        1046,
        1073
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 31,
      "value": "0xCBC"
    },
    "3254": {
      "fn": "Soul.create",
      "offset": [
        1054,
        1063
      ],
      "op": "ORIGIN",
      "path": "14"
    },
    "3255": {
      "fn": "Soul.create",
      "offset": [
        1065,
        1072
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3256": {
      "fn": "Soul.create",
      "offset": [
        1046,
        1053
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1379"
    },
    "3259": {
      "fn": "Soul.create",
      "jump": "i",
      "offset": [
        1046,
        1073
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3260": {
      "fn": "Soul.create",
      "offset": [
        1046,
        1073
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3261": {
      "fn": "Soul.create",
      "offset": [
        942,
        1080
      ],
      "op": "POP",
      "path": "14"
    },
    "3262": {
      "fn": "Soul.create",
      "jump": "o",
      "offset": [
        942,
        1080
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3263": {
      "fn": "ERC721.symbol",
      "offset": [
        2632,
        2734
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3264": {
      "fn": "ERC721.symbol",
      "offset": [
        2688,
        2701
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "3266": {
      "fn": "ERC721.symbol",
      "offset": [
        2720,
        2727
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 32,
      "value": "0x1"
    },
    "3268": {
      "fn": "ERC721.symbol",
      "offset": [
        2713,
        2727
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3269": {
      "fn": "ERC721.symbol",
      "offset": [
        2713,
        2727
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3270": {
      "fn": "ERC721.symbol",
      "offset": [
        2713,
        2727
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x46E"
    },
    "3273": {
      "fn": "ERC721.symbol",
      "offset": [
        2713,
        2727
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3274": {
      "fn": "ERC721.symbol",
      "offset": [
        2713,
        2727
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2274"
    },
    "3277": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2713,
        2727
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3278": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3279": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4263,
        4315
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 33,
      "value": "0xCD9"
    },
    "3282": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "3283": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4296,
        4304
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3284": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4306,
        4314
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3285": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4263,
        4281
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1725"
    },
    "3288": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4263,
        4315
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3289": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4263,
        4315
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3290": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "POP",
      "path": "1"
    },
    "3291": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "POP",
      "path": "1"
    },
    "3292": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3293": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3294": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5418,
        5459
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 34,
      "value": "0xCE7"
    },
    "3297": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "3298": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5451,
        5458
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3299": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5418,
        5436
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13E9"
    },
    "3302": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5418,
        5459
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3303": {
      "branch": 126,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5418,
        5459
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3304": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD03"
    },
    "3307": {
      "branch": 126,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3308": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3310": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3311": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3315": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3317": {
      "op": "SHL"
    },
    "3318": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3319": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3320": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3322": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "ADD",
      "path": "1"
    },
    "3323": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x58C"
    },
    "3326": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3327": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24B5"
    },
    "3330": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5410,
        5510
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3331": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5410,
        5510
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3332": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5520,
        5558
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 35,
      "value": "0xD0F"
    },
    "3335": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5534,
        5538
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3336": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5540,
        5542
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3337": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5544,
        5551
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3338": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5553,
        5557
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3339": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5520,
        5533
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x17F3"
    },
    "3342": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5520,
        5558
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3343": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5520,
        5558
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3344": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "POP",
      "path": "1"
    },
    "3345": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "POP",
      "path": "1"
    },
    "3346": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "POP",
      "path": "1"
    },
    "3347": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5250,
        5565
      ],
      "op": "POP",
      "path": "1"
    },
    "3348": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5250,
        5565
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3349": {
      "fn": "Soul.addAccount",
      "offset": [
        2131,
        2317
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3350": {
      "fn": "Soul.addAccount",
      "offset": [
        2213,
        2248
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 36,
      "value": "0xD1F"
    },
    "3353": {
      "fn": "Soul.addAccount",
      "offset": [
        2229,
        2236
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3354": {
      "fn": "Soul.addAccount",
      "offset": [
        2238,
        2247
      ],
      "op": "ORIGIN",
      "path": "14"
    },
    "3355": {
      "fn": "Soul.addAccount",
      "offset": [
        2213,
        2228
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD69"
    },
    "3358": {
      "fn": "Soul.addAccount",
      "jump": "i",
      "offset": [
        2213,
        2248
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3359": {
      "branch": 115,
      "fn": "Soul.addAccount",
      "offset": [
        2213,
        2248
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3360": {
      "fn": "Soul.addAccount",
      "offset": [
        2205,
        2270
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD5F"
    },
    "3363": {
      "branch": 115,
      "fn": "Soul.addAccount",
      "offset": [
        2205,
        2270
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3364": {
      "fn": "Soul.addAccount",
      "offset": [
        2205,
        2270
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3366": {
      "fn": "Soul.addAccount",
      "offset": [
        2205,
        2270
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3367": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3371": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3373": {
      "op": "SHL"
    },
    "3374": {
      "fn": "Soul.addAccount",
      "offset": [
        2205,
        2270
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3375": {
      "fn": "Soul.addAccount",
      "offset": [
        2205,
        2270
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3378": {
      "fn": "Soul.addAccount",
      "offset": [
        2205,
        2270
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "3380": {
      "fn": "Soul.addAccount",
      "offset": [
        2205,
        2270
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3381": {
      "fn": "Soul.addAccount",
      "offset": [
        2205,
        2270
      ],
      "op": "ADD",
      "path": "14"
    },
    "3382": {
      "op": "MSTORE"
    },
    "3383": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3385": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3387": {
      "op": "DUP3"
    },
    "3388": {
      "op": "ADD"
    },
    "3389": {
      "op": "MSTORE"
    },
    "3390": {
      "op": "PUSH17",
      "value": "0x1B9BDD081BDDDB995C881BD9881CDBDD5B"
    },
    "3408": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "3410": {
      "op": "SHL"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3413": {
      "op": "DUP3"
    },
    "3414": {
      "op": "ADD"
    },
    "3415": {
      "op": "MSTORE"
    },
    "3416": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3418": {
      "op": "ADD"
    },
    "3419": {
      "fn": "Soul.addAccount",
      "offset": [
        2205,
        2270
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x58C"
    },
    "3422": {
      "op": "JUMP"
    },
    "3423": {
      "fn": "Soul.addAccount",
      "offset": [
        2205,
        2270
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3424": {
      "fn": "Soul.addAccount",
      "offset": [
        2280,
        2310
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 37,
      "value": "0xCD9"
    },
    "3427": {
      "fn": "Soul.addAccount",
      "offset": [
        2292,
        2299
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3428": {
      "fn": "Soul.addAccount",
      "offset": [
        2301,
        2309
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3429": {
      "fn": "Soul.addAccount",
      "offset": [
        2280,
        2291
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1826"
    },
    "3432": {
      "fn": "Soul.addAccount",
      "jump": "i",
      "offset": [
        2280,
        2310
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3433": {
      "fn": "Soul.validateAddress",
      "offset": [
        1877,
        2125
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3434": {
      "fn": "Soul.validateAddress",
      "offset": [
        1979,
        1983
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3436": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 38
    },
    "3437": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3438": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3439": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7129
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3441": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3443": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3444": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3446": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3447": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3448": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3453": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3455": {
      "op": "SHL"
    },
    "3456": {
      "op": "SUB"
    },
    "3457": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "AND",
      "path": "1"
    },
    "3458": {
      "fn": "Soul.validateAddress",
      "offset": [
        1999,
        2045
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 39,
      "value": "0xDC1"
    },
    "3461": {
      "fn": "Soul.validateAddress",
      "offset": [
        1999,
        2045
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3462": {
      "fn": "Soul.validateAddress",
      "offset": [
        1999,
        2045
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3464": {
      "fn": "Soul.validateAddress",
      "offset": [
        1999,
        2045
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3465": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3469": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3471": {
      "op": "SHL"
    },
    "3472": {
      "fn": "Soul.validateAddress",
      "offset": [
        1999,
        2045
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3473": {
      "fn": "Soul.validateAddress",
      "offset": [
        1999,
        2045
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3474": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3476": {
      "fn": "Soul.validateAddress",
      "offset": [
        1999,
        2045
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "3478": {
      "fn": "Soul.validateAddress",
      "offset": [
        1999,
        2045
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3479": {
      "fn": "Soul.validateAddress",
      "offset": [
        1999,
        2045
      ],
      "op": "ADD",
      "path": "14"
    },
    "3480": {
      "op": "MSTORE"
    },
    "3481": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3483": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3485": {
      "op": "DUP3"
    },
    "3486": {
      "op": "ADD"
    },
    "3487": {
      "op": "MSTORE"
    },
    "3488": {
      "op": "PUSH17",
      "value": "0x3737B732BC34B9BA32B73A103A37B5B2B7"
    },
    "3506": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "3508": {
      "op": "SHL"
    },
    "3509": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3511": {
      "op": "DUP3"
    },
    "3512": {
      "op": "ADD"
    },
    "3513": {
      "op": "MSTORE"
    },
    "3514": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3516": {
      "op": "ADD"
    },
    "3517": {
      "fn": "Soul.validateAddress",
      "offset": [
        1999,
        2045
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x58C"
    },
    "3520": {
      "op": "JUMP"
    },
    "3521": {
      "fn": "Soul.validateAddress",
      "offset": [
        1999,
        2045
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3522": {
      "fn": "Soul.validateAddress",
      "offset": [
        2064,
        2081
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 40,
      "value": "0x0"
    },
    "3524": {
      "fn": "Soul.validateAddress",
      "offset": [
        2064,
        2081
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3525": {
      "fn": "Soul.validateAddress",
      "offset": [
        2064,
        2081
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3526": {
      "fn": "Soul.validateAddress",
      "offset": [
        2064,
        2081
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3527": {
      "fn": "Soul.validateAddress",
      "offset": [
        2064,
        2072
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xD"
    },
    "3529": {
      "fn": "Soul.validateAddress",
      "offset": [
        2064,
        2081
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3531": {
      "fn": "Soul.validateAddress",
      "offset": [
        2064,
        2081
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3532": {
      "fn": "Soul.validateAddress",
      "offset": [
        2064,
        2081
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3533": {
      "fn": "Soul.validateAddress",
      "offset": [
        2064,
        2081
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3534": {
      "fn": "Soul.validateAddress",
      "offset": [
        2064,
        2081
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3536": {
      "fn": "Soul.validateAddress",
      "offset": [
        2064,
        2081
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3537": {
      "fn": "Soul.validateAddress",
      "offset": [
        2064,
        2081
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3538": {
      "fn": "Soul.validateAddress",
      "offset": [
        2064,
        2081
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3543": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3545": {
      "op": "SHL"
    },
    "3546": {
      "op": "SUB"
    },
    "3547": {
      "fn": "Soul.validateAddress",
      "offset": [
        2064,
        2088
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3548": {
      "fn": "Soul.validateAddress",
      "offset": [
        2064,
        2088
      ],
      "op": "AND",
      "path": "14"
    },
    "3549": {
      "fn": "Soul.validateAddress",
      "offset": [
        2064,
        2088
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3550": {
      "fn": "Soul.validateAddress",
      "offset": [
        2064,
        2088
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3551": {
      "fn": "Soul.validateAddress",
      "offset": [
        2064,
        2088
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3552": {
      "fn": "Soul.validateAddress",
      "offset": [
        2064,
        2088
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3553": {
      "fn": "Soul.validateAddress",
      "offset": [
        2064,
        2088
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3554": {
      "fn": "Soul.validateAddress",
      "offset": [
        2064,
        2088
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3555": {
      "fn": "Soul.validateAddress",
      "offset": [
        2064,
        2088
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3556": {
      "fn": "Soul.validateAddress",
      "offset": [
        2064,
        2088
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3557": {
      "fn": "Soul.validateAddress",
      "offset": [
        2064,
        2088
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "3559": {
      "fn": "Soul.validateAddress",
      "offset": [
        2064,
        2088
      ],
      "op": "AND",
      "path": "14"
    },
    "3560": {
      "fn": "Soul.validateAddress",
      "offset": [
        2064,
        2088
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3561": {
      "fn": "Soul.validateAddress",
      "offset": [
        2064,
        2117
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE0B"
    },
    "3564": {
      "fn": "Soul.validateAddress",
      "offset": [
        2064,
        2117
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3565": {
      "fn": "Soul.validateAddress",
      "offset": [
        2064,
        2117
      ],
      "op": "POP",
      "path": "14"
    },
    "3566": {
      "fn": "Soul.validateAddress",
      "offset": [
        2112,
        2117
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3571": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3573": {
      "op": "SHL"
    },
    "3574": {
      "op": "SUB"
    },
    "3575": {
      "fn": "Soul.validateAddress",
      "offset": [
        2092,
        2117
      ],
      "op": "AND",
      "path": "14"
    },
    "3576": {
      "fn": "Soul.validateAddress",
      "offset": [
        2092,
        2108
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE00"
    },
    "3579": {
      "fn": "Soul.validateAddress",
      "offset": [
        2100,
        2107
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3580": {
      "fn": "Soul.validateAddress",
      "offset": [
        2092,
        2099
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xBB8"
    },
    "3583": {
      "fn": "Soul.validateAddress",
      "jump": "i",
      "offset": [
        2092,
        2108
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3584": {
      "fn": "Soul.validateAddress",
      "offset": [
        2092,
        2108
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3589": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3591": {
      "op": "SHL"
    },
    "3592": {
      "op": "SUB"
    },
    "3593": {
      "fn": "Soul.validateAddress",
      "offset": [
        2092,
        2117
      ],
      "op": "AND",
      "path": "14"
    },
    "3594": {
      "fn": "Soul.validateAddress",
      "offset": [
        2092,
        2117
      ],
      "op": "EQ",
      "path": "14"
    },
    "3595": {
      "fn": "Soul.validateAddress",
      "offset": [
        2064,
        2117
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3596": {
      "fn": "Soul.validateAddress",
      "offset": [
        2056,
        2118
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3597": {
      "fn": "Soul.validateAddress",
      "offset": [
        1877,
        2125
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3598": {
      "op": "POP"
    },
    "3599": {
      "op": "POP"
    },
    "3600": {
      "op": "POP"
    },
    "3601": {
      "fn": "Soul.validateAddress",
      "jump": "o",
      "offset": [
        1877,
        2125
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3602": {
      "fn": "Soul.removeAccount",
      "offset": [
        3121,
        3313
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3603": {
      "fn": "Soul.removeAccount",
      "offset": [
        3206,
        3241
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 41,
      "value": "0xE1C"
    },
    "3606": {
      "fn": "Soul.removeAccount",
      "offset": [
        3222,
        3229
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3607": {
      "fn": "Soul.removeAccount",
      "offset": [
        3231,
        3240
      ],
      "op": "ORIGIN",
      "path": "14"
    },
    "3608": {
      "fn": "Soul.removeAccount",
      "offset": [
        3206,
        3221
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD69"
    },
    "3611": {
      "fn": "Soul.removeAccount",
      "jump": "i",
      "offset": [
        3206,
        3241
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3612": {
      "branch": 116,
      "fn": "Soul.removeAccount",
      "offset": [
        3206,
        3241
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3613": {
      "fn": "Soul.removeAccount",
      "offset": [
        3198,
        3263
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE5C"
    },
    "3616": {
      "branch": 116,
      "fn": "Soul.removeAccount",
      "offset": [
        3198,
        3263
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3617": {
      "fn": "Soul.removeAccount",
      "offset": [
        3198,
        3263
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3619": {
      "fn": "Soul.removeAccount",
      "offset": [
        3198,
        3263
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3620": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3624": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3626": {
      "op": "SHL"
    },
    "3627": {
      "fn": "Soul.removeAccount",
      "offset": [
        3198,
        3263
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3628": {
      "fn": "Soul.removeAccount",
      "offset": [
        3198,
        3263
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3629": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3631": {
      "fn": "Soul.removeAccount",
      "offset": [
        3198,
        3263
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "3633": {
      "fn": "Soul.removeAccount",
      "offset": [
        3198,
        3263
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3634": {
      "fn": "Soul.removeAccount",
      "offset": [
        3198,
        3263
      ],
      "op": "ADD",
      "path": "14"
    },
    "3635": {
      "op": "MSTORE"
    },
    "3636": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3638": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3640": {
      "op": "DUP3"
    },
    "3641": {
      "op": "ADD"
    },
    "3642": {
      "op": "MSTORE"
    },
    "3643": {
      "op": "PUSH17",
      "value": "0x1B9BDD081BDDDB995C881BD9881CDBDD5B"
    },
    "3661": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "3663": {
      "op": "SHL"
    },
    "3664": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3666": {
      "op": "DUP3"
    },
    "3667": {
      "op": "ADD"
    },
    "3668": {
      "op": "MSTORE"
    },
    "3669": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3671": {
      "op": "ADD"
    },
    "3672": {
      "fn": "Soul.removeAccount",
      "offset": [
        3198,
        3263
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x58C"
    },
    "3675": {
      "op": "JUMP"
    },
    "3676": {
      "fn": "Soul.removeAccount",
      "offset": [
        3198,
        3263
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3677": {
      "fn": "Soul.removeAccount",
      "offset": [
        3273,
        3306
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 42,
      "value": "0xCD9"
    },
    "3680": {
      "fn": "Soul.removeAccount",
      "offset": [
        3288,
        3295
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3681": {
      "fn": "Soul.removeAccount",
      "offset": [
        3297,
        3305
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3682": {
      "fn": "Soul.removeAccount",
      "offset": [
        3273,
        3287
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x160F"
    },
    "3685": {
      "fn": "Soul.removeAccount",
      "jump": "i",
      "offset": [
        3273,
        3306
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3686": {
      "fn": "Soul.tokenURI",
      "offset": [
        4335,
        5829
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3687": {
      "fn": "ERC721._exists",
      "offset": [
        7099,
        7103
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3689": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3690": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3691": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3692": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7129
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3694": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3696": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3697": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3699": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3700": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3701": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3702": {
      "fn": "Soul.tokenURI",
      "offset": [
        4448,
        4461
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "3704": {
      "fn": "Soul.tokenURI",
      "offset": [
        4448,
        4461
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3709": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3711": {
      "op": "SHL"
    },
    "3712": {
      "op": "SUB"
    },
    "3713": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "AND",
      "path": "1"
    },
    "3714": {
      "fn": "Soul.tokenURI",
      "offset": [
        4477,
        4523
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 43,
      "value": "0xEC1"
    },
    "3717": {
      "fn": "Soul.tokenURI",
      "offset": [
        4477,
        4523
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3718": {
      "fn": "Soul.tokenURI",
      "offset": [
        4477,
        4523
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3720": {
      "fn": "Soul.tokenURI",
      "offset": [
        4477,
        4523
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3721": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3725": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3727": {
      "op": "SHL"
    },
    "3728": {
      "fn": "Soul.tokenURI",
      "offset": [
        4477,
        4523
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3729": {
      "fn": "Soul.tokenURI",
      "offset": [
        4477,
        4523
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3730": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3732": {
      "fn": "Soul.tokenURI",
      "offset": [
        4477,
        4523
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "3734": {
      "fn": "Soul.tokenURI",
      "offset": [
        4477,
        4523
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3735": {
      "fn": "Soul.tokenURI",
      "offset": [
        4477,
        4523
      ],
      "op": "ADD",
      "path": "14"
    },
    "3736": {
      "op": "MSTORE"
    },
    "3737": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3739": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3741": {
      "op": "DUP3"
    },
    "3742": {
      "op": "ADD"
    },
    "3743": {
      "op": "MSTORE"
    },
    "3744": {
      "op": "PUSH17",
      "value": "0x3737B732BC34B9BA32B73A103A37B5B2B7"
    },
    "3762": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "3764": {
      "op": "SHL"
    },
    "3765": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3767": {
      "op": "DUP3"
    },
    "3768": {
      "op": "ADD"
    },
    "3769": {
      "op": "MSTORE"
    },
    "3770": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3772": {
      "op": "ADD"
    },
    "3773": {
      "fn": "Soul.tokenURI",
      "offset": [
        4477,
        4523
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x58C"
    },
    "3776": {
      "op": "JUMP"
    },
    "3777": {
      "fn": "Soul.tokenURI",
      "offset": [
        4477,
        4523
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3778": {
      "fn": "Soul.tokenURI",
      "offset": [
        4534,
        4551
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3780": {
      "fn": "Soul.tokenURI",
      "offset": [
        4616,
        4634
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xECC"
    },
    "3783": {
      "fn": "Soul.tokenURI",
      "offset": [
        4616,
        4623
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3784": {
      "fn": "Soul.tokenURI",
      "offset": [
        4616,
        4632
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1884"
    },
    "3787": {
      "fn": "Soul.tokenURI",
      "jump": "i",
      "offset": [
        4616,
        4634
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3788": {
      "fn": "Soul.tokenURI",
      "offset": [
        4616,
        4634
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3789": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5306
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "3791": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5306
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3792": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3794": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3795": {
      "op": "PUSH4",
      "value": "0x3E10510B"
    },
    "3800": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3802": {
      "op": "SHL"
    },
    "3803": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3804": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3805": {
      "fn": "Soul.tokenURI",
      "offset": [
        4730,
        5570
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF6F"
    },
    "3808": {
      "fn": "Soul.tokenURI",
      "offset": [
        4730,
        5570
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3813": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3815": {
      "op": "SHL"
    },
    "3816": {
      "op": "SUB"
    },
    "3817": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5306
      ],
      "op": "AND",
      "path": "14"
    },
    "3818": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5306
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3819": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5310
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x3E10510B"
    },
    "3824": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5310
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3825": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEFC"
    },
    "3828": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3829": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "3831": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "ADD",
      "path": "14"
    },
    "3832": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2503"
    },
    "3835": {
      "fn": "Soul.tokenURI",
      "jump": "i",
      "offset": [
        5303,
        5332
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3836": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3837": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3839": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3841": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3842": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3843": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3844": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "SUB",
      "path": "14"
    },
    "3845": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3846": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3847": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "GAS",
      "path": "14"
    },
    "3848": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "3849": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3850": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3851": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3852": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF19"
    },
    "3855": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3856": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "3857": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3859": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3860": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "3861": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "3862": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3864": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "REVERT",
      "path": "14"
    },
    "3865": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3866": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "POP",
      "path": "14"
    },
    "3867": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "POP",
      "path": "14"
    },
    "3868": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "POP",
      "path": "14"
    },
    "3869": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "POP",
      "path": "14"
    },
    "3870": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3872": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3873": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "3874": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3876": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3877": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "3878": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "3880": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "3881": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3882": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3883": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "ADD",
      "path": "14"
    },
    "3884": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3886": {
      "op": "NOT"
    },
    "3887": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "AND",
      "path": "14"
    },
    "3888": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3889": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "ADD",
      "path": "14"
    },
    "3890": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3892": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3893": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF41"
    },
    "3896": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3897": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3898": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3899": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "ADD",
      "path": "14"
    },
    "3900": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3901": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2306"
    },
    "3904": {
      "fn": "Soul.tokenURI",
      "jump": "i",
      "offset": [
        5303,
        5332
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3905": {
      "fn": "Soul.tokenURI",
      "offset": [
        5303,
        5332
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3906": {
      "fn": "Soul.tokenURI",
      "offset": [
        5483,
        5501
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF4A"
    },
    "3909": {
      "fn": "Soul.tokenURI",
      "offset": [
        5483,
        5490
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3910": {
      "fn": "Soul.tokenURI",
      "offset": [
        5483,
        5499
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1884"
    },
    "3913": {
      "fn": "Soul.tokenURI",
      "jump": "i",
      "offset": [
        5483,
        5501
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3914": {
      "fn": "Soul.tokenURI",
      "offset": [
        5483,
        5501
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3915": {
      "fn": "Soul.tokenURI",
      "offset": [
        4761,
        5556
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3917": {
      "fn": "Soul.tokenURI",
      "offset": [
        4761,
        5556
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3918": {
      "fn": "Soul.tokenURI",
      "offset": [
        4761,
        5556
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3920": {
      "fn": "Soul.tokenURI",
      "offset": [
        4761,
        5556
      ],
      "op": "ADD",
      "path": "14"
    },
    "3921": {
      "fn": "Soul.tokenURI",
      "offset": [
        4761,
        5556
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF5B"
    },
    "3924": {
      "fn": "Soul.tokenURI",
      "offset": [
        4761,
        5556
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3925": {
      "fn": "Soul.tokenURI",
      "offset": [
        4761,
        5556
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3926": {
      "fn": "Soul.tokenURI",
      "offset": [
        4761,
        5556
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3927": {
      "fn": "Soul.tokenURI",
      "offset": [
        4761,
        5556
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x256C"
    },
    "3930": {
      "fn": "Soul.tokenURI",
      "jump": "i",
      "offset": [
        4761,
        5556
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3931": {
      "fn": "Soul.tokenURI",
      "offset": [
        4761,
        5556
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3932": {
      "fn": "Soul.tokenURI",
      "offset": [
        4761,
        5556
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3934": {
      "fn": "Soul.tokenURI",
      "offset": [
        4761,
        5556
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3935": {
      "fn": "Soul.tokenURI",
      "offset": [
        4761,
        5556
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3937": {
      "fn": "Soul.tokenURI",
      "offset": [
        4761,
        5556
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3938": {
      "fn": "Soul.tokenURI",
      "offset": [
        4761,
        5556
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3939": {
      "fn": "Soul.tokenURI",
      "offset": [
        4761,
        5556
      ],
      "op": "SUB",
      "path": "14"
    },
    "3940": {
      "fn": "Soul.tokenURI",
      "offset": [
        4761,
        5556
      ],
      "op": "SUB",
      "path": "14"
    },
    "3941": {
      "fn": "Soul.tokenURI",
      "offset": [
        4761,
        5556
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3942": {
      "fn": "Soul.tokenURI",
      "offset": [
        4761,
        5556
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3943": {
      "fn": "Soul.tokenURI",
      "offset": [
        4761,
        5556
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3944": {
      "fn": "Soul.tokenURI",
      "offset": [
        4761,
        5556
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3946": {
      "fn": "Soul.tokenURI",
      "offset": [
        4761,
        5556
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3947": {
      "fn": "Soul.tokenURI",
      "offset": [
        4730,
        4743
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1985"
    },
    "3950": {
      "fn": "Soul.tokenURI",
      "jump": "i",
      "offset": [
        4730,
        5570
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3951": {
      "fn": "Soul.tokenURI",
      "offset": [
        4730,
        5570
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3952": {
      "fn": "Soul.tokenURI",
      "offset": [
        4554,
        5626
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3954": {
      "fn": "Soul.tokenURI",
      "offset": [
        4554,
        5626
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3955": {
      "fn": "Soul.tokenURI",
      "offset": [
        4554,
        5626
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3957": {
      "fn": "Soul.tokenURI",
      "offset": [
        4554,
        5626
      ],
      "op": "ADD",
      "path": "14"
    },
    "3958": {
      "fn": "Soul.tokenURI",
      "offset": [
        4554,
        5626
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF80"
    },
    "3961": {
      "fn": "Soul.tokenURI",
      "offset": [
        4554,
        5626
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3962": {
      "fn": "Soul.tokenURI",
      "offset": [
        4554,
        5626
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3963": {
      "fn": "Soul.tokenURI",
      "offset": [
        4554,
        5626
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3964": {
      "fn": "Soul.tokenURI",
      "offset": [
        4554,
        5626
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x27EB"
    },
    "3967": {
      "fn": "Soul.tokenURI",
      "jump": "i",
      "offset": [
        4554,
        5626
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3968": {
      "fn": "Soul.tokenURI",
      "offset": [
        4554,
        5626
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3969": {
      "fn": "Soul.tokenURI",
      "offset": [
        4554,
        5626
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3971": {
      "fn": "Soul.tokenURI",
      "offset": [
        4554,
        5626
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3972": {
      "fn": "Soul.tokenURI",
      "offset": [
        4554,
        5626
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3974": {
      "fn": "Soul.tokenURI",
      "offset": [
        4554,
        5626
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3975": {
      "fn": "Soul.tokenURI",
      "offset": [
        4554,
        5626
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3976": {
      "fn": "Soul.tokenURI",
      "offset": [
        4554,
        5626
      ],
      "op": "SUB",
      "path": "14"
    },
    "3977": {
      "fn": "Soul.tokenURI",
      "offset": [
        4554,
        5626
      ],
      "op": "SUB",
      "path": "14"
    },
    "3978": {
      "fn": "Soul.tokenURI",
      "offset": [
        4554,
        5626
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3979": {
      "fn": "Soul.tokenURI",
      "offset": [
        4554,
        5626
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3980": {
      "fn": "Soul.tokenURI",
      "offset": [
        4554,
        5626
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3981": {
      "fn": "Soul.tokenURI",
      "offset": [
        4554,
        5626
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3983": {
      "fn": "Soul.tokenURI",
      "offset": [
        4554,
        5626
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3984": {
      "fn": "Soul.tokenURI",
      "offset": [
        4534,
        5626
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3985": {
      "fn": "Soul.tokenURI",
      "offset": [
        4534,
        5626
      ],
      "op": "POP",
      "path": "14"
    },
    "3986": {
      "fn": "Soul.tokenURI",
      "offset": [
        5771,
        5790
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 44,
      "value": "0xF9A"
    },
    "3989": {
      "fn": "Soul.tokenURI",
      "offset": [
        5785,
        5789
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3990": {
      "fn": "Soul.tokenURI",
      "offset": [
        5771,
        5784
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1985"
    },
    "3993": {
      "fn": "Soul.tokenURI",
      "jump": "i",
      "offset": [
        5771,
        5790
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3994": {
      "fn": "Soul.tokenURI",
      "offset": [
        5771,
        5790
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3995": {
      "fn": "Soul.tokenURI",
      "offset": [
        5680,
        5808
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3997": {
      "fn": "Soul.tokenURI",
      "offset": [
        5680,
        5808
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3998": {
      "fn": "Soul.tokenURI",
      "offset": [
        5680,
        5808
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4000": {
      "fn": "Soul.tokenURI",
      "offset": [
        5680,
        5808
      ],
      "op": "ADD",
      "path": "14"
    },
    "4001": {
      "fn": "Soul.tokenURI",
      "offset": [
        5680,
        5808
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFAA"
    },
    "4004": {
      "fn": "Soul.tokenURI",
      "offset": [
        5680,
        5808
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4005": {
      "fn": "Soul.tokenURI",
      "offset": [
        5680,
        5808
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4006": {
      "fn": "Soul.tokenURI",
      "offset": [
        5680,
        5808
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x28BB"
    },
    "4009": {
      "fn": "Soul.tokenURI",
      "jump": "i",
      "offset": [
        5680,
        5808
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4010": {
      "fn": "Soul.tokenURI",
      "offset": [
        5680,
        5808
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4011": {
      "fn": "Soul.tokenURI",
      "offset": [
        5680,
        5808
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4013": {
      "fn": "Soul.tokenURI",
      "offset": [
        5680,
        5808
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4014": {
      "fn": "Soul.tokenURI",
      "offset": [
        5680,
        5808
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4016": {
      "fn": "Soul.tokenURI",
      "offset": [
        5680,
        5808
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4017": {
      "fn": "Soul.tokenURI",
      "offset": [
        5680,
        5808
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4018": {
      "fn": "Soul.tokenURI",
      "offset": [
        5680,
        5808
      ],
      "op": "SUB",
      "path": "14"
    },
    "4019": {
      "fn": "Soul.tokenURI",
      "offset": [
        5680,
        5808
      ],
      "op": "SUB",
      "path": "14"
    },
    "4020": {
      "fn": "Soul.tokenURI",
      "offset": [
        5680,
        5808
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4021": {
      "fn": "Soul.tokenURI",
      "offset": [
        5680,
        5808
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4022": {
      "fn": "Soul.tokenURI",
      "offset": [
        5680,
        5808
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4023": {
      "fn": "Soul.tokenURI",
      "offset": [
        5680,
        5808
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4025": {
      "fn": "Soul.tokenURI",
      "offset": [
        5680,
        5808
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4026": {
      "fn": "Soul.tokenURI",
      "offset": [
        5637,
        5822
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4027": {
      "fn": "Soul.tokenURI",
      "offset": [
        5637,
        5822
      ],
      "op": "POP",
      "path": "14"
    },
    "4028": {
      "fn": "Soul.tokenURI",
      "offset": [
        5637,
        5822
      ],
      "op": "POP",
      "path": "14"
    },
    "4029": {
      "fn": "Soul.tokenURI",
      "offset": [
        4335,
        5829
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4030": {
      "fn": "Soul.tokenURI",
      "offset": [
        4335,
        5829
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4031": {
      "fn": "Soul.tokenURI",
      "offset": [
        4335,
        5829
      ],
      "op": "POP",
      "path": "14"
    },
    "4032": {
      "fn": "Soul.tokenURI",
      "jump": "o",
      "offset": [
        4335,
        5829
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4033": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4034": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFC9"
    },
    "4037": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x131F"
    },
    "4040": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4041": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4048": {
      "op": "SHL"
    },
    "4049": {
      "op": "SUB"
    },
    "4050": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 45
    },
    "4051": {
      "branch": 140,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "AND",
      "path": "0"
    },
    "4052": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x102E"
    },
    "4055": {
      "branch": 140,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4056": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4058": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4059": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4063": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4065": {
      "op": "SHL"
    },
    "4066": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4067": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4068": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4070": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4072": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4073": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "ADD",
      "path": "0"
    },
    "4074": {
      "op": "MSTORE"
    },
    "4075": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4077": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4079": {
      "op": "DUP3"
    },
    "4080": {
      "op": "ADD"
    },
    "4081": {
      "op": "MSTORE"
    },
    "4082": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "4115": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4117": {
      "op": "DUP3"
    },
    "4118": {
      "op": "ADD"
    },
    "4119": {
      "op": "MSTORE"
    },
    "4120": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "4127": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4129": {
      "op": "SHL"
    },
    "4130": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4132": {
      "op": "DUP3"
    },
    "4133": {
      "op": "ADD"
    },
    "4134": {
      "op": "MSTORE"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4137": {
      "op": "ADD"
    },
    "4138": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x58C"
    },
    "4141": {
      "op": "JUMP"
    },
    "4142": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4143": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 46,
      "value": "0xCBC"
    },
    "4146": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2263,
        2271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4147": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16D3"
    },
    "4150": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4151": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2323,
        2946
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4152": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2516
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "4154": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2516
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4155": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4157": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4158": {
      "op": "PUSH4",
      "value": "0x3E10510B"
    },
    "4163": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4165": {
      "op": "SHL"
    },
    "4166": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4167": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4168": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2472,
        2488
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4170": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2472,
        2488
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4175": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4177": {
      "op": "SHL"
    },
    "4178": {
      "op": "SUB"
    },
    "4179": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2516
      ],
      "op": "AND",
      "path": "14"
    },
    "4180": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2516
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4181": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2526
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x2D888869"
    },
    "4186": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2526
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4187": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2516
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4188": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2516
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4189": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2534
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x3E10510B"
    },
    "4194": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2534
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4195": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x106E"
    },
    "4198": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4199": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "4201": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "ADD",
      "path": "14"
    },
    "4202": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x22AE"
    },
    "4205": {
      "fn": "Soul.addAccountByOperator",
      "jump": "i",
      "offset": [
        2527,
        2567
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4206": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4207": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4209": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4211": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4212": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4213": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4214": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "SUB",
      "path": "14"
    },
    "4215": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4216": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4217": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "GAS",
      "path": "14"
    },
    "4218": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "4219": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4220": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4221": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4222": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x108B"
    },
    "4225": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4226": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4227": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4229": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4230": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4231": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4232": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4234": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4235": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4236": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "POP",
      "path": "14"
    },
    "4237": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "POP",
      "path": "14"
    },
    "4238": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "POP",
      "path": "14"
    },
    "4239": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "POP",
      "path": "14"
    },
    "4240": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4242": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4243": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4244": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4246": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4247": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4248": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "4250": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4251": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4252": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4253": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "ADD",
      "path": "14"
    },
    "4254": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4256": {
      "op": "NOT"
    },
    "4257": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "AND",
      "path": "14"
    },
    "4258": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4259": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "ADD",
      "path": "14"
    },
    "4260": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4262": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4263": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10B3"
    },
    "4266": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4267": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4268": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4269": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "ADD",
      "path": "14"
    },
    "4270": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4271": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2306"
    },
    "4274": {
      "fn": "Soul.addAccountByOperator",
      "jump": "i",
      "offset": [
        2527,
        2567
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4275": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2527,
        2567
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4276": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4278": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4279": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4280": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "4285": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "AND",
      "path": "14"
    },
    "4286": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "4288": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "SHL",
      "path": "14"
    },
    "4289": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4290": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4291": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "4293": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "ADD",
      "path": "14"
    },
    "4294": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10CF"
    },
    "4297": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4298": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4299": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2013"
    },
    "4302": {
      "fn": "Soul.addAccountByOperator",
      "jump": "i",
      "offset": [
        2513,
        2568
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4303": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4304": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4306": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4308": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4309": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4310": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4311": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "SUB",
      "path": "14"
    },
    "4312": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4313": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4314": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "GAS",
      "path": "14"
    },
    "4315": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "4316": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4317": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4318": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4319": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10EC"
    },
    "4322": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4323": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4324": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4326": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4327": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4328": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4329": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4331": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4332": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4333": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "POP",
      "path": "14"
    },
    "4334": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "POP",
      "path": "14"
    },
    "4335": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "POP",
      "path": "14"
    },
    "4336": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "POP",
      "path": "14"
    },
    "4337": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4339": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4340": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4341": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "4343": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "NOT",
      "path": "14"
    },
    "4344": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "4346": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4347": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "ADD",
      "path": "14"
    },
    "4348": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "AND",
      "path": "14"
    },
    "4349": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4350": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "ADD",
      "path": "14"
    },
    "4351": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4352": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4354": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4355": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "POP",
      "path": "14"
    },
    "4356": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4357": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "ADD",
      "path": "14"
    },
    "4358": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4359": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1110"
    },
    "4362": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4363": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4364": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x237D"
    },
    "4367": {
      "fn": "Soul.addAccountByOperator",
      "jump": "i",
      "offset": [
        2513,
        2568
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4368": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2513,
        2568
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4369": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2472,
        2578
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4370": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2472,
        2578
      ],
      "op": "POP",
      "path": "14"
    },
    "4371": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2588,
        2614
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4373": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2624
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4378": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4380": {
      "op": "SHL"
    },
    "4381": {
      "op": "SUB"
    },
    "4382": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2645
      ],
      "op": "AND",
      "path": "14"
    },
    "4383": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2645
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xC3BB1A57"
    },
    "4388": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4390": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4391": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4392": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "4397": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "AND",
      "path": "14"
    },
    "4398": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "4400": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "SHL",
      "path": "14"
    },
    "4401": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4402": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4403": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "4405": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "ADD",
      "path": "14"
    },
    "4406": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x113E"
    },
    "4409": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4410": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x239A"
    },
    "4413": {
      "fn": "Soul.addAccountByOperator",
      "jump": "i",
      "offset": [
        2617,
        2659
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4414": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4415": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4417": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4419": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4420": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4421": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4422": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "SUB",
      "path": "14"
    },
    "4423": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4424": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4425": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "GAS",
      "path": "14"
    },
    "4426": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "4427": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4428": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4429": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4430": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x115B"
    },
    "4433": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4434": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4435": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4437": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4438": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4439": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4440": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4442": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4443": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4444": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "POP",
      "path": "14"
    },
    "4445": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "POP",
      "path": "14"
    },
    "4446": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "POP",
      "path": "14"
    },
    "4447": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "POP",
      "path": "14"
    },
    "4448": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4450": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4451": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4452": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4454": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4455": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4456": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "4458": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4459": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4460": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4461": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "ADD",
      "path": "14"
    },
    "4462": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4464": {
      "op": "NOT"
    },
    "4465": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "AND",
      "path": "14"
    },
    "4466": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4467": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "ADD",
      "path": "14"
    },
    "4468": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4470": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4471": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1183"
    },
    "4474": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4475": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4476": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4477": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "ADD",
      "path": "14"
    },
    "4478": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4479": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x23BE"
    },
    "4482": {
      "fn": "Soul.addAccountByOperator",
      "jump": "i",
      "offset": [
        2617,
        2659
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4483": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2617,
        2659
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4484": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2588,
        2659
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4485": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2588,
        2659
      ],
      "op": "POP",
      "path": "14"
    },
    "4486": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2675,
        2684
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4488": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2670,
        2893
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4489": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2694,
        2703
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4490": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2694,
        2710
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4491": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2690,
        2691
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4492": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2690,
        2710
      ],
      "op": "LT",
      "path": "14"
    },
    "4493": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2670,
        2893
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4494": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2670,
        2893
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x828"
    },
    "4497": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2670,
        2893
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4498": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2749,
        2758
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4499": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2759,
        2760
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4500": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2749,
        2761
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4501": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2749,
        2761
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4502": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2749,
        2761
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4503": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2749,
        2761
      ],
      "op": "LT",
      "path": "14"
    },
    "4504": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2749,
        2761
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11A3"
    },
    "4507": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2749,
        2761
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4508": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2749,
        2761
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11A3"
    },
    "4511": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2749,
        2761
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2470"
    },
    "4514": {
      "fn": "Soul.addAccountByOperator",
      "jump": "i",
      "offset": [
        2749,
        2761
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4515": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2749,
        2761
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4516": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2749,
        2761
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4518": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2749,
        2761
      ],
      "op": "MUL",
      "path": "14"
    },
    "4519": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2749,
        2761
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4521": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2749,
        2761
      ],
      "op": "ADD",
      "path": "14"
    },
    "4522": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2749,
        2761
      ],
      "op": "ADD",
      "path": "14"
    },
    "4523": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2749,
        2761
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4528": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4530": {
      "op": "SHL"
    },
    "4531": {
      "op": "SUB"
    },
    "4532": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2735,
        2761
      ],
      "op": "AND",
      "path": "14"
    },
    "4533": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2735,
        2745
      ],
      "op": "CALLER",
      "path": "14"
    },
    "4534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4540": {
      "op": "SHL"
    },
    "4541": {
      "op": "SUB"
    },
    "4542": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2735,
        2761
      ],
      "op": "AND",
      "path": "14"
    },
    "4543": {
      "branch": 117,
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2735,
        2761
      ],
      "op": "EQ",
      "path": "14"
    },
    "4544": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2735,
        2794
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4545": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2735,
        2794
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4546": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2735,
        2794
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11E1"
    },
    "4549": {
      "branch": 117,
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2735,
        2794
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4550": {
      "op": "POP"
    },
    "4551": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2765,
        2780
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4553": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2765,
        2780
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4554": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2765,
        2780
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4555": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2765,
        2780
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4556": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2765,
        2771
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xC"
    },
    "4558": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2765,
        2780
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4560": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2765,
        2780
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4561": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2765,
        2780
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4563": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2765,
        2780
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4564": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2765,
        2780
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "4565": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2765,
        2780
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4572": {
      "op": "SHL"
    },
    "4573": {
      "op": "SUB"
    },
    "4574": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2765,
        2780
      ],
      "op": "AND",
      "path": "14"
    },
    "4575": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2784,
        2794
      ],
      "op": "CALLER",
      "path": "14"
    },
    "4576": {
      "branch": 118,
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2765,
        2794
      ],
      "op": "EQ",
      "path": "14"
    },
    "4577": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2735,
        2794
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4578": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2731,
        2883
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4579": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2731,
        2883
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11F0"
    },
    "4582": {
      "branch": 118,
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2731,
        2883
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4583": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2814,
        2844
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 47,
      "value": "0xB9F"
    },
    "4586": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2826,
        2833
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4587": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2835,
        2843
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4588": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2814,
        2825
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1826"
    },
    "4591": {
      "fn": "Soul.addAccountByOperator",
      "jump": "i",
      "offset": [
        2814,
        2844
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4592": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2731,
        2883
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4593": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2712,
        2715
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 48
    },
    "4594": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2712,
        2715
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11FA"
    },
    "4597": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2712,
        2715
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4598": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2712,
        2715
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x249C"
    },
    "4601": {
      "fn": "Soul.addAccountByOperator",
      "jump": "i",
      "offset": [
        2712,
        2715
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4602": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2712,
        2715
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4603": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2712,
        2715
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4604": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2712,
        2715
      ],
      "op": "POP",
      "path": "14"
    },
    "4605": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2712,
        2715
      ],
      "op": "POP",
      "path": "14"
    },
    "4606": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2670,
        2893
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1188"
    },
    "4609": {
      "fn": "Soul.addAccountByOperator",
      "offset": [
        2670,
        2893
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4610": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4611": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1672,
        1676
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4617": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4619": {
      "op": "SHL"
    },
    "4620": {
      "op": "SUB"
    },
    "4621": {
      "op": "NOT"
    },
    "4622": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 49
    },
    "4623": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "AND",
      "path": "1"
    },
    "4624": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "4629": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4631": {
      "op": "SHL"
    },
    "4632": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "EQ",
      "path": "1"
    },
    "4633": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4634": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1233"
    },
    "4637": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4638": {
      "op": "POP"
    },
    "4639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4643": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4645": {
      "op": "SHL"
    },
    "4646": {
      "op": "SUB"
    },
    "4647": {
      "op": "NOT"
    },
    "4648": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4649": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "AND",
      "path": "1"
    },
    "4650": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "4655": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4657": {
      "op": "SHL"
    },
    "4658": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "EQ",
      "path": "1"
    },
    "4659": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4660": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4661": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x459"
    },
    "4664": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4665": {
      "op": "POP"
    },
    "4666": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "4671": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4673": {
      "op": "SHL"
    },
    "4674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4678": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4680": {
      "op": "SHL"
    },
    "4681": {
      "op": "SUB"
    },
    "4682": {
      "op": "NOT"
    },
    "4683": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "11",
      "statement": 50
    },
    "4684": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "11"
    },
    "4685": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "11"
    },
    "4686": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1827,
        1863
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x459"
    },
    "4689": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        829,
        984
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4690": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11657,
        11790
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4691": {
      "fn": "ERC721._exists",
      "offset": [
        7099,
        7103
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4693": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4694": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4695": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4696": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7129
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "4698": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4700": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4701": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4703": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4704": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4705": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4710": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4712": {
      "op": "SHL"
    },
    "4713": {
      "op": "SUB"
    },
    "4714": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "AND",
      "path": "1"
    },
    "4715": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 51,
      "value": "0xCBC"
    },
    "4718": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4719": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4721": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4722": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4726": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4728": {
      "op": "SHL"
    },
    "4729": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4730": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4731": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4733": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4735": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4736": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "ADD",
      "path": "1"
    },
    "4737": {
      "op": "MSTORE"
    },
    "4738": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "4740": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4742": {
      "op": "DUP3"
    },
    "4743": {
      "op": "ADD"
    },
    "4744": {
      "op": "MSTORE"
    },
    "4745": {
      "op": "PUSH24",
      "value": "0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
    },
    "4770": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "4772": {
      "op": "SHL"
    },
    "4773": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4775": {
      "op": "DUP3"
    },
    "4776": {
      "op": "ADD"
    },
    "4777": {
      "op": "MSTORE"
    },
    "4778": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4780": {
      "op": "ADD"
    },
    "4781": {
      "fn": "ERC721._requireMinted",
      "offset": [
        11730,
        11783
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x58C"
    },
    "4784": {
      "op": "JUMP"
    },
    "4785": {
      "fn": "ERC721._approve",
      "offset": [
        10959,
        11130
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4786": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 52,
      "value": "0x0"
    },
    "4788": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4789": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4790": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4791": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11048
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4793": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4795": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4796": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4798": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4799": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4800": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4801": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4806": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4808": {
      "op": "SHL"
    },
    "4809": {
      "op": "SUB"
    },
    "4810": {
      "op": "NOT"
    },
    "4811": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "AND",
      "path": "1"
    },
    "4812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4816": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4818": {
      "op": "SHL"
    },
    "4819": {
      "op": "SUB"
    },
    "4820": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4821": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "AND",
      "path": "1"
    },
    "4822": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4823": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4824": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "OR",
      "path": "1"
    },
    "4825": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4826": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4827": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11062
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4828": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4829": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4830": {
      "fn": "ERC721._approve",
      "offset": [
        11086,
        11109
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 53,
      "value": "0x12E6"
    },
    "4833": {
      "fn": "ERC721._approve",
      "offset": [
        11033,
        11057
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4834": {
      "fn": "ERC721._approve",
      "offset": [
        11086,
        11100
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB8"
    },
    "4837": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11086,
        11109
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4838": {
      "fn": "ERC721._approve",
      "offset": [
        11086,
        11109
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4843": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4845": {
      "op": "SHL"
    },
    "4846": {
      "op": "SUB"
    },
    "4847": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "AND",
      "path": "1"
    },
    "4848": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "4881": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4883": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4884": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4886": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4887": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4888": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4889": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "SUB",
      "path": "1"
    },
    "4890": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4891": {
      "fn": "ERC721._approve",
      "offset": [
        11077,
        11123
      ],
      "op": "LOG4",
      "path": "1"
    },
    "4892": {
      "fn": "ERC721._approve",
      "offset": [
        10959,
        11130
      ],
      "op": "POP",
      "path": "1"
    },
    "4893": {
      "fn": "ERC721._approve",
      "offset": [
        10959,
        11130
      ],
      "op": "POP",
      "path": "1"
    },
    "4894": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        10959,
        11130
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4895": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1359,
        1489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4896": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "4898": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4903": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4905": {
      "op": "SHL"
    },
    "4906": {
      "op": "SUB"
    },
    "4907": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "4908": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "4909": {
      "branch": 141,
      "fn": "Ownable._checkOwner",
      "offset": [
        1422,
        1445
      ],
      "op": "EQ",
      "path": "0",
      "statement": 54
    },
    "4910": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB0"
    },
    "4913": {
      "branch": 141,
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4914": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4916": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4917": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4921": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4923": {
      "op": "SHL"
    },
    "4924": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4925": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4926": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4928": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4930": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4931": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "ADD",
      "path": "0"
    },
    "4932": {
      "op": "DUP2"
    },
    "4933": {
      "op": "SWAP1"
    },
    "4934": {
      "op": "MSTORE"
    },
    "4935": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4937": {
      "op": "DUP3"
    },
    "4938": {
      "op": "ADD"
    },
    "4939": {
      "op": "MSTORE"
    },
    "4940": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "4973": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4975": {
      "op": "DUP3"
    },
    "4976": {
      "op": "ADD"
    },
    "4977": {
      "op": "MSTORE"
    },
    "4978": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4980": {
      "op": "ADD"
    },
    "4981": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x58C"
    },
    "4984": {
      "op": "JUMP"
    },
    "4985": {
      "fn": "Soul._mintTo",
      "offset": [
        1700,
        1871
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4986": {
      "fn": "Soul._mintTo",
      "offset": [
        1766,
        1785
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 55,
      "value": "0x1383"
    },
    "4989": {
      "fn": "Soul._mintTo",
      "offset": [
        1772,
        1775
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4990": {
      "fn": "Soul._mintTo",
      "offset": [
        1777,
        1784
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4991": {
      "fn": "Soul._mintTo",
      "offset": [
        1766,
        1771
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1AD8"
    },
    "4994": {
      "fn": "Soul._mintTo",
      "jump": "i",
      "offset": [
        1766,
        1785
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4995": {
      "fn": "Soul._mintTo",
      "offset": [
        1766,
        1785
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4996": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1812
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 56,
      "value": "0x0"
    },
    "4998": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1812
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4999": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1812
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5000": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1812
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5001": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1803
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xD"
    },
    "5003": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1812
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5005": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1812
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5006": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1812
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5007": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1812
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5008": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1812
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5010": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1812
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5011": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1812
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5012": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1812
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "5013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5015": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5017": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5019": {
      "op": "SHL"
    },
    "5020": {
      "op": "SUB"
    },
    "5021": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1817
      ],
      "op": "DUP7",
      "path": "14"
    },
    "5022": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1817
      ],
      "op": "AND",
      "path": "14"
    },
    "5023": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1817
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5024": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1817
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5025": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1817
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5026": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1817
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5027": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1817
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5028": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1817
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5029": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1817
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5030": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1817
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5031": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1817
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5032": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1817
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "5033": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1824
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5034": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1824
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5035": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5037": {
      "op": "NOT"
    },
    "5038": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1824
      ],
      "op": "AND",
      "path": "14"
    },
    "5039": {
      "fn": "Soul._mintTo",
      "offset": [
        1820,
        1824
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "5041": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1824
      ],
      "op": "OR",
      "path": "14"
    },
    "5042": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1824
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5043": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1824
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "5044": {
      "fn": "Soul._mintTo",
      "offset": [
        1839,
        1864
      ],
      "op": "MLOAD",
      "path": "14",
      "statement": 57
    },
    "5045": {
      "op": "SWAP2"
    },
    "5046": {
      "op": "DUP3"
    },
    "5047": {
      "op": "MSTORE"
    },
    "5048": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1812
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5049": {
      "fn": "Soul._mintTo",
      "offset": [
        1795,
        1812
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5050": {
      "fn": "Soul._mintTo",
      "offset": [
        1839,
        1864
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0xCAD03A9101BD852B136D161A1B16B7BA008655DECD17A2FAEC9259B23B5045BA"
    },
    "5083": {
      "fn": "Soul._mintTo",
      "offset": [
        1839,
        1864
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5084": {
      "op": "ADD"
    },
    "5085": {
      "fn": "Soul._mintTo",
      "offset": [
        1839,
        1864
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5086": {
      "fn": "Soul._mintTo",
      "offset": [
        1839,
        1864
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5088": {
      "fn": "Soul._mintTo",
      "offset": [
        1839,
        1864
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5089": {
      "fn": "Soul._mintTo",
      "offset": [
        1839,
        1864
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5090": {
      "fn": "Soul._mintTo",
      "offset": [
        1839,
        1864
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5091": {
      "fn": "Soul._mintTo",
      "offset": [
        1839,
        1864
      ],
      "op": "SUB",
      "path": "14"
    },
    "5092": {
      "fn": "Soul._mintTo",
      "offset": [
        1839,
        1864
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5093": {
      "fn": "Soul._mintTo",
      "offset": [
        1839,
        1864
      ],
      "op": "LOG2",
      "path": "14"
    },
    "5094": {
      "fn": "Soul._mintTo",
      "offset": [
        1700,
        1871
      ],
      "op": "POP",
      "path": "14"
    },
    "5095": {
      "fn": "Soul._mintTo",
      "offset": [
        1700,
        1871
      ],
      "op": "POP",
      "path": "14"
    },
    "5096": {
      "fn": "Soul._mintTo",
      "jump": "o",
      "offset": [
        1700,
        1871
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5097": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7317,
        7578
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5098": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7410,
        7414
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5100": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7426,
        7439
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5101": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7442,
        7465
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13F5"
    },
    "5104": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7457,
        7464
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5105": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7442,
        7456
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB8"
    },
    "5108": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7442,
        7465
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5109": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7442,
        7465
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5110": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7426,
        7465
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5111": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7426,
        7465
      ],
      "op": "POP",
      "path": "1"
    },
    "5112": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7494,
        7499
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 58
    },
    "5113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5117": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5119": {
      "op": "SHL"
    },
    "5120": {
      "op": "SUB"
    },
    "5121": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7499
      ],
      "op": "AND",
      "path": "1"
    },
    "5122": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7490
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5127": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5129": {
      "op": "SHL"
    },
    "5130": {
      "op": "SUB"
    },
    "5131": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7499
      ],
      "op": "AND",
      "path": "1"
    },
    "5132": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7499
      ],
      "op": "EQ",
      "path": "1"
    },
    "5133": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7535
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5134": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7535
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x143C"
    },
    "5137": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7535
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5138": {
      "op": "POP"
    },
    "5139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5145": {
      "op": "SHL"
    },
    "5146": {
      "op": "SUB"
    },
    "5147": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5148": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5149": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "AND",
      "path": "1"
    },
    "5150": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4485,
        4489
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5152": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5153": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5154": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5155": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4526
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "5157": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5159": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5160": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5161": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5162": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5164": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5165": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5166": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5167": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "5168": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "DUP9",
      "path": "1"
    },
    "5169": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "AND",
      "path": "1"
    },
    "5170": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5171": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5172": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5173": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5174": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5175": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5176": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5177": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "5179": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "AND",
      "path": "1"
    },
    "5180": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7503,
        7535
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5181": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7570
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5182": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7570
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1460"
    },
    "5185": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7570
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5186": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7570
      ],
      "op": "POP",
      "path": "1"
    },
    "5187": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7563,
        7570
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5192": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5194": {
      "op": "SHL"
    },
    "5195": {
      "op": "SUB"
    },
    "5196": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7539,
        7570
      ],
      "op": "AND",
      "path": "1"
    },
    "5197": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7539,
        7559
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1455"
    },
    "5200": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7551,
        7558
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5201": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7539,
        7550
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4F1"
    },
    "5204": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7539,
        7559
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5205": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7539,
        7559
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5210": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5212": {
      "op": "SHL"
    },
    "5213": {
      "op": "SUB"
    },
    "5214": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7539,
        7570
      ],
      "op": "AND",
      "path": "1"
    },
    "5215": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7539,
        7570
      ],
      "op": "EQ",
      "path": "1"
    },
    "5216": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7483,
        7570
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5217": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7475,
        7571
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "5218": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7317,
        7578
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "5219": {
      "op": "POP"
    },
    "5220": {
      "op": "POP"
    },
    "5221": {
      "op": "POP"
    },
    "5222": {
      "op": "POP"
    },
    "5223": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7317,
        7578
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5224": {
      "fn": "ERC721._transfer",
      "offset": [
        10242,
        10847
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5225": {
      "fn": "ERC721._transfer",
      "offset": [
        10396,
        10400
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 59
    },
    "5226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5230": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5232": {
      "op": "SHL"
    },
    "5233": {
      "op": "SUB"
    },
    "5234": {
      "fn": "ERC721._transfer",
      "offset": [
        10369,
        10400
      ],
      "op": "AND",
      "path": "1"
    },
    "5235": {
      "fn": "ERC721._transfer",
      "offset": [
        10369,
        10392
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x147B"
    },
    "5238": {
      "fn": "ERC721._transfer",
      "offset": [
        10384,
        10391
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5239": {
      "fn": "ERC721._transfer",
      "offset": [
        10369,
        10383
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB8"
    },
    "5242": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10369,
        10392
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5243": {
      "fn": "ERC721._transfer",
      "offset": [
        10369,
        10392
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5248": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5250": {
      "op": "SHL"
    },
    "5251": {
      "op": "SUB"
    },
    "5252": {
      "fn": "ERC721._transfer",
      "offset": [
        10369,
        10400
      ],
      "op": "AND",
      "path": "1"
    },
    "5253": {
      "branch": 127,
      "fn": "ERC721._transfer",
      "offset": [
        10369,
        10400
      ],
      "op": "EQ",
      "path": "1"
    },
    "5254": {
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14DF"
    },
    "5257": {
      "branch": 127,
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5258": {
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5260": {
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5261": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5265": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5267": {
      "op": "SHL"
    },
    "5268": {
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5269": {
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5270": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5272": {
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5274": {
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5275": {
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "ADD",
      "path": "1"
    },
    "5276": {
      "op": "MSTORE"
    },
    "5277": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "5279": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5281": {
      "op": "DUP3"
    },
    "5282": {
      "op": "ADD"
    },
    "5283": {
      "op": "MSTORE"
    },
    "5284": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722066726F6D20696E636F727265637420"
    },
    "5317": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5319": {
      "op": "DUP3"
    },
    "5320": {
      "op": "ADD"
    },
    "5321": {
      "op": "MSTORE"
    },
    "5322": {
      "op": "PUSH5",
      "value": "0x37BBB732B9"
    },
    "5328": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "5330": {
      "op": "SHL"
    },
    "5331": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5333": {
      "op": "DUP3"
    },
    "5334": {
      "op": "ADD"
    },
    "5335": {
      "op": "MSTORE"
    },
    "5336": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5338": {
      "op": "ADD"
    },
    "5339": {
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x58C"
    },
    "5342": {
      "op": "JUMP"
    },
    "5343": {
      "fn": "ERC721._transfer",
      "offset": [
        10361,
        10442
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5350": {
      "op": "SHL"
    },
    "5351": {
      "op": "SUB"
    },
    "5352": {
      "fn": "ERC721._transfer",
      "offset": [
        10460,
        10476
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 60
    },
    "5353": {
      "branch": 128,
      "fn": "ERC721._transfer",
      "offset": [
        10460,
        10476
      ],
      "op": "AND",
      "path": "1"
    },
    "5354": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1541"
    },
    "5357": {
      "branch": 128,
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5358": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5360": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5361": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5365": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5367": {
      "op": "SHL"
    },
    "5368": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5369": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5370": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5372": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5374": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5375": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "ADD",
      "path": "1"
    },
    "5376": {
      "op": "MSTORE"
    },
    "5377": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5379": {
      "op": "DUP1"
    },
    "5380": {
      "op": "DUP3"
    },
    "5381": {
      "op": "ADD"
    },
    "5382": {
      "op": "MSTORE"
    },
    "5383": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "5416": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5418": {
      "op": "DUP3"
    },
    "5419": {
      "op": "ADD"
    },
    "5420": {
      "op": "MSTORE"
    },
    "5421": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "5426": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5428": {
      "op": "SHL"
    },
    "5429": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5431": {
      "op": "DUP3"
    },
    "5432": {
      "op": "ADD"
    },
    "5433": {
      "op": "MSTORE"
    },
    "5434": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5436": {
      "op": "ADD"
    },
    "5437": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x58C"
    },
    "5440": {
      "op": "JUMP"
    },
    "5441": {
      "fn": "ERC721._transfer",
      "offset": [
        10452,
        10517
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5442": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10567
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 61,
      "value": "0x154C"
    },
    "5445": {
      "fn": "ERC721._transfer",
      "offset": [
        10549,
        10553
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5446": {
      "fn": "ERC721._transfer",
      "offset": [
        10555,
        10557
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5447": {
      "fn": "ERC721._transfer",
      "offset": [
        10559,
        10566
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5448": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10548
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C26"
    },
    "5451": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10528,
        10567
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5452": {
      "fn": "ERC721._transfer",
      "offset": [
        10528,
        10567
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5453": {
      "fn": "ERC721._transfer",
      "offset": [
        10629,
        10658
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 62,
      "value": "0x1557"
    },
    "5456": {
      "fn": "ERC721._transfer",
      "offset": [
        10646,
        10647
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5458": {
      "fn": "ERC721._transfer",
      "offset": [
        10650,
        10657
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5459": {
      "fn": "ERC721._transfer",
      "offset": [
        10629,
        10637
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12B1"
    },
    "5462": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10629,
        10658
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5463": {
      "fn": "ERC721._transfer",
      "offset": [
        10629,
        10658
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5470": {
      "op": "SHL"
    },
    "5471": {
      "op": "SUB"
    },
    "5472": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 63
    },
    "5473": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "AND",
      "path": "1"
    },
    "5474": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5476": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5477": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5478": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5479": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10678
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "5481": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5483": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5484": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5486": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5487": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5488": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10689
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5489": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10689
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5490": {
      "fn": "ERC721._transfer",
      "offset": [
        10688,
        10689
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5492": {
      "fn": "ERC721._transfer",
      "offset": [
        10688,
        10689
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5493": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10684
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5494": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10689
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1580"
    },
    "5497": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5498": {
      "fn": "ERC721._transfer",
      "offset": [
        10688,
        10689
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5499": {
      "fn": "ERC721._transfer",
      "offset": [
        10688,
        10689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5500": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10689
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2900"
    },
    "5503": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10669,
        10689
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5504": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10689
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5505": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10689
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5506": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10689
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5507": {
      "fn": "ERC721._transfer",
      "offset": [
        10669,
        10689
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5508": {
      "op": "POP"
    },
    "5509": {
      "op": "POP"
    },
    "5510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5514": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5516": {
      "op": "SHL"
    },
    "5517": {
      "op": "SUB"
    },
    "5518": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 64
    },
    "5519": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "AND",
      "path": "1"
    },
    "5520": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5522": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5523": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5524": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5525": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10708
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "5527": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5529": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5530": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5532": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5533": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5534": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10717
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5535": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10717
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5536": {
      "fn": "ERC721._transfer",
      "offset": [
        10716,
        10717
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5538": {
      "fn": "ERC721._transfer",
      "offset": [
        10716,
        10717
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5539": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10712
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5540": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10717
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15AE"
    },
    "5543": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10717
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5544": {
      "fn": "ERC721._transfer",
      "offset": [
        10716,
        10717
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5545": {
      "fn": "ERC721._transfer",
      "offset": [
        10716,
        10717
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5546": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10717
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2917"
    },
    "5549": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10699,
        10717
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5550": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10717
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5551": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10717
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5552": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10717
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5553": {
      "fn": "ERC721._transfer",
      "offset": [
        10699,
        10717
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5554": {
      "op": "POP"
    },
    "5555": {
      "op": "POP"
    },
    "5556": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 65,
      "value": "0x0"
    },
    "5558": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5559": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5560": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5561": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10734
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "5563": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5565": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5566": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5568": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5569": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5570": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5571": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5572": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5577": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5579": {
      "op": "SHL"
    },
    "5580": {
      "op": "SUB"
    },
    "5581": {
      "op": "NOT"
    },
    "5582": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "AND",
      "path": "1"
    },
    "5583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5587": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5589": {
      "op": "SHL"
    },
    "5590": {
      "op": "SUB"
    },
    "5591": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "DUP7",
      "path": "1"
    },
    "5592": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5593": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "AND",
      "path": "1"
    },
    "5594": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5595": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5596": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "OR",
      "path": "1"
    },
    "5597": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5598": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5599": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10748
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5600": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        10791
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 66
    },
    "5601": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        10791
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5602": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5603": {
      "fn": "ERC721._transfer",
      "offset": [
        10727,
        10743
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "5604": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        10791
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5605": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        10791
      ],
      "op": "DUP8",
      "path": "1"
    },
    "5606": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        10791
      ],
      "op": "AND",
      "path": "1"
    },
    "5607": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        10791
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5608": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        10791
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "5641": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        10791
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5642": {
      "fn": "ERC721._transfer",
      "offset": [
        10764,
        10791
      ],
      "op": "LOG4",
      "path": "1"
    },
    "5643": {
      "fn": "ERC721.approve",
      "offset": [
        3537,
        3874
      ],
      "op": "POP",
      "path": "1"
    },
    "5644": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "POP",
      "path": "1"
    },
    "5645": {
      "fn": "ERC721.approve",
      "offset": [
        3467,
        3874
      ],
      "op": "POP",
      "path": "1"
    },
    "5646": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3467,
        3874
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5647": {
      "fn": "Soul._removeAccount",
      "offset": [
        3966,
        4214
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5648": {
      "fn": "Soul._removeAccount",
      "offset": [
        4072,
        4080
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 67
    },
    "5649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5653": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5655": {
      "op": "SHL"
    },
    "5656": {
      "op": "SUB"
    },
    "5657": {
      "fn": "Soul._removeAccount",
      "offset": [
        4052,
        4080
      ],
      "op": "AND",
      "path": "14"
    },
    "5658": {
      "fn": "Soul._removeAccount",
      "offset": [
        4052,
        4068
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1622"
    },
    "5661": {
      "fn": "Soul._removeAccount",
      "offset": [
        4060,
        4067
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5662": {
      "fn": "Soul._removeAccount",
      "offset": [
        4052,
        4059
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xBB8"
    },
    "5665": {
      "fn": "Soul._removeAccount",
      "jump": "i",
      "offset": [
        4052,
        4068
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5666": {
      "fn": "Soul._removeAccount",
      "offset": [
        4052,
        4068
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5671": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5673": {
      "op": "SHL"
    },
    "5674": {
      "op": "SUB"
    },
    "5675": {
      "fn": "Soul._removeAccount",
      "offset": [
        4052,
        4080
      ],
      "op": "AND",
      "path": "14"
    },
    "5676": {
      "branch": 119,
      "fn": "Soul._removeAccount",
      "offset": [
        4052,
        4080
      ],
      "op": "SUB",
      "path": "14"
    },
    "5677": {
      "fn": "Soul._removeAccount",
      "offset": [
        4044,
        4113
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1678"
    },
    "5680": {
      "branch": 119,
      "fn": "Soul._removeAccount",
      "offset": [
        4044,
        4113
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "5681": {
      "fn": "Soul._removeAccount",
      "offset": [
        4044,
        4113
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5683": {
      "fn": "Soul._removeAccount",
      "offset": [
        4044,
        4113
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "5684": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5688": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5690": {
      "op": "SHL"
    },
    "5691": {
      "fn": "Soul._removeAccount",
      "offset": [
        4044,
        4113
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5692": {
      "fn": "Soul._removeAccount",
      "offset": [
        4044,
        4113
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5693": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5695": {
      "fn": "Soul._removeAccount",
      "offset": [
        4044,
        4113
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "5697": {
      "fn": "Soul._removeAccount",
      "offset": [
        4044,
        4113
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5698": {
      "fn": "Soul._removeAccount",
      "offset": [
        4044,
        4113
      ],
      "op": "ADD",
      "path": "14"
    },
    "5699": {
      "op": "MSTORE"
    },
    "5700": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "5702": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5704": {
      "op": "DUP3"
    },
    "5705": {
      "op": "ADD"
    },
    "5706": {
      "op": "MSTORE"
    },
    "5707": {
      "op": "PUSH32",
      "value": "0x63616E6E6F742072656D6F7665206F776E6572206F6620746F6B656E00000000"
    },
    "5740": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5742": {
      "op": "DUP3"
    },
    "5743": {
      "op": "ADD"
    },
    "5744": {
      "op": "MSTORE"
    },
    "5745": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5747": {
      "op": "ADD"
    },
    "5748": {
      "fn": "Soul._removeAccount",
      "offset": [
        4044,
        4113
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x58C"
    },
    "5751": {
      "op": "JUMP"
    },
    "5752": {
      "fn": "Soul._removeAccount",
      "offset": [
        4044,
        4113
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "5753": {
      "fn": "Soul._removeAccount",
      "offset": [
        4131,
        4148
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 68,
      "value": "0x0"
    },
    "5755": {
      "fn": "Soul._removeAccount",
      "offset": [
        4131,
        4148
      ],
      "op": "DUP3",
      "path": "14"
    },
    "5756": {
      "fn": "Soul._removeAccount",
      "offset": [
        4131,
        4148
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5757": {
      "fn": "Soul._removeAccount",
      "offset": [
        4131,
        4148
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5758": {
      "fn": "Soul._removeAccount",
      "offset": [
        4131,
        4139
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xD"
    },
    "5760": {
      "fn": "Soul._removeAccount",
      "offset": [
        4131,
        4148
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "5762": {
      "fn": "Soul._removeAccount",
      "offset": [
        4131,
        4148
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5763": {
      "fn": "Soul._removeAccount",
      "offset": [
        4131,
        4148
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5764": {
      "fn": "Soul._removeAccount",
      "offset": [
        4131,
        4148
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5765": {
      "fn": "Soul._removeAccount",
      "offset": [
        4131,
        4148
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "5767": {
      "fn": "Soul._removeAccount",
      "offset": [
        4131,
        4148
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5768": {
      "fn": "Soul._removeAccount",
      "offset": [
        4131,
        4148
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5769": {
      "fn": "Soul._removeAccount",
      "offset": [
        4131,
        4148
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "5770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5774": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5776": {
      "op": "SHL"
    },
    "5777": {
      "op": "SUB"
    },
    "5778": {
      "fn": "Soul._removeAccount",
      "offset": [
        4131,
        4158
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5779": {
      "fn": "Soul._removeAccount",
      "offset": [
        4131,
        4158
      ],
      "op": "AND",
      "path": "14"
    },
    "5780": {
      "fn": "Soul._removeAccount",
      "offset": [
        4131,
        4158
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5781": {
      "fn": "Soul._removeAccount",
      "offset": [
        4131,
        4158
      ],
      "op": "DUP6",
      "path": "14"
    },
    "5782": {
      "fn": "Soul._removeAccount",
      "offset": [
        4131,
        4158
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5783": {
      "fn": "Soul._removeAccount",
      "offset": [
        4131,
        4158
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5784": {
      "fn": "Soul._removeAccount",
      "offset": [
        4131,
        4158
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5785": {
      "fn": "Soul._removeAccount",
      "offset": [
        4131,
        4158
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5786": {
      "fn": "Soul._removeAccount",
      "offset": [
        4131,
        4158
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "5787": {
      "fn": "Soul._removeAccount",
      "offset": [
        4131,
        4158
      ],
      "op": "DUP2",
      "path": "14"
    },
    "5788": {
      "fn": "Soul._removeAccount",
      "offset": [
        4131,
        4158
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5789": {
      "fn": "Soul._removeAccount",
      "offset": [
        4131,
        4158
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "5790": {
      "fn": "Soul._removeAccount",
      "offset": [
        4124,
        4158
      ],
      "op": "DUP1",
      "path": "14"
    },
    "5791": {
      "fn": "Soul._removeAccount",
      "offset": [
        4124,
        4158
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5792": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5794": {
      "op": "NOT"
    },
    "5795": {
      "fn": "Soul._removeAccount",
      "offset": [
        4124,
        4158
      ],
      "op": "AND",
      "path": "14"
    },
    "5796": {
      "fn": "Soul._removeAccount",
      "offset": [
        4124,
        4158
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5797": {
      "fn": "Soul._removeAccount",
      "offset": [
        4124,
        4158
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "5798": {
      "fn": "Soul._removeAccount",
      "offset": [
        4174,
        4207
      ],
      "op": "MLOAD",
      "path": "14",
      "statement": 69
    },
    "5799": {
      "op": "SWAP2"
    },
    "5800": {
      "op": "DUP3"
    },
    "5801": {
      "op": "MSTORE"
    },
    "5802": {
      "fn": "Soul._removeAccount",
      "offset": [
        4131,
        4148
      ],
      "op": "DUP4",
      "path": "14"
    },
    "5803": {
      "fn": "Soul._removeAccount",
      "offset": [
        4131,
        4148
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5804": {
      "fn": "Soul._removeAccount",
      "offset": [
        4174,
        4207
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0xCB55B9C460A26528D8133448DA62FE50F8B555CBF7B6851F38AEE64AC07C9782"
    },
    "5837": {
      "fn": "Soul._removeAccount",
      "offset": [
        4174,
        4207
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "5838": {
      "op": "ADD"
    },
    "5839": {
      "fn": "Soul._removeAccount",
      "offset": [
        4174,
        4207
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x13DD"
    },
    "5842": {
      "op": "JUMP"
    },
    "5843": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5844": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "5846": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5847": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5852": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5854": {
      "op": "SHL"
    },
    "5855": {
      "op": "SUB"
    },
    "5856": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 70
    },
    "5857": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5858": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "5859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5863": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5865": {
      "op": "SHL"
    },
    "5866": {
      "op": "SUB"
    },
    "5867": {
      "op": "NOT"
    },
    "5868": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5869": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "5870": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5871": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "OR",
      "path": "0"
    },
    "5872": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5873": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5874": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5875": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 71,
      "value": "0x40"
    },
    "5877": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5878": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5879": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "AND",
      "path": "0"
    },
    "5880": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5881": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5882": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5883": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5884": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "5917": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5918": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5920": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5921": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "LOG3",
      "path": "0"
    },
    "5922": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2496,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "5923": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "5924": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5925": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11266,
        11573
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5926": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11416,
        11424
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 72
    },
    "5927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5931": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5933": {
      "op": "SHL"
    },
    "5934": {
      "op": "SUB"
    },
    "5935": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11407,
        11424
      ],
      "op": "AND",
      "path": "1"
    },
    "5936": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11407,
        11412
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5943": {
      "op": "SHL"
    },
    "5944": {
      "op": "SUB"
    },
    "5945": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11407,
        11424
      ],
      "op": "AND",
      "path": "1"
    },
    "5946": {
      "branch": 129,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11407,
        11424
      ],
      "op": "SUB",
      "path": "1"
    },
    "5947": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1786"
    },
    "5950": {
      "branch": 129,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5951": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5953": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5954": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5958": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5960": {
      "op": "SHL"
    },
    "5961": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5962": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5963": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5965": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5967": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5968": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "ADD",
      "path": "1"
    },
    "5969": {
      "op": "MSTORE"
    },
    "5970": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "5972": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5974": {
      "op": "DUP3"
    },
    "5975": {
      "op": "ADD"
    },
    "5976": {
      "op": "MSTORE"
    },
    "5977": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "6010": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6012": {
      "op": "DUP3"
    },
    "6013": {
      "op": "ADD"
    },
    "6014": {
      "op": "MSTORE"
    },
    "6015": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6017": {
      "op": "ADD"
    },
    "6018": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x58C"
    },
    "6021": {
      "op": "JUMP"
    },
    "6022": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11399,
        11454
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6027": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6029": {
      "op": "SHL"
    },
    "6030": {
      "op": "SUB"
    },
    "6031": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 73
    },
    "6032": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6033": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "AND",
      "path": "1"
    },
    "6034": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6036": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6037": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6038": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6039": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "6041": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6043": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6044": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6045": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6046": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6048": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6049": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6050": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11489
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6051": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "6052": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "DUP8",
      "path": "1"
    },
    "6053": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "AND",
      "path": "1"
    },
    "6054": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6055": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6056": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6057": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "6058": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6059": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6060": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6061": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6062": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6063": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11499
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6064": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6065": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6066": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6068": {
      "op": "NOT"
    },
    "6069": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "AND",
      "path": "1"
    },
    "6070": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "DUP7",
      "path": "1"
    },
    "6071": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6072": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6073": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6074": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6075": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "OR",
      "path": "1"
    },
    "6076": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6077": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6078": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11464,
        11510
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "6079": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 74
    },
    "6080": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6081": {
      "op": "SWAP2"
    },
    "6082": {
      "op": "DUP3"
    },
    "6083": {
      "op": "MSTORE"
    },
    "6084": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "6117": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6118": {
      "op": "ADD"
    },
    "6119": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6121": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6122": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6123": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6124": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "SUB",
      "path": "1"
    },
    "6125": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6126": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11525,
        11566
      ],
      "op": "LOG3",
      "path": "1"
    },
    "6127": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11266,
        11573
      ],
      "op": "POP",
      "path": "1"
    },
    "6128": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11266,
        11573
      ],
      "op": "POP",
      "path": "1"
    },
    "6129": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11266,
        11573
      ],
      "op": "POP",
      "path": "1"
    },
    "6130": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        11266,
        11573
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6131": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6426,
        6731
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6132": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6576,
        6604
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 75,
      "value": "0x17FE"
    },
    "6135": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6586,
        6590
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6136": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6592,
        6594
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6137": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6596,
        6603
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6138": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6576,
        6585
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1468"
    },
    "6141": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6576,
        6604
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6142": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6576,
        6604
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6143": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6622,
        6669
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 76,
      "value": "0x180A"
    },
    "6146": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6645,
        6649
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6147": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6651,
        6653
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6148": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6655,
        6662
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6149": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6664,
        6668
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6150": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6622,
        6644
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1CDE"
    },
    "6153": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6622,
        6669
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6154": {
      "branch": 130,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6622,
        6669
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6155": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD0F"
    },
    "6158": {
      "branch": 130,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6159": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6161": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6162": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6166": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6168": {
      "op": "SHL"
    },
    "6169": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6170": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6171": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6173": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "ADD",
      "path": "1"
    },
    "6174": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x58C"
    },
    "6177": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6178": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6614,
        6724
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x292F"
    },
    "6181": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6614,
        6724
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6182": {
      "fn": "Soul._addAccount",
      "offset": [
        2952,
        3115
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6183": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3044
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 77,
      "value": "0x0"
    },
    "6185": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3044
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6186": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3044
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6187": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3044
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6188": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3035
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xD"
    },
    "6190": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3044
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "6192": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3044
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6193": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3044
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6194": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3044
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6195": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3044
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "6197": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3044
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6198": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3044
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6199": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3044
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "6200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6204": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6206": {
      "op": "SHL"
    },
    "6207": {
      "op": "SUB"
    },
    "6208": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3054
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6209": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3054
      ],
      "op": "AND",
      "path": "14"
    },
    "6210": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3054
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6211": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3054
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6212": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3054
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6213": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3054
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6214": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3054
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6215": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3054
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6216": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3054
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6217": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3054
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6218": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3054
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6219": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3054
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "6220": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3061
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6221": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3061
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "6222": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6224": {
      "op": "NOT"
    },
    "6225": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3061
      ],
      "op": "AND",
      "path": "14"
    },
    "6226": {
      "fn": "Soul._addAccount",
      "offset": [
        3057,
        3061
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "6228": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3061
      ],
      "op": "OR",
      "path": "14"
    },
    "6229": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3061
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6230": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3061
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "6231": {
      "fn": "Soul._addAccount",
      "offset": [
        3077,
        3108
      ],
      "op": "MLOAD",
      "path": "14",
      "statement": 78
    },
    "6232": {
      "op": "SWAP2"
    },
    "6233": {
      "op": "DUP3"
    },
    "6234": {
      "op": "MSTORE"
    },
    "6235": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3044
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6236": {
      "fn": "Soul._addAccount",
      "offset": [
        3027,
        3044
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6237": {
      "fn": "Soul._addAccount",
      "offset": [
        3077,
        3108
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x90BCC508602CE6509AFAE3103F5FA4BD917ECDD0FFA791EF4FFB51BBAF190822"
    },
    "6270": {
      "fn": "Soul._addAccount",
      "offset": [
        3077,
        3108
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6271": {
      "op": "ADD"
    },
    "6272": {
      "fn": "Soul._addAccount",
      "offset": [
        3077,
        3108
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x13DD"
    },
    "6275": {
      "op": "JUMP"
    },
    "6276": {
      "fn": "Strings.toString",
      "offset": [
        392,
        1095
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6277": {
      "fn": "Strings.toString",
      "offset": [
        448,
        461
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "6279": {
      "fn": "Strings.toString",
      "offset": [
        665,
        670
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6280": {
      "fn": "Strings.toString",
      "offset": [
        674,
        675
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6282": {
      "branch": 142,
      "fn": "Strings.toString",
      "offset": [
        665,
        675
      ],
      "op": "SUB",
      "path": "10"
    },
    "6283": {
      "fn": "Strings.toString",
      "offset": [
        661,
        712
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x18AB"
    },
    "6286": {
      "branch": 142,
      "fn": "Strings.toString",
      "offset": [
        661,
        712
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6287": {
      "op": "POP"
    },
    "6288": {
      "op": "POP"
    },
    "6289": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 79,
      "value": "0x40"
    },
    "6291": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6292": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6293": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6294": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6295": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "ADD",
      "path": "10"
    },
    "6296": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6297": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6298": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6299": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "6301": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6302": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6303": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "6305": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "6307": {
      "op": "SHL"
    },
    "6308": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6310": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6311": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "ADD",
      "path": "10"
    },
    "6312": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6313": {
      "fn": "Strings.toString",
      "offset": [
        691,
        701
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6314": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        392,
        1095
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6315": {
      "fn": "Strings.toString",
      "offset": [
        661,
        712
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6316": {
      "fn": "Strings.toString",
      "offset": [
        736,
        741
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6317": {
      "fn": "Strings.toString",
      "offset": [
        721,
        733
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6319": {
      "fn": "Strings.toString",
      "offset": [
        775,
        850
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6320": {
      "fn": "Strings.toString",
      "offset": [
        782,
        791
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6321": {
      "fn": "Strings.toString",
      "offset": [
        782,
        791
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6322": {
      "fn": "Strings.toString",
      "offset": [
        775,
        850
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x18D5"
    },
    "6325": {
      "fn": "Strings.toString",
      "offset": [
        775,
        850
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6326": {
      "fn": "Strings.toString",
      "offset": [
        807,
        815
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 80
    },
    "6327": {
      "fn": "Strings.toString",
      "offset": [
        807,
        815
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x18BF"
    },
    "6330": {
      "fn": "Strings.toString",
      "offset": [
        807,
        815
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6331": {
      "fn": "Strings.toString",
      "offset": [
        807,
        815
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x249C"
    },
    "6334": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        807,
        815
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6335": {
      "fn": "Strings.toString",
      "offset": [
        807,
        815
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6336": {
      "fn": "Strings.toString",
      "offset": [
        807,
        815
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6337": {
      "op": "POP"
    },
    "6338": {
      "fn": "Strings.toString",
      "offset": [
        829,
        839
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 81,
      "value": "0x18CE"
    },
    "6341": {
      "fn": "Strings.toString",
      "offset": [
        829,
        839
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6342": {
      "op": "POP"
    },
    "6343": {
      "fn": "Strings.toString",
      "offset": [
        837,
        839
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "6345": {
      "fn": "Strings.toString",
      "offset": [
        829,
        839
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6346": {
      "fn": "Strings.toString",
      "offset": [
        829,
        839
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2997"
    },
    "6349": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        829,
        839
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6350": {
      "fn": "Strings.toString",
      "offset": [
        829,
        839
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6351": {
      "fn": "Strings.toString",
      "offset": [
        829,
        839
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6352": {
      "fn": "Strings.toString",
      "offset": [
        829,
        839
      ],
      "op": "POP",
      "path": "10"
    },
    "6353": {
      "fn": "Strings.toString",
      "offset": [
        775,
        850
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x18AF"
    },
    "6356": {
      "fn": "Strings.toString",
      "offset": [
        775,
        850
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6357": {
      "fn": "Strings.toString",
      "offset": [
        775,
        850
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6358": {
      "fn": "Strings.toString",
      "offset": [
        859,
        878
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6360": {
      "fn": "Strings.toString",
      "offset": [
        891,
        897
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6361": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH8",
      "path": "10",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6370": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6371": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "GT",
      "path": "10"
    },
    "6372": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6373": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x18F0"
    },
    "6376": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6377": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x18F0"
    },
    "6380": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2128"
    },
    "6383": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        881,
        898
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6384": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6385": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6387": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6388": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6389": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6390": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6391": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6392": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6393": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "6395": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "ADD",
      "path": "10"
    },
    "6396": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "6398": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "NOT",
      "path": "10"
    },
    "6399": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "AND",
      "path": "10"
    },
    "6400": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6402": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "ADD",
      "path": "10"
    },
    "6403": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6404": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "ADD",
      "path": "10"
    },
    "6405": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6407": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6408": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6409": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6410": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x191A"
    },
    "6413": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6414": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6416": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6417": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "ADD",
      "path": "10"
    },
    "6418": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6419": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6420": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "6421": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6422": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "CALLDATACOPY",
      "path": "10"
    },
    "6423": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "ADD",
      "path": "10"
    },
    "6424": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6425": {
      "op": "POP"
    },
    "6426": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6427": {
      "fn": "Strings.toString",
      "offset": [
        881,
        898
      ],
      "op": "POP",
      "path": "10"
    },
    "6428": {
      "fn": "Strings.toString",
      "offset": [
        859,
        898
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6429": {
      "fn": "Strings.toString",
      "offset": [
        859,
        898
      ],
      "op": "POP",
      "path": "10"
    },
    "6430": {
      "fn": "Strings.toString",
      "offset": [
        908,
        1058
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6431": {
      "fn": "Strings.toString",
      "offset": [
        915,
        925
      ],
      "op": "DUP5",
      "path": "10"
    },
    "6432": {
      "fn": "Strings.toString",
      "offset": [
        915,
        925
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6433": {
      "fn": "Strings.toString",
      "offset": [
        908,
        1058
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1460"
    },
    "6436": {
      "fn": "Strings.toString",
      "offset": [
        908,
        1058
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6437": {
      "fn": "Strings.toString",
      "offset": [
        941,
        952
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 82,
      "value": "0x192F"
    },
    "6440": {
      "fn": "Strings.toString",
      "offset": [
        951,
        952
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "6442": {
      "fn": "Strings.toString",
      "offset": [
        941,
        952
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6443": {
      "fn": "Strings.toString",
      "offset": [
        941,
        952
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2900"
    },
    "6446": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        941,
        952
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6447": {
      "fn": "Strings.toString",
      "offset": [
        941,
        952
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6448": {
      "fn": "Strings.toString",
      "offset": [
        941,
        952
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6449": {
      "op": "POP"
    },
    "6450": {
      "fn": "Strings.toString",
      "offset": [
        1009,
        1019
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 83,
      "value": "0x193C"
    },
    "6453": {
      "fn": "Strings.toString",
      "offset": [
        1017,
        1019
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "6455": {
      "fn": "Strings.toString",
      "offset": [
        1009,
        1014
      ],
      "op": "DUP7",
      "path": "10"
    },
    "6456": {
      "fn": "Strings.toString",
      "offset": [
        1009,
        1019
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29AB"
    },
    "6459": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        1009,
        1019
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6460": {
      "fn": "Strings.toString",
      "offset": [
        1009,
        1019
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6461": {
      "fn": "Strings.toString",
      "offset": [
        996,
        1020
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1947"
    },
    "6464": {
      "fn": "Strings.toString",
      "offset": [
        996,
        1020
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6465": {
      "fn": "Strings.toString",
      "offset": [
        996,
        998
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x30"
    },
    "6467": {
      "fn": "Strings.toString",
      "offset": [
        996,
        1020
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2917"
    },
    "6470": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        996,
        1020
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6471": {
      "fn": "Strings.toString",
      "offset": [
        996,
        1020
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6472": {
      "fn": "Strings.toString",
      "offset": [
        983,
        1022
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xF8"
    },
    "6474": {
      "fn": "Strings.toString",
      "offset": [
        983,
        1022
      ],
      "op": "SHL",
      "path": "10"
    },
    "6475": {
      "fn": "Strings.toString",
      "offset": [
        966,
        972
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6476": {
      "fn": "Strings.toString",
      "offset": [
        973,
        979
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6477": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6478": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6479": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6480": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "LT",
      "path": "10"
    },
    "6481": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x195C"
    },
    "6484": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6485": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x195C"
    },
    "6488": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2470"
    },
    "6491": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        966,
        980
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6492": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6493": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6495": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "ADD",
      "path": "10"
    },
    "6496": {
      "fn": "Strings.toString",
      "offset": [
        966,
        980
      ],
      "op": "ADD",
      "path": "10"
    },
    "6497": {
      "fn": "Strings.toString",
      "offset": [
        966,
        1022
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6502": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "6504": {
      "op": "SHL"
    },
    "6505": {
      "op": "SUB"
    },
    "6506": {
      "fn": "Strings.toString",
      "offset": [
        966,
        1022
      ],
      "op": "NOT",
      "path": "10"
    },
    "6507": {
      "fn": "Strings.toString",
      "offset": [
        966,
        1022
      ],
      "op": "AND",
      "path": "10"
    },
    "6508": {
      "fn": "Strings.toString",
      "offset": [
        966,
        1022
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6509": {
      "fn": "Strings.toString",
      "offset": [
        966,
        1022
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6510": {
      "fn": "Strings.toString",
      "offset": [
        966,
        1022
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6512": {
      "fn": "Strings.toString",
      "offset": [
        966,
        1022
      ],
      "op": "BYTE",
      "path": "10"
    },
    "6513": {
      "fn": "Strings.toString",
      "offset": [
        966,
        1022
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6514": {
      "fn": "Strings.toString",
      "offset": [
        966,
        1022
      ],
      "op": "MSTORE8",
      "path": "10"
    },
    "6515": {
      "op": "POP"
    },
    "6516": {
      "fn": "Strings.toString",
      "offset": [
        1036,
        1047
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 84,
      "value": "0x197E"
    },
    "6519": {
      "fn": "Strings.toString",
      "offset": [
        1045,
        1047
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "6521": {
      "fn": "Strings.toString",
      "offset": [
        1036,
        1047
      ],
      "op": "DUP7",
      "path": "10"
    },
    "6522": {
      "fn": "Strings.toString",
      "offset": [
        1036,
        1047
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2997"
    },
    "6525": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        1036,
        1047
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6526": {
      "fn": "Strings.toString",
      "offset": [
        1036,
        1047
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6527": {
      "fn": "Strings.toString",
      "offset": [
        1036,
        1047
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "6528": {
      "fn": "Strings.toString",
      "offset": [
        1036,
        1047
      ],
      "op": "POP",
      "path": "10"
    },
    "6529": {
      "fn": "Strings.toString",
      "offset": [
        908,
        1058
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x191E"
    },
    "6532": {
      "fn": "Strings.toString",
      "offset": [
        908,
        1058
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6533": {
      "fn": "Base64.encode",
      "offset": [
        505,
        3531
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6534": {
      "fn": "Base64.encode",
      "offset": [
        563,
        576
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "6536": {
      "fn": "Base64.encode",
      "offset": [
        795,
        799
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6537": {
      "fn": "Base64.encode",
      "offset": [
        795,
        806
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6538": {
      "fn": "Base64.encode",
      "offset": [
        810,
        811
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6540": {
      "branch": 120,
      "fn": "Base64.encode",
      "offset": [
        795,
        811
      ],
      "op": "SUB",
      "path": "8"
    },
    "6541": {
      "fn": "Base64.encode",
      "offset": [
        791,
        822
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x19A4"
    },
    "6544": {
      "branch": 120,
      "fn": "Base64.encode",
      "offset": [
        791,
        822
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6545": {
      "op": "POP"
    },
    "6546": {
      "op": "POP"
    },
    "6547": {
      "fn": "Base64.encode",
      "offset": [
        813,
        822
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 85,
      "value": "0x40"
    },
    "6549": {
      "fn": "Base64.encode",
      "offset": [
        813,
        822
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6550": {
      "fn": "Base64.encode",
      "offset": [
        813,
        822
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6551": {
      "fn": "Base64.encode",
      "offset": [
        813,
        822
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "6553": {
      "fn": "Base64.encode",
      "offset": [
        813,
        822
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6554": {
      "fn": "Base64.encode",
      "offset": [
        813,
        822
      ],
      "op": "ADD",
      "path": "8"
    },
    "6555": {
      "fn": "Base64.encode",
      "offset": [
        813,
        822
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6556": {
      "fn": "Base64.encode",
      "offset": [
        813,
        822
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6557": {
      "fn": "Base64.encode",
      "offset": [
        813,
        822
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6558": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6560": {
      "fn": "Base64.encode",
      "offset": [
        813,
        822
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6561": {
      "fn": "Base64.encode",
      "offset": [
        813,
        822
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6562": {
      "fn": "Base64.encode",
      "offset": [
        813,
        822
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6563": {
      "fn": "Base64.encode",
      "jump": "o",
      "offset": [
        505,
        3531
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6564": {
      "fn": "Base64.encode",
      "offset": [
        791,
        822
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6565": {
      "fn": "Base64.encode",
      "offset": [
        872,
        891
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6567": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6569": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6570": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6571": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "6573": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "ADD",
      "path": "8"
    },
    "6574": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6576": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6577": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6578": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6580": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6581": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6582": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "6584": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "ADD",
      "path": "8"
    },
    "6585": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2A4F"
    },
    "6588": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6590": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6591": {
      "fn": "Base64.encode",
      "offset": [
        894,
        900
      ],
      "op": "CODECOPY",
      "path": "8"
    },
    "6592": {
      "fn": "Base64.encode",
      "offset": [
        872,
        900
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6593": {
      "fn": "Base64.encode",
      "offset": [
        872,
        900
      ],
      "op": "POP",
      "path": "8"
    },
    "6594": {
      "fn": "Base64.encode",
      "offset": [
        1303,
        1323
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "6596": {
      "fn": "Base64.encode",
      "offset": [
        1362,
        1363
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "6598": {
      "fn": "Base64.encode",
      "offset": [
        1343,
        1347
      ],
      "op": "DUP5",
      "path": "8"
    },
    "6599": {
      "fn": "Base64.encode",
      "offset": [
        1343,
        1354
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6600": {
      "fn": "Base64.encode",
      "offset": [
        1357,
        1358
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "6602": {
      "fn": "Base64.encode",
      "offset": [
        1343,
        1358
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x19D3"
    },
    "6605": {
      "fn": "Base64.encode",
      "offset": [
        1343,
        1358
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6606": {
      "fn": "Base64.encode",
      "offset": [
        1343,
        1358
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6607": {
      "fn": "Base64.encode",
      "offset": [
        1343,
        1358
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2917"
    },
    "6610": {
      "fn": "Base64.encode",
      "jump": "i",
      "offset": [
        1343,
        1358
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6611": {
      "fn": "Base64.encode",
      "offset": [
        1343,
        1358
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6612": {
      "fn": "Base64.encode",
      "offset": [
        1342,
        1363
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x19DD"
    },
    "6615": {
      "fn": "Base64.encode",
      "offset": [
        1342,
        1363
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6616": {
      "fn": "Base64.encode",
      "offset": [
        1342,
        1363
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6617": {
      "fn": "Base64.encode",
      "offset": [
        1342,
        1363
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2997"
    },
    "6620": {
      "fn": "Base64.encode",
      "jump": "i",
      "offset": [
        1342,
        1363
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6621": {
      "fn": "Base64.encode",
      "offset": [
        1342,
        1363
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6622": {
      "fn": "Base64.encode",
      "offset": [
        1337,
        1364
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x19E8"
    },
    "6625": {
      "fn": "Base64.encode",
      "offset": [
        1337,
        1364
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6626": {
      "fn": "Base64.encode",
      "offset": [
        1337,
        1338
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "6628": {
      "fn": "Base64.encode",
      "offset": [
        1337,
        1364
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x29BF"
    },
    "6631": {
      "fn": "Base64.encode",
      "jump": "i",
      "offset": [
        1337,
        1364
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6632": {
      "fn": "Base64.encode",
      "offset": [
        1337,
        1364
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6633": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "PUSH8",
      "path": "8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6642": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6643": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "GT",
      "path": "8"
    },
    "6644": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "6645": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1A00"
    },
    "6648": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6649": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1A00"
    },
    "6652": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x2128"
    },
    "6655": {
      "fn": "Base64.encode",
      "jump": "i",
      "offset": [
        1326,
        1365
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6656": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6657": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6659": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6660": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6661": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6662": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6663": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6664": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6665": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "6667": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "ADD",
      "path": "8"
    },
    "6668": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "6670": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "NOT",
      "path": "8"
    },
    "6671": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "AND",
      "path": "8"
    },
    "6672": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "6674": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "ADD",
      "path": "8"
    },
    "6675": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6676": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "ADD",
      "path": "8"
    },
    "6677": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "6679": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "6680": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6681": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "6682": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1A2A"
    },
    "6685": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6686": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "6688": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6689": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "ADD",
      "path": "8"
    },
    "6690": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6691": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6692": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "6693": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "DUP4",
      "path": "8"
    },
    "6694": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "CALLDATACOPY",
      "path": "8"
    },
    "6695": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "ADD",
      "path": "8"
    },
    "6696": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6697": {
      "op": "POP"
    },
    "6698": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6699": {
      "fn": "Base64.encode",
      "offset": [
        1326,
        1365
      ],
      "op": "POP",
      "path": "8"
    },
    "6700": {
      "fn": "Base64.encode",
      "offset": [
        1303,
        1365
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "6701": {
      "fn": "Base64.encode",
      "offset": [
        1303,
        1365
      ],
      "op": "POP",
      "path": "8"
    },
    "6702": {
      "fn": "Base64.encode",
      "offset": [
        1540,
        1541
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "6704": {
      "fn": "Base64.encode",
      "offset": [
        1533,
        1538
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6705": {
      "fn": "Base64.encode",
      "offset": [
        1529,
        1542
      ],
      "op": "ADD",
      "path": "8"
    },
    "6706": {
      "fn": "Base64.encode",
      "offset": [
        1641,
        1643
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "6708": {
      "fn": "Base64.encode",
      "offset": [
        1633,
        1639
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6709": {
      "fn": "Base64.encode",
      "offset": [
        1629,
        1644
      ],
      "op": "ADD",
      "path": "8"
    },
    "6710": {
      "fn": "Base64.encode",
      "offset": [
        1748,
        1752
      ],
      "op": "DUP6",
      "path": "8"
    },
    "6711": {
      "fn": "Base64.encode",
      "offset": [
        1799,
        1803
      ],
      "op": "DUP7",
      "path": "8"
    },
    "6712": {
      "fn": "Base64.encode",
      "offset": [
        1793,
        1804
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6713": {
      "fn": "Base64.encode",
      "offset": [
        1787,
        1791
      ],
      "op": "DUP8",
      "path": "8"
    },
    "6714": {
      "fn": "Base64.encode",
      "offset": [
        1783,
        1805
      ],
      "op": "ADD",
      "path": "8"
    },
    "6715": {
      "fn": "Base64.encode",
      "offset": [
        1711,
        3114
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6716": {
      "fn": "Base64.encode",
      "offset": [
        1832,
        1838
      ],
      "op": "DUP1",
      "path": "8"
    },
    "6717": {
      "fn": "Base64.encode",
      "offset": [
        1823,
        1830
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6718": {
      "fn": "Base64.encode",
      "offset": [
        1820,
        1839
      ],
      "op": "LT",
      "path": "8"
    },
    "6719": {
      "fn": "Base64.encode",
      "offset": [
        1711,
        3114
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "6720": {
      "fn": "Base64.encode",
      "offset": [
        1711,
        3114
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1A96"
    },
    "6723": {
      "fn": "Base64.encode",
      "offset": [
        1711,
        3114
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6724": {
      "fn": "Base64.encode",
      "offset": [
        1934,
        1935
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "6726": {
      "fn": "Base64.encode",
      "offset": [
        1925,
        1932
      ],
      "op": "DUP3",
      "path": "8"
    },
    "6727": {
      "fn": "Base64.encode",
      "offset": [
        1921,
        1936
      ],
      "op": "ADD",
      "path": "8"
    },
    "6728": {
      "fn": "Base64.encode",
      "offset": [
        1910,
        1936
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "6729": {
      "fn": "Base64.encode",
      "offset": [
        1910,
        1936
      ],
      "op": "POP",
      "path": "8"
    },
    "6730": {
      "fn": "Base64.encode",
      "offset": [
        1972,
        1979
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6731": {
      "fn": "Base64.encode",
      "offset": [
        1966,
        1980
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6732": {
      "fn": "Base64.encode",
      "offset": [
        2615,
        2619
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3F"
    },
    "6734": {
      "fn": "Base64.encode",
      "offset": [
        2607,
        2612
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6735": {
      "fn": "Base64.encode",
      "offset": [
        2603,
        2605
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x12"
    },
    "6737": {
      "fn": "Base64.encode",
      "offset": [
        2599,
        2613
      ],
      "op": "SHR",
      "path": "8"
    },
    "6738": {
      "fn": "Base64.encode",
      "offset": [
        2595,
        2620
      ],
      "op": "AND",
      "path": "8"
    },
    "6739": {
      "fn": "Base64.encode",
      "offset": [
        2585,
        2593
      ],
      "op": "DUP6",
      "path": "8"
    },
    "6740": {
      "fn": "Base64.encode",
      "offset": [
        2581,
        2621
      ],
      "op": "ADD",
      "path": "8"
    },
    "6741": {
      "fn": "Base64.encode",
      "offset": [
        2575,
        2622
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6742": {
      "fn": "Base64.encode",
      "offset": [
        2564,
        2573
      ],
      "op": "DUP5",
      "path": "8"
    },
    "6743": {
      "fn": "Base64.encode",
      "offset": [
        2556,
        2623
      ],
      "op": "MSTORE8",
      "path": "8"
    },
    "6744": {
      "fn": "Base64.encode",
      "offset": [
        2668,
        2669
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "6746": {
      "fn": "Base64.encode",
      "offset": [
        2657,
        2666
      ],
      "op": "DUP5",
      "path": "8"
    },
    "6747": {
      "fn": "Base64.encode",
      "offset": [
        2653,
        2670
      ],
      "op": "ADD",
      "path": "8"
    },
    "6748": {
      "fn": "Base64.encode",
      "offset": [
        2640,
        2670
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "6749": {
      "fn": "Base64.encode",
      "offset": [
        2640,
        2670
      ],
      "op": "POP",
      "path": "8"
    },
    "6750": {
      "fn": "Base64.encode",
      "offset": [
        2758,
        2762
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3F"
    },
    "6752": {
      "fn": "Base64.encode",
      "offset": [
        2750,
        2755
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6753": {
      "fn": "Base64.encode",
      "offset": [
        2746,
        2748
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xC"
    },
    "6755": {
      "fn": "Base64.encode",
      "offset": [
        2742,
        2756
      ],
      "op": "SHR",
      "path": "8"
    },
    "6756": {
      "fn": "Base64.encode",
      "offset": [
        2738,
        2763
      ],
      "op": "AND",
      "path": "8"
    },
    "6757": {
      "fn": "Base64.encode",
      "offset": [
        2728,
        2736
      ],
      "op": "DUP6",
      "path": "8"
    },
    "6758": {
      "fn": "Base64.encode",
      "offset": [
        2724,
        2764
      ],
      "op": "ADD",
      "path": "8"
    },
    "6759": {
      "fn": "Base64.encode",
      "offset": [
        2718,
        2765
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6760": {
      "fn": "Base64.encode",
      "offset": [
        2707,
        2716
      ],
      "op": "DUP5",
      "path": "8"
    },
    "6761": {
      "fn": "Base64.encode",
      "offset": [
        2699,
        2766
      ],
      "op": "MSTORE8",
      "path": "8"
    },
    "6762": {
      "fn": "Base64.encode",
      "offset": [
        2811,
        2812
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "6764": {
      "fn": "Base64.encode",
      "offset": [
        2800,
        2809
      ],
      "op": "DUP5",
      "path": "8"
    },
    "6765": {
      "fn": "Base64.encode",
      "offset": [
        2796,
        2813
      ],
      "op": "ADD",
      "path": "8"
    },
    "6766": {
      "fn": "Base64.encode",
      "offset": [
        2783,
        2813
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "6767": {
      "fn": "Base64.encode",
      "offset": [
        2783,
        2813
      ],
      "op": "POP",
      "path": "8"
    },
    "6768": {
      "fn": "Base64.encode",
      "offset": [
        2900,
        2904
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3F"
    },
    "6770": {
      "fn": "Base64.encode",
      "offset": [
        2892,
        2897
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6771": {
      "fn": "Base64.encode",
      "offset": [
        2889,
        2890
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x6"
    },
    "6773": {
      "fn": "Base64.encode",
      "offset": [
        2885,
        2898
      ],
      "op": "SHR",
      "path": "8"
    },
    "6774": {
      "fn": "Base64.encode",
      "offset": [
        2881,
        2905
      ],
      "op": "AND",
      "path": "8"
    },
    "6775": {
      "fn": "Base64.encode",
      "offset": [
        2871,
        2879
      ],
      "op": "DUP6",
      "path": "8"
    },
    "6776": {
      "fn": "Base64.encode",
      "offset": [
        2867,
        2906
      ],
      "op": "ADD",
      "path": "8"
    },
    "6777": {
      "fn": "Base64.encode",
      "offset": [
        2861,
        2907
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6778": {
      "fn": "Base64.encode",
      "offset": [
        2850,
        2859
      ],
      "op": "DUP5",
      "path": "8"
    },
    "6779": {
      "fn": "Base64.encode",
      "offset": [
        2842,
        2908
      ],
      "op": "MSTORE8",
      "path": "8"
    },
    "6780": {
      "fn": "Base64.encode",
      "offset": [
        2953,
        2954
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "6782": {
      "fn": "Base64.encode",
      "offset": [
        2942,
        2951
      ],
      "op": "DUP5",
      "path": "8"
    },
    "6783": {
      "fn": "Base64.encode",
      "offset": [
        2938,
        2955
      ],
      "op": "ADD",
      "path": "8"
    },
    "6784": {
      "fn": "Base64.encode",
      "offset": [
        2925,
        2955
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "6785": {
      "fn": "Base64.encode",
      "offset": [
        2925,
        2955
      ],
      "op": "POP",
      "path": "8"
    },
    "6786": {
      "fn": "Base64.encode",
      "offset": [
        3034,
        3038
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3F"
    },
    "6788": {
      "fn": "Base64.encode",
      "offset": [
        3027,
        3032
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6789": {
      "fn": "Base64.encode",
      "offset": [
        3023,
        3039
      ],
      "op": "AND",
      "path": "8"
    },
    "6790": {
      "fn": "Base64.encode",
      "offset": [
        3013,
        3021
      ],
      "op": "DUP6",
      "path": "8"
    },
    "6791": {
      "fn": "Base64.encode",
      "offset": [
        3009,
        3040
      ],
      "op": "ADD",
      "path": "8"
    },
    "6792": {
      "fn": "Base64.encode",
      "offset": [
        3003,
        3041
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6793": {
      "fn": "Base64.encode",
      "offset": [
        2992,
        3001
      ],
      "op": "DUP5",
      "path": "8"
    },
    "6794": {
      "fn": "Base64.encode",
      "offset": [
        2984,
        3042
      ],
      "op": "MSTORE8",
      "path": "8"
    },
    "6795": {
      "fn": "Base64.encode",
      "offset": [
        2984,
        3042
      ],
      "op": "POP",
      "path": "8"
    },
    "6796": {
      "fn": "Base64.encode",
      "offset": [
        3087,
        3088
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "6798": {
      "fn": "Base64.encode",
      "offset": [
        3076,
        3085
      ],
      "op": "DUP4",
      "path": "8"
    },
    "6799": {
      "fn": "Base64.encode",
      "offset": [
        3072,
        3089
      ],
      "op": "ADD",
      "path": "8"
    },
    "6800": {
      "fn": "Base64.encode",
      "offset": [
        3059,
        3089
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "6801": {
      "fn": "Base64.encode",
      "offset": [
        3059,
        3089
      ],
      "op": "POP",
      "path": "8"
    },
    "6802": {
      "fn": "Base64.encode",
      "offset": [
        1711,
        3114
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1A3B"
    },
    "6805": {
      "fn": "Base64.encode",
      "offset": [
        1711,
        3114
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6806": {
      "fn": "Base64.encode",
      "offset": [
        1711,
        3114
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6807": {
      "fn": "Base64.encode",
      "offset": [
        1715,
        1819
      ],
      "op": "POP",
      "path": "8"
    },
    "6808": {
      "fn": "Base64.encode",
      "offset": [
        1715,
        1819
      ],
      "op": "POP",
      "path": "8"
    },
    "6809": {
      "fn": "Base64.encode",
      "offset": [
        3272,
        3273
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3"
    },
    "6811": {
      "fn": "Base64.encode",
      "offset": [
        3265,
        3269
      ],
      "op": "DUP7",
      "path": "8"
    },
    "6812": {
      "fn": "Base64.encode",
      "offset": [
        3259,
        3270
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "6813": {
      "fn": "Base64.encode",
      "offset": [
        3255,
        3274
      ],
      "op": "MOD",
      "path": "8"
    },
    "6814": {
      "fn": "Base64.encode",
      "offset": [
        3292,
        3293
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "6816": {
      "fn": "Base64.encode",
      "offset": [
        3287,
        3407
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6817": {
      "fn": "Base64.encode",
      "offset": [
        3287,
        3407
      ],
      "op": "EQ",
      "path": "8"
    },
    "6818": {
      "fn": "Base64.encode",
      "offset": [
        3287,
        3407
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1AB2"
    },
    "6821": {
      "fn": "Base64.encode",
      "offset": [
        3287,
        3407
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6822": {
      "fn": "Base64.encode",
      "offset": [
        3425,
        3426
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "6824": {
      "fn": "Base64.encode",
      "offset": [
        3420,
        3491
      ],
      "op": "DUP2",
      "path": "8"
    },
    "6825": {
      "fn": "Base64.encode",
      "offset": [
        3420,
        3491
      ],
      "op": "EQ",
      "path": "8"
    },
    "6826": {
      "fn": "Base64.encode",
      "offset": [
        3420,
        3491
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1AC5"
    },
    "6829": {
      "fn": "Base64.encode",
      "offset": [
        3420,
        3491
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "6830": {
      "fn": "Base64.encode",
      "offset": [
        3248,
        3491
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1ACD"
    },
    "6833": {
      "fn": "Base64.encode",
      "offset": [
        3248,
        3491
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6834": {
      "fn": "Base64.encode",
      "offset": [
        3287,
        3407
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6835": {
      "fn": "Base64.encode",
      "offset": [
        3339,
        3343
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3D"
    },
    "6837": {
      "fn": "Base64.encode",
      "offset": [
        3335,
        3336
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "6839": {
      "fn": "Base64.encode",
      "offset": [
        3324,
        3333
      ],
      "op": "DUP4",
      "path": "8"
    },
    "6840": {
      "fn": "Base64.encode",
      "offset": [
        3320,
        3337
      ],
      "op": "SUB",
      "path": "8"
    },
    "6841": {
      "fn": "Base64.encode",
      "offset": [
        3312,
        3344
      ],
      "op": "MSTORE8",
      "path": "8"
    },
    "6842": {
      "fn": "Base64.encode",
      "offset": [
        3388,
        3392
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3D"
    },
    "6844": {
      "fn": "Base64.encode",
      "offset": [
        3384,
        3385
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "6846": {
      "fn": "Base64.encode",
      "offset": [
        3373,
        3382
      ],
      "op": "DUP4",
      "path": "8"
    },
    "6847": {
      "fn": "Base64.encode",
      "offset": [
        3369,
        3386
      ],
      "op": "SUB",
      "path": "8"
    },
    "6848": {
      "fn": "Base64.encode",
      "offset": [
        3361,
        3393
      ],
      "op": "MSTORE8",
      "path": "8"
    },
    "6849": {
      "fn": "Base64.encode",
      "offset": [
        3287,
        3407
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1ACD"
    },
    "6852": {
      "fn": "Base64.encode",
      "offset": [
        3287,
        3407
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6853": {
      "fn": "Base64.encode",
      "offset": [
        3420,
        3491
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6854": {
      "fn": "Base64.encode",
      "offset": [
        3472,
        3476
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x3D"
    },
    "6856": {
      "fn": "Base64.encode",
      "offset": [
        3468,
        3469
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "6858": {
      "fn": "Base64.encode",
      "offset": [
        3457,
        3466
      ],
      "op": "DUP4",
      "path": "8"
    },
    "6859": {
      "fn": "Base64.encode",
      "offset": [
        3453,
        3470
      ],
      "op": "SUB",
      "path": "8"
    },
    "6860": {
      "fn": "Base64.encode",
      "offset": [
        3445,
        3477
      ],
      "op": "MSTORE8",
      "path": "8"
    },
    "6861": {
      "fn": "Base64.encode",
      "offset": [
        3248,
        3491
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6862": {
      "op": "POP"
    },
    "6863": {
      "fn": "Base64.encode",
      "offset": [
        3518,
        3524
      ],
      "op": "SWAP2",
      "path": "8",
      "statement": 86
    },
    "6864": {
      "fn": "Base64.encode",
      "offset": [
        3518,
        3524
      ],
      "op": "SWAP6",
      "path": "8"
    },
    "6865": {
      "fn": "Base64.encode",
      "offset": [
        505,
        3531
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "6866": {
      "op": "POP"
    },
    "6867": {
      "op": "POP"
    },
    "6868": {
      "op": "POP"
    },
    "6869": {
      "op": "POP"
    },
    "6870": {
      "op": "POP"
    },
    "6871": {
      "fn": "Base64.encode",
      "jump": "o",
      "offset": [
        505,
        3531
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6872": {
      "fn": "ERC721._mint",
      "offset": [
        8868,
        9295
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6879": {
      "op": "SHL"
    },
    "6880": {
      "op": "SUB"
    },
    "6881": {
      "fn": "ERC721._mint",
      "offset": [
        8947,
        8963
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 87
    },
    "6882": {
      "branch": 131,
      "fn": "ERC721._mint",
      "offset": [
        8947,
        8963
      ],
      "op": "AND",
      "path": "1"
    },
    "6883": {
      "fn": "ERC721._mint",
      "offset": [
        8939,
        9000
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B2E"
    },
    "6886": {
      "branch": 131,
      "fn": "ERC721._mint",
      "offset": [
        8939,
        9000
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6887": {
      "fn": "ERC721._mint",
      "offset": [
        8939,
        9000
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6889": {
      "fn": "ERC721._mint",
      "offset": [
        8939,
        9000
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6890": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6894": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6896": {
      "op": "SHL"
    },
    "6897": {
      "fn": "ERC721._mint",
      "offset": [
        8939,
        9000
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6898": {
      "fn": "ERC721._mint",
      "offset": [
        8939,
        9000
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6899": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6901": {
      "fn": "ERC721._mint",
      "offset": [
        8939,
        9000
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6903": {
      "fn": "ERC721._mint",
      "offset": [
        8939,
        9000
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6904": {
      "fn": "ERC721._mint",
      "offset": [
        8939,
        9000
      ],
      "op": "ADD",
      "path": "1"
    },
    "6905": {
      "op": "DUP2"
    },
    "6906": {
      "op": "SWAP1"
    },
    "6907": {
      "op": "MSTORE"
    },
    "6908": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6910": {
      "op": "DUP3"
    },
    "6911": {
      "op": "ADD"
    },
    "6912": {
      "op": "MSTORE"
    },
    "6913": {
      "op": "PUSH32",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "6946": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6948": {
      "op": "DUP3"
    },
    "6949": {
      "op": "ADD"
    },
    "6950": {
      "op": "MSTORE"
    },
    "6951": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6953": {
      "op": "ADD"
    },
    "6954": {
      "fn": "ERC721._mint",
      "offset": [
        8939,
        9000
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x58C"
    },
    "6957": {
      "op": "JUMP"
    },
    "6958": {
      "fn": "ERC721._mint",
      "offset": [
        8939,
        9000
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6959": {
      "fn": "ERC721._exists",
      "offset": [
        7099,
        7103
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6961": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6962": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6963": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6964": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7129
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "6966": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6968": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6969": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6971": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6972": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6973": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6978": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6980": {
      "op": "SHL"
    },
    "6981": {
      "op": "SUB"
    },
    "6982": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7138
      ],
      "op": "AND",
      "path": "1"
    },
    "6983": {
      "fn": "ERC721._exists",
      "offset": [
        7122,
        7152
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6984": {
      "fn": "ERC721._mint",
      "offset": [
        9010,
        9068
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 88,
      "value": "0x1B93"
    },
    "6987": {
      "fn": "ERC721._mint",
      "offset": [
        9010,
        9068
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6988": {
      "fn": "ERC721._mint",
      "offset": [
        9010,
        9068
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6990": {
      "fn": "ERC721._mint",
      "offset": [
        9010,
        9068
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6991": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6995": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6997": {
      "op": "SHL"
    },
    "6998": {
      "fn": "ERC721._mint",
      "offset": [
        9010,
        9068
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6999": {
      "fn": "ERC721._mint",
      "offset": [
        9010,
        9068
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7000": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7002": {
      "fn": "ERC721._mint",
      "offset": [
        9010,
        9068
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7004": {
      "fn": "ERC721._mint",
      "offset": [
        9010,
        9068
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7005": {
      "fn": "ERC721._mint",
      "offset": [
        9010,
        9068
      ],
      "op": "ADD",
      "path": "1"
    },
    "7006": {
      "op": "MSTORE"
    },
    "7007": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "7009": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7011": {
      "op": "DUP3"
    },
    "7012": {
      "op": "ADD"
    },
    "7013": {
      "op": "MSTORE"
    },
    "7014": {
      "op": "PUSH32",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "7047": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7049": {
      "op": "DUP3"
    },
    "7050": {
      "op": "ADD"
    },
    "7051": {
      "op": "MSTORE"
    },
    "7052": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7054": {
      "op": "ADD"
    },
    "7055": {
      "fn": "ERC721._mint",
      "offset": [
        9010,
        9068
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x58C"
    },
    "7058": {
      "op": "JUMP"
    },
    "7059": {
      "fn": "ERC721._mint",
      "offset": [
        9010,
        9068
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7060": {
      "fn": "ERC721._mint",
      "offset": [
        9079,
        9124
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 89,
      "value": "0x1B9F"
    },
    "7063": {
      "fn": "ERC721._mint",
      "offset": [
        9108,
        9109
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7065": {
      "fn": "ERC721._mint",
      "offset": [
        9112,
        9114
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7066": {
      "fn": "ERC721._mint",
      "offset": [
        9116,
        9123
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7067": {
      "fn": "ERC721._mint",
      "offset": [
        9079,
        9099
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C26"
    },
    "7070": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9079,
        9124
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7071": {
      "fn": "ERC721._mint",
      "offset": [
        9079,
        9124
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7076": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7078": {
      "op": "SHL"
    },
    "7079": {
      "op": "SUB"
    },
    "7080": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9148
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 90
    },
    "7081": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9148
      ],
      "op": "AND",
      "path": "1"
    },
    "7082": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9148
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7084": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9148
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7085": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9148
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7086": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9148
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7087": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9144
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "7089": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9148
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7091": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9148
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7092": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9148
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7094": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9148
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7095": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9148
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7096": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9153
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7097": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9153
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7098": {
      "fn": "ERC721._mint",
      "offset": [
        9152,
        9153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "7100": {
      "fn": "ERC721._mint",
      "offset": [
        9152,
        9153
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7101": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9148
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7102": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9153
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BC8"
    },
    "7105": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9153
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7106": {
      "fn": "ERC721._mint",
      "offset": [
        9152,
        9153
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7107": {
      "fn": "ERC721._mint",
      "offset": [
        9152,
        9153
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7108": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9153
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2917"
    },
    "7111": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        9135,
        9153
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7112": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9153
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7113": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9153
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7114": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9153
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7115": {
      "fn": "ERC721._mint",
      "offset": [
        9135,
        9153
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "7116": {
      "op": "POP"
    },
    "7117": {
      "op": "POP"
    },
    "7118": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9179
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 91,
      "value": "0x0"
    },
    "7120": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9179
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7121": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9179
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7122": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9179
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7123": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9170
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "7125": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9179
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7127": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9179
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7128": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9179
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7130": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9179
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7131": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9179
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7132": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9179
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "7133": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9184
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7134": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9184
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "7135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7139": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7141": {
      "op": "SHL"
    },
    "7142": {
      "op": "SUB"
    },
    "7143": {
      "op": "NOT"
    },
    "7144": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9184
      ],
      "op": "AND",
      "path": "1"
    },
    "7145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7149": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7151": {
      "op": "SHL"
    },
    "7152": {
      "op": "SUB"
    },
    "7153": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9184
      ],
      "op": "DUP7",
      "path": "1"
    },
    "7154": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9184
      ],
      "op": "AND",
      "path": "1"
    },
    "7155": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9184
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7156": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9184
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7157": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9184
      ],
      "op": "OR",
      "path": "1"
    },
    "7158": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9184
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7159": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9184
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7160": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9184
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "7161": {
      "fn": "ERC721._mint",
      "offset": [
        9200,
        9233
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 92
    },
    "7162": {
      "fn": "ERC721._mint",
      "offset": [
        9200,
        9233
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7163": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9179
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7164": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9179
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7165": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9179
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7166": {
      "fn": "ERC721._mint",
      "offset": [
        9200,
        9233
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "7199": {
      "fn": "ERC721._mint",
      "offset": [
        9200,
        9233
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7200": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9179
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7201": {
      "fn": "ERC721._mint",
      "offset": [
        9163,
        9179
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7202": {
      "fn": "ERC721._mint",
      "offset": [
        9200,
        9233
      ],
      "op": "LOG4",
      "path": "1"
    },
    "7203": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "POP",
      "path": "1"
    },
    "7204": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "POP",
      "path": "1"
    },
    "7205": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7206": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2624,
        3196
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7211": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7213": {
      "op": "SHL"
    },
    "7214": {
      "op": "SUB"
    },
    "7215": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2823,
        2841
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7216": {
      "branch": 135,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2823,
        2841
      ],
      "op": "AND",
      "path": "4"
    },
    "7217": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C81"
    },
    "7220": {
      "branch": 135,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "7221": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2857,
        2897
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 93,
      "value": "0x1C7C"
    },
    "7224": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2889,
        2896
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7225": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4005,
        4015
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 94,
      "value": "0x8"
    },
    "7227": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4005,
        4022
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7228": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4005,
        4022
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "7229": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7231": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7232": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7233": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7234": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        3993
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x9"
    },
    "7236": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "7238": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7239": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7241": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7242": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4002
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "7243": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4022
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7244": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4022
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7245": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3978,
        4022
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "7246": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 95,
      "value": "0x1"
    },
    "7248": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7249": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "ADD",
      "path": "4"
    },
    "7250": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7251": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "7252": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7253": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7254": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7255": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7256": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
    },
    "7289": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "ADD",
      "path": "4"
    },
    "7290": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        4032,
        4056
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "7291": {
      "fn": "ERC721Enumerable._addTokenToAllTokensEnumeration",
      "offset": [
        3902,
        4063
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7292": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2857,
        2897
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7293": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1CA4"
    },
    "7296": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7297": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2819,
        3002
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7298": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2926,
        2928
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7303": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7305": {
      "op": "SHL"
    },
    "7306": {
      "op": "SUB"
    },
    "7307": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2928
      ],
      "op": "AND",
      "path": "4"
    },
    "7308": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2922
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7315": {
      "op": "SHL"
    },
    "7316": {
      "op": "SUB"
    },
    "7317": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2928
      ],
      "op": "AND",
      "path": "4"
    },
    "7318": {
      "branch": 136,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2918,
        2928
      ],
      "op": "EQ",
      "path": "4"
    },
    "7319": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2914,
        3002
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1CA4"
    },
    "7322": {
      "branch": 136,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2914,
        3002
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "7323": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2944,
        2991
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 96,
      "value": "0x1CA4"
    },
    "7326": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2977,
        2981
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7327": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2983,
        2990
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7328": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2944,
        2976
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1DDF"
    },
    "7331": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        2944,
        2991
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7332": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        2944,
        2991
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7337": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7339": {
      "op": "SHL"
    },
    "7340": {
      "op": "SUB"
    },
    "7341": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3015,
        3031
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7342": {
      "branch": 137,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3015,
        3031
      ],
      "op": "AND",
      "path": "4"
    },
    "7343": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3011,
        3190
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1CBB"
    },
    "7346": {
      "branch": 137,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3011,
        3190
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "7347": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3047,
        3092
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 97,
      "value": "0x62D"
    },
    "7350": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3084,
        3091
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7351": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3047,
        3083
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E7C"
    },
    "7354": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3047,
        3092
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7355": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3011,
        3190
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7356": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3119,
        3123
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7361": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7363": {
      "op": "SHL"
    },
    "7364": {
      "op": "SUB"
    },
    "7365": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3123
      ],
      "op": "AND",
      "path": "4"
    },
    "7366": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3115
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7371": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7373": {
      "op": "SHL"
    },
    "7374": {
      "op": "SUB"
    },
    "7375": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3123
      ],
      "op": "AND",
      "path": "4"
    },
    "7376": {
      "branch": 138,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3113,
        3123
      ],
      "op": "EQ",
      "path": "4"
    },
    "7377": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3109,
        3190
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x62D"
    },
    "7380": {
      "branch": 138,
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3109,
        3190
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "7381": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3139,
        3179
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 98,
      "value": "0x62D"
    },
    "7384": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3167,
        3169
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7385": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3171,
        3178
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7386": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "offset": [
        3139,
        3166
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F2B"
    },
    "7389": {
      "fn": "ERC721Enumerable._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        3139,
        3179
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7390": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12342,
        13173
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7391": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12491,
        12495
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7397": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7399": {
      "op": "SHL"
    },
    "7400": {
      "op": "SUB"
    },
    "7401": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12511,
        12524
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7402": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12511,
        12524
      ],
      "op": "AND",
      "path": "1"
    },
    "7403": {
      "op": "EXTCODESIZE"
    },
    "7404": {
      "op": "ISZERO"
    },
    "7405": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12507,
        13167
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DD4"
    },
    "7408": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12507,
        13167
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7409": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7411": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7412": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "7417": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7419": {
      "op": "SHL"
    },
    "7420": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7421": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7426": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7428": {
      "op": "SHL"
    },
    "7429": {
      "op": "SUB"
    },
    "7430": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12582
      ],
      "op": "DUP6",
      "path": "1"
    },
    "7431": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12582
      ],
      "op": "AND",
      "path": "1"
    },
    "7432": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12582
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7433": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12582
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x150B7A02"
    },
    "7438": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12582
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7439": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D22"
    },
    "7442": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7443": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "7444": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "7445": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12597,
        12601
      ],
      "op": "DUP10",
      "path": "1"
    },
    "7446": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12597,
        12601
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7447": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12603,
        12610
      ],
      "op": "DUP9",
      "path": "1"
    },
    "7448": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12603,
        12610
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7449": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12612,
        12616
      ],
      "op": "DUP9",
      "path": "1"
    },
    "7450": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12612,
        12616
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7451": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7453": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "ADD",
      "path": "1"
    },
    "7454": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x29DE"
    },
    "7457": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12546,
        12617
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7458": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7459": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7461": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7463": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7464": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7465": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "DUP4",
      "path": "1"
    },
    "7466": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "SUB",
      "path": "1"
    },
    "7467": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7468": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7470": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "DUP8",
      "path": "1"
    },
    "7471": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "GAS",
      "path": "1"
    },
    "7472": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "CALL",
      "path": "1"
    },
    "7473": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7474": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "POP",
      "path": "1"
    },
    "7475": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "POP",
      "path": "1"
    },
    "7476": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "POP",
      "path": "1"
    },
    "7477": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7478": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7479": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D5D"
    },
    "7482": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7483": {
      "op": "POP"
    },
    "7484": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7486": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7487": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7488": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "7490": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "7491": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7492": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7493": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "ADD",
      "path": "1"
    },
    "7494": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7496": {
      "op": "NOT"
    },
    "7497": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "AND",
      "path": "1"
    },
    "7498": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7499": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "ADD",
      "path": "1"
    },
    "7500": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7501": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "7502": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7503": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D5A"
    },
    "7506": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7507": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7508": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "ADD",
      "path": "1"
    },
    "7509": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7510": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A1B"
    },
    "7513": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12546,
        12617
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7514": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7515": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "7517": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12546,
        12617
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7518": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DBA"
    },
    "7521": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7522": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "7523": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7524": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7525": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "7526": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D8B"
    },
    "7529": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7530": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7532": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7533": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7534": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "POP",
      "path": "1"
    },
    "7535": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "7537": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "NOT",
      "path": "1"
    },
    "7538": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3F"
    },
    "7540": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "7541": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "ADD",
      "path": "1"
    },
    "7542": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "AND",
      "path": "1"
    },
    "7543": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7544": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "ADD",
      "path": "1"
    },
    "7545": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "7547": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7548": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "7549": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "DUP3",
      "path": "1"
    },
    "7550": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7551": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "7552": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7554": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7556": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "DUP5",
      "path": "1"
    },
    "7557": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "ADD",
      "path": "1"
    },
    "7558": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "7559": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D90"
    },
    "7562": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7563": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7564": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "7566": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "7567": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "POP",
      "path": "1"
    },
    "7568": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7569": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "POP",
      "path": "1"
    },
    "7570": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12784,
        12790
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7571": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12784,
        12797
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7572": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12801,
        12802
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "7574": {
      "branch": 132,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12784,
        12802
      ],
      "op": "SUB",
      "path": "1"
    },
    "7575": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12780,
        13101
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DB2"
    },
    "7578": {
      "branch": 132,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12780,
        13101
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "7579": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12826,
        12886
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 99,
      "value": "0x40"
    },
    "7581": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12826,
        12886
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7582": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7586": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7588": {
      "op": "SHL"
    },
    "7589": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12826,
        12886
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7590": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12826,
        12886
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "7591": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12826,
        12886
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7593": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12826,
        12886
      ],
      "op": "ADD",
      "path": "1"
    },
    "7594": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12826,
        12886
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x58C"
    },
    "7597": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12826,
        12886
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7598": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12826,
        12886
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x292F"
    },
    "7601": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12826,
        12886
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7602": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12780,
        13101
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7603": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13053,
        13059
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7604": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13047,
        13060
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "7605": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13038,
        13044
      ],
      "op": "DUP2",
      "path": "1"
    },
    "7606": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13034,
        13036
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "7608": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13030,
        13045
      ],
      "op": "ADD",
      "path": "1"
    },
    "7609": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13023,
        13061
      ],
      "op": "REVERT",
      "path": "1"
    },
    "7610": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12542,
        13115
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7615": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7617": {
      "op": "SHL"
    },
    "7618": {
      "op": "SUB"
    },
    "7619": {
      "op": "NOT"
    },
    "7620": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12667,
        12718
      ],
      "op": "AND",
      "path": "1",
      "statement": 100
    },
    "7621": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "7626": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7628": {
      "op": "SHL"
    },
    "7629": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12667,
        12718
      ],
      "op": "EQ",
      "path": "1"
    },
    "7630": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12667,
        12718
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "7631": {
      "op": "POP"
    },
    "7632": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12660,
        12718
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1460"
    },
    "7635": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12660,
        12718
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7636": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12507,
        13167
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "7637": {
      "op": "POP"
    },
    "7638": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13152,
        13156
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 101,
      "value": "0x1"
    },
    "7640": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12342,
        13173
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "7641": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12342,
        13173
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "7642": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12342,
        13173
      ],
      "op": "POP",
      "path": "1"
    },
    "7643": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12342,
        13173
      ],
      "op": "POP",
      "path": "1"
    },
    "7644": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12342,
        13173
      ],
      "op": "POP",
      "path": "1"
    },
    "7645": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12342,
        13173
      ],
      "op": "POP",
      "path": "1"
    },
    "7646": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        12342,
        13173
      ],
      "op": "JUMP",
      "path": "1"
    },
    "7647": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4680,
        5650
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7648": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4942,
        4964
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7650": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4992,
        4993
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "7652": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4989
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1DEC"
    },
    "7655": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4984,
        4988
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7656": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC18"
    },
    "7659": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        4967,
        4989
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7660": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4989
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7661": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1DF6"
    },
    "7664": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7665": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7666": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2900"
    },
    "7669": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "i",
      "offset": [
        4967,
        4993
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7670": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4967,
        4993
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7671": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5003,
        5021
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7673": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7674": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7675": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7676": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5041
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x7"
    },
    "7678": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "7680": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7681": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7683": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7684": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "7685": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5024,
        5050
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "7686": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4942,
        4993
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7687": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        4942,
        4993
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7688": {
      "op": "POP"
    },
    "7689": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5154,
        5182
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7690": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5154,
        5182
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7691": {
      "branch": 139,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5154,
        5182
      ],
      "op": "EQ",
      "path": "4"
    },
    "7692": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5150,
        5473
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E49"
    },
    "7695": {
      "branch": 139,
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5150,
        5473
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "7696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7700": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7702": {
      "op": "SHL"
    },
    "7703": {
      "op": "SUB"
    },
    "7704": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7705": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "AND",
      "path": "4"
    },
    "7706": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5198,
        5217
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7708": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7709": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7710": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7711": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5232
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "7713": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "7715": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7716": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7717": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7718": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7720": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7721": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7722": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5238
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "7723": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP6",
      "path": "4"
    },
    "7724": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7725": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7726": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7727": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7728": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7729": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7730": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "7731": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5220,
        5254
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "7732": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP5",
      "path": "4",
      "statement": 102
    },
    "7733": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7734": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7735": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7736": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7737": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5299
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "7738": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5313
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7739": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5313
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7740": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5269,
        5313
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "7741": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 103
    },
    "7742": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7743": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5402
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x7"
    },
    "7745": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7746": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7747": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7748": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7749": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5415
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "7750": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5428
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7751": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5428
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7752": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5385,
        5428
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "7753": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5150,
        5473
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7754": {
      "op": "POP"
    },
    "7755": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 104,
      "value": "0x0"
    },
    "7757": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7758": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7759": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7760": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5583
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x7"
    },
    "7762": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "7764": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7765": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7766": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7767": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7769": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7770": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7771": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5566,
        5592
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "7772": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5559,
        5592
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7773": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5559,
        5592
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7774": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5559,
        5592
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "7775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7779": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7781": {
      "op": "SHL"
    },
    "7782": {
      "op": "SUB"
    },
    "7783": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "SWAP1",
      "path": "4",
      "statement": 105
    },
    "7784": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "7785": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "AND",
      "path": "4"
    },
    "7786": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7787": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7788": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5621
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "7790": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7791": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7792": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7793": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7794": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5627
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "7795": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7796": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7797": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7798": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7799": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7800": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7801": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5609,
        5643
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "7802": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "offset": [
        5602,
        5643
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "7803": {
      "fn": "ERC721Enumerable._removeTokenFromOwnerEnumeration",
      "jump": "o",
      "offset": [
        4680,
        5650
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7804": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        5938,
        6999
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7805": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6222
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "7807": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6229
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "7808": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6209
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7810": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6209
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7811": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E8E"
    },
    "7814": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7815": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6232,
        6233
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "7817": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6232,
        6233
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7818": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2900"
    },
    "7821": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6212,
        6233
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7822": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6212,
        6233
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7823": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6243,
        6261
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7825": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7826": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7827": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7828": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6279
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x9"
    },
    "7830": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "7832": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7833": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7835": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7836": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "7837": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "7838": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6642
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "7840": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7841": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "7842": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "7843": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "7844": {
      "op": "POP"
    },
    "7845": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7846": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6264,
        6288
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "7847": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7848": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6187,
        6233
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7849": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7850": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "LT",
      "path": "4"
    },
    "7851": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EB6"
    },
    "7854": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "7855": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EB6"
    },
    "7858": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2470"
    },
    "7861": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6632,
        6658
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7862": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7863": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7864": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7866": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7867": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "7869": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7871": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "7872": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "ADD",
      "path": "4"
    },
    "7873": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6632,
        6658
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "7874": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6610,
        6658
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7875": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6610,
        6658
      ],
      "op": "POP",
      "path": "4"
    },
    "7876": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6694,
        6705
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 106
    },
    "7877": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6679
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "7879": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6680,
        6690
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7880": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7881": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "7882": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7883": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "LT",
      "path": "4"
    },
    "7884": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1ED7"
    },
    "7887": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "7888": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1ED7"
    },
    "7891": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2470"
    },
    "7894": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6669,
        6691
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7895": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7896": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7898": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7899": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7900": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7901": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "7903": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7904": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7905": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "7906": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7907": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7908": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6691
      ],
      "op": "ADD",
      "path": "4"
    },
    "7909": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "7910": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7911": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "7912": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6669,
        6705
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "7913": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 107
    },
    "7914": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7915": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7916": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6788
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x9"
    },
    "7918": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7919": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7920": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7921": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7923": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7924": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7925": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6801
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "7926": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6814
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7927": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6814
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7928": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6773,
        6814
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "7929": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "DUP6",
      "path": "4",
      "statement": 108
    },
    "7930": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7931": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7932": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7933": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6942,
        6966
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "7934": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6935,
        6966
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "7935": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6986
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 109,
      "value": "0x8"
    },
    "7937": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7938": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "7939": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7940": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F0F"
    },
    "7943": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "7944": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F0F"
    },
    "7947": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A38"
    },
    "7950": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "i",
      "offset": [
        6976,
        6992
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7951": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7952": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "7954": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7955": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SUB",
      "path": "4"
    },
    "7956": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7957": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7958": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7959": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7961": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7962": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "7964": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7966": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "7967": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "ADD",
      "path": "4"
    },
    "7968": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7970": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7971": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "7972": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7973": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6976,
        6992
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "7974": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6009,
        6999
      ],
      "op": "POP",
      "path": "4"
    },
    "7975": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6009,
        6999
      ],
      "op": "POP",
      "path": "4"
    },
    "7976": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        6009,
        6999
      ],
      "op": "POP",
      "path": "4"
    },
    "7977": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "offset": [
        5938,
        6999
      ],
      "op": "POP",
      "path": "4"
    },
    "7978": {
      "fn": "ERC721Enumerable._removeTokenFromAllTokensEnumeration",
      "jump": "o",
      "offset": [
        5938,
        6999
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7979": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3490,
        3707
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7980": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3574,
        3588
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7982": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3591,
        3611
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F36"
    },
    "7985": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3608,
        3610
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7986": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3591,
        3607
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC18"
    },
    "7989": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "i",
      "offset": [
        3591,
        3611
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7990": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3591,
        3611
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7995": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7997": {
      "op": "SHL"
    },
    "7998": {
      "op": "SUB"
    },
    "7999": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP1",
      "path": "4",
      "statement": 110
    },
    "8000": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "8001": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "AND",
      "path": "4"
    },
    "8002": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "8004": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8005": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP2",
      "path": "4"
    },
    "8006": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "8007": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3633
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "8009": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "8011": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8012": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP2",
      "path": "4"
    },
    "8013": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "8014": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "8016": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP1",
      "path": "4"
    },
    "8017": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "DUP4",
      "path": "4"
    },
    "8018": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3637
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "8019": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP7",
      "path": "4"
    },
    "8020": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP5",
      "path": "4"
    },
    "8021": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "8022": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP3",
      "path": "4"
    },
    "8023": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "8024": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP1",
      "path": "4"
    },
    "8025": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "DUP4",
      "path": "4"
    },
    "8026": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3645
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "8027": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3655
      ],
      "op": "DUP6",
      "path": "4"
    },
    "8028": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3655
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8029": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3621,
        3655
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "8030": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP4",
      "path": "4",
      "statement": 111
    },
    "8031": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "DUP3",
      "path": "4"
    },
    "8032": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "8033": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3682
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x7"
    },
    "8035": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8036": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "8037": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "8038": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8039": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "8040": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3691
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "8041": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "8042": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8043": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "8044": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "offset": [
        3665,
        3700
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "8045": {
      "op": "POP"
    },
    "8046": {
      "fn": "ERC721Enumerable._addTokenToOwnerEnumeration",
      "jump": "o",
      "offset": [
        3490,
        3707
      ],
      "op": "JUMP",
      "path": "4"
    },
    "8047": {
      "op": "JUMPDEST"
    },
    "8048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8052": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8054": {
      "op": "SHL"
    },
    "8055": {
      "op": "SUB"
    },
    "8056": {
      "op": "NOT"
    },
    "8057": {
      "op": "DUP2"
    },
    "8058": {
      "op": "AND"
    },
    "8059": {
      "op": "DUP2"
    },
    "8060": {
      "op": "EQ"
    },
    "8061": {
      "op": "PUSH2",
      "value": "0xCBC"
    },
    "8064": {
      "op": "JUMPI"
    },
    "8065": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8067": {
      "op": "DUP1"
    },
    "8068": {
      "op": "REVERT"
    },
    "8069": {
      "op": "JUMPDEST"
    },
    "8070": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8072": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8074": {
      "op": "DUP3"
    },
    "8075": {
      "op": "DUP5"
    },
    "8076": {
      "op": "SUB"
    },
    "8077": {
      "op": "SLT"
    },
    "8078": {
      "op": "ISZERO"
    },
    "8079": {
      "op": "PUSH2",
      "value": "0x1F97"
    },
    "8082": {
      "op": "JUMPI"
    },
    "8083": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8085": {
      "op": "DUP1"
    },
    "8086": {
      "op": "REVERT"
    },
    "8087": {
      "op": "JUMPDEST"
    },
    "8088": {
      "op": "DUP2"
    },
    "8089": {
      "op": "CALLDATALOAD"
    },
    "8090": {
      "op": "PUSH2",
      "value": "0xE0B"
    },
    "8093": {
      "op": "DUP2"
    },
    "8094": {
      "op": "PUSH2",
      "value": "0x1F6F"
    },
    "8097": {
      "jump": "i",
      "op": "JUMP"
    },
    "8098": {
      "op": "JUMPDEST"
    },
    "8099": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8101": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8103": {
      "op": "DUP3"
    },
    "8104": {
      "op": "DUP5"
    },
    "8105": {
      "op": "SUB"
    },
    "8106": {
      "op": "SLT"
    },
    "8107": {
      "op": "ISZERO"
    },
    "8108": {
      "op": "PUSH2",
      "value": "0x1FB4"
    },
    "8111": {
      "op": "JUMPI"
    },
    "8112": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8114": {
      "op": "DUP1"
    },
    "8115": {
      "op": "REVERT"
    },
    "8116": {
      "op": "JUMPDEST"
    },
    "8117": {
      "op": "POP"
    },
    "8118": {
      "op": "CALLDATALOAD"
    },
    "8119": {
      "op": "SWAP2"
    },
    "8120": {
      "op": "SWAP1"
    },
    "8121": {
      "op": "POP"
    },
    "8122": {
      "jump": "o",
      "op": "JUMP"
    },
    "8123": {
      "op": "JUMPDEST"
    },
    "8124": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8126": {
      "op": "JUMPDEST"
    },
    "8127": {
      "op": "DUP4"
    },
    "8128": {
      "op": "DUP2"
    },
    "8129": {
      "op": "LT"
    },
    "8130": {
      "op": "ISZERO"
    },
    "8131": {
      "op": "PUSH2",
      "value": "0x1FD6"
    },
    "8134": {
      "op": "JUMPI"
    },
    "8135": {
      "op": "DUP2"
    },
    "8136": {
      "op": "DUP2"
    },
    "8137": {
      "op": "ADD"
    },
    "8138": {
      "op": "MLOAD"
    },
    "8139": {
      "op": "DUP4"
    },
    "8140": {
      "op": "DUP3"
    },
    "8141": {
      "op": "ADD"
    },
    "8142": {
      "op": "MSTORE"
    },
    "8143": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8145": {
      "op": "ADD"
    },
    "8146": {
      "op": "PUSH2",
      "value": "0x1FBE"
    },
    "8149": {
      "op": "JUMP"
    },
    "8150": {
      "op": "JUMPDEST"
    },
    "8151": {
      "op": "DUP4"
    },
    "8152": {
      "op": "DUP2"
    },
    "8153": {
      "op": "GT"
    },
    "8154": {
      "op": "ISZERO"
    },
    "8155": {
      "op": "PUSH2",
      "value": "0xD0F"
    },
    "8158": {
      "op": "JUMPI"
    },
    "8159": {
      "op": "POP"
    },
    "8160": {
      "op": "POP"
    },
    "8161": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8163": {
      "op": "SWAP2"
    },
    "8164": {
      "op": "ADD"
    },
    "8165": {
      "op": "MSTORE"
    },
    "8166": {
      "jump": "o",
      "op": "JUMP"
    },
    "8167": {
      "op": "JUMPDEST"
    },
    "8168": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8170": {
      "op": "DUP2"
    },
    "8171": {
      "op": "MLOAD"
    },
    "8172": {
      "op": "DUP1"
    },
    "8173": {
      "op": "DUP5"
    },
    "8174": {
      "op": "MSTORE"
    },
    "8175": {
      "op": "PUSH2",
      "value": "0x1FFF"
    },
    "8178": {
      "op": "DUP2"
    },
    "8179": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8181": {
      "op": "DUP7"
    },
    "8182": {
      "op": "ADD"
    },
    "8183": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8185": {
      "op": "DUP7"
    },
    "8186": {
      "op": "ADD"
    },
    "8187": {
      "op": "PUSH2",
      "value": "0x1FBB"
    },
    "8190": {
      "jump": "i",
      "op": "JUMP"
    },
    "8191": {
      "op": "JUMPDEST"
    },
    "8192": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8194": {
      "op": "ADD"
    },
    "8195": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8197": {
      "op": "NOT"
    },
    "8198": {
      "op": "AND"
    },
    "8199": {
      "op": "SWAP3"
    },
    "8200": {
      "op": "SWAP1"
    },
    "8201": {
      "op": "SWAP3"
    },
    "8202": {
      "op": "ADD"
    },
    "8203": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8205": {
      "op": "ADD"
    },
    "8206": {
      "op": "SWAP3"
    },
    "8207": {
      "op": "SWAP2"
    },
    "8208": {
      "op": "POP"
    },
    "8209": {
      "op": "POP"
    },
    "8210": {
      "jump": "o",
      "op": "JUMP"
    },
    "8211": {
      "op": "JUMPDEST"
    },
    "8212": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8214": {
      "op": "DUP2"
    },
    "8215": {
      "op": "MSTORE"
    },
    "8216": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8218": {
      "op": "PUSH2",
      "value": "0xE0B"
    },
    "8221": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8223": {
      "op": "DUP4"
    },
    "8224": {
      "op": "ADD"
    },
    "8225": {
      "op": "DUP5"
    },
    "8226": {
      "op": "PUSH2",
      "value": "0x1FE7"
    },
    "8229": {
      "jump": "i",
      "op": "JUMP"
    },
    "8230": {
      "op": "JUMPDEST"
    },
    "8231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8237": {
      "op": "SHL"
    },
    "8238": {
      "op": "SUB"
    },
    "8239": {
      "op": "DUP2"
    },
    "8240": {
      "op": "AND"
    },
    "8241": {
      "op": "DUP2"
    },
    "8242": {
      "op": "EQ"
    },
    "8243": {
      "op": "PUSH2",
      "value": "0xCBC"
    },
    "8246": {
      "op": "JUMPI"
    },
    "8247": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8249": {
      "op": "DUP1"
    },
    "8250": {
      "op": "REVERT"
    },
    "8251": {
      "op": "JUMPDEST"
    },
    "8252": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8254": {
      "op": "DUP1"
    },
    "8255": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8257": {
      "op": "DUP4"
    },
    "8258": {
      "op": "DUP6"
    },
    "8259": {
      "op": "SUB"
    },
    "8260": {
      "op": "SLT"
    },
    "8261": {
      "op": "ISZERO"
    },
    "8262": {
      "op": "PUSH2",
      "value": "0x204E"
    },
    "8265": {
      "op": "JUMPI"
    },
    "8266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8268": {
      "op": "DUP1"
    },
    "8269": {
      "op": "REVERT"
    },
    "8270": {
      "op": "JUMPDEST"
    },
    "8271": {
      "op": "DUP3"
    },
    "8272": {
      "op": "CALLDATALOAD"
    },
    "8273": {
      "op": "PUSH2",
      "value": "0x2059"
    },
    "8276": {
      "op": "DUP2"
    },
    "8277": {
      "op": "PUSH2",
      "value": "0x2026"
    },
    "8280": {
      "jump": "i",
      "op": "JUMP"
    },
    "8281": {
      "op": "JUMPDEST"
    },
    "8282": {
      "op": "SWAP5"
    },
    "8283": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8285": {
      "op": "SWAP4"
    },
    "8286": {
      "op": "SWAP1"
    },
    "8287": {
      "op": "SWAP4"
    },
    "8288": {
      "op": "ADD"
    },
    "8289": {
      "op": "CALLDATALOAD"
    },
    "8290": {
      "op": "SWAP4"
    },
    "8291": {
      "op": "POP"
    },
    "8292": {
      "op": "POP"
    },
    "8293": {
      "op": "POP"
    },
    "8294": {
      "jump": "o",
      "op": "JUMP"
    },
    "8295": {
      "op": "JUMPDEST"
    },
    "8296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8298": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8300": {
      "op": "DUP3"
    },
    "8301": {
      "op": "DUP5"
    },
    "8302": {
      "op": "SUB"
    },
    "8303": {
      "op": "SLT"
    },
    "8304": {
      "op": "ISZERO"
    },
    "8305": {
      "op": "PUSH2",
      "value": "0x2079"
    },
    "8308": {
      "op": "JUMPI"
    },
    "8309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8311": {
      "op": "DUP1"
    },
    "8312": {
      "op": "REVERT"
    },
    "8313": {
      "op": "JUMPDEST"
    },
    "8314": {
      "op": "DUP2"
    },
    "8315": {
      "op": "CALLDATALOAD"
    },
    "8316": {
      "op": "PUSH2",
      "value": "0xE0B"
    },
    "8319": {
      "op": "DUP2"
    },
    "8320": {
      "op": "PUSH2",
      "value": "0x2026"
    },
    "8323": {
      "jump": "i",
      "op": "JUMP"
    },
    "8324": {
      "op": "JUMPDEST"
    },
    "8325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8327": {
      "op": "DUP1"
    },
    "8328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8330": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8332": {
      "op": "DUP5"
    },
    "8333": {
      "op": "DUP7"
    },
    "8334": {
      "op": "SUB"
    },
    "8335": {
      "op": "SLT"
    },
    "8336": {
      "op": "ISZERO"
    },
    "8337": {
      "op": "PUSH2",
      "value": "0x2099"
    },
    "8340": {
      "op": "JUMPI"
    },
    "8341": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8343": {
      "op": "DUP1"
    },
    "8344": {
      "op": "REVERT"
    },
    "8345": {
      "op": "JUMPDEST"
    },
    "8346": {
      "op": "DUP4"
    },
    "8347": {
      "op": "CALLDATALOAD"
    },
    "8348": {
      "op": "PUSH2",
      "value": "0x20A4"
    },
    "8351": {
      "op": "DUP2"
    },
    "8352": {
      "op": "PUSH2",
      "value": "0x2026"
    },
    "8355": {
      "jump": "i",
      "op": "JUMP"
    },
    "8356": {
      "op": "JUMPDEST"
    },
    "8357": {
      "op": "SWAP3"
    },
    "8358": {
      "op": "POP"
    },
    "8359": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8361": {
      "op": "DUP5"
    },
    "8362": {
      "op": "ADD"
    },
    "8363": {
      "op": "CALLDATALOAD"
    },
    "8364": {
      "op": "PUSH2",
      "value": "0x20B4"
    },
    "8367": {
      "op": "DUP2"
    },
    "8368": {
      "op": "PUSH2",
      "value": "0x2026"
    },
    "8371": {
      "jump": "i",
      "op": "JUMP"
    },
    "8372": {
      "op": "JUMPDEST"
    },
    "8373": {
      "op": "SWAP3"
    },
    "8374": {
      "op": "SWAP6"
    },
    "8375": {
      "op": "SWAP3"
    },
    "8376": {
      "op": "SWAP5"
    },
    "8377": {
      "op": "POP"
    },
    "8378": {
      "op": "POP"
    },
    "8379": {
      "op": "POP"
    },
    "8380": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8382": {
      "op": "SWAP2"
    },
    "8383": {
      "op": "SWAP1"
    },
    "8384": {
      "op": "SWAP2"
    },
    "8385": {
      "op": "ADD"
    },
    "8386": {
      "op": "CALLDATALOAD"
    },
    "8387": {
      "op": "SWAP1"
    },
    "8388": {
      "jump": "o",
      "op": "JUMP"
    },
    "8389": {
      "op": "JUMPDEST"
    },
    "8390": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8392": {
      "op": "DUP1"
    },
    "8393": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8395": {
      "op": "DUP4"
    },
    "8396": {
      "op": "DUP6"
    },
    "8397": {
      "op": "SUB"
    },
    "8398": {
      "op": "SLT"
    },
    "8399": {
      "op": "ISZERO"
    },
    "8400": {
      "op": "PUSH2",
      "value": "0x20D8"
    },
    "8403": {
      "op": "JUMPI"
    },
    "8404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8406": {
      "op": "DUP1"
    },
    "8407": {
      "op": "REVERT"
    },
    "8408": {
      "op": "JUMPDEST"
    },
    "8409": {
      "op": "DUP3"
    },
    "8410": {
      "op": "CALLDATALOAD"
    },
    "8411": {
      "op": "SWAP2"
    },
    "8412": {
      "op": "POP"
    },
    "8413": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8415": {
      "op": "DUP4"
    },
    "8416": {
      "op": "ADD"
    },
    "8417": {
      "op": "CALLDATALOAD"
    },
    "8418": {
      "op": "PUSH2",
      "value": "0x20EA"
    },
    "8421": {
      "op": "DUP2"
    },
    "8422": {
      "op": "PUSH2",
      "value": "0x2026"
    },
    "8425": {
      "jump": "i",
      "op": "JUMP"
    },
    "8426": {
      "op": "JUMPDEST"
    },
    "8427": {
      "op": "DUP1"
    },
    "8428": {
      "op": "SWAP2"
    },
    "8429": {
      "op": "POP"
    },
    "8430": {
      "op": "POP"
    },
    "8431": {
      "op": "SWAP3"
    },
    "8432": {
      "op": "POP"
    },
    "8433": {
      "op": "SWAP3"
    },
    "8434": {
      "op": "SWAP1"
    },
    "8435": {
      "op": "POP"
    },
    "8436": {
      "jump": "o",
      "op": "JUMP"
    },
    "8437": {
      "op": "JUMPDEST"
    },
    "8438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8440": {
      "op": "DUP1"
    },
    "8441": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8443": {
      "op": "DUP4"
    },
    "8444": {
      "op": "DUP6"
    },
    "8445": {
      "op": "SUB"
    },
    "8446": {
      "op": "SLT"
    },
    "8447": {
      "op": "ISZERO"
    },
    "8448": {
      "op": "PUSH2",
      "value": "0x2108"
    },
    "8451": {
      "op": "JUMPI"
    },
    "8452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8454": {
      "op": "DUP1"
    },
    "8455": {
      "op": "REVERT"
    },
    "8456": {
      "op": "JUMPDEST"
    },
    "8457": {
      "op": "DUP3"
    },
    "8458": {
      "op": "CALLDATALOAD"
    },
    "8459": {
      "op": "PUSH2",
      "value": "0x2113"
    },
    "8462": {
      "op": "DUP2"
    },
    "8463": {
      "op": "PUSH2",
      "value": "0x2026"
    },
    "8466": {
      "jump": "i",
      "op": "JUMP"
    },
    "8467": {
      "op": "JUMPDEST"
    },
    "8468": {
      "op": "SWAP2"
    },
    "8469": {
      "op": "POP"
    },
    "8470": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8472": {
      "op": "DUP4"
    },
    "8473": {
      "op": "ADD"
    },
    "8474": {
      "op": "CALLDATALOAD"
    },
    "8475": {
      "op": "DUP1"
    },
    "8476": {
      "op": "ISZERO"
    },
    "8477": {
      "op": "ISZERO"
    },
    "8478": {
      "op": "DUP2"
    },
    "8479": {
      "op": "EQ"
    },
    "8480": {
      "op": "PUSH2",
      "value": "0x20EA"
    },
    "8483": {
      "op": "JUMPI"
    },
    "8484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8486": {
      "op": "DUP1"
    },
    "8487": {
      "op": "REVERT"
    },
    "8488": {
      "op": "JUMPDEST"
    },
    "8489": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8494": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8496": {
      "op": "SHL"
    },
    "8497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8499": {
      "op": "MSTORE"
    },
    "8500": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "8502": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8504": {
      "op": "MSTORE"
    },
    "8505": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8507": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8509": {
      "op": "REVERT"
    },
    "8510": {
      "op": "JUMPDEST"
    },
    "8511": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8513": {
      "op": "MLOAD"
    },
    "8514": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8516": {
      "op": "DUP3"
    },
    "8517": {
      "op": "ADD"
    },
    "8518": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8520": {
      "op": "NOT"
    },
    "8521": {
      "op": "AND"
    },
    "8522": {
      "op": "DUP2"
    },
    "8523": {
      "op": "ADD"
    },
    "8524": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8533": {
      "op": "DUP2"
    },
    "8534": {
      "op": "GT"
    },
    "8535": {
      "op": "DUP3"
    },
    "8536": {
      "op": "DUP3"
    },
    "8537": {
      "op": "LT"
    },
    "8538": {
      "op": "OR"
    },
    "8539": {
      "op": "ISZERO"
    },
    "8540": {
      "op": "PUSH2",
      "value": "0x2167"
    },
    "8543": {
      "op": "JUMPI"
    },
    "8544": {
      "op": "PUSH2",
      "value": "0x2167"
    },
    "8547": {
      "op": "PUSH2",
      "value": "0x2128"
    },
    "8550": {
      "jump": "i",
      "op": "JUMP"
    },
    "8551": {
      "op": "JUMPDEST"
    },
    "8552": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8554": {
      "op": "MSTORE"
    },
    "8555": {
      "op": "SWAP2"
    },
    "8556": {
      "op": "SWAP1"
    },
    "8557": {
      "op": "POP"
    },
    "8558": {
      "jump": "o",
      "op": "JUMP"
    },
    "8559": {
      "op": "JUMPDEST"
    },
    "8560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8562": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8571": {
      "op": "DUP3"
    },
    "8572": {
      "op": "GT"
    },
    "8573": {
      "op": "ISZERO"
    },
    "8574": {
      "op": "PUSH2",
      "value": "0x2189"
    },
    "8577": {
      "op": "JUMPI"
    },
    "8578": {
      "op": "PUSH2",
      "value": "0x2189"
    },
    "8581": {
      "op": "PUSH2",
      "value": "0x2128"
    },
    "8584": {
      "jump": "i",
      "op": "JUMP"
    },
    "8585": {
      "op": "JUMPDEST"
    },
    "8586": {
      "op": "POP"
    },
    "8587": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8589": {
      "op": "ADD"
    },
    "8590": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8592": {
      "op": "NOT"
    },
    "8593": {
      "op": "AND"
    },
    "8594": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8596": {
      "op": "ADD"
    },
    "8597": {
      "op": "SWAP1"
    },
    "8598": {
      "jump": "o",
      "op": "JUMP"
    },
    "8599": {
      "op": "JUMPDEST"
    },
    "8600": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8602": {
      "op": "DUP1"
    },
    "8603": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8605": {
      "op": "DUP1"
    },
    "8606": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8608": {
      "op": "DUP6"
    },
    "8609": {
      "op": "DUP8"
    },
    "8610": {
      "op": "SUB"
    },
    "8611": {
      "op": "SLT"
    },
    "8612": {
      "op": "ISZERO"
    },
    "8613": {
      "op": "PUSH2",
      "value": "0x21AD"
    },
    "8616": {
      "op": "JUMPI"
    },
    "8617": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8619": {
      "op": "DUP1"
    },
    "8620": {
      "op": "REVERT"
    },
    "8621": {
      "op": "JUMPDEST"
    },
    "8622": {
      "op": "DUP5"
    },
    "8623": {
      "op": "CALLDATALOAD"
    },
    "8624": {
      "op": "PUSH2",
      "value": "0x21B8"
    },
    "8627": {
      "op": "DUP2"
    },
    "8628": {
      "op": "PUSH2",
      "value": "0x2026"
    },
    "8631": {
      "jump": "i",
      "op": "JUMP"
    },
    "8632": {
      "op": "JUMPDEST"
    },
    "8633": {
      "op": "SWAP4"
    },
    "8634": {
      "op": "POP"
    },
    "8635": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8637": {
      "op": "DUP6"
    },
    "8638": {
      "op": "ADD"
    },
    "8639": {
      "op": "CALLDATALOAD"
    },
    "8640": {
      "op": "PUSH2",
      "value": "0x21C8"
    },
    "8643": {
      "op": "DUP2"
    },
    "8644": {
      "op": "PUSH2",
      "value": "0x2026"
    },
    "8647": {
      "jump": "i",
      "op": "JUMP"
    },
    "8648": {
      "op": "JUMPDEST"
    },
    "8649": {
      "op": "SWAP3"
    },
    "8650": {
      "op": "POP"
    },
    "8651": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8653": {
      "op": "DUP6"
    },
    "8654": {
      "op": "ADD"
    },
    "8655": {
      "op": "CALLDATALOAD"
    },
    "8656": {
      "op": "SWAP2"
    },
    "8657": {
      "op": "POP"
    },
    "8658": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8660": {
      "op": "DUP6"
    },
    "8661": {
      "op": "ADD"
    },
    "8662": {
      "op": "CALLDATALOAD"
    },
    "8663": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8672": {
      "op": "DUP2"
    },
    "8673": {
      "op": "GT"
    },
    "8674": {
      "op": "ISZERO"
    },
    "8675": {
      "op": "PUSH2",
      "value": "0x21EB"
    },
    "8678": {
      "op": "JUMPI"
    },
    "8679": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8681": {
      "op": "DUP1"
    },
    "8682": {
      "op": "REVERT"
    },
    "8683": {
      "op": "JUMPDEST"
    },
    "8684": {
      "op": "DUP6"
    },
    "8685": {
      "op": "ADD"
    },
    "8686": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8688": {
      "op": "DUP2"
    },
    "8689": {
      "op": "ADD"
    },
    "8690": {
      "op": "DUP8"
    },
    "8691": {
      "op": "SGT"
    },
    "8692": {
      "op": "PUSH2",
      "value": "0x21FC"
    },
    "8695": {
      "op": "JUMPI"
    },
    "8696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8698": {
      "op": "DUP1"
    },
    "8699": {
      "op": "REVERT"
    },
    "8700": {
      "op": "JUMPDEST"
    },
    "8701": {
      "op": "DUP1"
    },
    "8702": {
      "op": "CALLDATALOAD"
    },
    "8703": {
      "op": "PUSH2",
      "value": "0x220F"
    },
    "8706": {
      "op": "PUSH2",
      "value": "0x220A"
    },
    "8709": {
      "op": "DUP3"
    },
    "8710": {
      "op": "PUSH2",
      "value": "0x216F"
    },
    "8713": {
      "jump": "i",
      "op": "JUMP"
    },
    "8714": {
      "op": "JUMPDEST"
    },
    "8715": {
      "op": "PUSH2",
      "value": "0x213E"
    },
    "8718": {
      "jump": "i",
      "op": "JUMP"
    },
    "8719": {
      "op": "JUMPDEST"
    },
    "8720": {
      "op": "DUP2"
    },
    "8721": {
      "op": "DUP2"
    },
    "8722": {
      "op": "MSTORE"
    },
    "8723": {
      "op": "DUP9"
    },
    "8724": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8726": {
      "op": "DUP4"
    },
    "8727": {
      "op": "DUP6"
    },
    "8728": {
      "op": "ADD"
    },
    "8729": {
      "op": "ADD"
    },
    "8730": {
      "op": "GT"
    },
    "8731": {
      "op": "ISZERO"
    },
    "8732": {
      "op": "PUSH2",
      "value": "0x2224"
    },
    "8735": {
      "op": "JUMPI"
    },
    "8736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8738": {
      "op": "DUP1"
    },
    "8739": {
      "op": "REVERT"
    },
    "8740": {
      "op": "JUMPDEST"
    },
    "8741": {
      "op": "DUP2"
    },
    "8742": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8744": {
      "op": "DUP5"
    },
    "8745": {
      "op": "ADD"
    },
    "8746": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8748": {
      "op": "DUP4"
    },
    "8749": {
      "op": "ADD"
    },
    "8750": {
      "op": "CALLDATACOPY"
    },
    "8751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8753": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8755": {
      "op": "DUP4"
    },
    "8756": {
      "op": "DUP4"
    },
    "8757": {
      "op": "ADD"
    },
    "8758": {
      "op": "ADD"
    },
    "8759": {
      "op": "MSTORE"
    },
    "8760": {
      "op": "DUP1"
    },
    "8761": {
      "op": "SWAP4"
    },
    "8762": {
      "op": "POP"
    },
    "8763": {
      "op": "POP"
    },
    "8764": {
      "op": "POP"
    },
    "8765": {
      "op": "POP"
    },
    "8766": {
      "op": "SWAP3"
    },
    "8767": {
      "op": "SWAP6"
    },
    "8768": {
      "op": "SWAP2"
    },
    "8769": {
      "op": "SWAP5"
    },
    "8770": {
      "op": "POP"
    },
    "8771": {
      "op": "SWAP3"
    },
    "8772": {
      "op": "POP"
    },
    "8773": {
      "jump": "o",
      "op": "JUMP"
    },
    "8774": {
      "op": "JUMPDEST"
    },
    "8775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8777": {
      "op": "DUP1"
    },
    "8778": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8780": {
      "op": "DUP4"
    },
    "8781": {
      "op": "DUP6"
    },
    "8782": {
      "op": "SUB"
    },
    "8783": {
      "op": "SLT"
    },
    "8784": {
      "op": "ISZERO"
    },
    "8785": {
      "op": "PUSH2",
      "value": "0x2259"
    },
    "8788": {
      "op": "JUMPI"
    },
    "8789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8791": {
      "op": "DUP1"
    },
    "8792": {
      "op": "REVERT"
    },
    "8793": {
      "op": "JUMPDEST"
    },
    "8794": {
      "op": "DUP3"
    },
    "8795": {
      "op": "CALLDATALOAD"
    },
    "8796": {
      "op": "PUSH2",
      "value": "0x2264"
    },
    "8799": {
      "op": "DUP2"
    },
    "8800": {
      "op": "PUSH2",
      "value": "0x2026"
    },
    "8803": {
      "jump": "i",
      "op": "JUMP"
    },
    "8804": {
      "op": "JUMPDEST"
    },
    "8805": {
      "op": "SWAP2"
    },
    "8806": {
      "op": "POP"
    },
    "8807": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8809": {
      "op": "DUP4"
    },
    "8810": {
      "op": "ADD"
    },
    "8811": {
      "op": "CALLDATALOAD"
    },
    "8812": {
      "op": "PUSH2",
      "value": "0x20EA"
    },
    "8815": {
      "op": "DUP2"
    },
    "8816": {
      "op": "PUSH2",
      "value": "0x2026"
    },
    "8819": {
      "jump": "i",
      "op": "JUMP"
    },
    "8820": {
      "op": "JUMPDEST"
    },
    "8821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8823": {
      "op": "DUP2"
    },
    "8824": {
      "op": "DUP2"
    },
    "8825": {
      "op": "SHR"
    },
    "8826": {
      "op": "SWAP1"
    },
    "8827": {
      "op": "DUP3"
    },
    "8828": {
      "op": "AND"
    },
    "8829": {
      "op": "DUP1"
    },
    "8830": {
      "op": "PUSH2",
      "value": "0x2288"
    },
    "8833": {
      "op": "JUMPI"
    },
    "8834": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "8836": {
      "op": "DUP3"
    },
    "8837": {
      "op": "AND"
    },
    "8838": {
      "op": "SWAP2"
    },
    "8839": {
      "op": "POP"
    },
    "8840": {
      "op": "JUMPDEST"
    },
    "8841": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8843": {
      "op": "DUP3"
    },
    "8844": {
      "op": "LT"
    },
    "8845": {
      "op": "DUP2"
    },
    "8846": {
      "op": "SUB"
    },
    "8847": {
      "op": "PUSH2",
      "value": "0x22A8"
    },
    "8850": {
      "op": "JUMPI"
    },
    "8851": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8856": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8858": {
      "op": "SHL"
    },
    "8859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8861": {
      "op": "MSTORE"
    },
    "8862": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "8864": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8866": {
      "op": "MSTORE"
    },
    "8867": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8871": {
      "op": "REVERT"
    },
    "8872": {
      "op": "JUMPDEST"
    },
    "8873": {
      "op": "POP"
    },
    "8874": {
      "op": "SWAP2"
    },
    "8875": {
      "op": "SWAP1"
    },
    "8876": {
      "op": "POP"
    },
    "8877": {
      "jump": "o",
      "op": "JUMP"
    },
    "8878": {
      "op": "JUMPDEST"
    },
    "8879": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8881": {
      "op": "DUP2"
    },
    "8882": {
      "op": "MSTORE"
    },
    "8883": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8885": {
      "op": "PUSH2",
      "value": "0x22D4"
    },
    "8888": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8890": {
      "op": "DUP4"
    },
    "8891": {
      "op": "ADD"
    },
    "8892": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "8894": {
      "op": "DUP2"
    },
    "8895": {
      "op": "MSTORE"
    },
    "8896": {
      "op": "PUSH6",
      "value": "0x49534F544F5"
    },
    "8903": {
      "op": "PUSH1",
      "value": "0xD4"
    },
    "8905": {
      "op": "SHL"
    },
    "8906": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8908": {
      "op": "DUP3"
    },
    "8909": {
      "op": "ADD"
    },
    "8910": {
      "op": "MSTORE"
    },
    "8911": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8913": {
      "op": "ADD"
    },
    "8914": {
      "op": "SWAP1"
    },
    "8915": {
      "op": "JUMP"
    },
    "8916": {
      "op": "JUMPDEST"
    },
    "8917": {
      "op": "DUP3"
    },
    "8918": {
      "op": "DUP2"
    },
    "8919": {
      "op": "SUB"
    },
    "8920": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8922": {
      "op": "SWAP4"
    },
    "8923": {
      "op": "DUP5"
    },
    "8924": {
      "op": "ADD"
    },
    "8925": {
      "op": "MSTORE"
    },
    "8926": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "8928": {
      "op": "DUP2"
    },
    "8929": {
      "op": "MSTORE"
    },
    "8930": {
      "op": "PUSH19",
      "value": "0x4245455F464143544F52595F41444452455353"
    },
    "8950": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "8952": {
      "op": "SHL"
    },
    "8953": {
      "op": "SWAP3"
    },
    "8954": {
      "op": "DUP2"
    },
    "8955": {
      "op": "ADD"
    },
    "8956": {
      "op": "SWAP3"
    },
    "8957": {
      "op": "SWAP1"
    },
    "8958": {
      "op": "SWAP3"
    },
    "8959": {
      "op": "MSTORE"
    },
    "8960": {
      "op": "POP"
    },
    "8961": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8963": {
      "op": "ADD"
    },
    "8964": {
      "op": "SWAP1"
    },
    "8965": {
      "jump": "o",
      "op": "JUMP"
    },
    "8966": {
      "op": "JUMPDEST"
    },
    "8967": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8969": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8971": {
      "op": "DUP3"
    },
    "8972": {
      "op": "DUP5"
    },
    "8973": {
      "op": "SUB"
    },
    "8974": {
      "op": "SLT"
    },
    "8975": {
      "op": "ISZERO"
    },
    "8976": {
      "op": "PUSH2",
      "value": "0x2318"
    },
    "8979": {
      "op": "JUMPI"
    },
    "8980": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8982": {
      "op": "DUP1"
    },
    "8983": {
      "op": "REVERT"
    },
    "8984": {
      "op": "JUMPDEST"
    },
    "8985": {
      "op": "DUP2"
    },
    "8986": {
      "op": "MLOAD"
    },
    "8987": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8996": {
      "op": "DUP2"
    },
    "8997": {
      "op": "GT"
    },
    "8998": {
      "op": "ISZERO"
    },
    "8999": {
      "op": "PUSH2",
      "value": "0x232F"
    },
    "9002": {
      "op": "JUMPI"
    },
    "9003": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9005": {
      "op": "DUP1"
    },
    "9006": {
      "op": "REVERT"
    },
    "9007": {
      "op": "JUMPDEST"
    },
    "9008": {
      "op": "DUP3"
    },
    "9009": {
      "op": "ADD"
    },
    "9010": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9012": {
      "op": "DUP2"
    },
    "9013": {
      "op": "ADD"
    },
    "9014": {
      "op": "DUP5"
    },
    "9015": {
      "op": "SGT"
    },
    "9016": {
      "op": "PUSH2",
      "value": "0x2340"
    },
    "9019": {
      "op": "JUMPI"
    },
    "9020": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9022": {
      "op": "DUP1"
    },
    "9023": {
      "op": "REVERT"
    },
    "9024": {
      "op": "JUMPDEST"
    },
    "9025": {
      "op": "DUP1"
    },
    "9026": {
      "op": "MLOAD"
    },
    "9027": {
      "op": "PUSH2",
      "value": "0x234E"
    },
    "9030": {
      "op": "PUSH2",
      "value": "0x220A"
    },
    "9033": {
      "op": "DUP3"
    },
    "9034": {
      "op": "PUSH2",
      "value": "0x216F"
    },
    "9037": {
      "jump": "i",
      "op": "JUMP"
    },
    "9038": {
      "op": "JUMPDEST"
    },
    "9039": {
      "op": "DUP2"
    },
    "9040": {
      "op": "DUP2"
    },
    "9041": {
      "op": "MSTORE"
    },
    "9042": {
      "op": "DUP6"
    },
    "9043": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9045": {
      "op": "DUP4"
    },
    "9046": {
      "op": "DUP6"
    },
    "9047": {
      "op": "ADD"
    },
    "9048": {
      "op": "ADD"
    },
    "9049": {
      "op": "GT"
    },
    "9050": {
      "op": "ISZERO"
    },
    "9051": {
      "op": "PUSH2",
      "value": "0x2363"
    },
    "9054": {
      "op": "JUMPI"
    },
    "9055": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9057": {
      "op": "DUP1"
    },
    "9058": {
      "op": "REVERT"
    },
    "9059": {
      "op": "JUMPDEST"
    },
    "9060": {
      "op": "PUSH2",
      "value": "0x2374"
    },
    "9063": {
      "op": "DUP3"
    },
    "9064": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9066": {
      "op": "DUP4"
    },
    "9067": {
      "op": "ADD"
    },
    "9068": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9070": {
      "op": "DUP7"
    },
    "9071": {
      "op": "ADD"
    },
    "9072": {
      "op": "PUSH2",
      "value": "0x1FBB"
    },
    "9075": {
      "jump": "i",
      "op": "JUMP"
    },
    "9076": {
      "op": "JUMPDEST"
    },
    "9077": {
      "op": "SWAP6"
    },
    "9078": {
      "op": "SWAP5"
    },
    "9079": {
      "op": "POP"
    },
    "9080": {
      "op": "POP"
    },
    "9081": {
      "op": "POP"
    },
    "9082": {
      "op": "POP"
    },
    "9083": {
      "op": "POP"
    },
    "9084": {
      "jump": "o",
      "op": "JUMP"
    },
    "9085": {
      "op": "JUMPDEST"
    },
    "9086": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9088": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9090": {
      "op": "DUP3"
    },
    "9091": {
      "op": "DUP5"
    },
    "9092": {
      "op": "SUB"
    },
    "9093": {
      "op": "SLT"
    },
    "9094": {
      "op": "ISZERO"
    },
    "9095": {
      "op": "PUSH2",
      "value": "0x238F"
    },
    "9098": {
      "op": "JUMPI"
    },
    "9099": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9101": {
      "op": "DUP1"
    },
    "9102": {
      "op": "REVERT"
    },
    "9103": {
      "op": "JUMPDEST"
    },
    "9104": {
      "op": "DUP2"
    },
    "9105": {
      "op": "MLOAD"
    },
    "9106": {
      "op": "PUSH2",
      "value": "0xE0B"
    },
    "9109": {
      "op": "DUP2"
    },
    "9110": {
      "op": "PUSH2",
      "value": "0x2026"
    },
    "9113": {
      "jump": "i",
      "op": "JUMP"
    },
    "9114": {
      "op": "JUMPDEST"
    },
    "9115": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9117": {
      "op": "DUP1"
    },
    "9118": {
      "op": "DUP3"
    },
    "9119": {
      "op": "MSTORE"
    },
    "9120": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "9122": {
      "op": "SWAP1"
    },
    "9123": {
      "op": "DUP3"
    },
    "9124": {
      "op": "ADD"
    },
    "9125": {
      "op": "MSTORE"
    },
    "9126": {
      "op": "PUSH10",
      "value": "0x49534F544F503130343"
    },
    "9137": {
      "op": "PUSH1",
      "value": "0xB4"
    },
    "9139": {
      "op": "SHL"
    },
    "9140": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9142": {
      "op": "DUP3"
    },
    "9143": {
      "op": "ADD"
    },
    "9144": {
      "op": "MSTORE"
    },
    "9145": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9147": {
      "op": "ADD"
    },
    "9148": {
      "op": "SWAP1"
    },
    "9149": {
      "jump": "o",
      "op": "JUMP"
    },
    "9150": {
      "op": "JUMPDEST"
    },
    "9151": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9153": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9155": {
      "op": "DUP1"
    },
    "9156": {
      "op": "DUP4"
    },
    "9157": {
      "op": "DUP6"
    },
    "9158": {
      "op": "SUB"
    },
    "9159": {
      "op": "SLT"
    },
    "9160": {
      "op": "ISZERO"
    },
    "9161": {
      "op": "PUSH2",
      "value": "0x23D1"
    },
    "9164": {
      "op": "JUMPI"
    },
    "9165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9167": {
      "op": "DUP1"
    },
    "9168": {
      "op": "REVERT"
    },
    "9169": {
      "op": "JUMPDEST"
    },
    "9170": {
      "op": "DUP3"
    },
    "9171": {
      "op": "MLOAD"
    },
    "9172": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9181": {
      "op": "DUP1"
    },
    "9182": {
      "op": "DUP3"
    },
    "9183": {
      "op": "GT"
    },
    "9184": {
      "op": "ISZERO"
    },
    "9185": {
      "op": "PUSH2",
      "value": "0x23E9"
    },
    "9188": {
      "op": "JUMPI"
    },
    "9189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9191": {
      "op": "DUP1"
    },
    "9192": {
      "op": "REVERT"
    },
    "9193": {
      "op": "JUMPDEST"
    },
    "9194": {
      "op": "DUP2"
    },
    "9195": {
      "op": "DUP6"
    },
    "9196": {
      "op": "ADD"
    },
    "9197": {
      "op": "SWAP2"
    },
    "9198": {
      "op": "POP"
    },
    "9199": {
      "op": "DUP6"
    },
    "9200": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9202": {
      "op": "DUP4"
    },
    "9203": {
      "op": "ADD"
    },
    "9204": {
      "op": "SLT"
    },
    "9205": {
      "op": "PUSH2",
      "value": "0x23FD"
    },
    "9208": {
      "op": "JUMPI"
    },
    "9209": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9211": {
      "op": "DUP1"
    },
    "9212": {
      "op": "REVERT"
    },
    "9213": {
      "op": "JUMPDEST"
    },
    "9214": {
      "op": "DUP2"
    },
    "9215": {
      "op": "MLOAD"
    },
    "9216": {
      "op": "DUP2"
    },
    "9217": {
      "op": "DUP2"
    },
    "9218": {
      "op": "GT"
    },
    "9219": {
      "op": "ISZERO"
    },
    "9220": {
      "op": "PUSH2",
      "value": "0x240F"
    },
    "9223": {
      "op": "JUMPI"
    },
    "9224": {
      "op": "PUSH2",
      "value": "0x240F"
    },
    "9227": {
      "op": "PUSH2",
      "value": "0x2128"
    },
    "9230": {
      "jump": "i",
      "op": "JUMP"
    },
    "9231": {
      "op": "JUMPDEST"
    },
    "9232": {
      "op": "DUP1"
    },
    "9233": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9235": {
      "op": "SHL"
    },
    "9236": {
      "op": "SWAP2"
    },
    "9237": {
      "op": "POP"
    },
    "9238": {
      "op": "PUSH2",
      "value": "0x2420"
    },
    "9241": {
      "op": "DUP5"
    },
    "9242": {
      "op": "DUP4"
    },
    "9243": {
      "op": "ADD"
    },
    "9244": {
      "op": "PUSH2",
      "value": "0x213E"
    },
    "9247": {
      "jump": "i",
      "op": "JUMP"
    },
    "9248": {
      "op": "JUMPDEST"
    },
    "9249": {
      "op": "DUP2"
    },
    "9250": {
      "op": "DUP2"
    },
    "9251": {
      "op": "MSTORE"
    },
    "9252": {
      "op": "SWAP2"
    },
    "9253": {
      "op": "DUP4"
    },
    "9254": {
      "op": "ADD"
    },
    "9255": {
      "op": "DUP5"
    },
    "9256": {
      "op": "ADD"
    },
    "9257": {
      "op": "SWAP2"
    },
    "9258": {
      "op": "DUP5"
    },
    "9259": {
      "op": "DUP2"
    },
    "9260": {
      "op": "ADD"
    },
    "9261": {
      "op": "SWAP1"
    },
    "9262": {
      "op": "DUP9"
    },
    "9263": {
      "op": "DUP5"
    },
    "9264": {
      "op": "GT"
    },
    "9265": {
      "op": "ISZERO"
    },
    "9266": {
      "op": "PUSH2",
      "value": "0x243A"
    },
    "9269": {
      "op": "JUMPI"
    },
    "9270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9272": {
      "op": "DUP1"
    },
    "9273": {
      "op": "REVERT"
    },
    "9274": {
      "op": "JUMPDEST"
    },
    "9275": {
      "op": "SWAP4"
    },
    "9276": {
      "op": "DUP6"
    },
    "9277": {
      "op": "ADD"
    },
    "9278": {
      "op": "SWAP4"
    },
    "9279": {
      "op": "JUMPDEST"
    },
    "9280": {
      "op": "DUP4"
    },
    "9281": {
      "op": "DUP6"
    },
    "9282": {
      "op": "LT"
    },
    "9283": {
      "op": "ISZERO"
    },
    "9284": {
      "op": "PUSH2",
      "value": "0x2464"
    },
    "9287": {
      "op": "JUMPI"
    },
    "9288": {
      "op": "DUP5"
    },
    "9289": {
      "op": "MLOAD"
    },
    "9290": {
      "op": "SWAP3"
    },
    "9291": {
      "op": "POP"
    },
    "9292": {
      "op": "PUSH2",
      "value": "0x2454"
    },
    "9295": {
      "op": "DUP4"
    },
    "9296": {
      "op": "PUSH2",
      "value": "0x2026"
    },
    "9299": {
      "jump": "i",
      "op": "JUMP"
    },
    "9300": {
      "op": "JUMPDEST"
    },
    "9301": {
      "op": "DUP3"
    },
    "9302": {
      "op": "DUP3"
    },
    "9303": {
      "op": "MSTORE"
    },
    "9304": {
      "op": "SWAP4"
    },
    "9305": {
      "op": "DUP6"
    },
    "9306": {
      "op": "ADD"
    },
    "9307": {
      "op": "SWAP4"
    },
    "9308": {
      "op": "SWAP1"
    },
    "9309": {
      "op": "DUP6"
    },
    "9310": {
      "op": "ADD"
    },
    "9311": {
      "op": "SWAP1"
    },
    "9312": {
      "op": "PUSH2",
      "value": "0x243F"
    },
    "9315": {
      "op": "JUMP"
    },
    "9316": {
      "op": "JUMPDEST"
    },
    "9317": {
      "op": "SWAP9"
    },
    "9318": {
      "op": "SWAP8"
    },
    "9319": {
      "op": "POP"
    },
    "9320": {
      "op": "POP"
    },
    "9321": {
      "op": "POP"
    },
    "9322": {
      "op": "POP"
    },
    "9323": {
      "op": "POP"
    },
    "9324": {
      "op": "POP"
    },
    "9325": {
      "op": "POP"
    },
    "9326": {
      "op": "POP"
    },
    "9327": {
      "jump": "o",
      "op": "JUMP"
    },
    "9328": {
      "op": "JUMPDEST"
    },
    "9329": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9334": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9336": {
      "op": "SHL"
    },
    "9337": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9339": {
      "op": "MSTORE"
    },
    "9340": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "9342": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9344": {
      "op": "MSTORE"
    },
    "9345": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9347": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9349": {
      "op": "REVERT"
    },
    "9350": {
      "op": "JUMPDEST"
    },
    "9351": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9356": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9358": {
      "op": "SHL"
    },
    "9359": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9361": {
      "op": "MSTORE"
    },
    "9362": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "9364": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9366": {
      "op": "MSTORE"
    },
    "9367": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9369": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9371": {
      "op": "REVERT"
    },
    "9372": {
      "op": "JUMPDEST"
    },
    "9373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9377": {
      "op": "DUP3"
    },
    "9378": {
      "op": "ADD"
    },
    "9379": {
      "op": "PUSH2",
      "value": "0x24AE"
    },
    "9382": {
      "op": "JUMPI"
    },
    "9383": {
      "op": "PUSH2",
      "value": "0x24AE"
    },
    "9386": {
      "op": "PUSH2",
      "value": "0x2486"
    },
    "9389": {
      "jump": "i",
      "op": "JUMP"
    },
    "9390": {
      "op": "JUMPDEST"
    },
    "9391": {
      "op": "POP"
    },
    "9392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9394": {
      "op": "ADD"
    },
    "9395": {
      "op": "SWAP1"
    },
    "9396": {
      "jump": "o",
      "op": "JUMP"
    },
    "9397": {
      "op": "JUMPDEST"
    },
    "9398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9400": {
      "op": "DUP1"
    },
    "9401": {
      "op": "DUP3"
    },
    "9402": {
      "op": "MSTORE"
    },
    "9403": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "9405": {
      "op": "SWAP1"
    },
    "9406": {
      "op": "DUP3"
    },
    "9407": {
      "op": "ADD"
    },
    "9408": {
      "op": "MSTORE"
    },
    "9409": {
      "op": "PUSH32",
      "value": "0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
    },
    "9442": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9444": {
      "op": "DUP3"
    },
    "9445": {
      "op": "ADD"
    },
    "9446": {
      "op": "MSTORE"
    },
    "9447": {
      "op": "PUSH14",
      "value": "0x1C881B9BDC88185C1C1C9BDD9959"
    },
    "9462": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "9464": {
      "op": "SHL"
    },
    "9465": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9467": {
      "op": "DUP3"
    },
    "9468": {
      "op": "ADD"
    },
    "9469": {
      "op": "MSTORE"
    },
    "9470": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9472": {
      "op": "ADD"
    },
    "9473": {
      "op": "SWAP1"
    },
    "9474": {
      "jump": "o",
      "op": "JUMP"
    },
    "9475": {
      "op": "JUMPDEST"
    },
    "9476": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9478": {
      "op": "DUP2"
    },
    "9479": {
      "op": "MSTORE"
    },
    "9480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9482": {
      "op": "PUSH2",
      "value": "0x2529"
    },
    "9485": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9487": {
      "op": "DUP4"
    },
    "9488": {
      "op": "ADD"
    },
    "9489": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "9491": {
      "op": "DUP2"
    },
    "9492": {
      "op": "MSTORE"
    },
    "9493": {
      "op": "PUSH6",
      "value": "0x49534F544F5"
    },
    "9500": {
      "op": "PUSH1",
      "value": "0xD4"
    },
    "9502": {
      "op": "SHL"
    },
    "9503": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9505": {
      "op": "DUP3"
    },
    "9506": {
      "op": "ADD"
    },
    "9507": {
      "op": "MSTORE"
    },
    "9508": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9510": {
      "op": "ADD"
    },
    "9511": {
      "op": "SWAP1"
    },
    "9512": {
      "op": "JUMP"
    },
    "9513": {
      "op": "JUMPDEST"
    },
    "9514": {
      "op": "DUP3"
    },
    "9515": {
      "op": "DUP2"
    },
    "9516": {
      "op": "SUB"
    },
    "9517": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9519": {
      "op": "SWAP4"
    },
    "9520": {
      "op": "DUP5"
    },
    "9521": {
      "op": "ADD"
    },
    "9522": {
      "op": "MSTORE"
    },
    "9523": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "9525": {
      "op": "DUP2"
    },
    "9526": {
      "op": "MSTORE"
    },
    "9527": {
      "op": "PUSH8",
      "value": "0x736F756C2E737667"
    },
    "9536": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "9538": {
      "op": "SHL"
    },
    "9539": {
      "op": "SWAP3"
    },
    "9540": {
      "op": "DUP2"
    },
    "9541": {
      "op": "ADD"
    },
    "9542": {
      "op": "SWAP3"
    },
    "9543": {
      "op": "SWAP1"
    },
    "9544": {
      "op": "SWAP3"
    },
    "9545": {
      "op": "MSTORE"
    },
    "9546": {
      "op": "POP"
    },
    "9547": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9549": {
      "op": "ADD"
    },
    "9550": {
      "op": "SWAP1"
    },
    "9551": {
      "jump": "o",
      "op": "JUMP"
    },
    "9552": {
      "op": "JUMPDEST"
    },
    "9553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9555": {
      "op": "DUP2"
    },
    "9556": {
      "op": "MLOAD"
    },
    "9557": {
      "op": "PUSH2",
      "value": "0x2562"
    },
    "9560": {
      "op": "DUP2"
    },
    "9561": {
      "op": "DUP6"
    },
    "9562": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9564": {
      "op": "DUP7"
    },
    "9565": {
      "op": "ADD"
    },
    "9566": {
      "op": "PUSH2",
      "value": "0x1FBB"
    },
    "9569": {
      "jump": "i",
      "op": "JUMP"
    },
    "9570": {
      "op": "JUMPDEST"
    },
    "9571": {
      "op": "SWAP3"
    },
    "9572": {
      "op": "SWAP1"
    },
    "9573": {
      "op": "SWAP3"
    },
    "9574": {
      "op": "ADD"
    },
    "9575": {
      "op": "SWAP3"
    },
    "9576": {
      "op": "SWAP2"
    },
    "9577": {
      "op": "POP"
    },
    "9578": {
      "op": "POP"
    },
    "9579": {
      "jump": "o",
      "op": "JUMP"
    },
    "9580": {
      "op": "JUMPDEST"
    },
    "9581": {
      "op": "PUSH32",
      "value": "0x3C7376672077696474683D2235303022206865696768743D2235303022207669"
    },
    "9614": {
      "op": "DUP2"
    },
    "9615": {
      "op": "MSTORE"
    },
    "9616": {
      "op": "PUSH20",
      "value": "0x32BBA137BC1E91181018101A9818101A9818111"
    },
    "9637": {
      "op": "PUSH1",
      "value": "0x65"
    },
    "9639": {
      "op": "SHL"
    },
    "9640": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9642": {
      "op": "DUP3"
    },
    "9643": {
      "op": "ADD"
    },
    "9644": {
      "op": "MSTORE"
    },
    "9645": {
      "op": "PUSH32",
      "value": "0x20786D6C3A73706163653D2270726573657276652220786D6C6E733D22687474"
    },
    "9678": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "9680": {
      "op": "DUP3"
    },
    "9681": {
      "op": "ADD"
    },
    "9682": {
      "op": "MSTORE"
    },
    "9683": {
      "op": "PUSH32",
      "value": "0x703A2F2F7777772E77332E6F72672F323030302F737667223E00000000000000"
    },
    "9716": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "9718": {
      "op": "DUP3"
    },
    "9719": {
      "op": "ADD"
    },
    "9720": {
      "op": "MSTORE"
    },
    "9721": {
      "op": "PUSH32",
      "value": "0x3C73766720786D6C6E733D22687474703A2F2F7777772E77332E6F72672F3230"
    },
    "9754": {
      "op": "PUSH1",
      "value": "0x6D"
    },
    "9756": {
      "op": "DUP3"
    },
    "9757": {
      "op": "ADD"
    },
    "9758": {
      "op": "MSTORE"
    },
    "9759": {
      "op": "PUSH32",
      "value": "0x30302F7376672220786D6C6E733A786C696E6B3D22687474703A2F2F7777772E"
    },
    "9792": {
      "op": "PUSH1",
      "value": "0x8D"
    },
    "9794": {
      "op": "DUP3"
    },
    "9795": {
      "op": "ADD"
    },
    "9796": {
      "op": "MSTORE"
    },
    "9797": {
      "op": "PUSH32",
      "value": "0x77332E6F72672F313939392F786C696E6B22207374796C653D226D617267696E"
    },
    "9830": {
      "op": "PUSH1",
      "value": "0xAD"
    },
    "9832": {
      "op": "DUP3"
    },
    "9833": {
      "op": "ADD"
    },
    "9834": {
      "op": "MSTORE"
    },
    "9835": {
      "op": "PUSH32",
      "value": "0x3A206175746F3B206261636B67726F756E643A20726762283235352C20323535"
    },
    "9868": {
      "op": "PUSH1",
      "value": "0xCD"
    },
    "9870": {
      "op": "DUP3"
    },
    "9871": {
      "op": "ADD"
    },
    "9872": {
      "op": "MSTORE"
    },
    "9873": {
      "op": "PUSH32",
      "value": "0x2C20323535293B20646973706C61793A20626C6F636B3B2073686170652D7265"
    },
    "9906": {
      "op": "PUSH1",
      "value": "0xED"
    },
    "9908": {
      "op": "DUP3"
    },
    "9909": {
      "op": "ADD"
    },
    "9910": {
      "op": "MSTORE"
    },
    "9911": {
      "op": "PUSH32",
      "value": "0x6E646572696E673A206175746F3B222077696474683D22353030707822206865"
    },
    "9944": {
      "op": "PUSH2",
      "value": "0x10D"
    },
    "9947": {
      "op": "DUP3"
    },
    "9948": {
      "op": "ADD"
    },
    "9949": {
      "op": "MSTORE"
    },
    "9950": {
      "op": "PUSH32",
      "value": "0x696768743D223530307078222076696577426F783D222D3530202D3230203230"
    },
    "9983": {
      "op": "PUSH2",
      "value": "0x12D"
    },
    "9986": {
      "op": "DUP3"
    },
    "9987": {
      "op": "ADD"
    },
    "9988": {
      "op": "MSTORE"
    },
    "9989": {
      "op": "PUSH32",
      "value": "0x302032303022207072657365727665417370656374526174696F3D22784D6964"
    },
    "10022": {
      "op": "PUSH2",
      "value": "0x14D"
    },
    "10025": {
      "op": "DUP3"
    },
    "10026": {
      "op": "ADD"
    },
    "10027": {
      "op": "MSTORE"
    },
    "10028": {
      "op": "PUSH6",
      "value": "0x2CA6B4B2111F"
    },
    "10035": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "10037": {
      "op": "SHL"
    },
    "10038": {
      "op": "PUSH2",
      "value": "0x16D"
    },
    "10041": {
      "op": "DUP3"
    },
    "10042": {
      "op": "ADD"
    },
    "10043": {
      "op": "MSTORE"
    },
    "10044": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10046": {
      "op": "PUSH2",
      "value": "0x1460"
    },
    "10049": {
      "op": "PUSH2",
      "value": "0x27D2"
    },
    "10052": {
      "op": "PUSH2",
      "value": "0x27CC"
    },
    "10055": {
      "op": "PUSH2",
      "value": "0x27BA"
    },
    "10058": {
      "op": "PUSH2",
      "value": "0x2757"
    },
    "10061": {
      "op": "PUSH2",
      "value": "0x173"
    },
    "10064": {
      "op": "DUP8"
    },
    "10065": {
      "op": "ADD"
    },
    "10066": {
      "op": "DUP10"
    },
    "10067": {
      "op": "PUSH2",
      "value": "0x2550"
    },
    "10070": {
      "jump": "i",
      "op": "JUMP"
    },
    "10071": {
      "op": "JUMPDEST"
    },
    "10072": {
      "op": "PUSH32",
      "value": "0x3C7465787420783D223235302220793D2233353022207374796C653D22746578"
    },
    "10105": {
      "op": "DUP2"
    },
    "10106": {
      "op": "MSTORE"
    },
    "10107": {
      "op": "PUSH32",
      "value": "0x742D616E63686F723A6D6964646C653B66696C6C3A626C61636B3B666F6E742D"
    },
    "10140": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10142": {
      "op": "DUP3"
    },
    "10143": {
      "op": "ADD"
    },
    "10144": {
      "op": "MSTORE"
    },
    "10145": {
      "op": "PUSH11",
      "value": "0x39B4BD329D191A383C111F"
    },
    "10157": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "10159": {
      "op": "SHL"
    },
    "10160": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10162": {
      "op": "DUP3"
    },
    "10163": {
      "op": "ADD"
    },
    "10164": {
      "op": "MSTORE"
    },
    "10165": {
      "op": "PUSH1",
      "value": "0x4B"
    },
    "10167": {
      "op": "ADD"
    },
    "10168": {
      "op": "SWAP1"
    },
    "10169": {
      "op": "JUMP"
    },
    "10170": {
      "op": "JUMPDEST"
    },
    "10171": {
      "op": "PUSH6",
      "value": "0x536F756C2023"
    },
    "10178": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "10180": {
      "op": "SHL"
    },
    "10181": {
      "op": "DUP2"
    },
    "10182": {
      "op": "MSTORE"
    },
    "10183": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "10185": {
      "op": "ADD"
    },
    "10186": {
      "op": "SWAP1"
    },
    "10187": {
      "op": "JUMP"
    },
    "10188": {
      "op": "JUMPDEST"
    },
    "10189": {
      "op": "DUP6"
    },
    "10190": {
      "op": "PUSH2",
      "value": "0x2550"
    },
    "10193": {
      "jump": "i",
      "op": "JUMP"
    },
    "10194": {
      "op": "JUMPDEST"
    },
    "10195": {
      "op": "PUSH13",
      "value": "0x1E17BA32BC3A1F1E17B9BB339F"
    },
    "10209": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "10211": {
      "op": "SHL"
    },
    "10212": {
      "op": "DUP2"
    },
    "10213": {
      "op": "MSTORE"
    },
    "10214": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "10216": {
      "op": "ADD"
    },
    "10217": {
      "op": "SWAP1"
    },
    "10218": {
      "op": "JUMP"
    },
    "10219": {
      "op": "JUMPDEST"
    },
    "10220": {
      "op": "PUSH16",
      "value": "0x7B226E616D65223A2022536F756C2023"
    },
    "10237": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10239": {
      "op": "SHL"
    },
    "10240": {
      "op": "DUP2"
    },
    "10241": {
      "op": "MSTORE"
    },
    "10242": {
      "op": "DUP3"
    },
    "10243": {
      "op": "MLOAD"
    },
    "10244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10246": {
      "op": "SWAP1"
    },
    "10247": {
      "op": "PUSH2",
      "value": "0x2817"
    },
    "10250": {
      "op": "DUP2"
    },
    "10251": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "10253": {
      "op": "DUP6"
    },
    "10254": {
      "op": "ADD"
    },
    "10255": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10257": {
      "op": "DUP9"
    },
    "10258": {
      "op": "ADD"
    },
    "10259": {
      "op": "PUSH2",
      "value": "0x1FBB"
    },
    "10262": {
      "jump": "i",
      "op": "JUMP"
    },
    "10263": {
      "op": "JUMPDEST"
    },
    "10264": {
      "op": "PUSH32",
      "value": "0x222C20226465736372697074696F6E223A2022536F756C204E4654222C202269"
    },
    "10297": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "10299": {
      "op": "SWAP2"
    },
    "10300": {
      "op": "DUP5"
    },
    "10301": {
      "op": "ADD"
    },
    "10302": {
      "op": "SWAP2"
    },
    "10303": {
      "op": "DUP3"
    },
    "10304": {
      "op": "ADD"
    },
    "10305": {
      "op": "MSTORE"
    },
    "10306": {
      "op": "PUSH32",
      "value": "0x6D616765223A2022646174613A696D6167652F7376672B786D6C3B6261736536"
    },
    "10339": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "10341": {
      "op": "DUP3"
    },
    "10342": {
      "op": "ADD"
    },
    "10343": {
      "op": "MSTORE"
    },
    "10344": {
      "op": "PUSH2",
      "value": "0xD0B"
    },
    "10347": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "10349": {
      "op": "SHL"
    },
    "10350": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "10352": {
      "op": "DUP3"
    },
    "10353": {
      "op": "ADD"
    },
    "10354": {
      "op": "MSTORE"
    },
    "10355": {
      "op": "DUP4"
    },
    "10356": {
      "op": "MLOAD"
    },
    "10357": {
      "op": "PUSH2",
      "value": "0x2885"
    },
    "10360": {
      "op": "DUP2"
    },
    "10361": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "10363": {
      "op": "DUP5"
    },
    "10364": {
      "op": "ADD"
    },
    "10365": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10367": {
      "op": "DUP9"
    },
    "10368": {
      "op": "ADD"
    },
    "10369": {
      "op": "PUSH2",
      "value": "0x1FBB"
    },
    "10372": {
      "jump": "i",
      "op": "JUMP"
    },
    "10373": {
      "op": "JUMPDEST"
    },
    "10374": {
      "op": "PUSH32",
      "value": "0x222C202264657369676E6572223A2022696F73746F702E746F70222C207D0000"
    },
    "10407": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "10409": {
      "op": "SWAP3"
    },
    "10410": {
      "op": "SWAP1"
    },
    "10411": {
      "op": "SWAP2"
    },
    "10412": {
      "op": "ADD"
    },
    "10413": {
      "op": "SWAP2"
    },
    "10414": {
      "op": "DUP3"
    },
    "10415": {
      "op": "ADD"
    },
    "10416": {
      "op": "MSTORE"
    },
    "10417": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "10419": {
      "op": "ADD"
    },
    "10420": {
      "op": "SWAP5"
    },
    "10421": {
      "op": "SWAP4"
    },
    "10422": {
      "op": "POP"
    },
    "10423": {
      "op": "POP"
    },
    "10424": {
      "op": "POP"
    },
    "10425": {
      "op": "POP"
    },
    "10426": {
      "jump": "o",
      "op": "JUMP"
    },
    "10427": {
      "op": "JUMPDEST"
    },
    "10428": {
      "op": "PUSH32",
      "value": "0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000"
    },
    "10461": {
      "op": "DUP2"
    },
    "10462": {
      "op": "MSTORE"
    },
    "10463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10465": {
      "op": "DUP3"
    },
    "10466": {
      "op": "MLOAD"
    },
    "10467": {
      "op": "PUSH2",
      "value": "0x28F3"
    },
    "10470": {
      "op": "DUP2"
    },
    "10471": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "10473": {
      "op": "DUP6"
    },
    "10474": {
      "op": "ADD"
    },
    "10475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10477": {
      "op": "DUP8"
    },
    "10478": {
      "op": "ADD"
    },
    "10479": {
      "op": "PUSH2",
      "value": "0x1FBB"
    },
    "10482": {
      "jump": "i",
      "op": "JUMP"
    },
    "10483": {
      "op": "JUMPDEST"
    },
    "10484": {
      "op": "SWAP2"
    },
    "10485": {
      "op": "SWAP1"
    },
    "10486": {
      "op": "SWAP2"
    },
    "10487": {
      "op": "ADD"
    },
    "10488": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "10490": {
      "op": "ADD"
    },
    "10491": {
      "op": "SWAP3"
    },
    "10492": {
      "op": "SWAP2"
    },
    "10493": {
      "op": "POP"
    },
    "10494": {
      "op": "POP"
    },
    "10495": {
      "jump": "o",
      "op": "JUMP"
    },
    "10496": {
      "op": "JUMPDEST"
    },
    "10497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10499": {
      "op": "DUP3"
    },
    "10500": {
      "op": "DUP3"
    },
    "10501": {
      "op": "LT"
    },
    "10502": {
      "op": "ISZERO"
    },
    "10503": {
      "op": "PUSH2",
      "value": "0x2912"
    },
    "10506": {
      "op": "JUMPI"
    },
    "10507": {
      "op": "PUSH2",
      "value": "0x2912"
    },
    "10510": {
      "op": "PUSH2",
      "value": "0x2486"
    },
    "10513": {
      "jump": "i",
      "op": "JUMP"
    },
    "10514": {
      "op": "JUMPDEST"
    },
    "10515": {
      "op": "POP"
    },
    "10516": {
      "op": "SUB"
    },
    "10517": {
      "op": "SWAP1"
    },
    "10518": {
      "jump": "o",
      "op": "JUMP"
    },
    "10519": {
      "op": "JUMPDEST"
    },
    "10520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10522": {
      "op": "DUP3"
    },
    "10523": {
      "op": "NOT"
    },
    "10524": {
      "op": "DUP3"
    },
    "10525": {
      "op": "GT"
    },
    "10526": {
      "op": "ISZERO"
    },
    "10527": {
      "op": "PUSH2",
      "value": "0x292A"
    },
    "10530": {
      "op": "JUMPI"
    },
    "10531": {
      "op": "PUSH2",
      "value": "0x292A"
    },
    "10534": {
      "op": "PUSH2",
      "value": "0x2486"
    },
    "10537": {
      "jump": "i",
      "op": "JUMP"
    },
    "10538": {
      "op": "JUMPDEST"
    },
    "10539": {
      "op": "POP"
    },
    "10540": {
      "op": "ADD"
    },
    "10541": {
      "op": "SWAP1"
    },
    "10542": {
      "jump": "o",
      "op": "JUMP"
    },
    "10543": {
      "op": "JUMPDEST"
    },
    "10544": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10546": {
      "op": "DUP1"
    },
    "10547": {
      "op": "DUP3"
    },
    "10548": {
      "op": "MSTORE"
    },
    "10549": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "10551": {
      "op": "SWAP1"
    },
    "10552": {
      "op": "DUP3"
    },
    "10553": {
      "op": "ADD"
    },
    "10554": {
      "op": "MSTORE"
    },
    "10555": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "10588": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10590": {
      "op": "DUP3"
    },
    "10591": {
      "op": "ADD"
    },
    "10592": {
      "op": "MSTORE"
    },
    "10593": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "10612": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "10614": {
      "op": "SHL"
    },
    "10615": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10617": {
      "op": "DUP3"
    },
    "10618": {
      "op": "ADD"
    },
    "10619": {
      "op": "MSTORE"
    },
    "10620": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10622": {
      "op": "ADD"
    },
    "10623": {
      "op": "SWAP1"
    },
    "10624": {
      "jump": "o",
      "op": "JUMP"
    },
    "10625": {
      "op": "JUMPDEST"
    },
    "10626": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10631": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10633": {
      "op": "SHL"
    },
    "10634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10636": {
      "op": "MSTORE"
    },
    "10637": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "10639": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10641": {
      "op": "MSTORE"
    },
    "10642": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10646": {
      "op": "REVERT"
    },
    "10647": {
      "op": "JUMPDEST"
    },
    "10648": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10650": {
      "op": "DUP3"
    },
    "10651": {
      "op": "PUSH2",
      "value": "0x29A6"
    },
    "10654": {
      "op": "JUMPI"
    },
    "10655": {
      "op": "PUSH2",
      "value": "0x29A6"
    },
    "10658": {
      "op": "PUSH2",
      "value": "0x2981"
    },
    "10661": {
      "jump": "i",
      "op": "JUMP"
    },
    "10662": {
      "op": "JUMPDEST"
    },
    "10663": {
      "op": "POP"
    },
    "10664": {
      "op": "DIV"
    },
    "10665": {
      "op": "SWAP1"
    },
    "10666": {
      "jump": "o",
      "op": "JUMP"
    },
    "10667": {
      "op": "JUMPDEST"
    },
    "10668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10670": {
      "op": "DUP3"
    },
    "10671": {
      "op": "PUSH2",
      "value": "0x29BA"
    },
    "10674": {
      "op": "JUMPI"
    },
    "10675": {
      "op": "PUSH2",
      "value": "0x29BA"
    },
    "10678": {
      "op": "PUSH2",
      "value": "0x2981"
    },
    "10681": {
      "jump": "i",
      "op": "JUMP"
    },
    "10682": {
      "op": "JUMPDEST"
    },
    "10683": {
      "op": "POP"
    },
    "10684": {
      "op": "MOD"
    },
    "10685": {
      "op": "SWAP1"
    },
    "10686": {
      "jump": "o",
      "op": "JUMP"
    },
    "10687": {
      "op": "JUMPDEST"
    },
    "10688": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10690": {
      "op": "DUP2"
    },
    "10691": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10693": {
      "op": "NOT"
    },
    "10694": {
      "op": "DIV"
    },
    "10695": {
      "op": "DUP4"
    },
    "10696": {
      "op": "GT"
    },
    "10697": {
      "op": "DUP3"
    },
    "10698": {
      "op": "ISZERO"
    },
    "10699": {
      "op": "ISZERO"
    },
    "10700": {
      "op": "AND"
    },
    "10701": {
      "op": "ISZERO"
    },
    "10702": {
      "op": "PUSH2",
      "value": "0x29D9"
    },
    "10705": {
      "op": "JUMPI"
    },
    "10706": {
      "op": "PUSH2",
      "value": "0x29D9"
    },
    "10709": {
      "op": "PUSH2",
      "value": "0x2486"
    },
    "10712": {
      "jump": "i",
      "op": "JUMP"
    },
    "10713": {
      "op": "JUMPDEST"
    },
    "10714": {
      "op": "POP"
    },
    "10715": {
      "op": "MUL"
    },
    "10716": {
      "op": "SWAP1"
    },
    "10717": {
      "jump": "o",
      "op": "JUMP"
    },
    "10718": {
      "op": "JUMPDEST"
    },
    "10719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10723": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10725": {
      "op": "SHL"
    },
    "10726": {
      "op": "SUB"
    },
    "10727": {
      "op": "DUP6"
    },
    "10728": {
      "op": "DUP2"
    },
    "10729": {
      "op": "AND"
    },
    "10730": {
      "op": "DUP3"
    },
    "10731": {
      "op": "MSTORE"
    },
    "10732": {
      "op": "DUP5"
    },
    "10733": {
      "op": "AND"
    },
    "10734": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10736": {
      "op": "DUP3"
    },
    "10737": {
      "op": "ADD"
    },
    "10738": {
      "op": "MSTORE"
    },
    "10739": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10741": {
      "op": "DUP2"
    },
    "10742": {
      "op": "ADD"
    },
    "10743": {
      "op": "DUP4"
    },
    "10744": {
      "op": "SWAP1"
    },
    "10745": {
      "op": "MSTORE"
    },
    "10746": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10748": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10750": {
      "op": "DUP3"
    },
    "10751": {
      "op": "ADD"
    },
    "10752": {
      "op": "DUP2"
    },
    "10753": {
      "op": "SWAP1"
    },
    "10754": {
      "op": "MSTORE"
    },
    "10755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10757": {
      "op": "SWAP1"
    },
    "10758": {
      "op": "PUSH2",
      "value": "0x2A11"
    },
    "10761": {
      "op": "SWAP1"
    },
    "10762": {
      "op": "DUP4"
    },
    "10763": {
      "op": "ADD"
    },
    "10764": {
      "op": "DUP5"
    },
    "10765": {
      "op": "PUSH2",
      "value": "0x1FE7"
    },
    "10768": {
      "jump": "i",
      "op": "JUMP"
    },
    "10769": {
      "op": "JUMPDEST"
    },
    "10770": {
      "op": "SWAP7"
    },
    "10771": {
      "op": "SWAP6"
    },
    "10772": {
      "op": "POP"
    },
    "10773": {
      "op": "POP"
    },
    "10774": {
      "op": "POP"
    },
    "10775": {
      "op": "POP"
    },
    "10776": {
      "op": "POP"
    },
    "10777": {
      "op": "POP"
    },
    "10778": {
      "jump": "o",
      "op": "JUMP"
    },
    "10779": {
      "op": "JUMPDEST"
    },
    "10780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10782": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10784": {
      "op": "DUP3"
    },
    "10785": {
      "op": "DUP5"
    },
    "10786": {
      "op": "SUB"
    },
    "10787": {
      "op": "SLT"
    },
    "10788": {
      "op": "ISZERO"
    },
    "10789": {
      "op": "PUSH2",
      "value": "0x2A2D"
    },
    "10792": {
      "op": "JUMPI"
    },
    "10793": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10795": {
      "op": "DUP1"
    },
    "10796": {
      "op": "REVERT"
    },
    "10797": {
      "op": "JUMPDEST"
    },
    "10798": {
      "op": "DUP2"
    },
    "10799": {
      "op": "MLOAD"
    },
    "10800": {
      "op": "PUSH2",
      "value": "0xE0B"
    },
    "10803": {
      "op": "DUP2"
    },
    "10804": {
      "op": "PUSH2",
      "value": "0x1F6F"
    },
    "10807": {
      "jump": "i",
      "op": "JUMP"
    },
    "10808": {
      "op": "JUMPDEST"
    },
    "10809": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10814": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10816": {
      "op": "SHL"
    },
    "10817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10819": {
      "op": "MSTORE"
    },
    "10820": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "10822": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10824": {
      "op": "MSTORE"
    },
    "10825": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10827": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10829": {
      "op": "REVERT"
    }
  },
  "sha1": "171d435995806a6c175de20527173bda5e913b1b",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\nimport \"@openzeppelin/contracts/utils/Base64.sol\";\nimport \"../IDDS.sol\";\nimport \"../../interfaces/IFactory.sol\";\n\ncontract Soul is ERC721Enumerable, Ownable {\n    using Strings for uint256;\n    using Strings for uint160;\n\n    event soulCreated(uint256 indexed id, address addr);\n    event addressAdded(uint256 indexed id, address addr);\n    event addressRemoved(uint256 indexed id, address addr);\n\n    IDDS dds;\n    mapping(uint256 => address) owners;\n    mapping(uint256 => mapping(address => bool)) accounts;\n\n    constructor() ERC721(\"SoulNFT\", \"SOUL\") {\n        dds = IDDS(BEE_DDS_ADDRESS);\n    }\n\n    function setDDS(address _newDDS) external onlyOwner {\n        dds = IDDS(_newDDS);\n    }\n\n    function create(uint256 tokenId) external {\n        // \u4efb\u4f55\u4e2a\u4eba\u90fd\u53ef\u4ee5\u521b\u5efa\u81ea\u5df1\u7684soul\n        _mintTo(tx.origin, tokenId);\n    }\n\n    function create(address _to, uint256 tokenId) external {\n        // \u9700\u8981\u662fISOTOP1040\u8bb8\u53ef\u7684\u5408\u7ea6\u65b9\u624d\u80fd\u521b\u5efaSoul\n        IFactory factory = IFactory(\n            dds.toAddress(dds.get(\"ISOTOP\", \"BEE_FACTORY_ADDRESS\"))\n        );\n        address[] memory allowList = factory.getContractsDeployed(\"ISOTOP1040\");\n\n        for (uint256 i = 0; i < allowList.length; i++) {\n            if (msg.sender == allowList[i]) {\n                _mintTo(_to, tokenId);\n                owners[tokenId] = msg.sender;\n                return;\n            }\n        }\n        revert(\"caller not in operator list\");\n    }\n\n    function _mintTo(address _to, uint256 tokenId) internal {\n        _mint(_to, tokenId);\n        accounts[tokenId][_to] = true;\n        emit soulCreated(tokenId, _to);\n    }\n\n    function validateAddress(uint256 tokenId, address _from)\n        public\n        view\n        returns (bool)\n    {\n        require(_exists(tokenId), \"nonexistent token\");\n\n        return (accounts[tokenId][_from] || ownerOf(tokenId) == _from);\n    }\n\n    function addAccount(uint256 tokenId, address _account) external {\n        require(validateAddress(tokenId, tx.origin), \"not owner of soul\");\n        _addAccount(tokenId, _account);\n    }\n\n    function addAccountByOperator(uint256 tokenId, address _account) external {\n        // \u9700\u8981\u662fISOTOP1040\u8bb8\u53ef\u7684\u5408\u7ea6\u65b9\u624d\u80fd\u521b\u5efaSoul\n        IFactory factory = IFactory(\n            dds.toAddress(dds.get(\"ISOTOP\", \"BEE_FACTORY_ADDRESS\"))\n        );\n        address[] memory allowList = factory.getContractsDeployed(\"ISOTOP1040\");\n\n        for (uint256 i = 0; i < allowList.length; i++) {\n            if (msg.sender == allowList[i] && owners[tokenId] == msg.sender) {\n                _addAccount(tokenId, _account);\n                return;\n            }\n        }\n        revert(\"caller not in operator list\");\n    }\n\n    function _addAccount(uint256 tokenId, address _account) internal {\n        accounts[tokenId][_account] = true;\n\n        emit addressAdded(tokenId, _account);\n    }\n\n    function removeAccount(uint256 tokenId, address _account) external {\n        require(validateAddress(tokenId, tx.origin), \"not owner of soul\");\n        _removeAccount(tokenId, _account);\n    }\n\n    function removeAccountByOperator(uint256 tokenId, address _account)\n        external\n    {\n        // \u9700\u8981\u662fISOTOP1040\u8bb8\u53ef\u7684\u5408\u7ea6\u65b9\u624d\u80fd\u521b\u5efaSoul\n        IFactory factory = IFactory(\n            dds.toAddress(dds.get(\"ISOTOP\", \"BEE_FACTORY_ADDRESS\"))\n        );\n        address[] memory allowList = factory.getContractsDeployed(\"ISOTOP1040\");\n\n        for (uint256 i = 0; i < allowList.length; i++) {\n            if (msg.sender == allowList[i] && owners[tokenId] == msg.sender) {\n                _removeAccount(tokenId, _account);\n                return;\n            }\n        }\n        revert(\"caller not in operator list\");\n    }\n\n    function _removeAccount(uint256 tokenId, address _account) internal {\n        require(ownerOf(tokenId) != _account, \"cannot remove owner of token\");\n\n        delete accounts[tokenId][_account];\n\n        emit addressRemoved(tokenId, _account);\n    }\n\n    function getOperator(uint256 tokenId) external view returns (address) {\n        return owners[tokenId];\n    }\n\n    function tokenURI(uint256 tokenId)\n        public\n        view\n        virtual\n        override\n        returns (string memory)\n    {\n        require(_exists(tokenId), \"nonexistent token\");\n\n        bytes memory meta = abi.encodePacked(\n            '{\"name\": \"Soul #',\n            tokenId.toString(),\n            '\", \"description\": \"Soul NFT\", \"image\": \"data:image/svg+xml;base64,',\n            Base64.encode(\n                abi.encodePacked(\n                    '<svg width=\"500\" height=\"500\" viewBox=\"0 0 500 500\" ',\n                    // 'style=\"background-color:darkgreen\"',\n                    ' xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\">',\n                    '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"margin: auto; background: rgb(255, 255, 255); display: block; shape-rendering: auto;\" width=\"500px\" height=\"500px\" viewBox=\"-50 -20 200 200\" preserveAspectRatio=\"xMidYMid\">',\n                    dds.get(\"ISOTOP\", \"soul.svg\"),\n                    '<text x=\"250\" y=\"350\" style=\"text-anchor:middle;fill:black;font-size:24px\">',\n                    \"Soul #\",\n                    tokenId.toString(),\n                    \"</text></svg>\"\n                )\n            ),\n            '\", \"designer\": \"iostop.top\", }'\n        );\n\n        return\n            string(\n                abi.encodePacked(\n                    \"data:application/json;base64,\",\n                    Base64.encode(meta)\n                )\n            );\n    }\n}\n",
  "sourceMap": "356:5475:14:-:0;;;758:84;;;;;;;;;-1:-1:-1;1390:113:1;;;;;;;;;;;-1:-1:-1;;;1390:113:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:1;;;;1456:13;;1390:113;;;1456:13;;-1:-1:-1;;1456:13:1;:::i;:::-;-1:-1:-1;1479:17:1;;;;:7;;:17;;;;;:::i;:::-;;1390:113;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;808:3:14::1;:27:::0;;-1:-1:-1;;;;;;808:27:14::1;140:42:13;808:27:14;::::0;;356:5475;;640:96:9;719:10;;640:96::o;2433:187:0:-;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;356:5475:14:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;356:5475:14;;;-1:-1:-1;356:5475:14;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:16;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;356:5475:14;;;;;;",
  "sourcePath": "contracts/Soul/Soul.sol",
  "type": "contract"
}