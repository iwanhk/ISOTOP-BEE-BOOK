[合约]DID: DID身份管理合约
[获取方法]
文昌测试链： 0x1cA031A10e28e89f76cEccf32f3f9580db7c0000
树图测试链： cfxtest:acdgvn8zwryw0g0cfjxxkhj2rc23z78su2gr6ypzeh/0x8668aFD593692b1ac22A27349d1868b19AF7cE86
[描述]管理DID的入口，身份，维护DIDNFT，可以通过DID身份铸造SBT
	[方法writeCall] addAddress: 为一个身份增加一个地址
		[入参string] _Identity: 身份字符串身份字符串
		[入参address] _addr: 地址
	[备注] DID的拥有者可以添加任何地址给这个DID，用户需要自己保证地址是自己的，否则资产转移给不明地址可能会丢失
	[方法readCall] addr: 获得一个DID身份的归属人地址
		[入参string] _Identity: 身份字符串身份字符串
		[出参address] : 地址
	[备注] 
	[方法writeCall] createSBT: DID持有人创建一个SBT
		[入参string] _Identity: 身份字符串
		[入参string] _type: SBT的类型（比如SBT_META: 自定义metadata的SBT， SBT_IMAGE：自定义图片的SBT, SBT_MULTI: 1155协议token）
		[入参bool] _restrict: 是否是一个严格SBT，严格SBT一旦发行，不能转给任何地址
		[出参address] : SBT合约地址
	[备注] DID的持有人可以自己创建和维护自己的SBT，并且发给任何授权的使用者，也可以销毁发出的SBT。通常是给企业和社群用户来使用的
	[方法writeCall] claim: 申领一个DID NFT
		[入参string] _Identity: 身份字符串
	[备注] 任何DID持有人都可以免费获得一个NFT，用于二级交易市场
	[方法readCall] get: 读取DID的key值
		[入参string] _Identity: 身份字符串
		[入参string] _key: 名称
		[出参string] : 信息内容
	[备注] DID支持用户定义自己的任何key值存储内容
	[方法readCall] getDIDNFTAddress: 获得DID NFT合约地址
		[出参address] : 
	[备注] 
	[方法readCall] getIDs: 获得某用户所有注册的DID身份列表
		[入参address] _owner: 
		[出参string[]] IDs: 
	[备注] 
	[方法readCall] getKeys: 获得某个DID身份所有的key
		[入参string] _Identity: 身份字符串
		[出参string[]] : 
	[备注] 
	[方法readCall] getSBTs: 获得某个DID下属名称的SBT合约地址列表
		[入参string] _Identity: 身份字符串
		[出参address []] : 合约地址列表
	[备注] 
	[方法readCall] owner: 合约管理员地址
		[出参address] : 
	[备注] 
	[方法writeCall] put: 写入一个DID的key值
		[入参string] _Identity: 身份字符串
		[入参string] _key: 
		[入参string] _data: 
	[备注] key值必须唯一
	[方法writeCall] put: 批量写入DID的key值
		[入参string] _Identity: 身份字符串
		[入参string[]] _key: 键列表
		[入参string[]] _data: 值列表
	[备注] 两个列表必须同样长度，调用人必须是身份字符串的拥有人
	[方法writeCall] removeAddress: 删除一个DID名下的地址
		[入参string] _Identity: 身份字符串
		[入参address] _addr: 
	[备注] 
	[方法readCall] sbtTemplate: SBT模板合约地址
		[出参address] : 
	[备注] 
	[方法writeCall] update: 更换DID的持有人
		[入参string] _Identity: 身份字符串
		[入参address] _to: 新持有人地址
	[备注] 更换持有人不会更改key值，需要新的持有人自己选择更换或者保留
	[方法readCall] validateAddress: 验证DID是否包含某个地址
		[入参string] _Identity: 身份字符串
		[入参address] _addr: 地址
		[出参bool] : 
	[备注] 
[代码示例]
        did.createSBT(D, "SBT_META", False, addr(consumer))
        sbt1 = SBT.at(did.getSBTs(D)[-1])
        sbt1.init("SBT1", "SBT1", "URL", "Details", addr(consumer))
        sbt1.mint['address,uint'](iwan, 0, addr(consumer))