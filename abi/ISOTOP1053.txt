[合约]ISOTOP1053: 附带徽章的票务
[获取方法]工厂clone
[描述]
	[方法readCall] Details: 
		[出参string] : 
	[备注] 
	[方法writeCall] addSites: 增加一批打卡点（权益）
		[入参string[]] sites_: 字符串列表，打卡点名称
	[备注] 
	[方法readCall] balanceOf: 
		[入参address] owner: 
		[出参uint256] : 
	[备注] 
	[方法writeCall] check: （管理员）打卡
		[入参uint256] tokenId: 票ID
		[入参uint256] _site: 点位ID
		[入参address] _who: 打卡人
	[备注] 
	[方法writeCall] check: （自己）打卡
		[入参uint256] tokenId: 
		[入参uint256] _site: 
	[备注] 
	[方法writeCall] claim: 根据用户打卡的数量领取全套的纪念徽章
	[备注] 调用者是持有徽章的用户
	[方法writeCall] claim: 根据用户打卡的数量领取全套的纪念徽章
		[入参address] _who: 给哪个用户
	[备注] 调用者是管理员地址
	[方法readCall] contracVersion: 
		[出参uint8] : 
	[备注] 
	[方法readCall] contractName: 
		[出参string] : 
	[备注] 
	[方法readCall] getApproved: 
		[入参uint256] tokenId: 
		[出参address] : 
	[备注] 
	[方法readCall] getBadgeContract: 获取徽章的合约地址
		[出参address] : 
	[备注] 徽章合约的ABI为ISOTOP1053Badge
	[方法writeCall] init: 初始化
		[入参string] name_: 名称
		[入参string] description_: 描述
		[入参string] ticket_image_: 门票的票面图案
		[入参string] badge_base_uri_: 徽章图案地址
		[入参string] details_: 
		[入参string[]] sites_: 打卡点的列表
	[备注] 徽章的图案必须严格对应打卡点的数量。并且还有一个多出的合体徽章。
	[方法writeCall] mint: （管理员）铸造
		[入参address] _to: 
	[备注] 
	[方法readCall] isApprovedForAll: 
		[入参address] owner: 
		[入参address] operator: 
		[出参bool] : 
	[备注] 
	[方法writeCall] merge: 根据用户打卡的数量合体全套的纪念徽章
	[备注] 调用者是用户
	[方法writeCall] merge: 根据用户打卡的数量合体全套的纪念徽章
		[入参address] _who: 给谁
	[备注] 调用者是管理员
	[方法writeCall] mint: 
		[入参address] _to: 
	[备注] 
	[方法readCall] name: 
		[出参string] : 
	[备注] 
	[方法readCall] owner: 
		[出参address] : 
	[备注] 
	[方法readCall] ownerOf: 
		[入参uint256] tokenId: 
		[出参address] : 
	[备注] 
	[方法writeCall] renounceOwnership: 
	[备注] 
	[方法writeCall] safeTransferFrom: 
		[入参address] from: 
		[入参address] to: 
		[入参uint256] tokenId: 
	[备注] 
	[方法writeCall] safeTransferFrom: 
		[入参address] from: 
		[入参address] to: 
		[入参uint256] tokenId: 
		[入参bytes] data: 
	[备注] 
	[方法writeCall] setApprovalForAll: 
		[入参address] operator: 
		[入参bool] approved: 
	[备注] 
	[方法writeCall] setDetailsURI: 
		[入参string] uri_: 
	[备注] 
	[方法writeCall] setUser: 
		[入参uint256] tokenId: 
		[入参address] user: 
		[入参uint64] expires: 
	[备注] 
	[方法readCall] supportsInterface: 
		[入参bytes4] interfaceId: 
		[出参bool] : 
	[备注] 
	[方法writeCall] suspend: 
		[入参bool] status: 
	[备注] 
	[方法readCall] symbol: 
		[出参string] : 
	[备注] 
	[方法readCall] tokenByIndex: 
		[入参uint256] index: 
		[出参uint256] : 
	[备注] 
	[方法readCall] tokenOfOwnerByIndex: 
		[入参address] owner: 
		[入参uint256] index: 
		[出参uint256] : 
	[备注] 
	[方法readCall] tokenURI: 
		[入参uint256] tokenId: 
		[出参string] : 
	[备注] 
	[方法readCall] totalSupply: 
		[出参uint256] : 
	[备注] 
	[方法writeCall] transferFrom: 
		[入参address] from: 
		[入参address] to: 
		[入参uint256] tokenId: 
	[备注] 
	[方法writeCall] transferOwnership: 
		[入参address] newOwner: 
	[备注] 
	[方法readCall] userExpires: 
		[入参uint256] tokenId: 
		[出参uint256] : 
	[备注] 
	[方法readCall] userOf: 
		[入参uint256] tokenId: 
		[出参address] : 
	[备注] 
[代码示例]
