[合约]eTicket: 数字权益门票合约模板
[获取方法] 工厂合约clone eTicket
[描述] v3.5版本 改变了核销方式，需要预约，预约后过期就是核销
	[方法writeCall] addBank: 增加票仓数量
		[入参uint256] _amount: 
	[备注] 仅超级管理员
	[方法writeCall] addOperator: 增加管理员
		[入参address] _operator: 
	[备注] 仅超级管理员
	[方法writeCall] addQuota: 增加管理员操作的额度
		[入参address] _operator: 
		[入参uint256] _quota: 
	[备注] 仅超级管理员
	[方法writeCall] addSites: 增加权益的数量
		[入参string[]] _rights: 
		[入参bytes1[]] _types: 
	[备注] 注意，权益可以增加但是不能删除
	[方法writeCall] appendMemo: 添加一个备注内容
		[入参uint256] tokenId: 
		[入参string] name: 
		[入参string] value: 
	[备注] 
	[方法writeCall] approve: 
		[入参address] to: 
		[入参uint256] tokenId: 
	[备注] 
	[方法readCall] balanceOf: 
		[入参address] owner: 
		[出参uint256] : 
	[备注] 
	[方法writeCall] burn: 
		[入参uint256] tokenId: 
	[备注] 
	[方法readCall] beijingTimeMidnight: 给定一个时间，转化成北京时区的当天0点时间
		[入参uint256] _time: 
		[出参uint256] : 
	[备注] 注意，这个时间需要是带utc时区的时间（我的实现方式是-8小时后传入）
	[方法readCall] blockTimeMidnight: 取当前时间的当天北京时间午夜0点
		[出参uint256] : 
	[备注] 根据链上当前时间转化成北京时间，然后去掉0点后的小时分秒
	[方法writeCall] check: 预约
		[入参uint256] tokenId: 门票ID
		[入参string] _right: 权益/打卡点（注意是字符串，必须和创建时候的权益一致）
		[入参uint256] _time: 预约时间（到日期）
		[入参string] _code: 预约码（可以是闸机返回的系统预约码，也可以是随机生成的，供自己的小程序来核验）
		[入参address] _who: 预约人的链地址
	[备注] 预约的时间是日期（没有小时，分钟），在预约当天可以核销，如果过期第二天，认为自动核销。在预约日期之前可以再次预约时间，或者退票，但是到了当天，就只能核销门票了。过了当天，不能退票，也不能核销了。
	[方法writeCall] check: 核销
		[入参uint256] tokenId: 门票ID
		[入参string] _right: 权益/打卡点（注意是字符串，必须和创建时候的权益一致）
		[入参address] _who: 预约人的链地址
	[备注] 
	[方法readCall] contractInfo: 
		[出参string] : 
	[备注] 
	[方法readCall] exists: 
		[入参uint256] tokenId: 
		[出参bool] : 
	[备注] 
	[方法readCall] getApproved: 
		[入参uint256] tokenId: 
		[出参address] : 
	[备注] 
	[方法readCall] getBankRest: 
		[出参uint256] : 
	[备注] 
	[方法readCall] getOperator: 
		[入参uint256] tokenId: 
		[出参address] : 
	[备注] 
	[方法readCall] getOperators: 
		[出参address[]] : 
	[备注] 
	[方法readCall] getQuota: 
		[入参address] _operator: 
		[出参uint256] : 
	[备注] 
	[方法readCall] getStatus: 获取门票的状态（权益0号）
		[入参uint256] tokenId: 
		[出参uint8] : 
		// 0= 未预约
        // 1= 已预约未到时间
        // 2= 已预约已到今天
        // 3= 已过预约时间核销
        // 4= 已核销
        // 5= 已过期
        // 6= 未开始
        // 7= 门票不存在
	[备注] 只获取0号权益，忽略其他权益
	[方法readCall] getStatus: 
		[入参uint256] tokenId: 
		[入参uint8] rightId: 
		[出参uint8] : 
	[备注] 
	[方法writeCall] init: 初始化门票
		[入参string[]] _info: 5个字符串：名字，描述，图片，detailsURL，did
		[入参string[]] _rights: 若干权益数组及权益的图片数组。如果数组长度等同于_rights长度，则一一对应。如果是_rights长度的2倍，则前半部分对于权益名字，后半部分对应权益图片地址。
		[入参bytes1[]] _types: 字符数组。R代表亮码，S代表扫码，N代表预约入园码, W外链
		[入参uint256] _startTime: 开始时间
		[入参uint256] _validTime: 到期时间
	[备注] 权益图片是可选的，可以不设置。如果设置了权益图片，则权益图片数组长度必须等于权益数组长度的2倍。权益图片会出现在tokenURI的属性中，属性名称为权益名称，value为图片的地址。
	[方法readCall] isApprovedForAll: 
		[入参address] owner: 
		[入参address] operator: 
		[出参bool] : 
	[备注] 
	[方法readCall] isOperator: 
		[入参address] _operator: 
		[出参bool] : 
	[备注] 
	[方法readCall] isReservedDay: 判断是否是预约日期当天
		[入参uint256] tokenId: 
		[入参uint8] rightId: 
		[出参bool] : true/false
	[备注] 
	[方法writeCall] mint: 铸造门票/发票
		[入参address] _to: 给用户的地址
		[入参uint256] tokenId: 门票编号
	[备注] 门票编号不能重复，由发票方自己管理，总数量不能超过发票方的额度。
	[方法readCall] name: 
		[出参string] : 
	[备注] 
	[方法readCall] owner: 
		[出参address] : 
	[备注] 
	[方法readCall] ownerOf: 检查某个资产的拥有人
		[入参uint256] tokenId: 
		[出参address] : 
	[备注] 
	[方法writeCall] refund: 退票
		[入参uint256] tokenId: 
	[备注] 注意如果某个权益打卡点已经核销，不能退票
	[方法writeCall] removeBank: 
		[入参uint256] _amount: 
	[备注] 
	[方法writeCall] removeMemo: 
		[入参uint256] tokenId: 
		[入参string] name: 
	[备注] 
	[方法writeCall] removeOperator: 
		[入参address] _operator: 
	[备注] 
	[方法writeCall] renounceOwnership: 
	[备注] 
	[方法writeCall] safeTransferFrom: 转移资产
		[入参address] from: 从某个持有人
		[入参address] to: 到某个地址
		[入参uint256] tokenId: 编号
	[备注] 
	[方法writeCall] safeTransferFrom: 转移资产
		[入参address] from: 从某个持有人
		[入参address] to: 到某个地址
		[入参uint256] tokenId: 编号
		[入参bytes] data: 
	[备注] 
	[方法writeCall] setApprovalForAll: 
		[入参address] operator: 
		[入参bool] approved: 
	[备注] 
	[方法writeCall] setMemo: 
		[入参uint256] tokenId: 
		[入参string] name: 
		[入参string] value: 
	[备注] 
	[方法writeCall] setQuota: 
		[入参address] _operator: 
		[入参uint256] _quota: 
	[备注] 
	[方法readCall] supportsInterface: 
		[入参bytes4] interfaceId: 
		[出参bool] : 
	[备注] 
	[方法readCall] symbol: 
		[出参string] : 
	[备注] 
	[方法readCall] tokenURI: 
		[入参uint256] tokenId: 
		[出参string] : 
	[备注] 
	[方法readCall] totalBank: 
		[出参uint256] : 
	[备注] 
	[方法readCall] totalSupply: 
		[出参uint256] : 
	[备注] 
	[方法writeCall] transfer: 
		[入参address] from: 
		[入参address] to: 
		[入参uint256] tokenId: 
	[备注] 
	[方法writeCall] transferFrom: 
		[入参address] from: 
		[入参address] to: 
		[入参uint256] tokenId: 
	[备注] 
	[方法writeCall] transferOwnership: 
		[入参address] newOwner: 
	[备注] 
	[方法writeCall] update: 
		[入参uint256] tokenId: 
		[入参string] _descruption: 
		[入参string] _image: 
		[入参string] _detailsURI: 
	[备注] 
[代码示例]
